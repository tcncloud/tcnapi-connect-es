// @generated by protoc-gen-es v1.5.1 with parameter "target=js+dts"
// @generated from file api/commons/delivery.proto (package api.commons, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum api.commons.TransferStatus
 */
export declare enum TransferStatus {
  /**
   * @generated from enum value: TRANSFER_STATUS_WAITING = 0;
   */
  WAITING = 0,

  /**
   * @generated from enum value: TRANSFER_STATUS_RUNNING = 1;
   */
  RUNNING = 1,

  /**
   * @generated from enum value: TRANSFER_STATUS_DONE_SUCCESS = 2;
   */
  DONE_SUCCESS = 2,

  /**
   * @generated from enum value: TRANSFER_STATUS_DONE_PARTIAL_FAILURE = 3;
   */
  DONE_PARTIAL_FAILURE = 3,

  /**
   * @generated from enum value: TRANSFER_STATUS_DONE_TOTAL_FAILURE = 4;
   */
  DONE_TOTAL_FAILURE = 4,
}

/**
 * TODO
 *
 * oneof encryption_type {
 * }
 *
 * @generated from message api.commons.Encryption
 */
export declare class Encryption extends Message<Encryption> {
  constructor(data?: PartialMessage<Encryption>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.Encryption";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Encryption;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Encryption;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Encryption;

  static equals(a: Encryption | PlainMessage<Encryption> | undefined, b: Encryption | PlainMessage<Encryption> | undefined): boolean;
}


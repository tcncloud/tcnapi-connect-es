// @generated by protoc-gen-es v1.4.1 with parameter "target=js+dts"
// @generated from file api/commons/omnichannel.proto (package api.commons, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, Duration, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { TimeZoneWrapper } from "./org_pb.js";
import type { ChatColorProperties, ChatHeader } from "./chat_pb.js";
import type { Int64Id } from "./types_pb.js";
import type { Weekday_Enum } from "./enums_pb.js";
import type { FieldType } from "./lms_pb.js";

/**
 * SmsNumbertype
 *
 * @generated from enum api.commons.SmsNumberType
 */
export declare enum SmsNumberType {
  /**
   * SmsShortCodeType
   *
   * @generated from enum value: SMS_SHORT_CODE_TYPE = 0;
   */
  SMS_SHORT_CODE_TYPE = 0,

  /**
   * SmsAlphanumericType
   *
   * @generated from enum value: SMS_ALPHANUMERIC_TYPE = 1;
   */
  SMS_ALPHANUMERIC_TYPE = 1,

  /**
   * SmsNumberType
   *
   * @generated from enum value: SMS_NUMBER_TYPE = 2;
   */
  SMS_NUMBER_TYPE = 2,
}

/**
 * SmsNumberProvider
 *
 * @generated from enum api.commons.SmsNumberProvider
 */
export declare enum SmsNumberProvider {
  /**
   * Unknown provider
   *
   * @generated from enum value: UNKNOWN_PROVIDER = 0;
   */
  UNKNOWN_PROVIDER = 0,

  /**
   * BandwidthProvder
   *
   * @generated from enum value: BANDWIDTH_PROVIDER = 1;
   */
  BANDWIDTH_PROVIDER = 1,

  /**
   * BurstSMSProvider
   *
   * @generated from enum value: BURST_SMS_PROVIDER = 2;
   */
  BURST_SMS_PROVIDER = 2,

  /**
   * PlivoProvider
   *
   * @generated from enum value: PLIVO_PROVIDER = 3;
   */
  PLIVO_PROVIDER = 3,

  /**
   * ApeironProvider
   *
   * @generated from enum value: APEIRON_PROVIDER = 4;
   */
  APEIRON_PROVIDER = 4,

  /**
   * AusburstSMSProvider
   *
   * @generated from enum value: AUSBURST_SMS_PROVIDER = 5;
   */
  AUSBURST_SMS_PROVIDER = 5,

  /**
   * MediaSat sms provider
   *
   * @generated from enum value: MEDIASAT_SMS_PROVIDER = 6;
   */
  MEDIASAT_SMS_PROVIDER = 6,
}

/**
 * OmniCampaignModuleType -
 *
 * @generated from enum api.commons.OmniCampaignModuleType
 */
export declare enum OmniCampaignModuleType {
  /**
   * inbound module
   *
   * @generated from enum value: MODULE_TYPE_INBOUND = 0;
   */
  MODULE_TYPE_INBOUND = 0,

  /**
   * outbound module
   *
   * @generated from enum value: MODULE_TYPE_OUTBOUND = 1;
   */
  MODULE_TYPE_OUTBOUND = 1,

  /**
   * manual approve module
   *
   * @generated from enum value: MODULE_TYPE_MANUAL_APPROVAL = 2;
   */
  MODULE_TYPE_MANUAL_APPROVAL = 2,
}

/**
 * @generated from enum api.commons.ChannelType
 */
export declare enum ChannelType {
  /**
   * @generated from enum value: CHANNEL_TYPE_EMAIL = 0;
   */
  EMAIL = 0,

  /**
   * @generated from enum value: CHANNEL_TYPE_SMS = 1;
   */
  SMS = 1,

  /**
   * @generated from enum value: CHANNEL_TYPE_CHAT = 2;
   */
  CHAT = 2,

  /**
   * @generated from enum value: CHANNEL_TYPE_VOICE = 3;
   */
  VOICE = 3,
}

/**
 * OmniCampaignDirection -
 *
 * @generated from enum api.commons.OmniCampaignDirection
 */
export declare enum OmniCampaignDirection {
  /**
   * campaigns focused on receiving messages
   *
   * @generated from enum value: INBOUND = 0;
   */
  INBOUND = 0,

  /**
   * campaigns focused on sending messages
   *
   * @generated from enum value: OUTBOUND = 1;
   */
  OUTBOUND = 1,
}

/**
 * @generated from enum api.commons.OmniCampaignStatus
 */
export declare enum OmniCampaignStatus {
  /**
   * Campaign has been created but hasn't reached it's start date
   *
   * @generated from enum value: SCHEDULING = 0;
   */
  SCHEDULING = 0,

  /**
   * Campaign that is able to process events
   *
   * @generated from enum value: RUNNING = 200;
   */
  RUNNING = 200,

  /**
   * Campaign was paused
   *
   * @generated from enum value: PAUSED = 400;
   */
  PAUSED = 400,

  /**
   * Campaign was finished
   *
   * @generated from enum value: COMPLETED = 600;
   */
  COMPLETED = 600,

  /**
   * Campaign has been archived/closed
   *
   * @generated from enum value: ARCHIVED = 800;
   */
  ARCHIVED = 800,
}

/**
 * @generated from enum api.commons.OmniCampaignModuleStatus
 */
export declare enum OmniCampaignModuleStatus {
  /**
   * initial module status
   *
   * @generated from enum value: MODULE_PREPARING = 0;
   */
  MODULE_PREPARING = 0,

  /**
   * module is in the process of getting scheduled
   *
   * @generated from enum value: MODULE_SCHEDULING = 100;
   */
  MODULE_SCHEDULING = 100,

  /**
   * module is currently processing requests/data
   *
   * @generated from enum value: MODULE_RUNNING = 200;
   */
  MODULE_RUNNING = 200,

  /**
   * module is processing requests/data, but has received an ERROR event
   *
   * @generated from enum value: MODULE_RUNNING_ERROR = 250;
   */
  MODULE_RUNNING_ERROR = 250,

  /**
   * module has received a FAIL event (i.e. too many consecutive errors have occurred)
   *
   * @generated from enum value: MODULE_ERROR_STANDBY = 300;
   */
  MODULE_ERROR_STANDBY = 300,

  /**
   * module is paused
   *
   * @generated from enum value: MODULE_PAUSED = 400;
   */
  MODULE_PAUSED = 400,

  /**
   * module is preparing to run again
   *
   * @generated from enum value: MODULE_RESUMING = 500;
   */
  MODULE_RESUMING = 500,

  /**
   * module has completed (i.e. finished, done running)
   *
   * @generated from enum value: MODULE_COMPLETED = 600;
   */
  MODULE_COMPLETED = 600,

  /**
   * module has been archived/closed
   *
   * @generated from enum value: MODULE_ARCHIVED = 700;
   */
  MODULE_ARCHIVED = 700,
}

/**
 * @generated from enum api.commons.ConversationStatus
 */
export declare enum ConversationStatus {
  /**
   * Conversation was just created. It is both open and active
   *
   * @generated from enum value: CONVERSATION_STATUS_NEW = 0;
   */
  NEW = 0,

  /**
   * Conversation is waiting for the customer to reply. It is open but not active
   *
   * @generated from enum value: CONVERSATION_STATUS_AWAITING_REPLY_FROM_CUSTOMER = 1;
   */
  AWAITING_REPLY_FROM_CUSTOMER = 1,

  /**
   * Conversation is waiting for the agent to reply. It is both open and active
   *
   * @generated from enum value: CONVERSATION_STATUS_AWAITING_REPLY_FROM_AGENT = 2;
   */
  AWAITING_REPLY_FROM_AGENT = 2,

  /**
   * The conversation is closed because of a timeout
   *
   * @generated from enum value: CONVERSATION_STATUS_CLOSED_TIMEOUT = 3;
   */
  CLOSED_TIMEOUT = 3,

  /**
   * The conversation is closed because of an action from the agent
   *
   * @generated from enum value: CONVERSATION_STATUS_CLOSED_AGENT = 4;
   */
  CLOSED_AGENT = 4,

  /**
   * The conversation is closed because of an action from the customer
   *
   * @generated from enum value: CONVERSATION_STATUS_CLOSED_CUSTOMER = 5;
   */
  CLOSED_CUSTOMER = 5,

  /**
   * The conversation is suspended while waiting for the customer to reply
   *
   * @generated from enum value: CONVERSATION_STATUS_SUSPENDED_AWAITING_REPLY_FROM_CUSTOMER = 6;
   */
  SUSPENDED_AWAITING_REPLY_FROM_CUSTOMER = 6,

  /**
   * the conversation was assigned at one point but it was unassigned and now its wait to be reassigned
   *
   * @generated from enum value: CONVERSATION_STATUS_AWAITING_ASSIGNMENT = 7;
   */
  AWAITING_ASSIGNMENT = 7,

  /**
   * the conversation was just assigned
   *
   * @generated from enum value: CONVERSATION_STATUS_NEWLY_ASSIGNED = 8;
   */
  NEWLY_ASSIGNED = 8,

  /**
   * The conversation is in wrap up via customer closing
   *
   * @generated from enum value: CONVERSATION_STATUS_WRAP_UP_CUSTOMER = 9;
   */
  WRAP_UP_CUSTOMER = 9,

  /**
   * The conversation is in wrap up after timeout.
   *
   * @generated from enum value: CONVERSATION_STATUS_WRAP_UP_TIMEOUT = 10;
   */
  WRAP_UP_TIMEOUT = 10,

  /**
   * The conversation is closed because of an action from the customer
   *
   * @generated from enum value: CONVERSATION_STATUS_CLOSED_MANAGER = 11;
   */
  CLOSED_MANAGER = 11,

  /**
   * Conversation was just created but we are waiting for the customer to reply
   *
   * @generated from enum value: CONVERSATION_STATUS_NEW_PENDING_CUSTOMER_REPLY = 12;
   */
  NEW_PENDING_CUSTOMER_REPLY = 12,

  /**
   * Conversation is being handled by flow engine
   *
   * @generated from enum value: CONVERSATION_STATUS_FLOW = 13;
   */
  FLOW = 13,

  /**
   * Conversation was closed because a duplicate thread was created
   *
   * @generated from enum value: CONVERSATION_STATUS_CLOSED_DUPLICATE_THREAD = 14;
   */
  CLOSED_DUPLICATE_THREAD = 14,
}

/**
 * indicates if we want to pull conversations that are assigned
 * actively, not actively, or both
 *
 * @generated from enum api.commons.AgentAssignmentActiveSearchType
 */
export declare enum AgentAssignmentActiveSearchType {
  /**
   * The conversations that are actively assigned to the agent
   *
   * @generated from enum value: AGENT_ASSIGNMENT_ACTIVE_SEARCH_TYPE_ACTIVE = 0;
   */
  ACTIVE = 0,

  /**
   * The conversations that are not actively assigned to the agent
   *
   * @generated from enum value: AGENT_ASSIGNMENT_ACTIVE_SEARCH_TYPE_INACTIVE = 1;
   */
  INACTIVE = 1,

  /**
   * All conversations that are assigned to the agent
   *
   * @generated from enum value: AGENT_ASSIGNMENT_ACTIVE_SEARCH_TYPE_ALL = 2;
   */
  ALL = 2,
}

/**
 * @generated from enum api.commons.AgentConversationAssignmentStatus
 */
export declare enum AgentConversationAssignmentStatus {
  /**
   * agent is active for the assigned conversation
   *
   * @generated from enum value: ACTIVE_AGENT = 0;
   */
  ACTIVE_AGENT = 0,

  /**
   * agent is not active for the assignment conversation
   *
   * @generated from enum value: INACTIVE_AGENT = 1;
   */
  INACTIVE_AGENT = 1,
}

/**
 * @generated from enum api.commons.AgentConversationAssignmentType
 */
export declare enum AgentConversationAssignmentType {
  /**
   * primary agent for the assigned conversation
   *
   * @generated from enum value: PRIMARY_AGENT = 0;
   */
  PRIMARY_AGENT = 0,

  /**
   * secondary agent for the assigned conversation
   *
   * @generated from enum value: SECONDARY_AGENT = 1;
   */
  SECONDARY_AGENT = 1,
}

/**
 * @generated from enum api.commons.OmniMessageStatus
 */
export declare enum OmniMessageStatus {
  /**
   * @generated from enum value: OMNI_MESSAGE_CREATED = 0;
   */
  OMNI_MESSAGE_CREATED = 0,

  /**
   * message received from customer
   *
   * @generated from enum value: OMNI_INBOUND_MESSAGE_RECEIVED = 16000;
   */
  OMNI_INBOUND_MESSAGE_RECEIVED = 16000,

  /**
   * message received from agent
   *
   * @generated from enum value: OMNI_OUTBOUND_MESSAGE_RECEIVED = 16010;
   */
  OMNI_OUTBOUND_MESSAGE_RECEIVED = 16010,

  /**
   * message is ready to be sent
   *
   * @generated from enum value: OMNI_OUTBOUND_MESSAGE_WAITING = 16100;
   */
  OMNI_OUTBOUND_MESSAGE_WAITING = 16100,

  /**
   * message is sent
   *
   * @generated from enum value: OMNI_OUTBOUND_MESSAGE_PROCESSING = 16110;
   */
  OMNI_OUTBOUND_MESSAGE_PROCESSING = 16110,

  /**
   * message is on Do Not Call list
   *
   * @generated from enum value: OMNI_OUTBOUND_MESSAGE_DNC = 16120;
   */
  OMNI_OUTBOUND_MESSAGE_DNC = 16120,

  /**
   * message is flagged as invalid
   *
   * @generated from enum value: OMNI_OUTBOUND_MESSAGE_INVALID = 16130;
   */
  OMNI_OUTBOUND_MESSAGE_INVALID = 16130,

  /**
   * message was cancelled due to an attachment error
   *
   * @generated from enum value: OMNI_OUTBOUND_MESSAGE_ATTACHMENT_ERROR = 16140;
   */
  OMNI_OUTBOUND_MESSAGE_ATTACHMENT_ERROR = 16140,

  /**
   * message was cancelled
   *
   * @generated from enum value: OMNI_OUTBOUND_MESSAGE_CANCELLED = 16150;
   */
  OMNI_OUTBOUND_MESSAGE_CANCELLED = 16150,

  /**
   * message is queued in provider
   *
   * @generated from enum value: OMNI_OUTBOUND_MESSAGE_QUEUED = 16160;
   */
  OMNI_OUTBOUND_MESSAGE_QUEUED = 16160,

  /**
   * message has been delivered to receiver
   *
   * @generated from enum value: OMNI_OUTBOUND_MESSAGE_DELIVERED = 16170;
   */
  OMNI_OUTBOUND_MESSAGE_DELIVERED = 16170,

  /**
   * message was dropped
   *
   * @generated from enum value: OMNI_OUTBOUND_MESSAGE_DROPPED = 16180;
   */
  OMNI_OUTBOUND_MESSAGE_DROPPED = 16180,

  /**
   * message was temporarily rejected
   *
   * @generated from enum value: OMNI_OUTBOUND_MESSAGE_DEFERRED = 16190;
   */
  OMNI_OUTBOUND_MESSAGE_DEFERRED = 16190,

  /**
   * receiver could not/would not accept message
   *
   * @generated from enum value: OMNI_OUTBOUND_MESSAGE_BOUNCED = 16200;
   */
  OMNI_OUTBOUND_MESSAGE_BOUNCED = 16200,

  /**
   * message was opened
   *
   * @generated from enum value: OMNI_OUTBOUND_MESSAGE_OPENED = 16210;
   */
  OMNI_OUTBOUND_MESSAGE_OPENED = 16210,

  /**
   * link in message was clicked
   *
   * @generated from enum value: OMNI_OUTBOUND_MESSAGE_CLICKED = 16220;
   */
  OMNI_OUTBOUND_MESSAGE_CLICKED = 16220,

  /**
   * recipient clicked on unsubscribe link
   *
   * @generated from enum value: OMNI_OUTBOUND_MESSAGE_UNSUBSCRIBED = 16230;
   */
  OMNI_OUTBOUND_MESSAGE_UNSUBSCRIBED = 16230,

  /**
   * message marked as spam
   *
   * @generated from enum value: OMNI_OUTBOUND_MESSAGE_MARKED_AS_SPAM = 16240;
   */
  OMNI_OUTBOUND_MESSAGE_MARKED_AS_SPAM = 16240,

  /**
   * message marked as blocked
   *
   * @generated from enum value: OMNI_OUTBOUND_MESSAGE_BLOCKED = 16250;
   */
  OMNI_OUTBOUND_MESSAGE_BLOCKED = 16250,

  /**
   * message sent from system
   *
   * @generated from enum value: OMNI_SYSTEM_MESSAGE = 16050;
   */
  OMNI_SYSTEM_MESSAGE = 16050,
}

/**
 * OmniConversationResult -
 *
 * @generated from enum api.commons.OmniConversationResult
 */
export declare enum OmniConversationResult {
  /**
   * @generated from enum value: NONE = 0;
   */
  NONE = 0,

  /**
   * @generated from enum value: ABANDONED = 1;
   */
  ABANDONED = 1,
}

/**
 * OmniTaskStatus -
 *
 * @generated from enum api.commons.OmniTaskStatus
 */
export declare enum OmniTaskStatus {
  /**
   * initial task created waiting to be processed
   *
   * @generated from enum value: OMNI_TASK_WAITING = 0;
   */
  OMNI_TASK_WAITING = 0,

  /**
   * task is waiting to be queue
   *
   * @generated from enum value: OMNI_TASK_WAITING_FOR_QUEUE = 1;
   */
  OMNI_TASK_WAITING_FOR_QUEUE = 1,

  /**
   * task is waiting for approval
   *
   * @generated from enum value: OMNI_TASK_WAITING_FOR_APPROVAL = 2;
   */
  OMNI_TASK_WAITING_FOR_APPROVAL = 2,

  /**
   * the task is currently being sent
   *
   * @generated from enum value: OMNI_TASK_SENDING = 100;
   */
  OMNI_TASK_SENDING = 100,

  /**
   * the task attempted to send but failed
   *
   * @generated from enum value: OMNI_TASK_SENDING_FAILED = 110;
   */
  OMNI_TASK_SENDING_FAILED = 110,

  /**
   * the task began the process of sending but did not complete
   *
   * @generated from enum value: OMNI_TASK_SENDING_INCOMPLETE = 111;
   */
  OMNI_TASK_SENDING_INCOMPLETE = 111,

  /**
   * the task successfully sent
   *
   * @generated from enum value: OMNI_TASK_SENT = 120;
   */
  OMNI_TASK_SENT = 120,

  /**
   * the task was received by the destination
   *
   * @generated from enum value: OMNI_TASK_RECEIVED = 130;
   */
  OMNI_TASK_RECEIVED = 130,
}

/**
 * @generated from enum api.commons.OmniSenderType
 */
export declare enum OmniSenderType {
  /**
   * @generated from enum value: OMNI_SENDER_TYPE_AGENT = 0;
   */
  AGENT = 0,

  /**
   * @generated from enum value: OMNI_SENDER_TYPE_CUSTOMER = 1;
   */
  CUSTOMER = 1,

  /**
   * @generated from enum value: OMNI_SENDER_TYPE_SYSTEM = 2;
   */
  SYSTEM = 2,

  /**
   * @generated from enum value: OMNI_SENDER_TYPE_MANAGER = 3;
   */
  MANAGER = 3,

  /**
   * @generated from enum value: OMNI_SENDER_TYPE_FLOW = 4;
   */
  FLOW = 4,
}

/**
 * ConnectedInboxAuthenticationType -
 *
 * @generated from enum api.commons.ConnectedInboxAuthenticationType
 */
export declare enum ConnectedInboxAuthenticationType {
  /**
   * @generated from enum value: CONNECTED_INBOX_AUTHENTICATION_TYPE_PASSWORD = 0;
   */
  PASSWORD = 0,

  /**
   * @generated from enum value: CONNECTED_INBOX_AUTHENTICATION_TYPE_GOOGLE_XOAUTH2 = 1;
   */
  GOOGLE_XOAUTH2 = 1,
}

/**
 * ConversationStateChangeTimerName -
 *
 * @generated from enum api.commons.ConversationStateChangeTimerName
 */
export declare enum ConversationStateChangeTimerName {
  /**
   * @generated from enum value: CONVERSATION_STATE_CHANGE_TIMER_NAME_WAIT = 0;
   */
  WAIT = 0,

  /**
   * @generated from enum value: CONVERSATION_STATE_CHANGE_TIMER_NAME_TALK = 100;
   */
  TALK = 100,

  /**
   * @generated from enum value: CONVERSATION_STATE_CHANGE_TIMER_NAME_TALK_INITIAL_AGENT_RESPONSE = 101;
   */
  TALK_INITIAL_AGENT_RESPONSE = 101,

  /**
   * @generated from enum value: CONVERSATION_STATE_CHANGE_TIMER_NAME_TALK_AGENT_RESPONSE = 102;
   */
  TALK_AGENT_RESPONSE = 102,

  /**
   * @generated from enum value: CONVERSATION_STATE_CHANGE_TIMER_NAME_TALK_CUSTOMER_RESPONSE = 103;
   */
  TALK_CUSTOMER_RESPONSE = 103,

  /**
   * @generated from enum value: CONVERSATION_STATE_CHANGE_TIMER_NAME_TALK_SUSPENDED = 104;
   */
  TALK_SUSPENDED = 104,

  /**
   * @generated from enum value: CONVERSATION_STATE_CHANGE_TIMER_NAME_WRAP_UP = 200;
   */
  WRAP_UP = 200,

  /**
   * @generated from enum value: CONVERSATION_STATE_CHANGE_TIMER_NAME_IDLE = 300;
   */
  IDLE = 300,
}

/**
 * OmniConversationMetadataName -
 *
 * @generated from enum api.commons.OmniConversationMetadataName
 */
export declare enum OmniConversationMetadataName {
  /**
   * @generated from enum value: AGENT_RESPONSE_TIME = 0;
   */
  AGENT_RESPONSE_TIME = 0,

  /**
   * @generated from enum value: CUSTOMER_WAIT_TIME = 1;
   */
  CUSTOMER_WAIT_TIME = 1,

  /**
   * @generated from enum value: HANDLE_TIME = 2;
   */
  HANDLE_TIME = 2,

  /**
   * @generated from enum value: TRANSCRIPT_PATH = 3;
   */
  TRANSCRIPT_PATH = 3,

  /**
   * @generated from enum value: OMNI_CONVERSATION_METADATA_NAME_FLOW_DATA = 4;
   */
  OMNI_CONVERSATION_METADATA_NAME_FLOW_DATA = 4,

  /**
   * @generated from enum value: OMNI_CONVERSATION_METADATA_NAME_TIMER_WAIT = 10;
   */
  OMNI_CONVERSATION_METADATA_NAME_TIMER_WAIT = 10,

  /**
   * @generated from enum value: OMNI_CONVERSATION_METADATA_NAME_TIMER_TALK = 100;
   */
  OMNI_CONVERSATION_METADATA_NAME_TIMER_TALK = 100,

  /**
   * @generated from enum value: OMNI_CONVERSATION_METADATA_NAME_TIMER_TALK_INITIAL_AGENT_RESPONSE = 101;
   */
  OMNI_CONVERSATION_METADATA_NAME_TIMER_TALK_INITIAL_AGENT_RESPONSE = 101,

  /**
   * @generated from enum value: OMNI_CONVERSATION_METADATA_NAME_TIMER_TALK_AGENT_RESPONSE = 102;
   */
  OMNI_CONVERSATION_METADATA_NAME_TIMER_TALK_AGENT_RESPONSE = 102,

  /**
   * @generated from enum value: OMNI_CONVERSATION_METADATA_NAME_TIMER_TALK_CUSTOMER_RESPONSE = 103;
   */
  OMNI_CONVERSATION_METADATA_NAME_TIMER_TALK_CUSTOMER_RESPONSE = 103,

  /**
   * @generated from enum value: OMNI_CONVERSATION_METADATA_NAME_TIMER_TALK_SUSPENDED = 104;
   */
  OMNI_CONVERSATION_METADATA_NAME_TIMER_TALK_SUSPENDED = 104,

  /**
   * @generated from enum value: OMNI_CONVERSATION_METADATA_NAME_TIMER_WRAP_UP = 200;
   */
  OMNI_CONVERSATION_METADATA_NAME_TIMER_WRAP_UP = 200,

  /**
   * @generated from enum value: OMNI_CONVERSATION_METADATA_NAME_TIMER_IDLE = 300;
   */
  OMNI_CONVERSATION_METADATA_NAME_TIMER_IDLE = 300,
}

/**
 * @generated from enum api.commons.ProjectStatus
 */
export declare enum ProjectStatus {
  /**
   * @generated from enum value: PROJECT_STATUS_UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * Project status is Open
   *
   * @generated from enum value: PROJECT_STATUS_OPEN = 17000;
   */
  OPEN = 17000,

  /**
   * Project status is Closed
   *
   * @generated from enum value: PROJECT_STATUS_CLOSED = 17010;
   */
  CLOSED = 17010,
}

/**
 * @generated from enum api.commons.CampaignStatus
 */
export declare enum CampaignStatus {
  /**
   * @generated from enum value: CAMPAIGN_STATUS_SCHEDULED = 0;
   */
  SCHEDULED = 0,

  /**
   * @generated from enum value: CAMPAIGN_STATUS_RUNNING = 1;
   */
  RUNNING = 1,

  /**
   * @generated from enum value: CAMPAIGN_STATUS_PAUSED = 2;
   */
  PAUSED = 2,

  /**
   * @generated from enum value: CAMPAIGN_STATUS_COMPLETED = 3;
   */
  COMPLETED = 3,

  /**
   * @generated from enum value: CAMPAIGN_STATUS_CANCELED = 4;
   */
  CANCELED = 4,

  /**
   * @generated from enum value: CAMPAIGN_STATUS_ERROR_PAUSED = 5;
   */
  ERROR_PAUSED = 5,
}

/**
 * @generated from enum api.commons.CampaignDirection
 */
export declare enum CampaignDirection {
  /**
   * @generated from enum value: CAMPAIGN_DIRECTION_INBOUND = 0;
   */
  INBOUND = 0,

  /**
   * @generated from enum value: CAMPAIGN_DIRECTION_OUTBOUND = 1;
   */
  OUTBOUND = 1,
}

/**
 * OmniCampaign -
 *
 * @generated from message api.commons.OmniCampaign
 */
export declare class OmniCampaign extends Message<OmniCampaign> {
  /**
   * the campaign identifier
   *
   * @generated from field: int64 campaign_sid = 1 [jstype = JS_STRING];
   */
  campaignSid: string;

  /**
   * the campaign name
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * the campaign description
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * skills associated with the campaign
   *
   * @generated from field: api.commons.OmniConversationSkills skills = 4 [deprecated = true];
   * @deprecated
   */
  skills?: OmniConversationSkills;

  /**
   * time the campaign should start; null == (not scheduled) || (start now)
   *
   * @generated from field: google.protobuf.Timestamp start_date = 5;
   */
  startDate?: Timestamp;

  /**
   * campaign status (i.e. running|stopped|paused|etc.)
   *
   * @generated from field: api.commons.OmniCampaignStatus status = 6;
   */
  status: OmniCampaignStatus;

  /**
   * campaign channel type (chat|email|sms|etc.)
   *
   * @generated from field: api.commons.ChannelType channel_type = 7;
   */
  channelType: ChannelType;

  /**
   * the time the campaign was created
   *
   * @generated from field: google.protobuf.Timestamp date_created = 8;
   */
  dateCreated?: Timestamp;

  /**
   * the time the campaign was last modified
   *
   * @generated from field: google.protobuf.Timestamp date_modified = 9;
   */
  dateModified?: Timestamp;

  /**
   * identifier of the project the campaign belongs to
   *
   * @generated from field: int64 project_sid = 10 [jstype = JS_STRING];
   */
  projectSid: string;

  /**
   * associated modules
   *
   * @generated from field: repeated api.commons.OmniCampaignModule modules = 11;
   */
  modules: OmniCampaignModule[];

  /**
   * the campaign timezone
   *
   * @generated from field: api.commons.TimeZoneWrapper time_zone = 12;
   */
  timeZone?: TimeZoneWrapper;

  /**
   * shorten URL
   *
   * @generated from field: bool shorten_url = 13;
   */
  shortenUrl: boolean;

  /**
   * compliance configuration
   *
   * @generated from field: api.commons.OmniComplianceConfig compliance_config = 14;
   */
  complianceConfig?: OmniComplianceConfig;

  constructor(data?: PartialMessage<OmniCampaign>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniCampaign";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniCampaign;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniCampaign;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniCampaign;

  static equals(a: OmniCampaign | PlainMessage<OmniCampaign> | undefined, b: OmniCampaign | PlainMessage<OmniCampaign> | undefined): boolean;
}

/**
 * OmniCampaign -
 *
 * @generated from message api.commons.OmniCampaignModule
 */
export declare class OmniCampaignModule extends Message<OmniCampaignModule> {
  /**
   * the campaign module identifier
   *
   * @generated from field: int64 campaign_module_sid = 1 [jstype = JS_STRING];
   */
  campaignModuleSid: string;

  /**
   * the campaign identifier
   *
   * @generated from field: int64 campaign_sid = 2 [jstype = JS_STRING];
   */
  campaignSid: string;

  /**
   * module type (inbound|outbound)
   *
   * @generated from field: api.commons.OmniCampaignModuleType module_type = 3;
   */
  moduleType: OmniCampaignModuleType;

  /**
   * campaign module status (running|stopped|etc.)
   *
   * @generated from field: api.commons.OmniCampaignModuleStatus status = 4;
   */
  status: OmniCampaignModuleStatus;

  /**
   * config data specific to the module
   *
   * @generated from field: api.commons.OmniCampaignModuleConfig config = 5;
   */
  config?: OmniCampaignModuleConfig;

  /**
   * date module was created
   *
   * @generated from field: google.protobuf.Timestamp date_created = 6;
   */
  dateCreated?: Timestamp;

  /**
   * date module was last modified
   *
   * @generated from field: google.protobuf.Timestamp date_modified = 7;
   */
  dateModified?: Timestamp;

  /**
   * when campaign is scheduled to stop; null == not a scheduled module
   *
   * @generated from field: google.protobuf.Timestamp scheduled_stop_date = 8;
   */
  scheduledStopDate?: Timestamp;

  /**
   * time campaign was actually stopped; null == not stopped yet
   *
   * @generated from field: google.protobuf.Timestamp actual_stop_date = 9;
   */
  actualStopDate?: Timestamp;

  /**
   * campaign module operating time; nullable
   *
   * @generated from field: api.commons.WeekdayTimeRange hours_of_operation = 10;
   */
  hoursOfOperation?: WeekdayTimeRange;

  /**
   * read-only (i.e. only returned from the BE, never read, so setting this does nothing) selectable details when retrieving a module
   *
   * @generated from field: api.commons.OmniCampaignModule.Details details = 11;
   */
  details?: OmniCampaignModule_Details;

  /**
   * attachments
   *
   * @generated from field: repeated api.commons.OmniAttachment attachments = 12;
   */
  attachments: OmniAttachment[];

  constructor(data?: PartialMessage<OmniCampaignModule>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniCampaignModule";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniCampaignModule;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniCampaignModule;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniCampaignModule;

  static equals(a: OmniCampaignModule | PlainMessage<OmniCampaignModule> | undefined, b: OmniCampaignModule | PlainMessage<OmniCampaignModule> | undefined): boolean;
}

/**
 * Details -
 *
 * @generated from message api.commons.OmniCampaignModule.Details
 */
export declare class OmniCampaignModule_Details extends Message<OmniCampaignModule_Details> {
  /**
   * the total number of tasks created by an outbound module
   *
   * @generated from field: google.protobuf.Int64Value total_task_count = 1;
   */
  totalTaskCount?: bigint;

  /**
   * the total number of tasks that have successfully completed for an outbound module
   *
   * @generated from field: google.protobuf.Int64Value completed_task_count = 2;
   */
  completedTaskCount?: bigint;

  /**
   * the name of the associated connected_inbox for this module
   *
   * @generated from field: google.protobuf.StringValue connected_inbox_address = 3;
   */
  connectedInboxAddress?: string;

  /**
   * the name of the associated verified_email for this module
   *
   * @generated from field: google.protobuf.StringValue verified_email_address = 4;
   */
  verifiedEmailAddress?: string;

  /**
   * the number of tasks pending
   *
   * @generated from field: google.protobuf.Int64Value pending_task_count = 5;
   */
  pendingTaskCount?: bigint;

  /**
   * the number of tasks that failed
   *
   * @generated from field: google.protobuf.Int64Value failed_task_count = 6;
   */
  failedTaskCount?: bigint;

  constructor(data?: PartialMessage<OmniCampaignModule_Details>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniCampaignModule.Details";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniCampaignModule_Details;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniCampaignModule_Details;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniCampaignModule_Details;

  static equals(a: OmniCampaignModule_Details | PlainMessage<OmniCampaignModule_Details> | undefined, b: OmniCampaignModule_Details | PlainMessage<OmniCampaignModule_Details> | undefined): boolean;
}

/**
 * OmniCampaignModuleConfig -
 *
 * @generated from message api.commons.OmniCampaignModuleConfig
 */
export declare class OmniCampaignModuleConfig extends Message<OmniCampaignModuleConfig> {
  /**
   * primary api key for chat widget
   *
   * @generated from field: google.protobuf.StringValue api_key_primary = 1;
   */
  apiKeyPrimary?: string;

  /**
   * secondary api key for chat widget
   *
   * @generated from field: google.protobuf.StringValue api_key_secondary = 2;
   */
  apiKeySecondary?: string;

  /**
   * chat widget color properties
   *
   * @generated from field: api.commons.ChatColorProperties color_properties = 3;
   */
  colorProperties?: ChatColorProperties;

  /**
   * identifier of the connected inbox associated to the CampaignModule
   *
   * @generated from field: api.commons.Int64Id connected_inbox_sid = 4;
   */
  connectedInboxSid?: Int64Id;

  /**
   * list of dispositions associated to the CampaignModule
   *
   * @generated from field: repeated api.commons.Disposition dispositions = 5;
   */
  dispositions: Disposition[];

  /**
   * email associated to the CampaignModule
   *
   * @generated from field: google.protobuf.StringValue email = 6;
   */
  email?: string;

  /**
   * message body
   *
   * @generated from field: google.protobuf.StringValue message_body = 7;
   */
  messageBody?: string;

  /**
   * email subject
   *
   * @generated from field: google.protobuf.StringValue email_subject = 8;
   */
  emailSubject?: string;

  /**
   * sms number
   *
   * @generated from field: api.commons.SmsNumber sms_number = 9;
   */
  smsNumber?: SmsNumber;

  /**
   * chat widget header
   *
   * @generated from field: api.commons.ChatHeader header = 10;
   */
  header?: ChatHeader;

  /**
   * sla timeouts associated with the CampaignModule
   *
   * @generated from field: api.commons.SLATimeouts sla_timeouts = 11;
   */
  slaTimeouts?: SLATimeouts;

  /**
   * maximum number of sends per hour for outbound CampaignModules
   *
   * @generated from field: google.protobuf.Int64Value sends_per_hour = 12;
   */
  sendsPerHour?: bigint;

  /**
   * identifier of associated custom unsubscribe link
   *
   * @generated from field: api.commons.Int64Id unsubscribe_link_sid = 13;
   */
  unsubscribeLinkSid?: Int64Id;

  /**
   * verified email identifier
   *
   * @generated from field: api.commons.Int64Id verified_email_sid = 15;
   */
  verifiedEmailSid?: Int64Id;

  /**
   * stop module with all tasks are completed
   *
   * @generated from field: google.protobuf.BoolValue stop_on_task_deplete = 16;
   */
  stopOnTaskDeplete?: boolean;

  /**
   * attachments
   *
   * @generated from field: repeated api.commons.OmniAttachment attachments = 17;
   */
  attachments: OmniAttachment[];

  /**
   * Optional. compliance rule set to use for this campaign
   *
   * @generated from field: google.protobuf.StringValue compliance_rule_set_id = 18;
   */
  complianceRuleSetId?: string;

  /**
   * Payment Portal Ids
   *
   * @generated from field: repeated string payment_portal_ids = 19;
   */
  paymentPortalIds: string[];

  /**
   * Flow Id
   *
   * @generated from field: api.commons.Int64Id flow_id = 20;
   */
  flowId?: Int64Id;

  /**
   * skills
   *
   * @generated from field: api.commons.OmniConversationSkills skills = 21;
   */
  skills?: OmniConversationSkills;

  constructor(data?: PartialMessage<OmniCampaignModuleConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniCampaignModuleConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniCampaignModuleConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniCampaignModuleConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniCampaignModuleConfig;

  static equals(a: OmniCampaignModuleConfig | PlainMessage<OmniCampaignModuleConfig> | undefined, b: OmniCampaignModuleConfig | PlainMessage<OmniCampaignModuleConfig> | undefined): boolean;
}

/**
 * SmsNumber
 *
 * @generated from message api.commons.SmsNumber
 */
export declare class SmsNumber extends Message<SmsNumber> {
  /**
   * string representation of the sms number
   *
   * @generated from field: string number = 1;
   */
  number: string;

  /**
   * the type of sms number (Alphanumeric|Short Code|Number)
   *
   * @generated from field: api.commons.SmsNumberType type = 2;
   */
  type: SmsNumberType;

  /**
   * associated provider (Bandwidth|BurstSMS|etc.)
   *
   * @generated from field: api.commons.SmsNumberProvider provider = 3;
   */
  provider: SmsNumberProvider;

  /**
   * country code the sms number belongs to
   *
   * @generated from field: int32 country_code = 4;
   */
  countryCode: number;

  constructor(data?: PartialMessage<SmsNumber>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.SmsNumber";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SmsNumber;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SmsNumber;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SmsNumber;

  static equals(a: SmsNumber | PlainMessage<SmsNumber> | undefined, b: SmsNumber | PlainMessage<SmsNumber> | undefined): boolean;
}

/**
 * @generated from message api.commons.ConversationCustomerInformation
 */
export declare class ConversationCustomerInformation extends Message<ConversationCustomerInformation> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string phone_number = 2;
   */
  phoneNumber: string;

  /**
   * @generated from field: string email_address = 3;
   */
  emailAddress: string;

  constructor(data?: PartialMessage<ConversationCustomerInformation>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.ConversationCustomerInformation";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConversationCustomerInformation;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConversationCustomerInformation;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConversationCustomerInformation;

  static equals(a: ConversationCustomerInformation | PlainMessage<ConversationCustomerInformation> | undefined, b: ConversationCustomerInformation | PlainMessage<ConversationCustomerInformation> | undefined): boolean;
}

/**
 * @generated from message api.commons.SLATimeouts
 */
export declare class SLATimeouts extends Message<SLATimeouts> {
  /**
   * max amount of time in seconds that it should take for an agent to respond to a customer message. Will reset after each customer response.
   *
   * @generated from field: int64 t1 = 1;
   */
  t1: bigint;

  /**
   * amount of time in seconds the conversation takes space in an agent's queue waiting for a customer's response
   *
   * @generated from field: int64 t2 = 2;
   */
  t2: bigint;

  /**
   * amount of time in seconds that the frontend system will wait for an agent response before a conversation gets reassigned
   *
   * @generated from field: int64 t3 = 3;
   */
  t3: bigint;

  /**
   * amount of time in seconds that the backend system will wait for an agent response before a conversation gets reassigned
   *
   * @generated from field: int64 t10 = 10;
   */
  t10: bigint;

  /**
   * amount of time in seconds that the backend system will wait for a customer response before a conversation gets closed
   *
   * @generated from field: int64 t11 = 11;
   */
  t11: bigint;

  /**
   * amount of time in seconds that the backend system will wait until a unassigned conversation is closed timeout
   *
   * @generated from field: int64 t12 = 12;
   */
  t12: bigint;

  constructor(data?: PartialMessage<SLATimeouts>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.SLATimeouts";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SLATimeouts;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SLATimeouts;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SLATimeouts;

  static equals(a: SLATimeouts | PlainMessage<SLATimeouts> | undefined, b: SLATimeouts | PlainMessage<SLATimeouts> | undefined): boolean;
}

/**
 * represents a a list of information collected for a conversation
 *
 * @generated from message api.commons.ConversationCollectedData
 */
export declare class ConversationCollectedData extends Message<ConversationCollectedData> {
  /**
   * the list of data
   *
   * @generated from field: repeated api.commons.ConversationCollectedData_Item items = 1;
   */
  items: ConversationCollectedData_Item[];

  constructor(data?: PartialMessage<ConversationCollectedData>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.ConversationCollectedData";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConversationCollectedData;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConversationCollectedData;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConversationCollectedData;

  static equals(a: ConversationCollectedData | PlainMessage<ConversationCollectedData> | undefined, b: ConversationCollectedData | PlainMessage<ConversationCollectedData> | undefined): boolean;
}

/**
 * represents a piece of meta information collect for a particular conversation
 *
 * @generated from message api.commons.ConversationCollectedData_Item
 */
export declare class ConversationCollectedData_Item extends Message<ConversationCollectedData_Item> {
  /**
   * the id of the record
   *
   * @generated from field: int64 conversation_collected_data_sid = 1 [jstype = JS_STRING];
   */
  conversationCollectedDataSid: string;

  /**
   * the id of the conversation
   *
   * @generated from field: int64 conversation_sid = 2 [jstype = JS_STRING];
   */
  conversationSid: string;

  /**
   * the name of the data
   *
   * @generated from field: string data_name = 3;
   */
  dataName: string;

  /**
   * the value of the data
   *
   * @generated from field: string data_value = 4;
   */
  dataValue: string;

  /**
   * when the data was collected
   *
   * @generated from field: google.protobuf.Timestamp collection_time = 5;
   */
  collectionTime?: Timestamp;

  /**
   * the user that collected the data (if this is not set then it was collected by the customer)
   *
   * @generated from field: google.protobuf.StringValue user_id = 6;
   */
  userId?: string;

  constructor(data?: PartialMessage<ConversationCollectedData_Item>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.ConversationCollectedData_Item";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConversationCollectedData_Item;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConversationCollectedData_Item;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConversationCollectedData_Item;

  static equals(a: ConversationCollectedData_Item | PlainMessage<ConversationCollectedData_Item> | undefined, b: ConversationCollectedData_Item | PlainMessage<ConversationCollectedData_Item> | undefined): boolean;
}

/**
 * @generated from message api.commons.OmniMessage
 */
export declare class OmniMessage extends Message<OmniMessage> {
  /**
   * this is the primary key or internal tcn identifier for the message
   *
   * @generated from field: int64 message_sid = 1 [jstype = JS_STRING];
   */
  messageSid: string;

  /**
   * this is the user id that sent the message - this can be not set which would
   * be the case if it's not an agent message
   *
   * @generated from field: google.protobuf.StringValue user_id = 4;
   */
  userId?: string;

  /**
   * this is who the message is from
   * chat = if agent then user_id, if customer then name
   * email = email address
   * sms = phone number
   *
   * @generated from field: string sent_from = 5;
   */
  sentFrom: string;

  /**
   * this is who the message is to
   * chat = if customer then name, otherwise leave as an empty string
   * email = email address
   * sms = phone number
   *
   * @generated from field: string sent_to = 6;
   */
  sentTo: string;

  /**
   * the message channel type
   *
   * @generated from field: api.commons.ChannelType channel_type = 7;
   */
  channelType: ChannelType;

  /**
   * this is how the message is referenced by the outside world
   * chat = not set
   * email = email message header
   * sms = not set
   *
   * @generated from field: google.protobuf.StringValue reference_id = 8;
   */
  referenceId?: string;

  /**
   * this is an id that the UI generates so it's able to identify it when it sees it again
   *
   * @generated from field: string ui_reference_id = 10;
   */
  uiReferenceId: string;

  /**
   * this is the payload of the message
   *
   * @generated from field: api.commons.OmniMessagePayload payload = 11;
   */
  payload?: OmniMessagePayload;

  /**
   * the id of the conversation. This is not required to be set because the message could
   * belong to a outbound campaign only
   *
   * @generated from field: api.commons.Int64Id conversation_sid = 12;
   */
  conversationSid?: Int64Id;

  /**
   * the current status of the message.
   *
   * @generated from field: api.commons.OmniMessageStatus status = 14;
   */
  status: OmniMessageStatus;

  /**
   * the time the message was created
   *
   * @generated from field: google.protobuf.Timestamp date_created = 15;
   */
  dateCreated?: Timestamp;

  /**
   * the time the message was last modified
   *
   * @generated from field: google.protobuf.Timestamp date_modified = 16;
   */
  dateModified?: Timestamp;

  /**
   * identifier of the campaign the message belongs to
   *
   * @generated from field: int64 campaign_sid = 17 [jstype = JS_STRING];
   */
  campaignSid: string;

  /**
   * The subject of the conversation
   * chat = not set
   * email = the email subject line
   * sms = not set
   *
   * @generated from field: google.protobuf.StringValue subject = 19;
   */
  subject?: string;

  /**
   * if this message is coming from omni boss is a manager message
   *
   * @generated from field: api.commons.OmniSenderType sender_type = 21;
   */
  senderType: OmniSenderType;

  /**
   * status message
   *
   * @generated from field: google.protobuf.StringValue status_message = 22;
   */
  statusMessage?: string;

  constructor(data?: PartialMessage<OmniMessage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniMessage;

  static equals(a: OmniMessage | PlainMessage<OmniMessage> | undefined, b: OmniMessage | PlainMessage<OmniMessage> | undefined): boolean;
}

/**
 * @generated from message api.commons.CustomerChatWidgetMessage
 */
export declare class CustomerChatWidgetMessage extends Message<CustomerChatWidgetMessage> {
  /**
   * the id for this given message
   *
   * @generated from field: int64 message_sid = 1 [jstype = JS_STRING];
   */
  messageSid: string;

  /**
   * this is the payload of the message
   *
   * @generated from field: api.commons.OmniMessagePayload payload = 2;
   */
  payload?: OmniMessagePayload;

  /**
   * the time the message got publish and made available for other parties to
   *
   * @generated from field: google.protobuf.Timestamp date_created = 3;
   */
  dateCreated?: Timestamp;

  /**
   * a unique id created by the client to ensure it doesn't send the same message twice
   *
   * @generated from field: string ui_reference_id = 4;
   */
  uiReferenceId: string;

  /**
   * that sender of this message
   *
   * @generated from field: api.commons.ConversationCustomerInformation customer_information = 5;
   */
  customerInformation?: ConversationCustomerInformation;

  constructor(data?: PartialMessage<CustomerChatWidgetMessage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.CustomerChatWidgetMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CustomerChatWidgetMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CustomerChatWidgetMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CustomerChatWidgetMessage;

  static equals(a: CustomerChatWidgetMessage | PlainMessage<CustomerChatWidgetMessage> | undefined, b: CustomerChatWidgetMessage | PlainMessage<CustomerChatWidgetMessage> | undefined): boolean;
}

/**
 * @generated from message api.commons.AgentChatWidgetMessage
 */
export declare class AgentChatWidgetMessage extends Message<AgentChatWidgetMessage> {
  /**
   * the id for this given message
   *
   * @generated from field: int64 message_sid = 1 [jstype = JS_STRING];
   */
  messageSid: string;

  /**
   * this is the payload of the message
   *
   * @generated from field: api.commons.OmniMessagePayload payload = 2;
   */
  payload?: OmniMessagePayload;

  /**
   * the time the message got publish and made available for other parties to
   *
   * @generated from field: google.protobuf.Timestamp date_created = 3;
   */
  dateCreated?: Timestamp;

  /**
   * a unique id created by the client to ensure it doesn't send the same message twice
   *
   * @generated from field: string ui_reference_id = 4;
   */
  uiReferenceId: string;

  /**
   * that sender of this message
   *
   * @generated from field: api.commons.OmniConversationUserInformation user_information = 5;
   */
  userInformation?: OmniConversationUserInformation;

  /**
   * the sender type of this message
   *
   * @generated from field: api.commons.OmniSenderType sender_type = 6;
   */
  senderType: OmniSenderType;

  constructor(data?: PartialMessage<AgentChatWidgetMessage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.AgentChatWidgetMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentChatWidgetMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentChatWidgetMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentChatWidgetMessage;

  static equals(a: AgentChatWidgetMessage | PlainMessage<AgentChatWidgetMessage> | undefined, b: AgentChatWidgetMessage | PlainMessage<AgentChatWidgetMessage> | undefined): boolean;
}

/**
 * @generated from message api.commons.OmniMessagePayload
 */
export declare class OmniMessagePayload extends Message<OmniMessagePayload> {
  /**
   * @generated from oneof api.commons.OmniMessagePayload.payload
   */
  payload: {
    /**
     * text message
     *
     * @generated from field: api.commons.OmniTextMessage text_message = 100;
     */
    value: OmniTextMessage;
    case: "textMessage";
  } | {
    /**
     * typing notification
     *
     * @generated from field: api.commons.OmniTypingNotification typing_notification = 101;
     */
    value: OmniTypingNotification;
    case: "typingNotification";
  } | {
    /**
     * reassignment notification
     *
     * @generated from field: api.commons.OmniReassignmentNotification reassignment = 102;
     */
    value: OmniReassignmentNotification;
    case: "reassignment";
  } | {
    /**
     * requesting attachment upload url
     *
     * @generated from field: api.commons.OmniRequestAttachmentUploadURL request_attachment_upload_url = 103;
     */
    value: OmniRequestAttachmentUploadURL;
    case: "requestAttachmentUploadUrl";
  } | {
    /**
     * attachment upload url
     *
     * @generated from field: api.commons.OmniAttachmentUploadURL attachment_upload_url = 104;
     */
    value: OmniAttachmentUploadURL;
    case: "attachmentUploadUrl";
  } | {
    /**
     * attachment
     *
     * @generated from field: api.commons.OmniAttachment attachment = 105;
     */
    value: OmniAttachment;
    case: "attachment";
  } | {
    /**
     * close conversation
     *
     * @generated from field: api.commons.OmniCloseConversation close_conversation = 106;
     */
    value: OmniCloseConversation;
    case: "closeConversation";
  } | {
    /**
     * assign conversation
     *
     * @generated from field: api.commons.OmniAssignConversation assign_conversation = 107;
     */
    value: OmniAssignConversation;
    case: "assignConversation";
  } | {
    /**
     * unassign conversation
     *
     * @generated from field: api.commons.OmniUnassignConversation unassign_conversation = 108;
     */
    value: OmniUnassignConversation;
    case: "unassignConversation";
  } | {
    /**
     * finished wrap up
     *
     * @generated from field: api.commons.OmniFinishWrapUp finish_wrap_up = 109;
     */
    value: OmniFinishWrapUp;
    case: "finishWrapUp";
  } | {
    /**
     * suspend
     *
     * @generated from field: api.commons.OmniSuspend suspend = 110;
     */
    value: OmniSuspend;
    case: "suspend";
  } | {
    /**
     * start wrap up
     *
     * @generated from field: api.commons.OmniStartWrapUp start_wrap_up = 111;
     */
    value: OmniStartWrapUp;
    case: "startWrapUp";
  } | {
    /**
     * queue information
     *
     * @generated from field: api.commons.OmniQueueInformation queue_information = 112;
     */
    value: OmniQueueInformation;
    case: "queueInformation";
  } | {
    /**
     * request queue information
     *
     * @generated from field: api.commons.OmniRequestQueueInformation request_queue_information = 113;
     */
    value: OmniRequestQueueInformation;
    case: "requestQueueInformation";
  } | {
    /**
     * off loaded text message
     *
     * @generated from field: api.commons.OmniOffLoadedTextMessage off_loaded_text_message = 114;
     */
    value: OmniOffLoadedTextMessage;
    case: "offLoadedTextMessage";
  } | {
    /**
     * canned message
     *
     * @generated from field: api.commons.OmniCannedMessage canned_message = 115;
     */
    value: OmniCannedMessage;
    case: "cannedMessage";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<OmniMessagePayload>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniMessagePayload";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniMessagePayload;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniMessagePayload;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniMessagePayload;

  static equals(a: OmniMessagePayload | PlainMessage<OmniMessagePayload> | undefined, b: OmniMessagePayload | PlainMessage<OmniMessagePayload> | undefined): boolean;
}

/**
 * @generated from message api.commons.OmniTextMessage
 */
export declare class OmniTextMessage extends Message<OmniTextMessage> {
  /**
   * message containing Urls
   *
   * @generated from field: string message = 1;
   */
  message: string;

  /**
   * attachments
   *
   * @generated from field: repeated api.commons.OmniAttachment attachments = 2;
   */
  attachments: OmniAttachment[];

  /**
   * primary asm session identifier
   *
   * @generated from field: google.protobuf.Int64Value primary_asm_session_sid = 3;
   */
  primaryAsmSessionSid?: bigint;

  constructor(data?: PartialMessage<OmniTextMessage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniTextMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniTextMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniTextMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniTextMessage;

  static equals(a: OmniTextMessage | PlainMessage<OmniTextMessage> | undefined, b: OmniTextMessage | PlainMessage<OmniTextMessage> | undefined): boolean;
}

/**
 * @generated from message api.commons.OmniOffLoadedTextMessage
 */
export declare class OmniOffLoadedTextMessage extends Message<OmniOffLoadedTextMessage> {
  /**
   * @generated from field: string location = 1;
   */
  location: string;

  /**
   * @generated from field: repeated api.commons.OmniAttachment attachments = 2;
   */
  attachments: OmniAttachment[];

  constructor(data?: PartialMessage<OmniOffLoadedTextMessage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniOffLoadedTextMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniOffLoadedTextMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniOffLoadedTextMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniOffLoadedTextMessage;

  static equals(a: OmniOffLoadedTextMessage | PlainMessage<OmniOffLoadedTextMessage> | undefined, b: OmniOffLoadedTextMessage | PlainMessage<OmniOffLoadedTextMessage> | undefined): boolean;
}

/**
 * @generated from message api.commons.OmniTypingNotification
 */
export declare class OmniTypingNotification extends Message<OmniTypingNotification> {
  constructor(data?: PartialMessage<OmniTypingNotification>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniTypingNotification";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniTypingNotification;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniTypingNotification;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniTypingNotification;

  static equals(a: OmniTypingNotification | PlainMessage<OmniTypingNotification> | undefined, b: OmniTypingNotification | PlainMessage<OmniTypingNotification> | undefined): boolean;
}

/**
 * assign conversation to agent
 *
 * @generated from message api.commons.OmniAssignConversation
 */
export declare class OmniAssignConversation extends Message<OmniAssignConversation> {
  /**
   * agent user id
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * user name used to display in the UI. This field is only set by
   * the backend when the payload is being sent to the UI
   *
   * @generated from field: string user_name = 2;
   */
  userName: string;

  /**
   * primary asm session identifier
   *
   * @generated from field: int64 primary_asm_session_sid = 5;
   */
  primaryAsmSessionSid: bigint;

  constructor(data?: PartialMessage<OmniAssignConversation>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniAssignConversation";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniAssignConversation;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniAssignConversation;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniAssignConversation;

  static equals(a: OmniAssignConversation | PlainMessage<OmniAssignConversation> | undefined, b: OmniAssignConversation | PlainMessage<OmniAssignConversation> | undefined): boolean;
}

/**
 * OmniMessage payload for reassigning agents
 *
 * @generated from message api.commons.OmniReassignmentNotification
 */
export declare class OmniReassignmentNotification extends Message<OmniReassignmentNotification> {
  /**
   * the id of the assigned user
   *
   * @generated from field: string current_user_id = 1;
   */
  currentUserId: string;

  /**
   * current user name used to display in the UI. This field is only set by
   * the backend when the payload is being sent to the UI
   *
   * @generated from field: string current_user_name = 2;
   */
  currentUserName: string;

  /**
   * the id of the user to be assigned
   *
   * @generated from field: string new_user_id = 3;
   */
  newUserId: string;

  /**
   * new user name used to display in the UI. This field is only set by
   * the backend when the payload is being sent to the UI
   *
   * @generated from field: string new_user_name = 4;
   */
  newUserName: string;

  /**
   * new user asm session sid
   *
   * @generated from field: google.protobuf.Int64Value new_user_asm_session_sid = 5;
   */
  newUserAsmSessionSid?: bigint;

  constructor(data?: PartialMessage<OmniReassignmentNotification>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniReassignmentNotification";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniReassignmentNotification;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniReassignmentNotification;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniReassignmentNotification;

  static equals(a: OmniReassignmentNotification | PlainMessage<OmniReassignmentNotification> | undefined, b: OmniReassignmentNotification | PlainMessage<OmniReassignmentNotification> | undefined): boolean;
}

/**
 * OmniMessage payload for unassigning an agent(s)
 *
 * @generated from message api.commons.OmniUnassignConversation
 */
export declare class OmniUnassignConversation extends Message<OmniUnassignConversation> {
  /**
   * the id of the user to unassign
   *
   * @generated from field: google.protobuf.StringValue user_id = 1;
   */
  userId?: string;

  /**
   * user name used to display in the UI. This field is only set by
   * the backend when the payload is being sent to the UI
   *
   * @generated from field: string user_name = 4;
   */
  userName: string;

  /**
   * whether or not all users should be unassigned
   *
   * @generated from field: bool all = 2;
   */
  all: boolean;

  /**
   * primary asm session identifier
   *
   * @generated from field: google.protobuf.Int64Value primary_asm_session_sid = 5;
   */
  primaryAsmSessionSid?: bigint;

  constructor(data?: PartialMessage<OmniUnassignConversation>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniUnassignConversation";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniUnassignConversation;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniUnassignConversation;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniUnassignConversation;

  static equals(a: OmniUnassignConversation | PlainMessage<OmniUnassignConversation> | undefined, b: OmniUnassignConversation | PlainMessage<OmniUnassignConversation> | undefined): boolean;
}

/**
 * @generated from message api.commons.OmniRequestAttachmentUploadURL
 */
export declare class OmniRequestAttachmentUploadURL extends Message<OmniRequestAttachmentUploadURL> {
  constructor(data?: PartialMessage<OmniRequestAttachmentUploadURL>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniRequestAttachmentUploadURL";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniRequestAttachmentUploadURL;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniRequestAttachmentUploadURL;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniRequestAttachmentUploadURL;

  static equals(a: OmniRequestAttachmentUploadURL | PlainMessage<OmniRequestAttachmentUploadURL> | undefined, b: OmniRequestAttachmentUploadURL | PlainMessage<OmniRequestAttachmentUploadURL> | undefined): boolean;
}

/**
 * attachment upload details
 *
 * @generated from message api.commons.OmniAttachmentUploadURL
 */
export declare class OmniAttachmentUploadURL extends Message<OmniAttachmentUploadURL> {
  /**
   * attachment file upload url
   *
   * @generated from field: string upload_url = 1;
   */
  uploadUrl: string;

  /**
   * attachment id
   *
   * @generated from field: string id = 2;
   */
  id: string;

  constructor(data?: PartialMessage<OmniAttachmentUploadURL>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniAttachmentUploadURL";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniAttachmentUploadURL;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniAttachmentUploadURL;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniAttachmentUploadURL;

  static equals(a: OmniAttachmentUploadURL | PlainMessage<OmniAttachmentUploadURL> | undefined, b: OmniAttachmentUploadURL | PlainMessage<OmniAttachmentUploadURL> | undefined): boolean;
}

/**
 * attachment details
 *
 * @generated from message api.commons.OmniAttachment
 */
export declare class OmniAttachment extends Message<OmniAttachment> {
  /**
   * primary key or internal identifier for attachment
   *
   * @generated from field: int64 omni_attachment_sid = 1 [jstype = JS_STRING];
   */
  omniAttachmentSid: string;

  /**
   * attachment file name
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * attachment file type
   *
   * @generated from field: string file_type = 3;
   */
  fileType: string;

  /**
   * attachment file size
   *
   * @generated from field: int64 file_size = 4;
   */
  fileSize: bigint;

  /**
   * attachment file path
   *
   * @generated from field: string path = 5;
   */
  path: string;

  /**
   * temp id
   *
   * @generated from field: google.protobuf.StringValue temp_id = 6;
   */
  tempId?: string;

  /**
   * download attachment file url
   *
   * @generated from field: string download_url = 7;
   */
  downloadUrl: string;

  /**
   * time when the attachment was created
   *
   * @generated from field: google.protobuf.Timestamp date_created = 8;
   */
  dateCreated?: Timestamp;

  /**
   * time when the attachment was last modified
   *
   * @generated from field: google.protobuf.Timestamp date_modified = 9;
   */
  dateModified?: Timestamp;

  /**
   * Optional. the id of the attachment in text if inline
   *
   * @generated from field: google.protobuf.StringValue content_id = 10;
   */
  contentId?: string;

  /**
   * Optional. the width of the inline attachment
   *
   * @generated from field: google.protobuf.StringValue width = 11;
   */
  width?: string;

  /**
   * Optional. the height of the inline attachment
   *
   * @generated from field: google.protobuf.StringValue height = 12;
   */
  height?: string;

  constructor(data?: PartialMessage<OmniAttachment>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniAttachment";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniAttachment;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniAttachment;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniAttachment;

  static equals(a: OmniAttachment | PlainMessage<OmniAttachment> | undefined, b: OmniAttachment | PlainMessage<OmniAttachment> | undefined): boolean;
}

/**
 * @generated from message api.commons.OmniStartWrapUp
 */
export declare class OmniStartWrapUp extends Message<OmniStartWrapUp> {
  /**
   * primary asm session identifier
   *
   * @generated from field: google.protobuf.Int64Value primary_asm_session_sid = 1;
   */
  primaryAsmSessionSid?: bigint;

  constructor(data?: PartialMessage<OmniStartWrapUp>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniStartWrapUp";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniStartWrapUp;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniStartWrapUp;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniStartWrapUp;

  static equals(a: OmniStartWrapUp | PlainMessage<OmniStartWrapUp> | undefined, b: OmniStartWrapUp | PlainMessage<OmniStartWrapUp> | undefined): boolean;
}

/**
 * @generated from message api.commons.OmniFinishWrapUp
 */
export declare class OmniFinishWrapUp extends Message<OmniFinishWrapUp> {
  /**
   * primary asm session identifier
   *
   * @generated from field: google.protobuf.Int64Value primary_asm_session_sid = 1;
   */
  primaryAsmSessionSid?: bigint;

  constructor(data?: PartialMessage<OmniFinishWrapUp>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniFinishWrapUp";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniFinishWrapUp;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniFinishWrapUp;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniFinishWrapUp;

  static equals(a: OmniFinishWrapUp | PlainMessage<OmniFinishWrapUp> | undefined, b: OmniFinishWrapUp | PlainMessage<OmniFinishWrapUp> | undefined): boolean;
}

/**
 * @generated from message api.commons.OmniSuspend
 */
export declare class OmniSuspend extends Message<OmniSuspend> {
  /**
   * primary asm session identifier
   *
   * @generated from field: google.protobuf.Int64Value primary_asm_session_sid = 1;
   */
  primaryAsmSessionSid?: bigint;

  constructor(data?: PartialMessage<OmniSuspend>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniSuspend";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniSuspend;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniSuspend;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniSuspend;

  static equals(a: OmniSuspend | PlainMessage<OmniSuspend> | undefined, b: OmniSuspend | PlainMessage<OmniSuspend> | undefined): boolean;
}

/**
 * @generated from message api.commons.OmniCloseConversation
 */
export declare class OmniCloseConversation extends Message<OmniCloseConversation> {
  /**
   * primary asm session identifier
   *
   * @generated from field: google.protobuf.Int64Value primary_asm_session_sid = 1;
   */
  primaryAsmSessionSid?: bigint;

  constructor(data?: PartialMessage<OmniCloseConversation>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniCloseConversation";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniCloseConversation;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniCloseConversation;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniCloseConversation;

  static equals(a: OmniCloseConversation | PlainMessage<OmniCloseConversation> | undefined, b: OmniCloseConversation | PlainMessage<OmniCloseConversation> | undefined): boolean;
}

/**
 * @generated from message api.commons.OmniQueueInformation
 */
export declare class OmniQueueInformation extends Message<OmniQueueInformation> {
  /**
   * @generated from field: int64 position = 1;
   */
  position: bigint;

  constructor(data?: PartialMessage<OmniQueueInformation>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniQueueInformation";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniQueueInformation;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniQueueInformation;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniQueueInformation;

  static equals(a: OmniQueueInformation | PlainMessage<OmniQueueInformation> | undefined, b: OmniQueueInformation | PlainMessage<OmniQueueInformation> | undefined): boolean;
}

/**
 * @generated from message api.commons.OmniRequestQueueInformation
 */
export declare class OmniRequestQueueInformation extends Message<OmniRequestQueueInformation> {
  /**
   * @generated from field: bool position = 1;
   */
  position: boolean;

  constructor(data?: PartialMessage<OmniRequestQueueInformation>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniRequestQueueInformation";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniRequestQueueInformation;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniRequestQueueInformation;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniRequestQueueInformation;

  static equals(a: OmniRequestQueueInformation | PlainMessage<OmniRequestQueueInformation> | undefined, b: OmniRequestQueueInformation | PlainMessage<OmniRequestQueueInformation> | undefined): boolean;
}

/**
 * @generated from message api.commons.OmniCannedMessage
 */
export declare class OmniCannedMessage extends Message<OmniCannedMessage> {
  /**
   * canned message id
   *
   * @generated from field: string canned_message_id = 1;
   */
  cannedMessageId: string;

  constructor(data?: PartialMessage<OmniCannedMessage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniCannedMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniCannedMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniCannedMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniCannedMessage;

  static equals(a: OmniCannedMessage | PlainMessage<OmniCannedMessage> | undefined, b: OmniCannedMessage | PlainMessage<OmniCannedMessage> | undefined): boolean;
}

/**
 * @generated from message api.commons.OmniConversationUserInformation
 */
export declare class OmniConversationUserInformation extends Message<OmniConversationUserInformation> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  constructor(data?: PartialMessage<OmniConversationUserInformation>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniConversationUserInformation";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniConversationUserInformation;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniConversationUserInformation;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniConversationUserInformation;

  static equals(a: OmniConversationUserInformation | PlainMessage<OmniConversationUserInformation> | undefined, b: OmniConversationUserInformation | PlainMessage<OmniConversationUserInformation> | undefined): boolean;
}

/**
 * represents a a list of customer information collected for a conversation
 *
 * @generated from message api.commons.CustomerCollectedData
 */
export declare class CustomerCollectedData extends Message<CustomerCollectedData> {
  /**
   * the list of data
   *
   * @generated from field: repeated api.commons.CustomerCollectedDataItem items = 1;
   */
  items: CustomerCollectedDataItem[];

  constructor(data?: PartialMessage<CustomerCollectedData>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.CustomerCollectedData";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CustomerCollectedData;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CustomerCollectedData;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CustomerCollectedData;

  static equals(a: CustomerCollectedData | PlainMessage<CustomerCollectedData> | undefined, b: CustomerCollectedData | PlainMessage<CustomerCollectedData> | undefined): boolean;
}

/**
 * represents customer information collected for a conversation
 *
 * @generated from message api.commons.CustomerCollectedDataItem
 */
export declare class CustomerCollectedDataItem extends Message<CustomerCollectedDataItem> {
  /**
   * the key of the data
   *
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * the value of the data
   *
   * @generated from field: string value = 2;
   */
  value: string;

  constructor(data?: PartialMessage<CustomerCollectedDataItem>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.CustomerCollectedDataItem";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CustomerCollectedDataItem;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CustomerCollectedDataItem;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CustomerCollectedDataItem;

  static equals(a: CustomerCollectedDataItem | PlainMessage<CustomerCollectedDataItem> | undefined, b: CustomerCollectedDataItem | PlainMessage<CustomerCollectedDataItem> | undefined): boolean;
}

/**
 * OmniConversation -
 *
 * @generated from message api.commons.OmniConversation
 */
export declare class OmniConversation extends Message<OmniConversation> {
  /**
   * primary key or internal identifier for conversation
   *
   * @generated from field: int64 conversation_sid = 1 [jstype = JS_STRING];
   */
  conversationSid: string;

  /**
   * the conversation's channel type i.e. chat|email|sms|etc.
   *
   * @generated from field: api.commons.ChannelType channel_type = 2;
   */
  channelType: ChannelType;

  /**
   * the agent's skills
   *
   * @generated from field: api.commons.OmniConversationSkills skills = 3;
   */
  skills?: OmniConversationSkills;

  /**
   * when the conversation was created
   *
   * @generated from field: google.protobuf.Timestamp date_created = 4;
   */
  dateCreated?: Timestamp;

  /**
   * time the conversation was last modified
   *
   * @generated from field: google.protobuf.Timestamp date_modified = 5;
   */
  dateModified?: Timestamp;

  /**
   * the current status of the conversation i.e. AwaitingAssignment
   *
   * @generated from field: api.commons.ConversationStatus status = 6;
   */
  status: ConversationStatus;

  /**
   * the customer's email address
   *
   * @generated from field: google.protobuf.StringValue customer_email_address = 7;
   */
  customerEmailAddress?: string;

  /**
   * the customer's phone number
   *
   * @generated from field: google.protobuf.StringValue customer_phone_number = 8;
   */
  customerPhoneNumber?: string;

  /**
   * the customer's name
   *
   * @generated from field: google.protobuf.StringValue customer_name = 9;
   */
  customerName?: string;

  /**
   * the identifier of the inbound campaign this conversation is a part of
   *
   * @generated from field: int64 campaign_sid = 10 [jstype = JS_STRING];
   */
  campaignSid: string;

  /**
   * the identifier used to reference this conversation
   *
   * @generated from field: google.protobuf.StringValue reference_id = 11;
   */
  referenceId?: string;

  /**
   * time the last message was received
   *
   * @generated from field: google.protobuf.Timestamp last_message_time = 12;
   */
  lastMessageTime?: Timestamp;

  /**
   * information collected during the conversation
   *
   * @generated from field: api.commons.ConversationCollectedData conversation_collected_data = 13;
   */
  conversationCollectedData?: ConversationCollectedData;

  /**
   * SLA timers
   *
   * @generated from field: api.commons.SLATimeouts sla_timeouts = 14;
   */
  slaTimeouts?: SLATimeouts;

  /**
   * assignments list
   *
   * @generated from field: repeated api.commons.OmniConversationAssignment conversation_assignments = 15;
   */
  conversationAssignments: OmniConversationAssignment[];

  /**
   * conversation optional metadata
   *
   * @generated from field: api.commons.OmniConversation.ConversationDetails metadata = 16;
   */
  metadata?: OmniConversation_ConversationDetails;

  /**
   * time the conversation was ended
   *
   * @generated from field: google.protobuf.Timestamp end_time = 18;
   */
  endTime?: Timestamp;

  /**
   * the identifier of the campaign module this conversation is a part of
   *
   * @generated from field: int64 campaign_module_sid = 19 [jstype = JS_STRING];
   */
  campaignModuleSid: string;

  /**
   * the time that the last group of message started. A message group is a
   * continuous set of messages from the same type of sender
   *
   * @generated from field: google.protobuf.Timestamp last_message_group_time = 20;
   */
  lastMessageGroupTime?: Timestamp;

  /**
   * the sender type of the last message group
   *
   * @generated from field: api.commons.OmniSenderType last_message_group_type = 21;
   */
  lastMessageGroupType: OmniSenderType;

  /**
   * the result type of the conversation
   *
   * @generated from field: api.commons.OmniConversationResult result = 22;
   */
  result: OmniConversationResult;

  /**
   * time the status was changed
   *
   * @generated from field: google.protobuf.Timestamp last_state_changed_time = 23;
   */
  lastStateChangedTime?: Timestamp;

  constructor(data?: PartialMessage<OmniConversation>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniConversation";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniConversation;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniConversation;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniConversation;

  static equals(a: OmniConversation | PlainMessage<OmniConversation> | undefined, b: OmniConversation | PlainMessage<OmniConversation> | undefined): boolean;
}

/**
 * metadata details related to the conversation
 *
 * @generated from message api.commons.OmniConversation.ConversationDetails
 */
export declare class OmniConversation_ConversationDetails extends Message<OmniConversation_ConversationDetails> {
  /**
   * the associated campaign's name
   *
   * @generated from field: string campaign_name = 1;
   */
  campaignName: string;

  /**
   * support_email
   *
   * @generated from field: string support_email = 2;
   */
  supportEmail: string;

  /**
   * campaign shorten url
   *
   * @generated from field: bool campaign_shorten_url = 3;
   */
  campaignShortenUrl: boolean;

  /**
   * payment portal ids
   *
   * @generated from field: repeated string payment_portal_ids = 4;
   */
  paymentPortalIds: string[];

  constructor(data?: PartialMessage<OmniConversation_ConversationDetails>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniConversation.ConversationDetails";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniConversation_ConversationDetails;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniConversation_ConversationDetails;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniConversation_ConversationDetails;

  static equals(a: OmniConversation_ConversationDetails | PlainMessage<OmniConversation_ConversationDetails> | undefined, b: OmniConversation_ConversationDetails | PlainMessage<OmniConversation_ConversationDetails> | undefined): boolean;
}

/**
 * OmniConversationAssignment -
 *
 * @generated from message api.commons.OmniConversationAssignment
 */
export declare class OmniConversationAssignment extends Message<OmniConversationAssignment> {
  /**
   * primary key or internal identifier for conversation
   *
   * @generated from field: int64 conversation_assignment_sid = 1 [jstype = JS_STRING];
   */
  conversationAssignmentSid: string;

  /**
   * conversation id
   *
   * @generated from field: int64 conversation_sid = 2 [jstype = JS_STRING];
   */
  conversationSid: string;

  /**
   * is an active
   *
   * @generated from field: bool is_active = 5;
   */
  isActive: boolean;

  /**
   * type of assignment
   *
   * @generated from field: api.commons.AgentConversationAssignmentType assignment_type = 6;
   */
  assignmentType: AgentConversationAssignmentType;

  /**
   * date assignment was created
   *
   * @generated from field: google.protobuf.Timestamp date_created = 7;
   */
  dateCreated?: Timestamp;

  /**
   * date assignment was last modified
   *
   * @generated from field: google.protobuf.Timestamp date_modified = 8;
   */
  dateModified?: Timestamp;

  /**
   * user assigned to the conversation
   *
   * @generated from field: string user_id = 9;
   */
  userId: string;

  /**
   * conversation assignment optional metadata
   *
   * @generated from field: api.commons.OmniConversationAssignment.ConversationAssignmentDetails metadata = 10;
   */
  metadata?: OmniConversationAssignment_ConversationAssignmentDetails;

  /**
   * asm conversations id
   *
   * @generated from field: int64 asm_session_sid = 11;
   */
  asmSessionSid: bigint;

  constructor(data?: PartialMessage<OmniConversationAssignment>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniConversationAssignment";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniConversationAssignment;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniConversationAssignment;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniConversationAssignment;

  static equals(a: OmniConversationAssignment | PlainMessage<OmniConversationAssignment> | undefined, b: OmniConversationAssignment | PlainMessage<OmniConversationAssignment> | undefined): boolean;
}

/**
 * metadata details related to the conversation assignment
 *
 * @generated from message api.commons.OmniConversationAssignment.ConversationAssignmentDetails
 */
export declare class OmniConversationAssignment_ConversationAssignmentDetails extends Message<OmniConversationAssignment_ConversationAssignmentDetails> {
  /**
   * the assigned user's name
   *
   * @generated from field: string user_name = 1;
   */
  userName: string;

  constructor(data?: PartialMessage<OmniConversationAssignment_ConversationAssignmentDetails>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniConversationAssignment.ConversationAssignmentDetails";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniConversationAssignment_ConversationAssignmentDetails;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniConversationAssignment_ConversationAssignmentDetails;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniConversationAssignment_ConversationAssignmentDetails;

  static equals(a: OmniConversationAssignment_ConversationAssignmentDetails | PlainMessage<OmniConversationAssignment_ConversationAssignmentDetails> | undefined, b: OmniConversationAssignment_ConversationAssignmentDetails | PlainMessage<OmniConversationAssignment_ConversationAssignmentDetails> | undefined): boolean;
}

/**
 * OmniConversationSkills -
 *
 * @generated from message api.commons.OmniConversationSkills
 */
export declare class OmniConversationSkills extends Message<OmniConversationSkills> {
  /**
   * map of agent skills
   *
   * @generated from field: map<string, bool> skills = 1;
   */
  skills: { [key: string]: boolean };

  constructor(data?: PartialMessage<OmniConversationSkills>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniConversationSkills";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniConversationSkills;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniConversationSkills;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniConversationSkills;

  static equals(a: OmniConversationSkills | PlainMessage<OmniConversationSkills> | undefined, b: OmniConversationSkills | PlainMessage<OmniConversationSkills> | undefined): boolean;
}

/**
 * WeekdayTimeRange - a group of time range entries
 *
 * @generated from message api.commons.WeekdayTimeRange
 */
export declare class WeekdayTimeRange extends Message<WeekdayTimeRange> {
  /**
   * the group of time ranges
   *
   * @generated from field: repeated api.commons.WeekdayTimeRangeEntry entries = 1;
   */
  entries: WeekdayTimeRangeEntry[];

  constructor(data?: PartialMessage<WeekdayTimeRange>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.WeekdayTimeRange";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WeekdayTimeRange;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WeekdayTimeRange;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WeekdayTimeRange;

  static equals(a: WeekdayTimeRange | PlainMessage<WeekdayTimeRange> | undefined, b: WeekdayTimeRange | PlainMessage<WeekdayTimeRange> | undefined): boolean;
}

/**
 * WeekdayTimeRangeEntry - an entry defining the same time range over a span of one or more days
 *
 * @generated from message api.commons.WeekdayTimeRangeEntry
 */
export declare class WeekdayTimeRangeEntry extends Message<WeekdayTimeRangeEntry> {
  /**
   * the day the span starts
   *
   * @generated from field: api.commons.Weekday.Enum start_day = 1;
   */
  startDay: Weekday_Enum;

  /**
   * the hour the range starts
   *
   * @generated from field: int64 start_hour = 2;
   */
  startHour: bigint;

  /**
   * the minute the range starts
   *
   * @generated from field: int64 start_minute = 3;
   */
  startMinute: bigint;

  /**
   * the day the span ends
   *
   * @generated from field: api.commons.Weekday.Enum end_day = 4;
   */
  endDay: Weekday_Enum;

  /**
   * the hour the range ends
   *
   * @generated from field: int64 end_hour = 5;
   */
  endHour: bigint;

  /**
   * the minute the range ends
   *
   * @generated from field: int64 end_minute = 6;
   */
  endMinute: bigint;

  constructor(data?: PartialMessage<WeekdayTimeRangeEntry>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.WeekdayTimeRangeEntry";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WeekdayTimeRangeEntry;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WeekdayTimeRangeEntry;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WeekdayTimeRangeEntry;

  static equals(a: WeekdayTimeRangeEntry | PlainMessage<WeekdayTimeRangeEntry> | undefined, b: WeekdayTimeRangeEntry | PlainMessage<WeekdayTimeRangeEntry> | undefined): boolean;
}

/**
 * Disposition -
 *
 * @generated from message api.commons.Disposition
 */
export declare class Disposition extends Message<Disposition> {
  /**
   * the unique identifier of the disposition
   *
   * @generated from field: int64 disposition_sid = 1 [jstype = JS_STRING];
   */
  dispositionSid: string;

  /**
   * the time the disposition was created
   *
   * @generated from field: google.protobuf.Timestamp date_created = 2;
   */
  dateCreated?: Timestamp;

  /**
   * the time the disposition was last modified
   *
   * @generated from field: google.protobuf.Timestamp date_modified = 3;
   */
  dateModified?: Timestamp;

  /**
   * the disposition string
   *
   * @generated from field: string disposition = 4;
   */
  disposition: string;

  /**
   * if the disposition was deleted
   *
   * @generated from field: bool deleted = 5;
   */
  deleted: boolean;

  constructor(data?: PartialMessage<Disposition>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.Disposition";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Disposition;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Disposition;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Disposition;

  static equals(a: Disposition | PlainMessage<Disposition> | undefined, b: Disposition | PlainMessage<Disposition> | undefined): boolean;
}

/**
 * GetQueuesDetailsRes - response for GetQueuesDetails
 *
 * @generated from message api.commons.GetQueuesDetailsRes
 */
export declare class GetQueuesDetailsRes extends Message<GetQueuesDetailsRes> {
  /**
   * the queue details
   *
   * @generated from field: repeated api.commons.GetQueuesDetailsRes.QueueDetails queue_details = 1;
   */
  queueDetails: GetQueuesDetailsRes_QueueDetails[];

  constructor(data?: PartialMessage<GetQueuesDetailsRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.GetQueuesDetailsRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetQueuesDetailsRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetQueuesDetailsRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetQueuesDetailsRes;

  static equals(a: GetQueuesDetailsRes | PlainMessage<GetQueuesDetailsRes> | undefined, b: GetQueuesDetailsRes | PlainMessage<GetQueuesDetailsRes> | undefined): boolean;
}

/**
 * hold the details about a queue
 *
 * @generated from message api.commons.GetQueuesDetailsRes.QueueDetails
 */
export declare class GetQueuesDetailsRes_QueueDetails extends Message<GetQueuesDetailsRes_QueueDetails> {
  /**
   * the channel type for the queue
   *
   * @generated from field: api.commons.ChannelType channel_type = 1;
   */
  channelType: ChannelType;

  /**
   * the size of the queue
   *
   * @generated from field: int64 queueSize = 2;
   */
  queueSize: bigint;

  constructor(data?: PartialMessage<GetQueuesDetailsRes_QueueDetails>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.GetQueuesDetailsRes.QueueDetails";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetQueuesDetailsRes_QueueDetails;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetQueuesDetailsRes_QueueDetails;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetQueuesDetailsRes_QueueDetails;

  static equals(a: GetQueuesDetailsRes_QueueDetails | PlainMessage<GetQueuesDetailsRes_QueueDetails> | undefined, b: GetQueuesDetailsRes_QueueDetails | PlainMessage<GetQueuesDetailsRes_QueueDetails> | undefined): boolean;
}

/**
 * OmniCustomUnsubscribeLink -
 *
 * @generated from message api.commons.OmniCustomUnsubscribeLink
 */
export declare class OmniCustomUnsubscribeLink extends Message<OmniCustomUnsubscribeLink> {
  /**
   * unique identifier for the custom unsubscribe link
   *
   * @generated from field: int64 custom_unsubscribe_link_sid = 1 [jstype = JS_STRING];
   */
  customUnsubscribeLinkSid: string;

  /**
   * the name of the link
   *
   * @generated from field: string link_name = 2;
   */
  linkName: string;

  /**
   * the link's url
   *
   * @generated from field: string link_url = 3;
   */
  linkUrl: string;

  /**
   * if the link has been validated
   *
   * @generated from field: bool validated = 4;
   */
  validated: boolean;

  /**
   * the time the link was created
   *
   * @generated from field: google.protobuf.Timestamp date_created = 5;
   */
  dateCreated?: Timestamp;

  /**
   * the time the link was last modified
   *
   * @generated from field: google.protobuf.Timestamp date_modified = 6;
   */
  dateModified?: Timestamp;

  /**
   * the time the link was validated
   *
   * @generated from field: google.protobuf.Timestamp date_validated = 7;
   */
  dateValidated?: Timestamp;

  /**
   * the link's description
   *
   * @generated from field: string description = 9;
   */
  description: string;

  /**
   * if the link was deleted
   *
   * @generated from field: bool deleted = 10;
   */
  deleted: boolean;

  constructor(data?: PartialMessage<OmniCustomUnsubscribeLink>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniCustomUnsubscribeLink";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniCustomUnsubscribeLink;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniCustomUnsubscribeLink;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniCustomUnsubscribeLink;

  static equals(a: OmniCustomUnsubscribeLink | PlainMessage<OmniCustomUnsubscribeLink> | undefined, b: OmniCustomUnsubscribeLink | PlainMessage<OmniCustomUnsubscribeLink> | undefined): boolean;
}

/**
 * ContactList -
 *
 * @generated from message api.commons.ContactList
 */
export declare class ContactList extends Message<ContactList> {
  /**
   * the unique identifier of the contact list
   *
   * @generated from field: int64 contact_list_sid = 1 [jstype = JS_STRING];
   */
  contactListSid: string;

  /**
   * the name string
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * the description string
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * list of field names
   *
   * @generated from field: repeated string field_names = 4;
   */
  fieldNames: string[];

  /**
   * the project sid
   *
   * @generated from field: api.commons.Int64Id project_sid = 6;
   */
  projectSid?: Int64Id;

  /**
   * the time the disposition was created
   *
   * @generated from field: google.protobuf.Timestamp date_created = 7;
   */
  dateCreated?: Timestamp;

  /**
   * the time the disposition was last modified
   *
   * @generated from field: google.protobuf.Timestamp date_modified = 8;
   */
  dateModified?: Timestamp;

  /**
   * the list of contact entries
   *
   * @generated from field: repeated api.commons.ContactEntry contact_entries = 9;
   */
  contactEntries: ContactEntry[];

  /**
   * metaData
   *
   * @generated from field: api.commons.ContactList.Metadata metadata = 10;
   */
  metadata?: ContactList_Metadata;

  constructor(data?: PartialMessage<ContactList>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.ContactList";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContactList;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContactList;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContactList;

  static equals(a: ContactList | PlainMessage<ContactList> | undefined, b: ContactList | PlainMessage<ContactList> | undefined): boolean;
}

/**
 * Metadata - contains extra details for contact lists
 *
 * @generated from message api.commons.ContactList.Metadata
 */
export declare class ContactList_Metadata extends Message<ContactList_Metadata> {
  /**
   * @generated from field: int64 entry_count = 1;
   */
  entryCount: bigint;

  constructor(data?: PartialMessage<ContactList_Metadata>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.ContactList.Metadata";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContactList_Metadata;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContactList_Metadata;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContactList_Metadata;

  static equals(a: ContactList_Metadata | PlainMessage<ContactList_Metadata> | undefined, b: ContactList_Metadata | PlainMessage<ContactList_Metadata> | undefined): boolean;
}

/**
 * ContactEntry -
 *
 * @generated from message api.commons.ContactEntry
 */
export declare class ContactEntry extends Message<ContactEntry> {
  /**
   * the unique identifier of the contact entry list
   *
   * @generated from field: int64 contact_entry_sid = 1 [jstype = JS_STRING];
   */
  contactEntrySid: string;

  /**
   * the identifier of the contact list
   *
   * @generated from field: int64 contact_list_sid = 2 [jstype = JS_STRING];
   */
  contactListSid: string;

  /**
   * the time the disposition was created
   *
   * @generated from field: google.protobuf.Timestamp date_created = 3;
   */
  dateCreated?: Timestamp;

  /**
   * the time the disposition was last modified
   *
   * @generated from field: google.protobuf.Timestamp date_modified = 4;
   */
  dateModified?: Timestamp;

  /**
   * the list of field names
   *
   * @generated from field: repeated string field_names = 5;
   */
  fieldNames: string[];

  /**
   * list of fields associated to contact entry (can contain different types of data: string|int64|etc.)
   *
   * @generated from field: repeated api.commons.OmniDataField data_fields = 6;
   */
  dataFields: OmniDataField[];

  constructor(data?: PartialMessage<ContactEntry>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.ContactEntry";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContactEntry;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContactEntry;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContactEntry;

  static equals(a: ContactEntry | PlainMessage<ContactEntry> | undefined, b: ContactEntry | PlainMessage<ContactEntry> | undefined): boolean;
}

/**
 * OmniTask -
 *
 * @generated from message api.commons.OmniTask
 */
export declare class OmniTask extends Message<OmniTask> {
  /**
   * the task identifier
   *
   * @generated from field: int64 task_sid = 1 [jstype = JS_STRING];
   */
  taskSid: string;

  /**
   * the task status
   *
   * @generated from field: api.commons.OmniTaskStatus status = 2;
   */
  status: OmniTaskStatus;

  /**
   * the time the task was created
   *
   * @generated from field: google.protobuf.Timestamp date_created = 3;
   */
  dateCreated?: Timestamp;

  /**
   * the time the task was last updated
   *
   * @generated from field: google.protobuf.Timestamp date_modified = 4;
   */
  dateModified?: Timestamp;

  /**
   * identifier of associated campaign module
   *
   * @generated from field: int64 campaign_module_sid = 5 [jstype = JS_STRING];
   */
  campaignModuleSid: string;

  /**
   * identifier of associated campaign
   *
   * @generated from field: int64 campaign_sid = 6 [jstype = JS_STRING];
   */
  campaignSid: string;

  /**
   * identifier of associated contact entry
   *
   * @generated from field: api.commons.Int64Id contact_entry_sid = 7;
   */
  contactEntrySid?: Int64Id;

  /**
   * task state
   *
   * @generated from field: api.commons.OmniTaskState state = 8;
   */
  state?: OmniTaskState;

  /**
   * list of fields associated to task (can contain different types of data: string|int64|etc.)
   *
   * @generated from field: repeated api.commons.OmniDataField data_fields = 9;
   */
  dataFields: OmniDataField[];

  /**
   * retrievable fields with field mask
   *
   * @generated from field: api.commons.OmniTask.Details details = 10;
   */
  details?: OmniTask_Details;

  /**
   * the name of the task for easy identification of a task (this is generated by mapping contact entry fields as provided by the ui)
   *
   * @generated from field: string name = 11;
   */
  name: string;

  /**
   * a message regarding the task's status, should be ignored if there is an associated OmniMessage
   *
   * @generated from field: google.protobuf.StringValue status_message = 12;
   */
  statusMessage?: string;

  /**
   * scheduled time for task
   *
   * @generated from field: google.protobuf.Timestamp scheduled_time = 13;
   */
  scheduledTime?: Timestamp;

  /**
   * holds extra details about how a task should be processed
   *
   * @generated from field: api.commons.OmniTaskConfig task_config = 15;
   */
  taskConfig?: OmniTaskConfig;

  constructor(data?: PartialMessage<OmniTask>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniTask";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniTask;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniTask;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniTask;

  static equals(a: OmniTask | PlainMessage<OmniTask> | undefined, b: OmniTask | PlainMessage<OmniTask> | undefined): boolean;
}

/**
 * @generated from message api.commons.OmniTask.Details
 */
export declare class OmniTask_Details extends Message<OmniTask_Details> {
  /**
   * name of the contact list
   *
   * @generated from field: google.protobuf.StringValue contact_list_name = 1;
   */
  contactListName?: string;

  constructor(data?: PartialMessage<OmniTask_Details>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniTask.Details";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniTask_Details;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniTask_Details;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniTask_Details;

  static equals(a: OmniTask_Details | PlainMessage<OmniTask_Details> | undefined, b: OmniTask_Details | PlainMessage<OmniTask_Details> | undefined): boolean;
}

/**
 * TaskConfig -
 *
 * @generated from message api.commons.OmniTaskConfig
 */
export declare class OmniTaskConfig extends Message<OmniTaskConfig> {
  /**
   * @generated from field: api.commons.OmniConversationSkills skills = 1;
   */
  skills?: OmniConversationSkills;

  /**
   * @generated from field: google.protobuf.Duration absolute_timeout_duration = 2;
   */
  absoluteTimeoutDuration?: Duration;

  /**
   * @generated from field: google.protobuf.Duration agent_timeout_duration = 3;
   */
  agentTimeoutDuration?: Duration;

  constructor(data?: PartialMessage<OmniTaskConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniTaskConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniTaskConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniTaskConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniTaskConfig;

  static equals(a: OmniTaskConfig | PlainMessage<OmniTaskConfig> | undefined, b: OmniTaskConfig | PlainMessage<OmniTaskConfig> | undefined): boolean;
}

/**
 * OmniTaskState -
 *
 * @generated from message api.commons.OmniTaskState
 */
export declare class OmniTaskState extends Message<OmniTaskState> {
  /**
   * list of destination addresses (should not include same destination twice)
   *
   * @generated from field: repeated api.commons.OmniTaskState.Entry destinations = 1;
   */
  destinations: OmniTaskState_Entry[];

  /**
   * list of source addresses (should not include same source twice)
   *
   * @generated from field: repeated api.commons.OmniTaskState.Entry sources = 2;
   */
  sources: OmniTaskState_Entry[];

  /**
   * the rule set used with the task. This won't be set if a rule set didn't exist
   * when the task ran.
   *
   * @generated from field: api.commons.ComplianceRuleSet rule_set = 3;
   */
  ruleSet?: ComplianceRuleSet;

  constructor(data?: PartialMessage<OmniTaskState>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniTaskState";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniTaskState;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniTaskState;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniTaskState;

  static equals(a: OmniTaskState | PlainMessage<OmniTaskState> | undefined, b: OmniTaskState | PlainMessage<OmniTaskState> | undefined): boolean;
}

/**
 * @generated from message api.commons.OmniTaskState.Entry
 */
export declare class OmniTaskState_Entry extends Message<OmniTaskState_Entry> {
  /**
   * address (email_address|phone_number|etc.)
   *
   * @generated from field: string address = 1;
   */
  address: string;

  /**
   * times address was used
   *
   * @generated from field: int64 times_used = 2;
   */
  timesUsed: bigint;

  /**
   * the time this entry was last used
   *
   * @generated from field: google.protobuf.Timestamp last_used = 3;
   */
  lastUsed?: Timestamp;

  constructor(data?: PartialMessage<OmniTaskState_Entry>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniTaskState.Entry";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniTaskState_Entry;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniTaskState_Entry;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniTaskState_Entry;

  static equals(a: OmniTaskState_Entry | PlainMessage<OmniTaskState_Entry> | undefined, b: OmniTaskState_Entry | PlainMessage<OmniTaskState_Entry> | undefined): boolean;
}

/**
 * ComplianceRuleSet -
 *
 * @generated from message api.commons.ComplianceRuleSet
 */
export declare class ComplianceRuleSet extends Message<ComplianceRuleSet> {
  /**
   * the compliance rule set identifier
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * name of the compliance rule set
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * the SHA indicating the version of the rule set
   *
   * @generated from field: string sha = 3;
   */
  sha: string;

  /**
   * list of compliance rules ran in this version of the
   * rule set.
   *
   * @generated from field: repeated api.commons.ComplianceRule rules = 4;
   */
  rules: ComplianceRule[];

  constructor(data?: PartialMessage<ComplianceRuleSet>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.ComplianceRuleSet";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ComplianceRuleSet;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ComplianceRuleSet;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ComplianceRuleSet;

  static equals(a: ComplianceRuleSet | PlainMessage<ComplianceRuleSet> | undefined, b: ComplianceRuleSet | PlainMessage<ComplianceRuleSet> | undefined): boolean;
}

/**
 * ComplianceRule -
 *
 * @generated from message api.commons.ComplianceRule
 */
export declare class ComplianceRule extends Message<ComplianceRule> {
  /**
   * text representation of the compliance rule
   *
   * @generated from field: string text = 1;
   */
  text: string;

  /**
   * whether the compliance rule passed or not
   *
   * @generated from field: bool permit = 2;
   */
  permit: boolean;

  /**
   * extra response data
   *
   * @generated from field: string plugin_response = 3;
   */
  pluginResponse: string;

  constructor(data?: PartialMessage<ComplianceRule>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.ComplianceRule";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ComplianceRule;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ComplianceRule;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ComplianceRule;

  static equals(a: ComplianceRule | PlainMessage<ComplianceRule> | undefined, b: ComplianceRule | PlainMessage<ComplianceRule> | undefined): boolean;
}

/**
 * OmniDataField -
 *
 * @generated from message api.commons.OmniDataField
 */
export declare class OmniDataField extends Message<OmniDataField> {
  /**
   * the field identifier
   *
   * @generated from field: int64 field_sid = 1 [jstype = JS_STRING];
   */
  fieldSid: string;

  /**
   * the identifier of the "parent" this field belongs to
   *
   * @generated from field: int64 parent_sid = 2 [jstype = JS_STRING];
   */
  parentSid: string;

  /**
   * the name of this field
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * the value of this field encoded as a string
   *
   * @generated from field: string value = 4;
   */
  value: string;

  /**
   * the type of value stored in this field (string|json|int|etc.)
   *
   * @generated from field: api.commons.FieldType type = 5;
   */
  type: FieldType;

  constructor(data?: PartialMessage<OmniDataField>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniDataField";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniDataField;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniDataField;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniDataField;

  static equals(a: OmniDataField | PlainMessage<OmniDataField> | undefined, b: OmniDataField | PlainMessage<OmniDataField> | undefined): boolean;
}

/**
 * ConnectedInbox -
 *
 * @generated from message api.commons.ConnectedInbox
 */
export declare class ConnectedInbox extends Message<ConnectedInbox> {
  /**
   * connected inbox identifier
   *
   * @generated from field: int64 connected_inbox_sid = 1 [jstype = JS_STRING];
   */
  connectedInboxSid: string;

  /**
   * connected email address
   *
   * @generated from field: string email_address = 2;
   */
  emailAddress: string;

  /**
   * username for accessing email
   *
   * @generated from field: string username = 3;
   */
  username: string;

  /**
   * password for accessing email
   *
   * @generated from field: string password = 4;
   */
  password: string;

  /**
   * how often the email should be checked (in minutes)
   *
   * @generated from field: int64 check_frequency_minutes = 5;
   */
  checkFrequencyMinutes: bigint;

  /**
   * server name the email is located on
   *
   * @generated from field: string server_name = 6;
   */
  serverName: string;

  /**
   * server port the email is located on
   *
   * @generated from field: int64 server_port = 7;
   */
  serverPort: bigint;

  /**
   * time the email was last scheduled to be checked
   *
   * @generated from field: google.protobuf.Timestamp last_scheduled_time = 8;
   */
  lastScheduledTime?: Timestamp;

  /**
   * time the email was last checked
   *
   * @generated from field: google.protobuf.Timestamp last_checked = 9;
   */
  lastChecked?: Timestamp;

  /**
   * how many emails should build up before getting purged
   *
   * @generated from field: int64 purge_threshold = 10;
   */
  purgeThreshold: bigint;

  /**
   * salt used in encoding
   *
   * @generated from field: string email_salt = 11;
   */
  emailSalt: string;

  /**
   * number of consecutive failures allowed before entering an ERROR_STANDBY state
   *
   * @generated from field: int32 num_consecutive_failures = 12;
   */
  numConsecutiveFailures: number;

  /**
   * the last error that occurred
   *
   * @generated from field: google.protobuf.StringValue last_error = 13;
   */
  lastError?: string;

  /**
   * time the email entered ERROR_STANDBY
   *
   * @generated from field: google.protobuf.Timestamp standby_error_time = 14;
   */
  standbyErrorTime?: Timestamp;

  /**
   * time the inbox was last updated
   *
   * @generated from field: google.protobuf.Timestamp last_updated = 15;
   */
  lastUpdated?: Timestamp;

  /**
   * maximum message size
   *
   * @generated from field: int32 max_message_size = 16;
   */
  maxMessageSize: number;

  /**
   * maximum number of messages
   *
   * @generated from field: int32 max_messages = 17;
   */
  maxMessages: number;

  /**
   * google xoauth2 refresh token (if using google xoauth2)
   *
   * @generated from field: google.protobuf.StringValue google_xoauth2_refresh_token = 18;
   */
  googleXoauth2RefreshToken?: string;

  /**
   * google xoauth2 access token (if using google xoauth2)
   *
   * @generated from field: google.protobuf.StringValue google_xoauth2_access_token = 19;
   */
  googleXoauth2AccessToken?: string;

  /**
   * time the google xoauth2 access token expires (if using google xoauth2)
   *
   * @generated from field: google.protobuf.Timestamp google_xoauth2_access_token_expiration = 20;
   */
  googleXoauth2AccessTokenExpiration?: Timestamp;

  /**
   * type of authentication that should be used
   *
   * @generated from field: api.commons.ConnectedInboxAuthenticationType authentication_type = 21;
   */
  authenticationType: ConnectedInboxAuthenticationType;

  constructor(data?: PartialMessage<ConnectedInbox>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.ConnectedInbox";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConnectedInbox;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConnectedInbox;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConnectedInbox;

  static equals(a: ConnectedInbox | PlainMessage<ConnectedInbox> | undefined, b: ConnectedInbox | PlainMessage<ConnectedInbox> | undefined): boolean;
}

/**
 * VerifiedEmail -
 *
 * @generated from message api.commons.VerifiedEmail
 */
export declare class VerifiedEmail extends Message<VerifiedEmail> {
  /**
   * verified email identifier
   *
   * @generated from field: int64 verified_email_sid = 1 [jstype = JS_STRING];
   */
  verifiedEmailSid: string;

  /**
   * connected email address
   *
   * @generated from field: string email_address = 3;
   */
  emailAddress: string;

  /**
   * if the email has been verified
   *
   * @generated from field: bool verified = 4;
   */
  verified: boolean;

  /**
   * when the verified email was created
   *
   * @generated from field: google.protobuf.Timestamp created_on = 5;
   */
  createdOn?: Timestamp;

  /**
   * when the email was verified
   *
   * @generated from field: google.protobuf.Timestamp verified_on = 6;
   */
  verifiedOn?: Timestamp;

  /**
   * if the email was deleted
   *
   * @generated from field: bool deleted = 7;
   */
  deleted: boolean;

  /**
   * description of the email
   *
   * @generated from field: google.protobuf.StringValue description = 8;
   */
  description?: string;

  constructor(data?: PartialMessage<VerifiedEmail>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.VerifiedEmail";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifiedEmail;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifiedEmail;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifiedEmail;

  static equals(a: VerifiedEmail | PlainMessage<VerifiedEmail> | undefined, b: VerifiedEmail | PlainMessage<VerifiedEmail> | undefined): boolean;
}

/**
 * Signature - a preset ending to outgoing messages
 *
 * @generated from message api.commons.Signature
 */
export declare class Signature extends Message<Signature> {
  /**
   * unique identifier for the signature
   *
   * @generated from field: int64 signature_sid = 1 [jstype = JS_STRING];
   */
  signatureSid: string;

  /**
   * the signature text
   *
   * @generated from field: string signature = 2;
   */
  signature: string;

  /**
   * when the signature was created
   *
   * @generated from field: google.protobuf.Timestamp date_created = 3;
   */
  dateCreated?: Timestamp;

  /**
   * when the signature was last updated
   *
   * @generated from field: google.protobuf.Timestamp date_modified = 4;
   */
  dateModified?: Timestamp;

  /**
   * when the signature was deleted (if ever)
   *
   * @generated from field: google.protobuf.Timestamp deleted_on = 5;
   */
  deletedOn?: Timestamp;

  /**
   * name for the signature
   *
   * @generated from field: string name = 6;
   */
  name: string;

  /**
   * description for the signature
   *
   * @generated from field: string description = 7;
   */
  description: string;

  constructor(data?: PartialMessage<Signature>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.Signature";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Signature;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Signature;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Signature;

  static equals(a: Signature | PlainMessage<Signature> | undefined, b: Signature | PlainMessage<Signature> | undefined): boolean;
}

/**
 * OmniProjectComplianceConfig - compliance config for omni projects
 *
 * @generated from message api.commons.OmniProjectComplianceConfig
 */
export declare class OmniProjectComplianceConfig extends Message<OmniProjectComplianceConfig> {
  /**
   * compliance configuration for an email
   *
   * @generated from field: api.commons.OmniComplianceConfig email = 1;
   */
  email?: OmniComplianceConfig;

  /**
   * compliance configuration for sms
   *
   * @generated from field: api.commons.OmniComplianceConfig sms = 2;
   */
  sms?: OmniComplianceConfig;

  constructor(data?: PartialMessage<OmniProjectComplianceConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniProjectComplianceConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniProjectComplianceConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniProjectComplianceConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniProjectComplianceConfig;

  static equals(a: OmniProjectComplianceConfig | PlainMessage<OmniProjectComplianceConfig> | undefined, b: OmniProjectComplianceConfig | PlainMessage<OmniProjectComplianceConfig> | undefined): boolean;
}

/**
 * OmniComplianceAction - configuration action for omni compliance
 *
 * @generated from message api.commons.OmniComplianceAction
 */
export declare class OmniComplianceAction extends Message<OmniComplianceAction> {
  /**
   * a list of config keywords
   *
   * @generated from field: repeated string keywords = 1;
   */
  keywords: string[];

  /**
   * confirmation for the config
   *
   * @generated from field: string confirmation_message = 2;
   */
  confirmationMessage: string;

  constructor(data?: PartialMessage<OmniComplianceAction>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniComplianceAction";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniComplianceAction;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniComplianceAction;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniComplianceAction;

  static equals(a: OmniComplianceAction | PlainMessage<OmniComplianceAction> | undefined, b: OmniComplianceAction | PlainMessage<OmniComplianceAction> | undefined): boolean;
}

/**
 * OmniComplianceConfig -
 *
 * @generated from message api.commons.OmniComplianceConfig
 */
export declare class OmniComplianceConfig extends Message<OmniComplianceConfig> {
  /**
   * opting in to different compliance settings
   *
   * @generated from field: api.commons.OmniComplianceAction opt_in = 1;
   */
  optIn?: OmniComplianceAction;

  /**
   * opting out of different compliance settings
   *
   * @generated from field: api.commons.OmniComplianceAction opt_out = 2;
   */
  optOut?: OmniComplianceAction;

  /**
   * help regarding compliance settings
   *
   * @generated from field: api.commons.OmniComplianceAction help = 3;
   */
  help?: OmniComplianceAction;

  /**
   * information regarding compliance settings
   *
   * @generated from field: api.commons.OmniComplianceAction information = 4;
   */
  information?: OmniComplianceAction;

  /**
   * scrub list identifier
   *
   * @generated from field: string scrub_list_id = 5;
   */
  scrubListId: string;

  /**
   * rule set identifier
   *
   * @generated from field: google.protobuf.StringValue rule_set_id = 6;
   */
  ruleSetId?: string;

  constructor(data?: PartialMessage<OmniComplianceConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.OmniComplianceConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OmniComplianceConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OmniComplianceConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OmniComplianceConfig;

  static equals(a: OmniComplianceConfig | PlainMessage<OmniComplianceConfig> | undefined, b: OmniComplianceConfig | PlainMessage<OmniComplianceConfig> | undefined): boolean;
}


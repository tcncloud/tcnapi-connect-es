// @generated by protoc-gen-es v1.8.0 with parameter "target=js+dts"
// @generated from file api/commons/types.proto (package api.commons, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Int32Value, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from message api.commons.Empty
 */
export const Empty = /*@__PURE__*/ proto3.makeMessageType(
  "api.commons.Empty",
  [],
);

/**
 * CronExpression is a message for the cron expression of a report.
 *
 * @generated from message api.commons.CronExpression
 */
export const CronExpression = /*@__PURE__*/ proto3.makeMessageType(
  "api.commons.CronExpression",
  () => [
    { no: 1, name: "repeat_minutes", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "hours_of_day", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "days_of_month", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "months_of_year", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "day_of_week", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * nullable Int32
 *
 * @generated from message api.commons.Int32Nullable
 */
export const Int32Nullable = /*@__PURE__*/ proto3.makeMessageType(
  "api.commons.Int32Nullable",
  () => [
    { no: 1, name: "is_null", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "value", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * nullable Int64
 *
 * @generated from message api.commons.Int64Nullable
 */
export const Int64Nullable = /*@__PURE__*/ proto3.makeMessageType(
  "api.commons.Int64Nullable",
  () => [
    { no: 1, name: "is_null", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "value", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message api.commons.SomeSidAndDateCompare
 */
export const SomeSidAndDateCompare = /*@__PURE__*/ proto3.makeMessageType(
  "api.commons.SomeSidAndDateCompare",
  () => [
    { no: 1, name: "some_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "date_greater", kind: "message", T: Timestamp },
    { no: 3, name: "date_less", kind: "message", T: Timestamp },
  ],
);

/**
 * if you want to use repeated fields in query parameters use these
 * these messages have type mappings in go/conversion/arrays.go
 *
 * @generated from message api.commons.Int64ArraySql
 */
export const Int64ArraySql = /*@__PURE__*/ proto3.makeMessageType(
  "api.commons.Int64ArraySql",
  () => [
    { no: 1, name: "values", kind: "scalar", T: 3 /* ScalarType.INT64 */, repeated: true },
  ],
);

/**
 * @generated from message api.commons.Int32ArraySql
 */
export const Int32ArraySql = /*@__PURE__*/ proto3.makeMessageType(
  "api.commons.Int32ArraySql",
  () => [
    { no: 1, name: "values", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ],
);

/**
 * @generated from message api.commons.StringArraySql
 */
export const StringArraySql = /*@__PURE__*/ proto3.makeMessageType(
  "api.commons.StringArraySql",
  () => [
    { no: 2, name: "values", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * @generated from message api.commons.BoolArraySql
 */
export const BoolArraySql = /*@__PURE__*/ proto3.makeMessageType(
  "api.commons.BoolArraySql",
  () => [
    { no: 1, name: "values", kind: "scalar", T: 8 /* ScalarType.BOOL */, repeated: true },
  ],
);

/**
 * @generated from message api.commons.Int32ValueArraySql
 */
export const Int32ValueArraySql = /*@__PURE__*/ proto3.makeMessageType(
  "api.commons.Int32ValueArraySql",
  () => [
    { no: 1, name: "values", kind: "message", T: Int32Value, repeated: true },
  ],
);

/**
 * wraps int64 values so they can be null, but also adds the JS_STRING
 * tag so that data isn't lost when using snowflake ids
 *
 * @generated from message api.commons.Int64Id
 */
export const Int64Id = /*@__PURE__*/ proto3.makeMessageType(
  "api.commons.Int64Id",
  () => [
    { no: 1, name: "value", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
);


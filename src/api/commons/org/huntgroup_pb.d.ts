// @generated by protoc-gen-es v1.6.0 with parameter "target=js+dts"
// @generated from file api/commons/org/huntgroup.proto (package api.commons.org, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { AgentCallHistoryScope, AgentRouting, AlphanumericKeypadDelimiter, CommunicationExpiration, DefaultCallbackRouting, DefaultManualDialCallerId, DefaultTransferCallerId, HuntGroupOrgDefaultCustom, InitialAgentStatus, ManualDialDataDipHandling, ManualDialDataDipIntegration, ManualDialDataDipScope, ManualDialTimeZoneValidation, PhonePostalDisplayOptions, RequeueTransferQueueConfig, TransferRecordingStatus } from "../org_pb.js";
import type { Country } from "../country_pb.js";

/**
 * Tempate category differentiates between template types
 *
 * @generated from enum api.commons.org.TemplateCategory
 */
export declare enum TemplateCategory {
  /**
   * 0 explicitly means unspecified or invalid.
   *
   * @generated from enum value: TEMPLATE_CATEGORY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * 1 means a hunt group client info display template
   *
   * @generated from enum value: TEMPLATE_CATEGORY_HUNT_GROUP = 1;
   */
  HUNT_GROUP = 1,

  /**
   * 2 means a campaign client info display template
   *
   * @generated from enum value: TEMPLATE_CATEGORY_CAMPAIGN = 2;
   */
  CAMPAIGN = 2,
}

/**
 * ParameterSourceType defines the type of parameter source.
 *
 * @generated from enum api.commons.org.ParameterSourceType
 */
export declare enum ParameterSourceType {
  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_STATIC_TEXT = 1;
   */
  STATIC_TEXT = 1,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_CFD_ID = 100;
   */
  CFD_ID = 100,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_AGENT_ID = 200;
   */
  AGENT_ID = 200,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_AGENT_FIRST_NAME = 201;
   */
  AGENT_FIRST_NAME = 201,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_AGENT_LAST_NAME = 202;
   */
  AGENT_LAST_NAME = 202,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_AGENT_USERNAME = 203;
   */
  AGENT_USERNAME = 203,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PARTNER_AGENT_ID = 204;
   */
  PARTNER_AGENT_ID = 204,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_HG_ID = 205;
   */
  HG_ID = 205,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_HG_NAME = 206;
   */
  HG_NAME = 206,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_HG_TYPE = 207;
   */
  HG_TYPE = 207,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_CONSUMER_PHONE = 208;
   */
  CONSUMER_PHONE = 208,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_CALLER_ID = 209;
   */
  CALLER_ID = 209,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_CALL_ID = 210;
   */
  CALL_ID = 210,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_GROUP_ID = 211;
   */
  GROUP_ID = 211,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_AGENT_SESSION_ID = 212;
   */
  AGENT_SESSION_ID = 212,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_DATA_DIP = 300;
   */
  DATA_DIP = 300,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_IVR_DATA = 400;
   */
  IVR_DATA = 400,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_DATA_COLLECT = 500;
   */
  DATA_COLLECT = 500,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_AREA_CODE = 600;
   */
  PHONE_METADATA_AREA_CODE = 600,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_CARRIER = 601;
   */
  PHONE_METADATA_CARRIER = 601,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_CENTRAL_OFFICE_CODE = 602;
   */
  PHONE_METADATA_CENTRAL_OFFICE_CODE = 602,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_CITY = 603;
   */
  PHONE_METADATA_CITY = 603,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_COUNTRY_CODE = 604;
   */
  PHONE_METADATA_COUNTRY_CODE = 604,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_SUBSCRIBER_NUMBER = 605;
   */
  PHONE_METADATA_SUBSCRIBER_NUMBER = 605,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_ISO_CODE = 606;
   */
  PHONE_METADATA_ISO_CODE = 606,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_INTERNATIONAL_PREFIX = 607;
   */
  PHONE_METADATA_INTERNATIONAL_PREFIX = 607,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_LANGUAGE = 608;
   */
  PHONE_METADATA_LANGUAGE = 608,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_LATITUDE = 609;
   */
  PHONE_METADATA_LATITUDE = 609,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_LONGITUDE = 610;
   */
  PHONE_METADATA_LONGITUDE = 610,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_MAXIMUM_BLOCK_NUMBER = 611;
   */
  PHONE_METADATA_MAXIMUM_BLOCK_NUMBER = 611,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_MINIMUM_BLOCK_NUMBER = 612;
   */
  PHONE_METADATA_MINIMUM_BLOCK_NUMBER = 612,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_NATIONAL_DESTINATION = 613;
   */
  PHONE_METADATA_NATIONAL_DESTINATION = 613,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_NATIONAL_PREFIX = 614;
   */
  PHONE_METADATA_NATIONAL_PREFIX = 614,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_NUMBER_BLOCK_ID = 615;
   */
  PHONE_METADATA_NUMBER_BLOCK_ID = 615,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_NUMBER_TYPE = 616;
   */
  PHONE_METADATA_NUMBER_TYPE = 616,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_USES_NDC = 617;
   */
  PHONE_METADATA_USES_NDC = 617,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_DAYLIGHT_SAVINGS = 618;
   */
  PHONE_METADATA_DAYLIGHT_SAVINGS = 618,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_PREFIX = 619;
   */
  PHONE_METADATA_PREFIX = 619,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_REGION_CODE = 620;
   */
  PHONE_METADATA_REGION_CODE = 620,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_REGION_NAME = 621;
   */
  PHONE_METADATA_REGION_NAME = 621,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_SPECIAL_SERVICE_CODE_1 = 622;
   */
  PHONE_METADATA_SPECIAL_SERVICE_CODE_1 = 622,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_SPECIAL_SERVICE_CODE_2 = 623;
   */
  PHONE_METADATA_SPECIAL_SERVICE_CODE_2 = 623,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_SPECIAL_SERVICE_CODE_3 = 624;
   */
  PHONE_METADATA_SPECIAL_SERVICE_CODE_3 = 624,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_SPECIAL_SERVICE_CODE_4 = 625;
   */
  PHONE_METADATA_SPECIAL_SERVICE_CODE_4 = 625,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_TIME_ZONE = 626;
   */
  PHONE_METADATA_TIME_ZONE = 626,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_PHONE_METADATA_UTC_OFFSET = 627;
   */
  PHONE_METADATA_UTC_OFFSET = 627,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_ZIP_METADATA_ADMIN_CODE_1 = 700;
   */
  ZIP_METADATA_ADMIN_CODE_1 = 700,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_ZIP_METADATA_ADMIN_CODE_2 = 701;
   */
  ZIP_METADATA_ADMIN_CODE_2 = 701,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_ZIP_METADATA_ADMIN_CODE_3 = 702;
   */
  ZIP_METADATA_ADMIN_CODE_3 = 702,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_ZIP_METADATA_ADMIN_NAME_1 = 703;
   */
  ZIP_METADATA_ADMIN_NAME_1 = 703,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_ZIP_METADATA_ADMIN_NAME_2 = 704;
   */
  ZIP_METADATA_ADMIN_NAME_2 = 704,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_ZIP_METADATA_ADMIN_NAME_3 = 705;
   */
  ZIP_METADATA_ADMIN_NAME_3 = 705,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_ZIP_METADATA_AREA_CODE = 706;
   */
  ZIP_METADATA_AREA_CODE = 706,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_ZIP_METADATA_CITY_NAME = 707;
   */
  ZIP_METADATA_CITY_NAME = 707,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_ZIP_METADATA_CITY_TYPE = 708;
   */
  ZIP_METADATA_CITY_TYPE = 708,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_ZIP_METADATA_COUNTRY_CODE = 709;
   */
  ZIP_METADATA_COUNTRY_CODE = 709,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_ZIP_METADATA_ISO_CODE = 710;
   */
  ZIP_METADATA_ISO_CODE = 710,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_ZIP_METADATA_COUNTRY_NAME = 711;
   */
  ZIP_METADATA_COUNTRY_NAME = 711,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_ZIP_METADATA_COUNTRY_FPS_CODE = 712;
   */
  ZIP_METADATA_COUNTRY_FPS_CODE = 712,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_ZIP_METADATA_LATITUDE = 713;
   */
  ZIP_METADATA_LATITUDE = 713,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_ZIP_METADATA_POSITION_ACCURACY = 714;
   */
  ZIP_METADATA_POSITION_ACCURACY = 714,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_ZIP_METADATA_LONGITUDE = 715;
   */
  ZIP_METADATA_LONGITUDE = 715,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_ZIP_METADATA_METROPOLITAN_AREA = 716;
   */
  ZIP_METADATA_METROPOLITAN_AREA = 716,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_ZIP_METADATA_DAYLIGHT_SAVINGS = 717;
   */
  ZIP_METADATA_DAYLIGHT_SAVINGS = 717,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_ZIP_METADATA_PLACE_NAME = 718;
   */
  ZIP_METADATA_PLACE_NAME = 718,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_ZIP_METADATA_POSTAL_CODE = 719;
   */
  ZIP_METADATA_POSTAL_CODE = 719,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_ZIP_METADATA_POSTAL_CODE_KEY = 720;
   */
  ZIP_METADATA_POSTAL_CODE_KEY = 720,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_ZIP_METADATA_POSTAL_TYPE = 721;
   */
  ZIP_METADATA_POSTAL_TYPE = 721,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_ZIP_METADATA_PROVICE_ABBREVIATION = 722;
   */
  ZIP_METADATA_PROVICE_ABBREVIATION = 722,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_ZIP_METADATA_PROVINCE_NAME = 723;
   */
  ZIP_METADATA_PROVINCE_NAME = 723,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_ZIP_METADATA_STATE_FPS_CODE = 724;
   */
  ZIP_METADATA_STATE_FPS_CODE = 724,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_ZIP_METADATA_TIME_ZONE = 725;
   */
  ZIP_METADATA_TIME_ZONE = 725,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_ZIP_METADATA_UTC_OFFSET = 726;
   */
  ZIP_METADATA_UTC_OFFSET = 726,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_CUSTOM_ACCOUNT_DATA = 800;
   */
  CUSTOM_ACCOUNT_DATA = 800,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_SIP_HEADER_DATA = 900;
   */
  SIP_HEADER_DATA = 900,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_INTEGRATION_DATA = 1000;
   */
  INTEGRATION_DATA = 1000,

  /**
   * @generated from enum value: PARAMETER_SOURCE_TYPE_JOURNEY_DATA = 1100;
   */
  JOURNEY_DATA = 1100,
}

/**
 * HuntGroupSettings contains all of the hunt group settings.
 *
 * @generated from message api.commons.org.HuntGroupSettings
 */
export declare class HuntGroupSettings extends Message<HuntGroupSettings> {
  /**
   * General Hunt group settings.
   *
   * @generated from field: api.commons.org.GeneralSettings general_settings = 1;
   */
  generalSettings?: GeneralSettings;

  /**
   * Communication compliance hunt group settings.
   *
   * @generated from field: api.commons.org.CommunicationSettings communication_settings = 2;
   */
  communicationSettings?: CommunicationSettings;

  /**
   * Schedule callback Hunt group settings.
   *
   * @generated from field: api.commons.org.CallbackSettings callback_settings = 3;
   */
  callbackSettings?: CallbackSettings;

  /**
   * Preview dial Hunt group settings.
   *
   * @generated from field: api.commons.org.PreviewDialSettings preview_dial_settings = 4;
   */
  previewDialSettings?: PreviewDialSettings;

  /**
   * Manual Dial hunt group settings.
   *
   * @generated from field: api.commons.org.ManualDialSettings manual_dial_settings = 5;
   */
  manualDialSettings?: ManualDialSettings;

  /**
   * Transfer Call hunt group settings.
   *
   * @generated from field: api.commons.org.TransferCallSettings transfer_call_settings = 6;
   */
  transferCallSettings?: TransferCallSettings;

  /**
   * Number History hunt group settings.
   *
   * @generated from field: api.commons.org.NumberHistorySettings number_history_settings = 7;
   */
  numberHistorySettings?: NumberHistorySettings;

  constructor(data?: PartialMessage<HuntGroupSettings>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.HuntGroupSettings";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HuntGroupSettings;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HuntGroupSettings;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HuntGroupSettings;

  static equals(a: HuntGroupSettings | PlainMessage<HuntGroupSettings> | undefined, b: HuntGroupSettings | PlainMessage<HuntGroupSettings> | undefined): boolean;
}

/**
 * GeneralSettings is an entity containing a section of the hunt group settings
 * for the hunt group manager.
 *
 * MAIN SETTINGS
 *
 * @generated from message api.commons.org.GeneralSettings
 */
export declare class GeneralSettings extends Message<GeneralSettings> {
  /**
   * Displays browser window tab information. `UseAdvancedGatewayTitle`
   *
   * @generated from field: bool enable_agent_gateway_title_bar = 1;
   */
  enableAgentGatewayTitleBar: boolean;

  /**
   * Default agent phone number dialing into IVR system. `AgentDialInNumber`
   *
   * @generated from field: string default_agent_dial_in = 2;
   */
  defaultAgentDialIn: string;

  /**
   * Requires secondary confirmation to end call. `DisconnectConvirmation`
   *
   * @generated from field: bool require_end_call_confirmation = 3;
   */
  requireEndCallConfirmation: boolean;

  /**
   * Enables authorization and whitelist by IP. `UseIpBasedAuth`
   *
   * @generated from field: bool enable_authorization_by_ip = 4;
   */
  enableAuthorizationByIp: boolean;

  /**
   * Whitelisted IPs. `AllowedIps`
   *
   * @generated from field: repeated string authorized_ip_addresses = 5;
   */
  authorizedIpAddresses: string[];

  /**
   * Initial agent status. `Initial Agent Status`
   *
   * @generated from field: api.commons.InitialAgentStatus initial_agent_status = 100;
   */
  initialAgentStatus: InitialAgentStatus;

  /**
   * Enable agents to pause calls. `Allow Agent Pause`
   *
   * @generated from field: bool enable_agent_pause = 101;
   */
  enableAgentPause: boolean;

  /**
   * Pause option sets per hunt group. `Use Agent Pause Codes`
   *
   * @generated from field: api.commons.org.GeneralSettings.PauseOptionSet agent_pause_option_set = 102;
   */
  agentPauseOptionSet?: GeneralSettings_PauseOptionSet;

  /**
   * Default agent pause code. `Default Agent Pause Code`
   *
   * @generated from field: string default_agent_pause_option = 103;
   */
  defaultAgentPauseOption: string;

  /**
   * Enable agents to switch between pause options. `Agent Pause Reset`
   *
   * @generated from field: bool enable_pause_option_reset = 104;
   */
  enablePauseOptionReset: boolean;

  /**
   * Display recording indicator. `Display Recording Indicator`
   *
   * @generated from field: bool display_recording_indicator = 200;
   */
  displayRecordingIndicator: boolean;

  /**
   * Enable pausing of agent call recording. `Enable Recording Pause`
   *
   * @generated from field: bool enable_call_recording_pause = 201;
   */
  enableCallRecordingPause: boolean;

  /**
   * Require call recording pause confirmation. `Recording Pause Confirmation`
   *
   * @generated from field: bool call_recording_pause_confirmation = 202;
   */
  callRecordingPauseConfirmation: boolean;

  /**
   * Call recording delay in seconds. `Recording Delay`
   *
   * @generated from field: int64 call_recording_delay = 203;
   */
  callRecordingDelay: bigint;

  /**
   * Automatically pauses recording when starting hold.
   * `Pause Recording on Hold`
   *
   * @generated from field: bool enable_pause_recording_on_hold = 204;
   */
  enablePauseRecordingOnHold: boolean;

  /**
   * Enable envision agent screen recording. `Use Agent Screen Recording`
   *
   * @generated from field: bool enable_envision_screen_recording = 300;
   */
  enableEnvisionScreenRecording: boolean;

  /**
   * Enable agent simple hold. `Allow Agent Hold`
   *
   * @generated from field: bool enable_agent_simple_hold = 400;
   */
  enableAgentSimpleHold: boolean;

  /**
   * Enable agent multi-accept hold. `Allow Agent Hold`
   *
   * @generated from field: bool enable_agent_multi_accept = 401;
   */
  enableAgentMultiAccept: boolean;

  /**
   * Automatically pause agent after multi-accept hold. `AutoPauseOnMultiHold`
   *
   * @generated from field: bool pause_agent_after_multi_accept = 402;
   */
  pauseAgentAfterMultiAccept: boolean;

  /**
   * Agent hold queue monitoring.
   *
   * @generated from field: api.commons.org.GeneralSettings.HoldQueueMonitoring hold_queue_monitoring = 403;
   */
  holdQueueMonitoring?: GeneralSettings_HoldQueueMonitoring;

  /**
   * Whether to display the machine-deliver button on the UI.
   *
   * @generated from field: bool display_machine_deliver = 500;
   */
  displayMachineDeliver: boolean;

  /**
   * Whether to display the call's linkback Hunt Group in the data panel.
   *
   * @generated from field: bool display_linkback_hunt_group = 501;
   */
  displayLinkbackHuntGroup: boolean;

  /**
   * Whether to display SIP header data in the data panel.
   *
   * @generated from field: bool display_sip_header_data = 502;
   */
  displaySipHeaderData: boolean;

  /**
   * Whether to display the IVR navigation (Keys Pressed) in the data panel.
   *
   * @generated from field: bool display_ivr_navigation_keys = 503;
   */
  displayIvrNavigationKeys: boolean;

  /**
   * Whether to display Data Collect data in the data panel.
   *
   * @generated from field: bool display_data_collect_data = 504;
   */
  displayDataCollectData: boolean;

  /**
   * Whether to display the Data Dip'ed data in the data panel.
   *
   * @generated from field: api.commons.org.GeneralSettings.DataDipDataDisplay display_data_dipped_data = 505;
   */
  displayDataDippedData?: GeneralSettings_DataDipDataDisplay;

  /**
   * Payment Integration data display
   *
   * @generated from field: api.commons.org.GeneralSettings.IntegrationDataDisplay integration_data_display = 506;
   */
  integrationDataDisplay?: GeneralSettings_IntegrationDataDisplay;

  /**
   * Whether to display the Journey Integration returned data in the data panel.
   *
   * @generated from field: api.commons.org.GeneralSettings.JourneyDataDisplay journey_data_display = 507;
   */
  journeyDataDisplay?: GeneralSettings_JourneyDataDisplay;

  /**
   * Whether and what call history statistics to display in the UI.
   *
   * @generated from field: api.commons.AgentCallHistoryScope agent_call_history_scope = 508;
   */
  agentCallHistoryScope: AgentCallHistoryScope;

  /**
   * Agent Login Gui Statistics display and template
   *
   * @generated from field: api.commons.org.GeneralSettings.AgentLoginGuiStatisticsDisplay agent_login_gui_statistics_display = 509;
   */
  agentLoginGuiStatisticsDisplay?: GeneralSettings_AgentLoginGuiStatisticsDisplay;

  /**
   * Phone / Postal Metadata display
   *
   * @generated from field: api.commons.org.GeneralSettings.PhoneZipMetadataDisplay phone_zip_metadata_display = 510;
   */
  phoneZipMetadataDisplay?: GeneralSettings_PhoneZipMetadataDisplay;

  /**
   * Whether to display the call and agent skills to the agent ` Display Skills`
   *
   * @generated from field: bool display_skills = 511;
   */
  displaySkills: boolean;

  /**
   * Whether to display Web Links to the agent ` Display Web Links`
   *
   * @generated from field: bool display_web_links = 512;
   */
  displayWebLinks: boolean;

  /**
   * Enable agent to reassign hunt groups. `Agent Skills Reassignment`
   *
   * @generated from field: bool enable_agent_hunt_group_reassignment = 600;
   */
  enableAgentHuntGroupReassignment: boolean;

  /**
   * Limited available hunt groups. `Hunt Group Reassignment Disallowed`
   *
   * @generated from field: api.commons.org.GeneralSettings.DisallowedHuntGroups disallowed_hunt_groups = 601;
   */
  disallowedHuntGroups?: GeneralSettings_DisallowedHuntGroups;

  /**
   * Enable manual approval of calls. `Allow Manual Approval`
   *
   * @generated from field: bool enable_manual_approval_of_calls = 700;
   */
  enableManualApprovalOfCalls: boolean;

  /**
   * Require manual approval number confirmation. `MAC Number Confirmation`
   *
   * @generated from field: bool require_manual_approval_number = 701;
   */
  requireManualApprovalNumber: boolean;

  /**
   * Enable manual approval of SMS. `Allow Manual Approval For Messaging`
   *
   * @generated from field: bool enable_manual_approval_of_sms = 702;
   */
  enableManualApprovalOfSms: boolean;

  /**
   * Require manual approval number confirmation for SMS.
   * `MAM Number Confirmation`
   *
   * @generated from field: bool require_manual_approval_number_sms = 703;
   */
  requireManualApprovalNumberSms: boolean;

  /**
   * Control whether the reject option is available to the approvers.
   *
   * @generated from field: bool disable_reject_option_for_approvers = 704;
   */
  disableRejectOptionForApprovers: boolean;

  /**
   * Alphanumeric keypad properties. `Alphanumeric Keypad`
   *
   * @generated from field: api.commons.org.GeneralSettings.AlphanumericKeypad alphanumeric_keypad = 800;
   */
  alphanumericKeypad?: GeneralSettings_AlphanumericKeypad;

  /**
   * Enable queued call desktop notifications. `Allow Queued Call Notifications`
   *
   * @generated from field: bool enable_call_desktop_notifications = 801;
   */
  enableCallDesktopNotifications: boolean;

  /**
   * Inbound natural language compliance metadata.
   * `Optional Inbound Compliance Metadata`
   * `Required Inbound Compliance Metadata`
   *
   * @generated from field: api.commons.org.GeneralSettings.InboundComplianceMetadata inbound_compliance_metadata = 802;
   */
  inboundComplianceMetadata?: GeneralSettings_InboundComplianceMetadata;

  /**
   * Whether to allow the agent to intercom with other agents.
   * `AllowAgentIntercom`
   *
   * @generated from field: bool enable_agent_intercom = 803;
   */
  enableAgentIntercom: boolean;

  /**
   * Enables the delivery of incoming calls to the agent
   * depending on the dial status prior to them clicking "Dial".
   *
   * @generated from field: api.commons.org.GeneralSettings.PrepareStateCallDelivery prepare_state_call_delivery = 804;
   */
  prepareStateCallDelivery?: GeneralSettings_PrepareStateCallDelivery;

  constructor(data?: PartialMessage<GeneralSettings>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.GeneralSettings";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GeneralSettings;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GeneralSettings;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GeneralSettings;

  static equals(a: GeneralSettings | PlainMessage<GeneralSettings> | undefined, b: GeneralSettings | PlainMessage<GeneralSettings> | undefined): boolean;
}

/**
 * Pause option set properties.
 *
 * @generated from message api.commons.org.GeneralSettings.PauseOptionSet
 */
export declare class GeneralSettings_PauseOptionSet extends Message<GeneralSettings_PauseOptionSet> {
  /**
   * Whether pause option sets will be enabled.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * The sid of the agent pause code set.
   * xml_client_property_sid where property_key = 'Agent Pause Codes'
   *
   * @generated from field: int64 set_sid = 2;
   */
  setSid: bigint;

  constructor(data?: PartialMessage<GeneralSettings_PauseOptionSet>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.GeneralSettings.PauseOptionSet";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GeneralSettings_PauseOptionSet;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GeneralSettings_PauseOptionSet;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GeneralSettings_PauseOptionSet;

  static equals(a: GeneralSettings_PauseOptionSet | PlainMessage<GeneralSettings_PauseOptionSet> | undefined, b: GeneralSettings_PauseOptionSet | PlainMessage<GeneralSettings_PauseOptionSet> | undefined): boolean;
}

/**
 * Hold queue monitoring options.
 *
 * @generated from message api.commons.org.GeneralSettings.HoldQueueMonitoring
 */
export declare class GeneralSettings_HoldQueueMonitoring extends Message<GeneralSettings_HoldQueueMonitoring> {
  /**
   * Whether hold queue monitoring is enabled. `Hold Queue Monitoring`
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * Agent routing. `HQM Agent Routing`
   *
   * @generated from field: api.commons.AgentRouting agent_routing = 2;
   */
  agentRouting: AgentRouting;

  /**
   * Hunt group required to route to. `HQM Required Hunt Group Routing`
   *
   * @generated from field: int64 required_hunt_group_routing = 3;
   */
  requiredHuntGroupRouting: bigint;

  /**
   * Hunt group preferred to route to. `HQM Preferred Hunt Group Routing`
   *
   * @generated from field: int64 preferred_hunt_group_routing = 4;
   */
  preferredHuntGroupRouting: bigint;

  constructor(data?: PartialMessage<GeneralSettings_HoldQueueMonitoring>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.GeneralSettings.HoldQueueMonitoring";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GeneralSettings_HoldQueueMonitoring;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GeneralSettings_HoldQueueMonitoring;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GeneralSettings_HoldQueueMonitoring;

  static equals(a: GeneralSettings_HoldQueueMonitoring | PlainMessage<GeneralSettings_HoldQueueMonitoring> | undefined, b: GeneralSettings_HoldQueueMonitoring | PlainMessage<GeneralSettings_HoldQueueMonitoring> | undefined): boolean;
}

/**
 * Data Dip data display options.
 *
 * @generated from message api.commons.org.GeneralSettings.DataDipDataDisplay
 */
export declare class GeneralSettings_DataDipDataDisplay extends Message<GeneralSettings_DataDipDataDisplay> {
  /**
   * Whether to display the Data Dipped data in the data panel.
   *
   * @generated from field: bool display_data_dip_data = 1;
   */
  displayDataDipData: boolean;

  /**
   * The keys of the Data Dipped data key/value pairs.
   *
   * @generated from field: repeated string data_dip_display_keys = 2;
   */
  dataDipDisplayKeys: string[];

  constructor(data?: PartialMessage<GeneralSettings_DataDipDataDisplay>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.GeneralSettings.DataDipDataDisplay";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GeneralSettings_DataDipDataDisplay;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GeneralSettings_DataDipDataDisplay;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GeneralSettings_DataDipDataDisplay;

  static equals(a: GeneralSettings_DataDipDataDisplay | PlainMessage<GeneralSettings_DataDipDataDisplay> | undefined, b: GeneralSettings_DataDipDataDisplay | PlainMessage<GeneralSettings_DataDipDataDisplay> | undefined): boolean;
}

/**
 * Payment Integration data display options.
 *
 * @generated from message api.commons.org.GeneralSettings.IntegrationDataDisplay
 */
export declare class GeneralSettings_IntegrationDataDisplay extends Message<GeneralSettings_IntegrationDataDisplay> {
  /**
   * Whether to display the Payment Integration returned data in the
   * data panel.
   *
   * @generated from field: bool display_integration_data = 1;
   */
  displayIntegrationData: boolean;

  /**
   * The keys of the Payment Integration data key/value pairs.
   *
   * @generated from field: repeated string integration_display_keys = 2;
   */
  integrationDisplayKeys: string[];

  constructor(data?: PartialMessage<GeneralSettings_IntegrationDataDisplay>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.GeneralSettings.IntegrationDataDisplay";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GeneralSettings_IntegrationDataDisplay;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GeneralSettings_IntegrationDataDisplay;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GeneralSettings_IntegrationDataDisplay;

  static equals(a: GeneralSettings_IntegrationDataDisplay | PlainMessage<GeneralSettings_IntegrationDataDisplay> | undefined, b: GeneralSettings_IntegrationDataDisplay | PlainMessage<GeneralSettings_IntegrationDataDisplay> | undefined): boolean;
}

/**
 * Journey Integration data display options.
 *
 * @generated from message api.commons.org.GeneralSettings.JourneyDataDisplay
 */
export declare class GeneralSettings_JourneyDataDisplay extends Message<GeneralSettings_JourneyDataDisplay> {
  /**
   * Whether to display the Journey Integration returned data in the
   * data panel.
   *
   * @generated from field: bool display_journey_data = 1;
   */
  displayJourneyData: boolean;

  /**
   * The keys of the Journey Integration data key/value pairs.
   *
   * @generated from field: repeated string journey_display_keys = 2;
   */
  journeyDisplayKeys: string[];

  constructor(data?: PartialMessage<GeneralSettings_JourneyDataDisplay>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.GeneralSettings.JourneyDataDisplay";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GeneralSettings_JourneyDataDisplay;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GeneralSettings_JourneyDataDisplay;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GeneralSettings_JourneyDataDisplay;

  static equals(a: GeneralSettings_JourneyDataDisplay | PlainMessage<GeneralSettings_JourneyDataDisplay> | undefined, b: GeneralSettings_JourneyDataDisplay | PlainMessage<GeneralSettings_JourneyDataDisplay> | undefined): boolean;
}

/**
 * Agent Login GUI Statistics display and template.
 *
 * @generated from message api.commons.org.GeneralSettings.AgentLoginGuiStatisticsDisplay
 */
export declare class GeneralSettings_AgentLoginGuiStatisticsDisplay extends Message<GeneralSettings_AgentLoginGuiStatisticsDisplay> {
  /**
   * Whether to allow the display of general agent statistics to the UI.
   *
   * @generated from field: bool display_agent_login_gui_statistics = 1;
   */
  displayAgentLoginGuiStatistics: boolean;

  /**
   * The ID (XML Client Property Sid) of the agent login gui statistics
   * template.
   *
   * @generated from field: int64 agent_login_gui_statistics_template = 2;
   */
  agentLoginGuiStatisticsTemplate: bigint;

  constructor(data?: PartialMessage<GeneralSettings_AgentLoginGuiStatisticsDisplay>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.GeneralSettings.AgentLoginGuiStatisticsDisplay";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GeneralSettings_AgentLoginGuiStatisticsDisplay;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GeneralSettings_AgentLoginGuiStatisticsDisplay;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GeneralSettings_AgentLoginGuiStatisticsDisplay;

  static equals(a: GeneralSettings_AgentLoginGuiStatisticsDisplay | PlainMessage<GeneralSettings_AgentLoginGuiStatisticsDisplay> | undefined, b: GeneralSettings_AgentLoginGuiStatisticsDisplay | PlainMessage<GeneralSettings_AgentLoginGuiStatisticsDisplay> | undefined): boolean;
}

/**
 * Phone / Postal Metadata display options.
 *
 * @generated from message api.commons.org.GeneralSettings.PhoneZipMetadataDisplay
 */
export declare class GeneralSettings_PhoneZipMetadataDisplay extends Message<GeneralSettings_PhoneZipMetadataDisplay> {
  /**
   * Whether to display the Phone / Postal Metadata related to the call's
   * phone number.
   *
   * @generated from field: bool display_phone_zip_metadata = 1;
   */
  displayPhoneZipMetadata: boolean;

  /**
   * The keys of the Phone / Postal Metadata for display in the UI.
   *
   * @generated from field: repeated api.commons.PhonePostalDisplayOptions phone_zip_metadata_keys = 2;
   */
  phoneZipMetadataKeys: PhonePostalDisplayOptions[];

  constructor(data?: PartialMessage<GeneralSettings_PhoneZipMetadataDisplay>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.GeneralSettings.PhoneZipMetadataDisplay";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GeneralSettings_PhoneZipMetadataDisplay;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GeneralSettings_PhoneZipMetadataDisplay;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GeneralSettings_PhoneZipMetadataDisplay;

  static equals(a: GeneralSettings_PhoneZipMetadataDisplay | PlainMessage<GeneralSettings_PhoneZipMetadataDisplay> | undefined, b: GeneralSettings_PhoneZipMetadataDisplay | PlainMessage<GeneralSettings_PhoneZipMetadataDisplay> | undefined): boolean;
}

/**
 * Available hunt group options.
 *
 * @generated from message api.commons.org.GeneralSettings.DisallowedHuntGroups
 */
export declare class GeneralSettings_DisallowedHuntGroups extends Message<GeneralSettings_DisallowedHuntGroups> {
  /**
   * Whether to limit available hunt groups for agents.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * The list of hunt groups that are available to choose from.
   *
   * @generated from field: repeated int64 hunt_groups = 2;
   */
  huntGroups: bigint[];

  constructor(data?: PartialMessage<GeneralSettings_DisallowedHuntGroups>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.GeneralSettings.DisallowedHuntGroups";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GeneralSettings_DisallowedHuntGroups;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GeneralSettings_DisallowedHuntGroups;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GeneralSettings_DisallowedHuntGroups;

  static equals(a: GeneralSettings_DisallowedHuntGroups | PlainMessage<GeneralSettings_DisallowedHuntGroups> | undefined, b: GeneralSettings_DisallowedHuntGroups | PlainMessage<GeneralSettings_DisallowedHuntGroups> | undefined): boolean;
}

/**
 * Alphanumeric keypad options.
 *
 * @generated from message api.commons.org.GeneralSettings.AlphanumericKeypad
 */
export declare class GeneralSettings_AlphanumericKeypad extends Message<GeneralSettings_AlphanumericKeypad> {
  /**
   * Whether keypad delimiting is enabled.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * Character to delimit with.
   *
   * @generated from field: api.commons.AlphanumericKeypadDelimiter delimiter = 2;
   */
  delimiter: AlphanumericKeypadDelimiter;

  constructor(data?: PartialMessage<GeneralSettings_AlphanumericKeypad>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.GeneralSettings.AlphanumericKeypad";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GeneralSettings_AlphanumericKeypad;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GeneralSettings_AlphanumericKeypad;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GeneralSettings_AlphanumericKeypad;

  static equals(a: GeneralSettings_AlphanumericKeypad | PlainMessage<GeneralSettings_AlphanumericKeypad> | undefined, b: GeneralSettings_AlphanumericKeypad | PlainMessage<GeneralSettings_AlphanumericKeypad> | undefined): boolean;
}

/**
 * Inbound natural compiance metadata options.
 *
 * @generated from message api.commons.org.GeneralSettings.InboundComplianceMetadata
 */
export declare class GeneralSettings_InboundComplianceMetadata extends Message<GeneralSettings_InboundComplianceMetadata> {
  /**
   * Whether compliance metadata is used.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * List of optional contact field description metadata.
   * List of contact_field_description_sids
   *
   * @generated from field: repeated int64 optional_data = 2;
   */
  optionalData: bigint[];

  /**
   * List of required contact field description metadata.
   * List of contact_field_description_sids
   *
   * @generated from field: repeated int64 required_data = 3;
   */
  requiredData: bigint[];

  constructor(data?: PartialMessage<GeneralSettings_InboundComplianceMetadata>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.GeneralSettings.InboundComplianceMetadata";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GeneralSettings_InboundComplianceMetadata;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GeneralSettings_InboundComplianceMetadata;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GeneralSettings_InboundComplianceMetadata;

  static equals(a: GeneralSettings_InboundComplianceMetadata | PlainMessage<GeneralSettings_InboundComplianceMetadata> | undefined, b: GeneralSettings_InboundComplianceMetadata | PlainMessage<GeneralSettings_InboundComplianceMetadata> | undefined): boolean;
}

/**
 * PrepareStateCallDelivery options (the dial modes).
 *
 * @generated from message api.commons.org.GeneralSettings.PrepareStateCallDelivery
 */
export declare class GeneralSettings_PrepareStateCallDelivery extends Message<GeneralSettings_PrepareStateCallDelivery> {
  /**
   * @generated from field: bool manual_dial = 1;
   */
  manualDial: boolean;

  /**
   * @generated from field: bool preview_dial = 2;
   */
  previewDial: boolean;

  constructor(data?: PartialMessage<GeneralSettings_PrepareStateCallDelivery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.GeneralSettings.PrepareStateCallDelivery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GeneralSettings_PrepareStateCallDelivery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GeneralSettings_PrepareStateCallDelivery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GeneralSettings_PrepareStateCallDelivery;

  static equals(a: GeneralSettings_PrepareStateCallDelivery | PlainMessage<GeneralSettings_PrepareStateCallDelivery> | undefined, b: GeneralSettings_PrepareStateCallDelivery | PlainMessage<GeneralSettings_PrepareStateCallDelivery> | undefined): boolean;
}

/**
 * CommunicationSettings is an entity containing the hunt group settings for the
 * communication compliance section of the hunt group manager.
 *
 * MAIN SETTINGS
 *
 * @generated from message api.commons.org.CommunicationSettings
 */
export declare class CommunicationSettings extends Message<CommunicationSettings> {
  /**
   * Enable the ability to add valuess from the compliance scrub list.
   * `doAllowAddDncl`
   *
   * @generated from field: bool enable_scrub_list_adding = 1;
   */
  enableScrubListAdding: boolean;

  /**
   * Hunt group compliance scrub lists. `Hunt Group Compliance Scrub Lists`
   *
   * @generated from field: repeated string scrub_lists = 2;
   */
  scrubLists: string[];

  /**
   * Enable the ability to remove values from the compliance scrub lists.
   * `doAllowRemoveDncl`
   *
   * @generated from field: bool enable_scrub_list_removal = 3;
   */
  enableScrubListRemoval: boolean;

  /**
   * List of compliance scrub lists which can be removed.
   * `Hunt Group Compliance Scrub Lists Removal Allowed`
   *
   * @generated from field: repeated string scrub_lists_removal_allowed = 4;
   */
  scrubListsRemovalAllowed: string[];

  /**
   * Select compliance default country. `Default DNCL Country`
   *
   * @generated from field: api.commons.Country compliance_default_country = 5;
   */
  complianceDefaultCountry: Country;

  /**
   * Display DNCL options in wrap up. `Display DNCL Options In Wrapup`
   *
   * @generated from field: bool display_options_in_wrapup = 6;
   */
  displayOptionsInWrapup: boolean;

  /**
   * Default inbound scrub list expiration. `defaultIBCallDnclExpiration`
   *
   * @generated from field: api.commons.org.CommunicationSettings.ScrubListExpiration inbound_scrub_list_expiration = 100;
   */
  inboundScrubListExpiration?: CommunicationSettings_ScrubListExpiration;

  /**
   * Default manual scrub list expiration. `defaultMDCallDnclExpiration`
   *
   * @generated from field: api.commons.org.CommunicationSettings.ScrubListExpiration manual_scrub_list_expiration = 101;
   */
  manualScrubListExpiration?: CommunicationSettings_ScrubListExpiration;

  /**
   * Default outbound scrub list expiration. `defaultOBCallExpiration`
   *
   * @generated from field: api.commons.org.CommunicationSettings.ScrubListExpiration outbound_scrub_list_expiration = 102;
   */
  outboundScrubListExpiration?: CommunicationSettings_ScrubListExpiration;

  /**
   * Default preview scrub list expiration. `defaultPRCallDnclExpiration`
   *
   * @generated from field: api.commons.org.CommunicationSettings.ScrubListExpiration preview_scrub_list_expiration = 103;
   */
  previewScrubListExpiration?: CommunicationSettings_ScrubListExpiration;

  /**
   * Automate manually dialed number scrub list. `Manual Dial Auto Dncl Add`
   *
   * @generated from field: bool automate_manually_dialed_scrub_list = 200;
   */
  automateManuallyDialedScrubList: boolean;

  /**
   * Automate preview dialed number scrub list. `Preview Dial Auto Dncl Add`
   *
   * @generated from field: bool automate_preview_dialed_scrub_list = 201;
   */
  automatePreviewDialedScrubList: boolean;

  /**
   * Automate response rules. `AgentDispositionConditionalDncl`
   *
   * @generated from field: api.commons.org.CommunicationSettings.AutomateResponseRules automate_response_rules = 202;
   */
  automateResponseRules?: CommunicationSettings_AutomateResponseRules;

  /**
   * Enable automatic addition of call data to scrub lists.
   * `Call Data Scrub Lists Info`
   *
   * @generated from field: api.commons.org.CommunicationSettings.AutomateScrubListCallData automate_scrub_list_call_data = 203;
   */
  automateScrubListCallData?: CommunicationSettings_AutomateScrubListCallData;

  constructor(data?: PartialMessage<CommunicationSettings>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.CommunicationSettings";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CommunicationSettings;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CommunicationSettings;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CommunicationSettings;

  static equals(a: CommunicationSettings | PlainMessage<CommunicationSettings> | undefined, b: CommunicationSettings | PlainMessage<CommunicationSettings> | undefined): boolean;
}

/**
 * Scrub list expiration properties.
 *
 * @generated from message api.commons.org.CommunicationSettings.ScrubListExpiration
 */
export declare class CommunicationSettings_ScrubListExpiration extends Message<CommunicationSettings_ScrubListExpiration> {
  /**
   * Default call DNCL/scrub list expiration time.
   *
   * @generated from field: api.commons.CommunicationExpiration default_expiration = 1;
   */
  defaultExpiration: CommunicationExpiration;

  /**
   * Enable limiting scrub list expiration choices.
   *
   * @generated from field: bool limit_expiration = 2;
   */
  limitExpiration: boolean;

  /**
   * List of possible expiration times to choose from.
   *
   * @generated from field: repeated api.commons.CommunicationExpiration limited_expirations = 3;
   */
  limitedExpirations: CommunicationExpiration[];

  constructor(data?: PartialMessage<CommunicationSettings_ScrubListExpiration>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.CommunicationSettings.ScrubListExpiration";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CommunicationSettings_ScrubListExpiration;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CommunicationSettings_ScrubListExpiration;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CommunicationSettings_ScrubListExpiration;

  static equals(a: CommunicationSettings_ScrubListExpiration | PlainMessage<CommunicationSettings_ScrubListExpiration> | undefined, b: CommunicationSettings_ScrubListExpiration | PlainMessage<CommunicationSettings_ScrubListExpiration> | undefined): boolean;
}

/**
 * Automate response rules properties.
 *
 * @generated from message api.commons.org.CommunicationSettings.AutomateResponseRules
 */
export declare class CommunicationSettings_AutomateResponseRules extends Message<CommunicationSettings_AutomateResponseRules> {
  /**
   * Whether automated response rules are enabled.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * Sid associated with response rule.
   * xml_client_property_sid where property_key =
   * 'AgentDispositionConditionalDncl'
   *
   * @generated from field: int64 rule_sid = 2;
   */
  ruleSid: bigint;

  constructor(data?: PartialMessage<CommunicationSettings_AutomateResponseRules>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.CommunicationSettings.AutomateResponseRules";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CommunicationSettings_AutomateResponseRules;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CommunicationSettings_AutomateResponseRules;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CommunicationSettings_AutomateResponseRules;

  static equals(a: CommunicationSettings_AutomateResponseRules | PlainMessage<CommunicationSettings_AutomateResponseRules> | undefined, b: CommunicationSettings_AutomateResponseRules | PlainMessage<CommunicationSettings_AutomateResponseRules> | undefined): boolean;
}

/**
 * Automate response rules properties.
 *
 * @generated from message api.commons.org.CommunicationSettings.AutomateScrubListCallData
 */
export declare class CommunicationSettings_AutomateScrubListCallData extends Message<CommunicationSettings_AutomateScrubListCallData> {
  /**
   * Whether automatic additional of call data to scrub lists is enabled.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * List of scrub list call data fields which will automatically be added.
   *
   * @generated from field: repeated api.commons.org.CommunicationSettings.AutomateScrubListCallData.ScrubListDataField scrub_list_data_fields = 2;
   */
  scrubListDataFields: CommunicationSettings_AutomateScrubListCallData_ScrubListDataField[];

  constructor(data?: PartialMessage<CommunicationSettings_AutomateScrubListCallData>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.CommunicationSettings.AutomateScrubListCallData";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CommunicationSettings_AutomateScrubListCallData;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CommunicationSettings_AutomateScrubListCallData;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CommunicationSettings_AutomateScrubListCallData;

  static equals(a: CommunicationSettings_AutomateScrubListCallData | PlainMessage<CommunicationSettings_AutomateScrubListCallData> | undefined, b: CommunicationSettings_AutomateScrubListCallData | PlainMessage<CommunicationSettings_AutomateScrubListCallData> | undefined): boolean;
}

/**
 * Scrub list data field properties.
 *
 * @generated from message api.commons.org.CommunicationSettings.AutomateScrubListCallData.ScrubListDataField
 */
export declare class CommunicationSettings_AutomateScrubListCallData_ScrubListDataField extends Message<CommunicationSettings_AutomateScrubListCallData_ScrubListDataField> {
  /**
   * Scrub list sid.
   *
   * @generated from field: string scrub_list = 1;
   */
  scrubList: string;

  /**
   * Call data field sid.
   *
   * @generated from field: int64 call_data_field = 2;
   */
  callDataField: bigint;

  constructor(data?: PartialMessage<CommunicationSettings_AutomateScrubListCallData_ScrubListDataField>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.CommunicationSettings.AutomateScrubListCallData.ScrubListDataField";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CommunicationSettings_AutomateScrubListCallData_ScrubListDataField;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CommunicationSettings_AutomateScrubListCallData_ScrubListDataField;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CommunicationSettings_AutomateScrubListCallData_ScrubListDataField;

  static equals(a: CommunicationSettings_AutomateScrubListCallData_ScrubListDataField | PlainMessage<CommunicationSettings_AutomateScrubListCallData_ScrubListDataField> | undefined, b: CommunicationSettings_AutomateScrubListCallData_ScrubListDataField | PlainMessage<CommunicationSettings_AutomateScrubListCallData_ScrubListDataField> | undefined): boolean;
}

/**
 * CallbackSettings is an entity containing the hunt group settings for the
 * scheduled callbacks section of the hunt group manager.
 *
 * MAIN SETTINGS
 *
 * @generated from message api.commons.org.CallbackSettings
 */
export declare class CallbackSettings extends Message<CallbackSettings> {
  /**
   * Enable callback scheduling. `Allow Callback Scheduling`
   *
   * @generated from field: bool enable_callback_scheduling = 1;
   */
  enableCallbackScheduling: boolean;

  /**
   * Default callback routing. `Default Callback Routing`
   *
   * @generated from field: api.commons.org.CallbackSettings.DefaultRouting default_callback_routing = 2;
   */
  defaultCallbackRouting?: CallbackSettings_DefaultRouting;

  /**
   * Enable callback calling ` Allow Scheduled Callback Calling`
   *
   * @generated from field: bool enable_callback_calling = 3;
   */
  enableCallbackCalling: boolean;

  /**
   * Enable automatic callback retrieval `Callbacks Retrieval Mode`
   *
   * @generated from field: bool enable_automatic_retrieval = 4;
   */
  enableAutomaticRetrieval: boolean;

  /**
   * Indicates whether and how to limit callback routing.
   * `Callback Routing Disallowed`
   *
   * @generated from field: api.commons.org.CallbackSettings.CallbackRoutingDisallowed callback_routing_disallowed = 5;
   */
  callbackRoutingDisallowed?: CallbackSettings_CallbackRoutingDisallowed;

  /**
   * Enable caller ID customization. 'Scheduled Callback Editable Caller ID'
   *
   * @generated from field: bool enable_customizable_caller_id = 6;
   */
  enableCustomizableCallerId: boolean;

  /**
   * Default scheduled callback caller ID.
   * `Scheduled Callback Default Caller ID`
   *
   * @generated from field: string default_caller_id = 7;
   */
  defaultCallerId: string;

  /**
   * Enable viewing the Scheduled Callback calendar.
   * `Allow Scheduled Callback Calendar`
   *
   * @generated from field: bool enable_callback_calendar = 8;
   */
  enableCallbackCalendar: boolean;

  constructor(data?: PartialMessage<CallbackSettings>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.CallbackSettings";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CallbackSettings;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CallbackSettings;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CallbackSettings;

  static equals(a: CallbackSettings | PlainMessage<CallbackSettings> | undefined, b: CallbackSettings | PlainMessage<CallbackSettings> | undefined): boolean;
}

/**
 * Default callback routing properties.
 *
 * @generated from message api.commons.org.CallbackSettings.DefaultRouting
 */
export declare class CallbackSettings_DefaultRouting extends Message<CallbackSettings_DefaultRouting> {
  /**
   * Default callback routing option (agent, skill set, none).
   *
   * @generated from field: api.commons.DefaultCallbackRouting routing_mode = 1;
   */
  routingMode: DefaultCallbackRouting;

  /**
   * Agent to callback to.
   *
   * @generated from field: int64 agent_sid = 2;
   */
  agentSid: bigint;

  /**
   * Agent skillsets to callback to.
   *
   * @generated from field: repeated int64 agent_skillsets = 3;
   */
  agentSkillsets: bigint[];

  /**
   * Hunt Groups selected by default
   *
   * @generated from field: repeated int64 hunt_group_sids = 4;
   */
  huntGroupSids: bigint[];

  constructor(data?: PartialMessage<CallbackSettings_DefaultRouting>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.CallbackSettings.DefaultRouting";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CallbackSettings_DefaultRouting;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CallbackSettings_DefaultRouting;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CallbackSettings_DefaultRouting;

  static equals(a: CallbackSettings_DefaultRouting | PlainMessage<CallbackSettings_DefaultRouting> | undefined, b: CallbackSettings_DefaultRouting | PlainMessage<CallbackSettings_DefaultRouting> | undefined): boolean;
}

/**
 * Control which skills may be used when selecting routing.
 *
 * @generated from message api.commons.org.CallbackSettings.CallbackRoutingDisallowed
 */
export declare class CallbackSettings_CallbackRoutingDisallowed extends Message<CallbackSettings_CallbackRoutingDisallowed> {
  /**
   * Indicates whether callback routing should be limited.
   *
   * @generated from field: bool use_routing_limiting = 1;
   */
  useRoutingLimiting: boolean;

  /**
   * Prohibited Agent Sids
   *
   * @generated from field: repeated int64 agent_sids = 2;
   */
  agentSids: bigint[];

  /**
   * Prohibited Hunt Group Sids
   *
   * @generated from field: repeated int64 hunt_group_sids = 3;
   */
  huntGroupSids: bigint[];

  /**
   * Prohibited agent skill sids
   *
   * @generated from field: repeated int64 agent_skill_sids = 4;
   */
  agentSkillSids: bigint[];

  constructor(data?: PartialMessage<CallbackSettings_CallbackRoutingDisallowed>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.CallbackSettings.CallbackRoutingDisallowed";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CallbackSettings_CallbackRoutingDisallowed;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CallbackSettings_CallbackRoutingDisallowed;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CallbackSettings_CallbackRoutingDisallowed;

  static equals(a: CallbackSettings_CallbackRoutingDisallowed | PlainMessage<CallbackSettings_CallbackRoutingDisallowed> | undefined, b: CallbackSettings_CallbackRoutingDisallowed | PlainMessage<CallbackSettings_CallbackRoutingDisallowed> | undefined): boolean;
}

/**
 * PreviewDialSettings is an entity containing the hunt group settings for the
 * Preview Dial section of the hunt group manager.
 *
 * @generated from message api.commons.org.PreviewDialSettings
 */
export declare class PreviewDialSettings extends Message<PreviewDialSettings> {
  /**
   * Enable cancelling of Preview Dialing.  `AllowPreviewDialCancel`
   *
   * @generated from field: bool enable_preview_dial_cancel = 1;
   */
  enablePreviewDialCancel: boolean;

  /**
   * Enable automatic pausing when cancelling a Preview Dial call.
   * `AutoPauseOnPreviewDial`
   *
   * @generated from field: bool enable_auto_pause_on_cancel = 2;
   */
  enableAutoPauseOnCancel: boolean;

  /**
   * Indicates when queued preview dial calls should no longer be presented
   * to agents.
   * `Preview Dial Call Time-out`
   *
   * @generated from field: int64 timeout_minutes = 3;
   */
  timeoutMinutes: bigint;

  /**
   * Indicates if agents must confirm numbers before calling.
   * `Preview Dial Confirmation`
   *
   * @generated from field: bool require_number_confirmation = 4;
   */
  requireNumberConfirmation: boolean;

  /**
   * The name of the Call Queue Configuration (folder name).
   * `PreviewQueueConfig`
   *
   * @generated from field: string preview_queue_config = 5;
   */
  previewQueueConfig: string;

  constructor(data?: PartialMessage<PreviewDialSettings>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.PreviewDialSettings";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PreviewDialSettings;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PreviewDialSettings;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PreviewDialSettings;

  static equals(a: PreviewDialSettings | PlainMessage<PreviewDialSettings> | undefined, b: PreviewDialSettings | PlainMessage<PreviewDialSettings> | undefined): boolean;
}

/**
 * ManualDialSettings is an entity containing the hunt group settings for the
 * Manual Dial section of the hunt group settings manager.
 *
 * @generated from message api.commons.org.ManualDialSettings
 */
export declare class ManualDialSettings extends Message<ManualDialSettings> {
  /**
   * Allow the agent to make manual dial calls.
   *
   * @generated from field: bool enable_manual_dial = 1;
   */
  enableManualDial: boolean;

  /**
   * ACD queue configuration folder name.
   *
   * @generated from field: string queue_configuration_name = 2;
   */
  queueConfigurationName: string;

  /**
   * The default setting for recording manual dial calls.
   *
   * @generated from field: api.commons.HuntGroupOrgDefaultCustom default_call_recording = 3;
   */
  defaultCallRecording: HuntGroupOrgDefaultCustom;

  /**
   * Determines whether to scrub cell phone calls.
   *
   * @generated from field: api.commons.HuntGroupOrgDefaultCustom cell_phone_scrub = 4;
   */
  cellPhoneScrub: HuntGroupOrgDefaultCustom;

  /**
   * Determines whether to scrub calls by time zone.
   *
   * @generated from field: api.commons.HuntGroupOrgDefaultCustom time_zone_restriction = 5;
   */
  timeZoneRestriction: HuntGroupOrgDefaultCustom;

  /**
   * Determines whether to allow or require collection of ZIP/postal
   * for compliance.
   *
   * @generated from field: api.commons.ManualDialTimeZoneValidation time_zone_validation_postal_code = 6;
   */
  timeZoneValidationPostalCode: ManualDialTimeZoneValidation;

  /**
   * Use Natural Language Compliance and rule set.
   *
   * @generated from field: api.commons.org.NaturalLanguageComplianceScrub natural_compliance_scrub = 7;
   */
  naturalComplianceScrub?: NaturalLanguageComplianceScrub;

  /**
   * Allow agent to override scrub options
   *
   * @generated from field: api.commons.org.ManualDialSettings.ScrubOverride scrub_override = 8;
   */
  scrubOverride?: ManualDialSettings_ScrubOverride;

  /**
   * Allow toll-free white list for manual dial calls.
   *
   * @generated from field: bool enable_whitelist = 9;
   */
  enableWhitelist: boolean;

  /**
   * The default selected country for outbound number.
   *
   * @generated from field: api.commons.Country default_outbound_country = 10;
   */
  defaultOutboundCountry: Country;

  /**
   * Determines whether to display the country select menu to the agent.
   *
   * @generated from field: bool display_outbound_country_selection = 11;
   */
  displayOutboundCountrySelection: boolean;

  /**
   * Determines whether to display the outbound number phone book to the agent.
   *
   * @generated from field: bool display_outbound_number_phone_book = 12;
   */
  displayOutboundNumberPhoneBook: boolean;

  /**
   * Indicates the default Country to use with the caller ID number.
   * `Manual Dial Default Caller ID Country`
   *
   * @generated from field: api.commons.Country default_caller_id_country = 13;
   */
  defaultCallerIdCountry: Country;

  /**
   * Determines whether to display the caller ID country select menu to
   * the agent.
   * `Manual Dial Display Caller ID Country Select`
   *
   * @generated from field: bool display_caller_id_country_selection = 14;
   */
  displayCallerIdCountrySelection: boolean;

  /**
   * Determines whether to display the caller ID phone book to the agent.
   * `Manual Dial Display Phone Book`
   *
   * @generated from field: bool display_caller_id_phone_book = 15;
   */
  displayCallerIdPhoneBook: boolean;

  /**
   * Determines whether the agent may customize/edit the caller ID.
   * `Manual Dial Editable Caller ID`
   *
   * @generated from field: bool enable_customizable_caller_id = 16;
   */
  enableCustomizableCallerId: boolean;

  /**
   * Indicates the default number to use as the caller ID.
   * `Manual Dial Default Caller ID`
   *
   * @generated from field: api.commons.org.ManualDialSettings.DefaultCallerId default_caller_id = 17;
   */
  defaultCallerId?: ManualDialSettings_DefaultCallerId;

  /**
   * Determines whether to allow the use of caller ID buckets in the agent app.
   * `Manual Dial Caller Id Bucket Enabled`
   *
   * @generated from field: bool enable_caller_id_bucket = 18;
   */
  enableCallerIdBucket: boolean;

  /**
   * Indicates which caller ID bucket to use.
   * `Manual Dial Random Caller Id Bucket`
   *
   * @generated from field: int64 random_caller_id_bucket = 19;
   */
  randomCallerIdBucket: bigint;

  /**
   * Determines whether to automatically select a random caller ID.
   * `Manual Dial Random Caller Id Enabled`
   *
   * @generated from field: bool automate_random_caller_id = 20;
   */
  automateRandomCallerId: boolean;

  /**
   * Determines whether to mask the caller ID from the agent.
   * `Mask Manual Dial Caller ID`
   *
   * @generated from field: bool enable_mask_caller_id = 21;
   */
  enableMaskCallerId: boolean;

  /**
   * Determines whether to enable SIP addresses as an optional outbound
   * number and/or caller ID format.
   * `Enable SIP Address`
   *
   * @generated from field: bool enable_sip_address = 22;
   */
  enableSipAddress: boolean;

  /**
   * Manual Dial natural language compliance metadata.
   * `Optional Inbound Compliance Metadata`
   * `Required Inbound Compliance Metadata`
   *
   * @generated from field: api.commons.org.NaturalLanguageComplianceMetadata natural_language_compliance_metadata = 23;
   */
  naturalLanguageComplianceMetadata?: NaturalLanguageComplianceMetadata;

  /**
   * Application scope; disabled, standard calls, scheduled callbacks or all.
   *
   * @generated from field: api.commons.ManualDialDataDipScope data_dip_scope = 24;
   */
  dataDipScope: ManualDialDataDipScope;

  /**
   * The ID of the data dip config to execute.
   *
   * @generated from field: int64 data_dip_config_sid = 25;
   */
  dataDipConfigSid: bigint;

  /**
   * The action to take if data dip execution fails.
   *
   * @generated from field: api.commons.ManualDialDataDipHandling data_dip_result_handling = 26;
   */
  dataDipResultHandling: ManualDialDataDipHandling;

  /**
   * Map data dip values to manual dial call values.
   *
   * @generated from field: repeated api.commons.org.ManualDialSettings.DataDipIntegrationMapping data_dip_integration_mappings = 27;
   */
  dataDipIntegrationMappings: ManualDialSettings_DataDipIntegrationMapping[];

  /**
   * The action to take if the integration mapping fails.
   *
   * @generated from field: api.commons.ManualDialDataDipHandling data_dip_integration_handling = 28;
   */
  dataDipIntegrationHandling: ManualDialDataDipHandling;

  /**
   * Control whether the reject option is available to the approvers.
   * Please use disable_reject_option_for_approvers under GeneralSettings.
   *
   * @generated from field: bool enable_reject_option_for_approvers = 29 [deprecated = true];
   * @deprecated
   */
  enableRejectOptionForApprovers: boolean;

  constructor(data?: PartialMessage<ManualDialSettings>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.ManualDialSettings";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ManualDialSettings;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ManualDialSettings;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ManualDialSettings;

  static equals(a: ManualDialSettings | PlainMessage<ManualDialSettings> | undefined, b: ManualDialSettings | PlainMessage<ManualDialSettings> | undefined): boolean;
}

/**
 * Allow the agent to override scrub settings.
 *
 * @generated from message api.commons.org.ManualDialSettings.ScrubOverride
 */
export declare class ManualDialSettings_ScrubOverride extends Message<ManualDialSettings_ScrubOverride> {
  /**
   * Allow the agent to override DNCL scrubbing.
   *
   * @generated from field: bool enable_dncl_override = 1;
   */
  enableDnclOverride: boolean;

  /**
   * Allow the agent to override cell phone scrubbing.
   *
   * @generated from field: bool enable_cell_scrub_override = 2;
   */
  enableCellScrubOverride: boolean;

  /**
   * Allow the agent to override the global time zone scrubbing.
   *
   * @generated from field: bool enable_time_zone_scrub_override = 3;
   */
  enableTimeZoneScrubOverride: boolean;

  /**
   * Allow the agent to override Natural Language Compliance scrubbing.
   *
   * @generated from field: bool natural_compliance_override = 4;
   */
  naturalComplianceOverride: boolean;

  constructor(data?: PartialMessage<ManualDialSettings_ScrubOverride>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.ManualDialSettings.ScrubOverride";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ManualDialSettings_ScrubOverride;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ManualDialSettings_ScrubOverride;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ManualDialSettings_ScrubOverride;

  static equals(a: ManualDialSettings_ScrubOverride | PlainMessage<ManualDialSettings_ScrubOverride> | undefined, b: ManualDialSettings_ScrubOverride | PlainMessage<ManualDialSettings_ScrubOverride> | undefined): boolean;
}

/**
 * DefaultCallerId: custom or "Agent Caller ID" and number (if needed).
 *
 * @generated from message api.commons.org.ManualDialSettings.DefaultCallerId
 */
export declare class ManualDialSettings_DefaultCallerId extends Message<ManualDialSettings_DefaultCallerId> {
  /**
   * Describes how the field is used; none, custom or agent caller ID.
   *
   * @generated from field: api.commons.DefaultManualDialCallerId usage = 1;
   */
  usage: DefaultManualDialCallerId;

  /**
   * The caller ID (if needed).
   *
   * @generated from field: string custom_caller_id = 2;
   */
  customCallerId: string;

  constructor(data?: PartialMessage<ManualDialSettings_DefaultCallerId>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.ManualDialSettings.DefaultCallerId";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ManualDialSettings_DefaultCallerId;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ManualDialSettings_DefaultCallerId;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ManualDialSettings_DefaultCallerId;

  static equals(a: ManualDialSettings_DefaultCallerId | PlainMessage<ManualDialSettings_DefaultCallerId> | undefined, b: ManualDialSettings_DefaultCallerId | PlainMessage<ManualDialSettings_DefaultCallerId> | undefined): boolean;
}

/**
 * Describes a mapping of return keys to manual dial values.
 *
 * @generated from message api.commons.org.ManualDialSettings.DataDipIntegrationMapping
 */
export declare class ManualDialSettings_DataDipIntegrationMapping extends Message<ManualDialSettings_DataDipIntegrationMapping> {
  /**
   * Mapping type; manual dial number, caller ID or field description.
   *
   * @generated from field: api.commons.ManualDialDataDipIntegration mapping_type = 1;
   */
  mappingType: ManualDialDataDipIntegration;

  /**
   * The key of the data dipped data to map to the manual call data.
   *
   * @generated from field: string data_dip_return_key = 2;
   */
  dataDipReturnKey: string;

  /**
   * The contact field description to map to when it is the type.
   *
   * @generated from field: int64 contact_field_description_sid = 3;
   */
  contactFieldDescriptionSid: bigint;

  constructor(data?: PartialMessage<ManualDialSettings_DataDipIntegrationMapping>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.ManualDialSettings.DataDipIntegrationMapping";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ManualDialSettings_DataDipIntegrationMapping;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ManualDialSettings_DataDipIntegrationMapping;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ManualDialSettings_DataDipIntegrationMapping;

  static equals(a: ManualDialSettings_DataDipIntegrationMapping | PlainMessage<ManualDialSettings_DataDipIntegrationMapping> | undefined, b: ManualDialSettings_DataDipIntegrationMapping | PlainMessage<ManualDialSettings_DataDipIntegrationMapping> | undefined): boolean;
}

/**
 * Use Natural Language Compliance and rule set ID.
 *
 * @generated from message api.commons.org.NaturalLanguageComplianceScrub
 */
export declare class NaturalLanguageComplianceScrub extends Message<NaturalLanguageComplianceScrub> {
  /**
   * Org default or enabled or disabled.
   *
   * @generated from field: api.commons.HuntGroupOrgDefaultCustom compliance_scrub = 1;
   */
  complianceScrub: HuntGroupOrgDefaultCustom;

  /**
   * The ID of the Natural Language Compliance rule set.
   *
   * @generated from field: string rule_set_id = 2;
   */
  ruleSetId: string;

  constructor(data?: PartialMessage<NaturalLanguageComplianceScrub>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.NaturalLanguageComplianceScrub";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NaturalLanguageComplianceScrub;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NaturalLanguageComplianceScrub;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NaturalLanguageComplianceScrub;

  static equals(a: NaturalLanguageComplianceScrub | PlainMessage<NaturalLanguageComplianceScrub> | undefined, b: NaturalLanguageComplianceScrub | PlainMessage<NaturalLanguageComplianceScrub> | undefined): boolean;
}

/**
 * Manual Dial natural compiance metadata options.
 *
 * @generated from message api.commons.org.NaturalLanguageComplianceMetadata
 */
export declare class NaturalLanguageComplianceMetadata extends Message<NaturalLanguageComplianceMetadata> {
  /**
   * Whether compliance metadata is used.
   *
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * List of optional contact field description metadata.
   * List of contact_field_description_sids
   *
   * @generated from field: repeated int64 optional_data = 2;
   */
  optionalData: bigint[];

  /**
   * List of required contact field description metadata.
   * List of contact_field_description_sids
   *
   * @generated from field: repeated int64 required_data = 3;
   */
  requiredData: bigint[];

  constructor(data?: PartialMessage<NaturalLanguageComplianceMetadata>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.NaturalLanguageComplianceMetadata";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NaturalLanguageComplianceMetadata;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NaturalLanguageComplianceMetadata;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NaturalLanguageComplianceMetadata;

  static equals(a: NaturalLanguageComplianceMetadata | PlainMessage<NaturalLanguageComplianceMetadata> | undefined, b: NaturalLanguageComplianceMetadata | PlainMessage<NaturalLanguageComplianceMetadata> | undefined): boolean;
}

/**
 * Caller ID Bucket Data includes bucket name and the related XML property SID.
 *
 * @generated from message api.commons.org.CallerIdBucketData
 */
export declare class CallerIdBucketData extends Message<CallerIdBucketData> {
  /**
   * XML client property sid.
   *
   * @generated from field: int64 xml_client_property_sid = 1;
   */
  xmlClientPropertySid: bigint;

  /**
   * Name of the caller ID bucket.
   *
   * @generated from field: string bucket_name = 2;
   */
  bucketName: string;

  constructor(data?: PartialMessage<CallerIdBucketData>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.CallerIdBucketData";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CallerIdBucketData;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CallerIdBucketData;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CallerIdBucketData;

  static equals(a: CallerIdBucketData | PlainMessage<CallerIdBucketData> | undefined, b: CallerIdBucketData | PlainMessage<CallerIdBucketData> | undefined): boolean;
}

/**
 * TransferCallSettings is an entity containing the hunt group settings for the
 * Transfer Call section of the hunt group settings manager.
 *
 * @generated from message api.commons.org.TransferCallSettings
 */
export declare class TransferCallSettings extends Message<TransferCallSettings> {
  /**
   * Allow the agent to make transfer calls.
   *
   * @generated from field: bool enable_transfer = 1;
   */
  enableTransfer: boolean;

  /**
   * Allowed hand-off types for transfer calls.
   *
   * @generated from field: api.commons.org.TransferCallSettings.HandOffTypes hand_off_types = 2;
   */
  handOffTypes?: TransferCallSettings_HandOffTypes;

  /**
   * Indicates start, stop or keep current recording status on transfer.
   *
   * @generated from field: api.commons.TransferRecordingStatus recording_status = 3;
   */
  recordingStatus: TransferRecordingStatus;

  /**
   * Indicates type of allowed transfer types.
   *
   * @generated from field: api.commons.org.TransferCallSettings.TransferTypes transfer_types = 4;
   */
  transferTypes?: TransferCallSettings_TransferTypes;

  /**
   * Indicates whether or not to display.
   *
   * @generated from field: bool display_transfer_number_phone_book = 5;
   */
  displayTransferNumberPhoneBook: boolean;

  /**
   * Indicates whether to allow the agent to edit the transfer number.
   *
   * @generated from field: bool enable_transfer_number_editing = 6;
   */
  enableTransferNumberEditing: boolean;

  /**
   * The default transfer number prepopulated in the text box.
   *
   * @generated from field: string default_transfer_number = 7;
   */
  defaultTransferNumber: string;

  /**
   * Transfer numbers which will initiate recording the call.
   *
   * @generated from field: repeated string start_recording_numbers = 8;
   */
  startRecordingNumbers: string[];

  /**
   * Transfer numbers which will stop recording the call.
   *
   * @generated from field: repeated string stop_recording_numbers = 9;
   */
  stopRecordingNumbers: string[];

  /**
   * The default country to use with the transfer number.
   *
   * @generated from field: api.commons.Country transfer_number_country = 10;
   */
  transferNumberCountry: Country;

  /**
   * Indicate whether to display the country select menu.
   *
   * @generated from field: bool display_transfer_country_selection = 11;
   */
  displayTransferCountrySelection: boolean;

  /**
   * Indicate whether to display the caller ID phone book.
   *
   * @generated from field: bool display_caller_id_phone_book = 12;
   */
  displayCallerIdPhoneBook: boolean;

  /**
   * Indicates whether to allow the agent to edit the caller ID.
   *
   * @generated from field: bool enable_caller_id_editing = 13;
   */
  enableCallerIdEditing: boolean;

  /**
   * The default caller ID prepopulated in the text box.
   *
   * @generated from field: api.commons.org.TransferCallSettings.DefaultCallerId default_caller_id = 14;
   */
  defaultCallerId?: TransferCallSettings_DefaultCallerId;

  /**
   * The default country to use with the caller ID.
   *
   * @generated from field: api.commons.Country caller_id_country = 15;
   */
  callerIdCountry: Country;

  /**
   * Indicates whether to display the caller ID country select menu.
   *
   * @generated from field: bool display_caller_id_country_selection = 16;
   */
  displayCallerIdCountrySelection: boolean;

  /**
   * Indicates whether to display agent transfer filtering to the agent.
   *
   * @generated from field: bool display_agent_transfer_filtering = 17;
   */
  displayAgentTransferFiltering: boolean;

  /**
   * Indicates whether to filter agents by default.
   *
   * @generated from field: bool default_agent_transfer_filtering = 18;
   */
  defaultAgentTransferFiltering: boolean;

  /**
   * Indicates whether to limit transferring to agents in the same hunt group.
   *
   * @generated from field: bool enable_hunt_group_filtering = 19;
   */
  enableHuntGroupFiltering: boolean;

  /**
   * The name of the Requeue Transfer Queue Configuration.
   *
   * @generated from field: api.commons.org.TransferCallSettings.RequeueQueueConfiguration requeue_queue_config = 20;
   */
  requeueQueueConfig?: TransferCallSettings_RequeueQueueConfiguration;

  /**
   * Disallow specific agent skills for requeue transfer routing.
   *
   * @generated from field: api.commons.org.TransferCallSettings.RequeueTransferDisallowed requeue_transfer_disallowed = 21;
   */
  requeueTransferDisallowed?: TransferCallSettings_RequeueTransferDisallowed;

  /**
   * Disallow specific PBX extensions for PBX transfers.
   *
   * @generated from field: api.commons.org.TransferCallSettings.PbxTransferDisallowed pbx_transfer_disallowed = 22;
   */
  pbxTransferDisallowed?: TransferCallSettings_PbxTransferDisallowed;

  /**
   * Allow agent to override scrub decisions.
   *
   * @generated from field: bool enable_scrub_override = 23;
   */
  enableScrubOverride: boolean;

  /**
   * Indicates whether to apply the whitelist to transfer call scrubbing.
   *
   * @generated from field: bool enable_whitelist = 24;
   */
  enableWhitelist: boolean;

  /**
   * Whether and what NLC compliance rule to apply.
   *
   * @generated from field: api.commons.org.NaturalLanguageComplianceScrub natural_compliance_scrub = 25;
   */
  naturalComplianceScrub?: NaturalLanguageComplianceScrub;

  /**
   * Transfer call natural language compliance metadata.
   * `Optional Transfer Compliance Metadata`
   * `Required Transfer Compliance Metadata`
   *
   * @generated from field: api.commons.org.NaturalLanguageComplianceMetadata natural_language_compliance_metadata = 26;
   */
  naturalLanguageComplianceMetadata?: NaturalLanguageComplianceMetadata;

  constructor(data?: PartialMessage<TransferCallSettings>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.TransferCallSettings";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferCallSettings;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferCallSettings;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferCallSettings;

  static equals(a: TransferCallSettings | PlainMessage<TransferCallSettings> | undefined, b: TransferCallSettings | PlainMessage<TransferCallSettings> | undefined): boolean;
}

/**
 * HandOffTypes indicates which Hand-off types the agent may use.
 *
 * @generated from message api.commons.org.TransferCallSettings.HandOffTypes
 */
export declare class TransferCallSettings_HandOffTypes extends Message<TransferCallSettings_HandOffTypes> {
  /**
   * @generated from field: bool enable_conference = 1;
   */
  enableConference: boolean;

  /**
   * @generated from field: bool enable_warm = 2;
   */
  enableWarm: boolean;

  /**
   * @generated from field: bool enable_cold = 3;
   */
  enableCold: boolean;

  constructor(data?: PartialMessage<TransferCallSettings_HandOffTypes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.TransferCallSettings.HandOffTypes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferCallSettings_HandOffTypes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferCallSettings_HandOffTypes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferCallSettings_HandOffTypes;

  static equals(a: TransferCallSettings_HandOffTypes | PlainMessage<TransferCallSettings_HandOffTypes> | undefined, b: TransferCallSettings_HandOffTypes | PlainMessage<TransferCallSettings_HandOffTypes> | undefined): boolean;
}

/**
 * TransferTypes indicates which transfer types the agent may use.
 *
 * @generated from message api.commons.org.TransferCallSettings.TransferTypes
 */
export declare class TransferCallSettings_TransferTypes extends Message<TransferCallSettings_TransferTypes> {
  /**
   * @generated from field: bool enable_agent_transfer = 1;
   */
  enableAgentTransfer: boolean;

  /**
   * @generated from field: bool enable_open_transfer = 2;
   */
  enableOpenTransfer: boolean;

  /**
   * @generated from field: bool enable_requeue_transfer = 3;
   */
  enableRequeueTransfer: boolean;

  /**
   * @generated from field: bool enable_pbx_extension_transfer = 4;
   */
  enablePbxExtensionTransfer: boolean;

  /**
   * @generated from field: bool enable_voicemail_transfer = 5;
   */
  enableVoicemailTransfer: boolean;

  constructor(data?: PartialMessage<TransferCallSettings_TransferTypes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.TransferCallSettings.TransferTypes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferCallSettings_TransferTypes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferCallSettings_TransferTypes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferCallSettings_TransferTypes;

  static equals(a: TransferCallSettings_TransferTypes | PlainMessage<TransferCallSettings_TransferTypes> | undefined, b: TransferCallSettings_TransferTypes | PlainMessage<TransferCallSettings_TransferTypes> | undefined): boolean;
}

/**
 * RequeueTransferDisallowed if enabled, prohibits skills/hunt groups.
 *
 * @generated from message api.commons.org.TransferCallSettings.RequeueTransferDisallowed
 */
export declare class TransferCallSettings_RequeueTransferDisallowed extends Message<TransferCallSettings_RequeueTransferDisallowed> {
  /**
   * @generated from field: bool enable = 1;
   */
  enable: boolean;

  /**
   * @generated from field: repeated int64 agent_skill_sids = 2;
   */
  agentSkillSids: bigint[];

  /**
   * @generated from field: repeated int64 hunt_group_sids = 3;
   */
  huntGroupSids: bigint[];

  constructor(data?: PartialMessage<TransferCallSettings_RequeueTransferDisallowed>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.TransferCallSettings.RequeueTransferDisallowed";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferCallSettings_RequeueTransferDisallowed;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferCallSettings_RequeueTransferDisallowed;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferCallSettings_RequeueTransferDisallowed;

  static equals(a: TransferCallSettings_RequeueTransferDisallowed | PlainMessage<TransferCallSettings_RequeueTransferDisallowed> | undefined, b: TransferCallSettings_RequeueTransferDisallowed | PlainMessage<TransferCallSettings_RequeueTransferDisallowed> | undefined): boolean;
}

/**
 * PbxTransferDisallowed if enabled, prohibits these extensions.
 *
 * @generated from message api.commons.org.TransferCallSettings.PbxTransferDisallowed
 */
export declare class TransferCallSettings_PbxTransferDisallowed extends Message<TransferCallSettings_PbxTransferDisallowed> {
  /**
   * @generated from field: bool enable = 1;
   */
  enable: boolean;

  /**
   * @generated from field: repeated string extensions = 2;
   */
  extensions: string[];

  constructor(data?: PartialMessage<TransferCallSettings_PbxTransferDisallowed>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.TransferCallSettings.PbxTransferDisallowed";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferCallSettings_PbxTransferDisallowed;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferCallSettings_PbxTransferDisallowed;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferCallSettings_PbxTransferDisallowed;

  static equals(a: TransferCallSettings_PbxTransferDisallowed | PlainMessage<TransferCallSettings_PbxTransferDisallowed> | undefined, b: TransferCallSettings_PbxTransferDisallowed | PlainMessage<TransferCallSettings_PbxTransferDisallowed> | undefined): boolean;
}

/**
 * RequeueQueueConfiguration indicates which config to use on transfer.
 *
 * @generated from message api.commons.org.TransferCallSettings.RequeueQueueConfiguration
 */
export declare class TransferCallSettings_RequeueQueueConfiguration extends Message<TransferCallSettings_RequeueQueueConfiguration> {
  /**
   * @generated from field: api.commons.RequeueTransferQueueConfig usage = 1;
   */
  usage: RequeueTransferQueueConfig;

  /**
   * @generated from field: string custom_name = 2;
   */
  customName: string;

  constructor(data?: PartialMessage<TransferCallSettings_RequeueQueueConfiguration>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.TransferCallSettings.RequeueQueueConfiguration";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferCallSettings_RequeueQueueConfiguration;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferCallSettings_RequeueQueueConfiguration;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferCallSettings_RequeueQueueConfiguration;

  static equals(a: TransferCallSettings_RequeueQueueConfiguration | PlainMessage<TransferCallSettings_RequeueQueueConfiguration> | undefined, b: TransferCallSettings_RequeueQueueConfiguration | PlainMessage<TransferCallSettings_RequeueQueueConfiguration> | undefined): boolean;
}

/**
 * DefaultCallerId indicates custom or 3rd party and number (if needed).
 *
 * @generated from message api.commons.org.TransferCallSettings.DefaultCallerId
 */
export declare class TransferCallSettings_DefaultCallerId extends Message<TransferCallSettings_DefaultCallerId> {
  /**
   * @generated from field: api.commons.DefaultTransferCallerId usage = 1;
   */
  usage: DefaultTransferCallerId;

  /**
   * @generated from field: string custom_caller_id = 2;
   */
  customCallerId: string;

  constructor(data?: PartialMessage<TransferCallSettings_DefaultCallerId>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.TransferCallSettings.DefaultCallerId";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferCallSettings_DefaultCallerId;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferCallSettings_DefaultCallerId;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferCallSettings_DefaultCallerId;

  static equals(a: TransferCallSettings_DefaultCallerId | PlainMessage<TransferCallSettings_DefaultCallerId> | undefined, b: TransferCallSettings_DefaultCallerId | PlainMessage<TransferCallSettings_DefaultCallerId> | undefined): boolean;
}

/**
 * NumberHistorySettings is an entity containing the hunt group settings for the
 * Number History section of the hunt group settings manager.
 *
 * @generated from message api.commons.org.NumberHistorySettings
 */
export declare class NumberHistorySettings extends Message<NumberHistorySettings> {
  /**
   * Allow the agent to access number history search.
   *
   * @generated from field: bool enable_search = 1;
   */
  enableSearch: boolean;

  /**
   * Allow the export of the number history report.
   *
   * @generated from field: bool enable_report_download = 2;
   */
  enableReportDownload: boolean;

  /**
   * Allow the export of the number history related call recordings.
   *
   * @generated from field: bool enable_recordings_download = 3;
   */
  enableRecordingsDownload: boolean;

  /**
   * Allow the agent to edit number history related agent call responses.
   *
   * @generated from field: bool enable_agent_response_editing = 4;
   */
  enableAgentResponseEditing: boolean;

  constructor(data?: PartialMessage<NumberHistorySettings>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.NumberHistorySettings";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NumberHistorySettings;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NumberHistorySettings;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NumberHistorySettings;

  static equals(a: NumberHistorySettings | PlainMessage<NumberHistorySettings> | undefined, b: NumberHistorySettings | PlainMessage<NumberHistorySettings> | undefined): boolean;
}

/**
 * Sets of rules that manage automatically adding responses to the DNCL
 *
 * @generated from message api.commons.org.AgentResponseAutoRuleSet
 */
export declare class AgentResponseAutoRuleSet extends Message<AgentResponseAutoRuleSet> {
  /**
   * The ID of the ruleset
   *
   * @generated from field: int64 ruleset_sid = 1;
   */
  rulesetSid: bigint;

  /**
   * The name of the ruleset
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * The description of the ruleset
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * This country should be from the allowed list
   *
   * @generated from field: api.commons.Country country = 4;
   */
  country: Country;

  /**
   * List of Agent Call Responses with comparitors and durations
   *
   * @generated from field: repeated api.commons.org.AutoResponseChoice responses = 5;
   */
  responses: AutoResponseChoice[];

  constructor(data?: PartialMessage<AgentResponseAutoRuleSet>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.AgentResponseAutoRuleSet";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentResponseAutoRuleSet;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentResponseAutoRuleSet;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentResponseAutoRuleSet;

  static equals(a: AgentResponseAutoRuleSet | PlainMessage<AgentResponseAutoRuleSet> | undefined, b: AgentResponseAutoRuleSet | PlainMessage<AgentResponseAutoRuleSet> | undefined): boolean;
}

/**
 * An Agent Call Response with comparitors and duration
 *
 * @generated from message api.commons.org.AutoResponseChoice
 */
export declare class AutoResponseChoice extends Message<AutoResponseChoice> {
  /**
   * The name of the agent call response
   *
   * @generated from field: string agent_call_response = 1;
   */
  agentCallResponse: string;

  /**
   * List of comparitors with duration
   *
   * @generated from field: repeated api.commons.org.AgentResponseComparitors comparitors = 2;
   */
  comparitors: AgentResponseComparitors[];

  constructor(data?: PartialMessage<AutoResponseChoice>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.AutoResponseChoice";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AutoResponseChoice;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AutoResponseChoice;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AutoResponseChoice;

  static equals(a: AutoResponseChoice | PlainMessage<AutoResponseChoice> | undefined, b: AutoResponseChoice | PlainMessage<AutoResponseChoice> | undefined): boolean;
}

/**
 * A list of agent entries and duration to use to determine addition to DNCL
 *
 * @generated from message api.commons.org.AgentResponseComparitors
 */
export declare class AgentResponseComparitors extends Message<AgentResponseComparitors> {
  /**
   * Value is a string option that will compare against the agent response
   *
   * @generated from field: string value = 1;
   */
  value: string;

  /**
   * Expiration is expressed in number of hours
   *
   * @generated from field: int64 expiration = 2;
   */
  expiration: bigint;

  constructor(data?: PartialMessage<AgentResponseComparitors>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.AgentResponseComparitors";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentResponseComparitors;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentResponseComparitors;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentResponseComparitors;

  static equals(a: AgentResponseComparitors | PlainMessage<AgentResponseComparitors> | undefined, b: AgentResponseComparitors | PlainMessage<AgentResponseComparitors> | undefined): boolean;
}

/**
 * A template used to describe a client info display
 *
 * @generated from message api.commons.org.ClientInfoDisplayTemplate
 */
export declare class ClientInfoDisplayTemplate extends Message<ClientInfoDisplayTemplate> {
  /**
   * The template sid of the client info display template
   *
   * @generated from field: string template_sid = 1;
   */
  templateSid: string;

  /**
   * The name of the client info display template
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * The description of the client info display template
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Bool used to determine whether to show all fields in a client info display template
   *
   * @generated from field: bool display_all_fields = 4;
   */
  displayAllFields: boolean;

  /**
   * The dialed number field style of a client info display template
   *
   * @generated from field: api.commons.org.DialedNumberFieldStyle dialed_number_field_style = 5;
   */
  dialedNumberFieldStyle?: DialedNumberFieldStyle;

  /**
   * A list of Contact Field Styles for a client info display template
   *
   * @generated from field: repeated api.commons.org.ContactFieldStyle contact_field_styles = 6;
   */
  contactFieldStyles: ContactFieldStyle[];

  /**
   * The template type
   *
   * @generated from field: api.commons.org.TemplateCategory template_category = 7;
   */
  templateCategory: TemplateCategory;

  constructor(data?: PartialMessage<ClientInfoDisplayTemplate>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.ClientInfoDisplayTemplate";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClientInfoDisplayTemplate;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClientInfoDisplayTemplate;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClientInfoDisplayTemplate;

  static equals(a: ClientInfoDisplayTemplate | PlainMessage<ClientInfoDisplayTemplate> | undefined, b: ClientInfoDisplayTemplate | PlainMessage<ClientInfoDisplayTemplate> | undefined): boolean;
}

/**
 * FieldStyle describes a particular field within a client info display
 *
 * @generated from message api.commons.org.FieldStyle
 */
export declare class FieldStyle extends Message<FieldStyle> {
  /**
   * Text color of a field style
   *
   * @generated from field: string text_color = 1;
   */
  textColor: string;

  /**
   * Background color of a field style
   *
   * @generated from field: string background_color = 2;
   */
  backgroundColor: string;

  /**
   * Allow the agent to copy this field style
   *
   * @generated from field: bool allow_agent_copy = 3;
   */
  allowAgentCopy: boolean;

  constructor(data?: PartialMessage<FieldStyle>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.FieldStyle";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FieldStyle;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FieldStyle;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FieldStyle;

  static equals(a: FieldStyle | PlainMessage<FieldStyle> | undefined, b: FieldStyle | PlainMessage<FieldStyle> | undefined): boolean;
}

/**
 * The ContactFieldStyle contains the description id
 * and the field style for a particular contact field
 *
 * @generated from message api.commons.org.ContactFieldStyle
 */
export declare class ContactFieldStyle extends Message<ContactFieldStyle> {
  /**
   * The description id of the contact field style
   *
   * @generated from field: int64 description_id = 1;
   */
  descriptionId: bigint;

  /**
   * The field style of the contact field
   *
   * @generated from field: api.commons.org.FieldStyle field_style = 2;
   */
  fieldStyle?: FieldStyle;

  constructor(data?: PartialMessage<ContactFieldStyle>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.ContactFieldStyle";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContactFieldStyle;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContactFieldStyle;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContactFieldStyle;

  static equals(a: ContactFieldStyle | PlainMessage<ContactFieldStyle> | undefined, b: ContactFieldStyle | PlainMessage<ContactFieldStyle> | undefined): boolean;
}

/**
 * The DialedNumberFieldStyle contains the field style for Dialed Number Field
 *
 * @generated from message api.commons.org.DialedNumberFieldStyle
 */
export declare class DialedNumberFieldStyle extends Message<DialedNumberFieldStyle> {
  /**
   * The field style of the dialed number field
   *
   * @generated from field: api.commons.org.FieldStyle field_style = 1;
   */
  fieldStyle?: FieldStyle;

  /**
   * Display the dialed number field to the agent
   *
   * @generated from field: bool display_to_agent = 2;
   */
  displayToAgent: boolean;

  constructor(data?: PartialMessage<DialedNumberFieldStyle>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.DialedNumberFieldStyle";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DialedNumberFieldStyle;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DialedNumberFieldStyle;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DialedNumberFieldStyle;

  static equals(a: DialedNumberFieldStyle | PlainMessage<DialedNumberFieldStyle> | undefined, b: DialedNumberFieldStyle | PlainMessage<DialedNumberFieldStyle> | undefined): boolean;
}

/**
 * DataDipConfig is a proto recreation of the XML structure.
 *
 * @generated from message api.commons.org.DataDipConfig
 */
export declare class DataDipConfig extends Message<DataDipConfig> {
  /**
   * @generated from field: string config_name = 1;
   */
  configName: string;

  /**
   * @generated from field: string config_type = 2;
   */
  configType: string;

  /**
   * @generated from field: string remote_url = 3;
   */
  remoteUrl: string;

  /**
   * @generated from field: repeated api.commons.org.DataDipConfig.ParamTypeValueTuple param_type_value_tuples = 4;
   */
  paramTypeValueTuples: DataDipConfig_ParamTypeValueTuple[];

  /**
   * @generated from field: repeated api.commons.org.DataDipConfig.Param params = 5;
   */
  params: DataDipConfig_Param[];

  /**
   * @generated from field: repeated api.commons.org.DataDipConfig.ReturnData data = 6;
   */
  data: DataDipConfig_ReturnData[];

  /**
   * @generated from field: string request_method = 7;
   */
  requestMethod: string;

  /**
   * @generated from field: int64 xml_client_property_sid = 8;
   */
  xmlClientPropertySid: bigint;

  /**
   * @generated from field: repeated api.commons.org.DataDipConfig.Header headers = 9;
   */
  headers: DataDipConfig_Header[];

  constructor(data?: PartialMessage<DataDipConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.DataDipConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataDipConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataDipConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataDipConfig;

  static equals(a: DataDipConfig | PlainMessage<DataDipConfig> | undefined, b: DataDipConfig | PlainMessage<DataDipConfig> | undefined): boolean;
}

/**
 * @generated from message api.commons.org.DataDipConfig.Param
 */
export declare class DataDipConfig_Param extends Message<DataDipConfig_Param> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string value = 2;
   */
  value: string;

  /**
   * @generated from field: string param_type = 3;
   */
  paramType: string;

  /**
   * @generated from field: repeated api.commons.org.DataDipConfig.ParamTypeValueTuple composite_value = 4;
   */
  compositeValue: DataDipConfig_ParamTypeValueTuple[];

  constructor(data?: PartialMessage<DataDipConfig_Param>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.DataDipConfig.Param";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataDipConfig_Param;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataDipConfig_Param;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataDipConfig_Param;

  static equals(a: DataDipConfig_Param | PlainMessage<DataDipConfig_Param> | undefined, b: DataDipConfig_Param | PlainMessage<DataDipConfig_Param> | undefined): boolean;
}

/**
 * @generated from message api.commons.org.DataDipConfig.ParamTypeValueTuple
 */
export declare class DataDipConfig_ParamTypeValueTuple extends Message<DataDipConfig_ParamTypeValueTuple> {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: string value = 2;
   */
  value: string;

  constructor(data?: PartialMessage<DataDipConfig_ParamTypeValueTuple>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.DataDipConfig.ParamTypeValueTuple";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataDipConfig_ParamTypeValueTuple;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataDipConfig_ParamTypeValueTuple;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataDipConfig_ParamTypeValueTuple;

  static equals(a: DataDipConfig_ParamTypeValueTuple | PlainMessage<DataDipConfig_ParamTypeValueTuple> | undefined, b: DataDipConfig_ParamTypeValueTuple | PlainMessage<DataDipConfig_ParamTypeValueTuple> | undefined): boolean;
}

/**
 * @generated from message api.commons.org.DataDipConfig.ReturnData
 */
export declare class DataDipConfig_ReturnData extends Message<DataDipConfig_ReturnData> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string access_type = 2;
   */
  accessType: string;

  constructor(data?: PartialMessage<DataDipConfig_ReturnData>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.DataDipConfig.ReturnData";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataDipConfig_ReturnData;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataDipConfig_ReturnData;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataDipConfig_ReturnData;

  static equals(a: DataDipConfig_ReturnData | PlainMessage<DataDipConfig_ReturnData> | undefined, b: DataDipConfig_ReturnData | PlainMessage<DataDipConfig_ReturnData> | undefined): boolean;
}

/**
 * @generated from message api.commons.org.DataDipConfig.Header
 */
export declare class DataDipConfig_Header extends Message<DataDipConfig_Header> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string value = 2;
   */
  value: string;

  /**
   * @generated from field: string header_type = 3;
   */
  headerType: string;

  /**
   * @generated from field: repeated api.commons.org.DataDipConfig.ParamTypeValueTuple param_type_value_tuples = 4;
   */
  paramTypeValueTuples: DataDipConfig_ParamTypeValueTuple[];

  constructor(data?: PartialMessage<DataDipConfig_Header>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.DataDipConfig.Header";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataDipConfig_Header;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataDipConfig_Header;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataDipConfig_Header;

  static equals(a: DataDipConfig_Header | PlainMessage<DataDipConfig_Header> | undefined, b: DataDipConfig_Header | PlainMessage<DataDipConfig_Header> | undefined): boolean;
}

/**
 * IntegrationLink defines a link between a hunt group and an integration.
 *
 * @generated from message api.commons.org.IntegrationLink
 */
export declare class IntegrationLink extends Message<IntegrationLink> {
  /**
   * @generated from field: int64 integration_id = 1;
   */
  integrationId: bigint;

  /**
   * @generated from field: int64 parameter_sid = 2;
   */
  parameterSid: bigint;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * @generated from field: int64 method_id = 5;
   */
  methodId: bigint;

  /**
   * @generated from field: int64 order = 6;
   */
  order: bigint;

  /**
   * @generated from field: repeated api.commons.org.IntegrationLinkParameter parameters = 7;
   */
  parameters: IntegrationLinkParameter[];

  constructor(data?: PartialMessage<IntegrationLink>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.IntegrationLink";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IntegrationLink;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IntegrationLink;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IntegrationLink;

  static equals(a: IntegrationLink | PlainMessage<IntegrationLink> | undefined, b: IntegrationLink | PlainMessage<IntegrationLink> | undefined): boolean;
}

/**
 * IntegrationLinkParameter defines a parameter for an integration link.
 *
 * @generated from message api.commons.org.IntegrationLinkParameter
 */
export declare class IntegrationLinkParameter extends Message<IntegrationLinkParameter> {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: repeated api.commons.org.IntegrationLinkSubParameter sub_parameters = 2;
   */
  subParameters: IntegrationLinkSubParameter[];

  constructor(data?: PartialMessage<IntegrationLinkParameter>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.IntegrationLinkParameter";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IntegrationLinkParameter;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IntegrationLinkParameter;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IntegrationLinkParameter;

  static equals(a: IntegrationLinkParameter | PlainMessage<IntegrationLinkParameter> | undefined, b: IntegrationLinkParameter | PlainMessage<IntegrationLinkParameter> | undefined): boolean;
}

/**
 * IntegrationLinkSubParameter defines a sub parameter for an integration link.
 *
 * @generated from message api.commons.org.IntegrationLinkSubParameter
 */
export declare class IntegrationLinkSubParameter extends Message<IntegrationLinkSubParameter> {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: repeated api.commons.org.IntegrationLinkSubParameterPart parts = 2;
   */
  parts: IntegrationLinkSubParameterPart[];

  constructor(data?: PartialMessage<IntegrationLinkSubParameter>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.IntegrationLinkSubParameter";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IntegrationLinkSubParameter;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IntegrationLinkSubParameter;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IntegrationLinkSubParameter;

  static equals(a: IntegrationLinkSubParameter | PlainMessage<IntegrationLinkSubParameter> | undefined, b: IntegrationLinkSubParameter | PlainMessage<IntegrationLinkSubParameter> | undefined): boolean;
}

/**
 * IntegrationLinkSubParameterPart defines a part of a sub parameter for an integration link.
 *
 * @generated from message api.commons.org.IntegrationLinkSubParameterPart
 */
export declare class IntegrationLinkSubParameterPart extends Message<IntegrationLinkSubParameterPart> {
  /**
   * @generated from field: int64 contact_field_sid = 1;
   */
  contactFieldSid: bigint;

  /**
   * @generated from field: string helper_value = 2;
   */
  helperValue: string;

  /**
   * @generated from field: api.commons.org.ParameterSourceType parameter_source_type = 3;
   */
  parameterSourceType: ParameterSourceType;

  constructor(data?: PartialMessage<IntegrationLinkSubParameterPart>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.IntegrationLinkSubParameterPart";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IntegrationLinkSubParameterPart;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IntegrationLinkSubParameterPart;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IntegrationLinkSubParameterPart;

  static equals(a: IntegrationLinkSubParameterPart | PlainMessage<IntegrationLinkSubParameterPart> | undefined, b: IntegrationLinkSubParameterPart | PlainMessage<IntegrationLinkSubParameterPart> | undefined): boolean;
}


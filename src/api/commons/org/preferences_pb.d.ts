// @generated by protoc-gen-es v1.4.1 with parameter "target=js+dts"
// @generated from file api/commons/org/preferences.proto (package api.commons.org, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Country } from "../country_pb.js";
import type { AgentInfoSortBy, DefaultDuplicateHandling, DisplayLanguage, QueueInfoSortBy, RecordingFileType, StandardImportFormat, TimeZone } from "../org_pb.js";
import type { AnsweringMachineDetection, BroadcastTemplateOrdering, ScheduleByTimeZoneScope, StandardReportFilter } from "../org_preferences_pb.js";
import type { DialOrderType } from "../lms_pb.js";
import type { AnaTimeZone } from "../ana_pb.js";

/**
 * General preferences controlling organization properties.
 *
 * @generated from message api.commons.org.OrganizationPreferences
 */
export declare class OrganizationPreferences extends Message<OrganizationPreferences> {
  /**
   * Org ID.
   *
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * Organization's default country.
   *
   * @generated from field: api.commons.Country default_country = 10;
   */
  defaultCountry: Country;

  /**
   * Operating time zone of organization.
   *
   * @generated from field: api.commons.TimeZone time_zone = 11;
   */
  timeZone: TimeZone;

  /**
   * Display language for users of the organization.
   *
   * @generated from field: api.commons.DisplayLanguage display_language = 12;
   */
  displayLanguage: DisplayLanguage;

  constructor(data?: PartialMessage<OrganizationPreferences>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.OrganizationPreferences";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrganizationPreferences;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrganizationPreferences;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrganizationPreferences;

  static equals(a: OrganizationPreferences | PlainMessage<OrganizationPreferences> | undefined, b: OrganizationPreferences | PlainMessage<OrganizationPreferences> | undefined): boolean;
}

/**
 * Preferences controlling direct agent properties.
 *
 * @generated from message api.commons.org.AgentPreferences
 */
export declare class AgentPreferences extends Message<AgentPreferences> {
  /**
   * Org ID.
   *
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * Default agent dial-in number.
   *
   * @generated from field: string default_agent_dial_in = 10;
   */
  defaultAgentDialIn: string;

  /**
   * PBX dial extension length, between 3 to 9 digits long.
   *
   * @generated from field: int32 pbx_extension_length = 11;
   */
  pbxExtensionLength: number;

  /**
   * Default agent softphone input volume, 0-100%.
   *
   * @generated from field: int32 default_softphone_volume_in = 12;
   */
  defaultSoftphoneVolumeIn: number;

  /**
   * Default agent softphone output volume, 0-100%.
   *
   * @generated from field: int32 default_softphone_volume_out = 13;
   */
  defaultSoftphoneVolumeOut: number;

  /**
   * List of agent dial-in numbers defined by regional skunk config.
   *
   * @generated from field: repeated string config_dial_in_numbers = 14;
   */
  configDialInNumbers: string[];

  /**
   * List of customized client-defined dial-in numbers.
   *
   * @generated from field: repeated string client_dial_in_numbers = 15;
   */
  clientDialInNumbers: string[];

  /**
   * Allows agent to use privacy headers on the manual dial caller ID.
   *
   * @generated from field: bool manual_dial_caller_id_privacy = 16;
   */
  manualDialCallerIdPrivacy: boolean;

  /**
   * The default/initial setting for caller ID privacy.
   *
   * @generated from field: bool use_manual_dial_caller_id_privacy = 17;
   */
  useManualDialCallerIdPrivacy: boolean;

  constructor(data?: PartialMessage<AgentPreferences>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.AgentPreferences";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentPreferences;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentPreferences;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentPreferences;

  static equals(a: AgentPreferences | PlainMessage<AgentPreferences> | undefined, b: AgentPreferences | PlainMessage<AgentPreferences> | undefined): boolean;
}

/**
 * Preferences for contact lists.
 *
 * @generated from message api.commons.org.ContactPreferences
 */
export declare class ContactPreferences extends Message<ContactPreferences> {
  /**
   * Org ID.
   *
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * Default import format, either custom of standardized.
   *
   * @generated from field: api.commons.org.ImportFormat default_contact_import_format = 10;
   */
  defaultContactImportFormat?: ImportFormat;

  /**
   * Whether the selected contact import format preference is used.
   *
   * @generated from field: bool use_contact_import_format = 11;
   */
  useContactImportFormat: boolean;

  /**
   * Default area code, either custom or predefined field.
   *
   * @generated from field: api.commons.org.ContactAreaCode default_contact_area_code = 12;
   */
  defaultContactAreaCode?: ContactAreaCode;

  /**
   * Whether the contact area code is enabled.
   *
   * @generated from field: bool use_contact_area_code = 13;
   */
  useContactAreaCode: boolean;

  /**
   * Default absent numbers handling; false to keep (default) or true to
   * discard recording.
   *
   * @generated from field: bool discard_record_default_absent_numbers_handling = 14;
   */
  discardRecordDefaultAbsentNumbersHandling: boolean;

  /**
   * Whether contacts import randomization is enabled.
   *
   * @generated from field: bool default_contacts_import_randomization = 15;
   */
  defaultContactsImportRandomization: boolean;

  /**
   * The contact field to use as the default in emails.
   *
   * @generated from field: string default_email_column = 16;
   */
  defaultEmailColumn: string;

  /**
   * How duplicate contact numbers are handled by default.
   *
   * @generated from field: api.commons.DefaultDuplicateHandling default_duplicate_handling = 17;
   */
  defaultDuplicateHandling: DefaultDuplicateHandling;

  constructor(data?: PartialMessage<ContactPreferences>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.ContactPreferences";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContactPreferences;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContactPreferences;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContactPreferences;

  static equals(a: ContactPreferences | PlainMessage<ContactPreferences> | undefined, b: ContactPreferences | PlainMessage<ContactPreferences> | undefined): boolean;
}

/**
 * Contact import template type.
 *
 * @generated from message api.commons.org.ImportFormat
 */
export declare class ImportFormat extends Message<ImportFormat> {
  /**
   * @generated from oneof api.commons.org.ImportFormat.format
   */
  format: {
    /**
     * Import format enum choice.
     *
     * @generated from field: api.commons.StandardImportFormat standard = 1;
     */
    value: StandardImportFormat;
    case: "standard";
  } | {
    /**
     * Client-defined import format.
     *
     * @generated from field: api.commons.org.CustomImportFormat custom = 2;
     */
    value: CustomImportFormat;
    case: "custom";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<ImportFormat>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.ImportFormat";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportFormat;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportFormat;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportFormat;

  static equals(a: ImportFormat | PlainMessage<ImportFormat> | undefined, b: ImportFormat | PlainMessage<ImportFormat> | undefined): boolean;
}

/**
 * Contact import format properties.
 *
 * @generated from message api.commons.org.CustomImportFormat
 */
export declare class CustomImportFormat extends Message<CustomImportFormat> {
  /**
   * Contact import template sid.
   *
   * @generated from field: int64 id = 1;
   */
  id: bigint;

  /**
   * Import format name.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  constructor(data?: PartialMessage<CustomImportFormat>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.CustomImportFormat";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CustomImportFormat;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CustomImportFormat;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CustomImportFormat;

  static equals(a: CustomImportFormat | PlainMessage<CustomImportFormat> | undefined, b: CustomImportFormat | PlainMessage<CustomImportFormat> | undefined): boolean;
}

/**
 * Contact area code type.
 *
 * @generated from message api.commons.org.ContactAreaCode
 */
export declare class ContactAreaCode extends Message<ContactAreaCode> {
  /**
   * @generated from oneof api.commons.org.ContactAreaCode.area_code
   */
  areaCode: {
    /**
     * Contact field description with ID and name.
     *
     * @generated from field: api.commons.org.ContactFieldDescription cfd = 1;
     */
    value: ContactFieldDescription;
    case: "cfd";
  } | {
    /**
     * Client-defined area code number.
     *
     * @generated from field: int32 custom = 2;
     */
    value: number;
    case: "custom";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<ContactAreaCode>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.ContactAreaCode";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContactAreaCode;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContactAreaCode;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContactAreaCode;

  static equals(a: ContactAreaCode | PlainMessage<ContactAreaCode> | undefined, b: ContactAreaCode | PlainMessage<ContactAreaCode> | undefined): boolean;
}

/**
 * Contact field description information.
 *
 * @generated from message api.commons.org.ContactFieldDescription
 */
export declare class ContactFieldDescription extends Message<ContactFieldDescription> {
  /**
   * Contact field description sid.
   *
   * @generated from field: int64 id = 1;
   */
  id: bigint;

  /**
   * Contact field name.
   *
   * @generated from field: string field_name = 2;
   */
  fieldName: string;

  /**
   * Whether this field holds a phone number.
   *
   * @generated from field: bool is_phone = 3;
   */
  isPhone: boolean;

  /**
   * Special formatting.
   *
   * @generated from field: string display_format_string = 4;
   */
  displayFormatString: string;

  constructor(data?: PartialMessage<ContactFieldDescription>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.ContactFieldDescription";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContactFieldDescription;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContactFieldDescription;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContactFieldDescription;

  static equals(a: ContactFieldDescription | PlainMessage<ContactFieldDescription> | undefined, b: ContactFieldDescription | PlainMessage<ContactFieldDescription> | undefined): boolean;
}

/**
 * Preferences for controlling the organization's authentication properties.
 *
 * @generated from message api.commons.org.AuthenticationPreferences
 */
export declare class AuthenticationPreferences extends Message<AuthenticationPreferences> {
  /**
   * Org ID.
   *
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * Use IP based authorization.
   *
   * @generated from field: bool authorization_via_ip = 10;
   */
  authorizationViaIp: boolean;

  /**
   * List of whitelisted IPs.
   *
   * @generated from field: repeated string allowed_ips = 11;
   */
  allowedIps: string[];

  /**
   * Agent API key.
   *
   * @generated from field: string agent_api_key = 12;
   */
  agentApiKey: string;

  /**
   * Whether or not two factor authentication is enabled.
   *
   * @generated from field: bool enable_2fa = 13;
   */
  enable2fa: boolean;

  /**
   * Whether or not to block login from users without a verified email.
   * This option is only used if two factor authentication is enabled.
   *
   * @generated from field: bool block_unverified_users = 14;
   */
  blockUnverifiedUsers: boolean;

  constructor(data?: PartialMessage<AuthenticationPreferences>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.AuthenticationPreferences";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthenticationPreferences;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthenticationPreferences;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthenticationPreferences;

  static equals(a: AuthenticationPreferences | PlainMessage<AuthenticationPreferences> | undefined, b: AuthenticationPreferences | PlainMessage<AuthenticationPreferences> | undefined): boolean;
}

/**
 * Preferences for web-hook push URLs.
 *
 * @generated from message api.commons.org.WebhookPreferences
 */
export declare class WebhookPreferences extends Message<WebhookPreferences> {
  /**
   * Org ID.
   *
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * Whether push URLs are enabled.
   *
   * @generated from field: bool push_urls_enabled = 10;
   */
  pushUrlsEnabled: boolean;

  /**
   * Call result of the push URL.
   *
   * @generated from field: string call_result_push_url = 11;
   */
  callResultPushUrl: string;

  /**
   * Agent response of the push URL.
   *
   * @generated from field: string agent_response_push_url = 12;
   */
  agentResponsePushUrl: string;

  constructor(data?: PartialMessage<WebhookPreferences>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.WebhookPreferences";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WebhookPreferences;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WebhookPreferences;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WebhookPreferences;

  static equals(a: WebhookPreferences | PlainMessage<WebhookPreferences> | undefined, b: WebhookPreferences | PlainMessage<WebhookPreferences> | undefined): boolean;
}

/**
 * Preferences for agent dashboard controls.
 *
 * @generated from message api.commons.org.DashboardPreferences
 */
export declare class DashboardPreferences extends Message<DashboardPreferences> {
  /**
   * Org ID.
   *
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * Default agent info view; false for icon display, true for table view.
   *
   * @generated from field: bool default_info_view = 10;
   */
  defaultInfoView: boolean;

  /**
   * Default agent inclusion, true to include all agents.
   *
   * @generated from field: bool default_table_inclusion = 11;
   */
  defaultTableInclusion: boolean;

  /**
   * Default agent grouping, true to group by hunt groups.
   *
   * @generated from field: bool default_info_grouping = 12;
   */
  defaultInfoGrouping: boolean;

  /**
   * Default agent icon size, false for large icons.
   *
   * @generated from field: bool default_small_icon = 13;
   */
  defaultSmallIcon: boolean;

  /**
   * Default agent sort direction, false to sort by ascending.
   *
   * @generated from field: bool default_descending_sort = 14;
   */
  defaultDescendingSort: boolean;

  /**
   * SID for the agent dashboard table template.
   *
   * @generated from field: int64 table_template_sid = 15;
   */
  tableTemplateSid: bigint;

  /**
   * Which call types are enabled in the agents dashboard.
   *
   * @generated from field: api.commons.org.IncludedCallTypes default_call_types = 16;
   */
  defaultCallTypes?: IncludedCallTypes;

  /**
   * Agent dashboard order-by parameter.
   *
   * @generated from field: api.commons.AgentInfoSortBy default_info_sort_by_value = 17;
   */
  defaultInfoSortByValue: AgentInfoSortBy;

  /**
   * Controls hunt-group and agent barge-in status parameters.
   *
   * @generated from field: api.commons.org.BargeInFiltering default_barge_in_filtering = 18;
   */
  defaultBargeInFiltering?: BargeInFiltering;

  constructor(data?: PartialMessage<DashboardPreferences>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.DashboardPreferences";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DashboardPreferences;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DashboardPreferences;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DashboardPreferences;

  static equals(a: DashboardPreferences | PlainMessage<DashboardPreferences> | undefined, b: DashboardPreferences | PlainMessage<DashboardPreferences> | undefined): boolean;
}

/**
 * Included call types.
 *
 * @generated from message api.commons.org.IncludedCallTypes
 */
export declare class IncludedCallTypes extends Message<IncludedCallTypes> {
  /**
   * Outbound calls.
   *
   * @generated from field: bool outbound = 1;
   */
  outbound: boolean;

  /**
   * Inbound calls.
   *
   * @generated from field: bool inbound = 2;
   */
  inbound: boolean;

  /**
   * Manual-dial calls.
   *
   * @generated from field: bool manual_dial = 3;
   */
  manualDial: boolean;

  /**
   * Preview-dial calls.
   *
   * @generated from field: bool preview_dial = 4;
   */
  previewDial: boolean;

  constructor(data?: PartialMessage<IncludedCallTypes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.IncludedCallTypes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IncludedCallTypes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IncludedCallTypes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IncludedCallTypes;

  static equals(a: IncludedCallTypes | PlainMessage<IncludedCallTypes> | undefined, b: IncludedCallTypes | PlainMessage<IncludedCallTypes> | undefined): boolean;
}

/**
 * Barge-in filtering properties.
 *
 * @generated from message api.commons.org.BargeInFiltering
 */
export declare class BargeInFiltering extends Message<BargeInFiltering> {
  /**
   * Hunt group settings.
   *
   * @generated from field: api.commons.org.BargeInFiltering.HuntGroup hunt_group = 1;
   */
  huntGroup?: BargeInFiltering_HuntGroup;

  /**
   * Agent status.
   *
   * @generated from field: api.commons.org.BargeInFiltering.AgentStatus agent_status = 2;
   */
  agentStatus?: BargeInFiltering_AgentStatus;

  constructor(data?: PartialMessage<BargeInFiltering>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.BargeInFiltering";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BargeInFiltering;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BargeInFiltering;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BargeInFiltering;

  static equals(a: BargeInFiltering | PlainMessage<BargeInFiltering> | undefined, b: BargeInFiltering | PlainMessage<BargeInFiltering> | undefined): boolean;
}

/**
 * @generated from message api.commons.org.BargeInFiltering.HuntGroup
 */
export declare class BargeInFiltering_HuntGroup extends Message<BargeInFiltering_HuntGroup> {
  /**
   * Use any huntgroup (no filtering).
   *
   * @generated from field: bool any = 1;
   */
  any: boolean;

  /**
   * Specific hunt group SID.
   *
   * @generated from field: int64 hunt_group_sid = 2;
   */
  huntGroupSid: bigint;

  constructor(data?: PartialMessage<BargeInFiltering_HuntGroup>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.BargeInFiltering.HuntGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BargeInFiltering_HuntGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BargeInFiltering_HuntGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BargeInFiltering_HuntGroup;

  static equals(a: BargeInFiltering_HuntGroup | PlainMessage<BargeInFiltering_HuntGroup> | undefined, b: BargeInFiltering_HuntGroup | PlainMessage<BargeInFiltering_HuntGroup> | undefined): boolean;
}

/**
 * @generated from message api.commons.org.BargeInFiltering.AgentStatus
 */
export declare class BargeInFiltering_AgentStatus extends Message<BargeInFiltering_AgentStatus> {
  /**
   * Use any status (no filtering).
   *
   * @generated from field: bool any = 1;
   */
  any: boolean;

  /**
   * Agent waiting.
   *
   * @generated from field: bool waiting = 2;
   */
  waiting: boolean;

  /**
   * Agent on call.
   *
   * @generated from field: bool on_call = 3;
   */
  onCall: boolean;

  /**
   * Agent wrap-up.
   *
   * @generated from field: bool wrap_up = 4;
   */
  wrapUp: boolean;

  /**
   * Agent paused.
   *
   * @generated from field: bool paused = 5;
   */
  paused: boolean;

  /**
   * Agent transferring call.
   *
   * @generated from field: bool transfer = 6;
   */
  transfer: boolean;

  /**
   * Agent previewing call.
   *
   * @generated from field: bool preview = 7;
   */
  preview: boolean;

  /**
   * Agent manual-dial.
   *
   * @generated from field: bool manual = 8;
   */
  manual: boolean;

  /**
   * Agent PBX.
   *
   * @generated from field: bool pbx = 9;
   */
  pbx: boolean;

  /**
   * Agent on intercom.
   *
   * @generated from field: bool intercom = 10;
   */
  intercom: boolean;

  constructor(data?: PartialMessage<BargeInFiltering_AgentStatus>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.BargeInFiltering.AgentStatus";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BargeInFiltering_AgentStatus;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BargeInFiltering_AgentStatus;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BargeInFiltering_AgentStatus;

  static equals(a: BargeInFiltering_AgentStatus | PlainMessage<BargeInFiltering_AgentStatus> | undefined, b: BargeInFiltering_AgentStatus | PlainMessage<BargeInFiltering_AgentStatus> | undefined): boolean;
}

/**
 * Preferences for controlling agent queue and hold table settings.
 *
 * @generated from message api.commons.org.DashboardQueuePreferences
 */
export declare class DashboardQueuePreferences extends Message<DashboardQueuePreferences> {
  /**
   * Org ID.
   *
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * Default queue/hold table view; false for icon view, true for table view.
   *
   * @generated from field: bool default_info_view = 10;
   */
  defaultInfoView: boolean;

  /**
   * Default queue/hold table grouping; false for no grouping, true for group
   * by queue type.
   *
   * @generated from field: bool default_info_grouping = 11;
   */
  defaultInfoGrouping: boolean;

  /**
   * Default table icon size; true for small, false for large.
   *
   * @generated from field: bool default_small_icon = 12;
   */
  defaultSmallIcon: boolean;

  /**
   * Default table sort direction; false for descending, true for ascending.
   *
   * @generated from field: bool default_descending_sort = 13;
   */
  defaultDescendingSort: boolean;

  /**
   * Default skills filter; holds a regional sid pointing to the filter in
   * the xml_client_property table.
   *
   * @generated from field: int64 default_agent_skills_filter = 14;
   */
  defaultAgentSkillsFilter: bigint;

  /**
   * Default table template. holds a regional sid pointing to the filter in
   * the xml_client_property table.
   *
   * @generated from field: int64 default_info_table_template = 15;
   */
  defaultInfoTableTemplate: bigint;

  /**
   * Default queue/hold info sort-by value.
   *
   * @generated from field: api.commons.QueueInfoSortBy default_info_sort_by_value = 16;
   */
  defaultInfoSortByValue: QueueInfoSortBy;

  constructor(data?: PartialMessage<DashboardQueuePreferences>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.DashboardQueuePreferences";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DashboardQueuePreferences;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DashboardQueuePreferences;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DashboardQueuePreferences;

  static equals(a: DashboardQueuePreferences | PlainMessage<DashboardQueuePreferences> | undefined, b: DashboardQueuePreferences | PlainMessage<DashboardQueuePreferences> | undefined): boolean;
}

/**
 * Preferences for phone dial options, call ID, and other call properties.
 *
 * @generated from message api.commons.org.PhonePreferences
 */
export declare class PhonePreferences extends Message<PhonePreferences> {
  /**
   * Org ID.
   *
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * Determines whether broadcasts may be sent as Preview Dial.
   *
   * @generated from field: bool agent_preview_dialing = 10;
   */
  agentPreviewDialing: boolean;

  /**
   * The number of seconds to allow ringing to a 3rd party.
   *
   * @generated from field: int32 default_ring_length_threshold = 11;
   */
  defaultRingLengthThreshold: number;

  /**
   * Determines whether the setting may be changed while scheduling.
   *
   * @generated from field: bool display_ring_length_threshold = 12;
   */
  displayRingLengthThreshold: boolean;

  /**
   * Determines wheter the setting may be show/edited while scheduling.
   *
   * @generated from field: bool show_caller_id = 13;
   */
  showCallerId: boolean;

  /**
   * Determines whether to use Caller ID by default.
   *
   * @generated from field: bool default_use_caller_id = 14;
   */
  defaultUseCallerId: boolean;

  /**
   * Determines whether broadcast templates may set to record linkbacks
   * individually.
   *
   * @generated from field: bool override_linkback_recording = 15;
   */
  overrideLinkbackRecording: boolean;

  /**
   * The 'sid' of the Caller ID field description to use as default.
   *
   * @generated from field: int64 caller_id_cfd_sid = 16;
   */
  callerIdCfdSid: bigint;

  /**
   * The dial order of a contact record, default 'First Number Only'.
   *
   * @generated from field: api.commons.org.DialOrder default_dial_order = 17;
   */
  defaultDialOrder?: DialOrder;

  /**
   * Which type of answering machine detection to use.
   *
   * @generated from field: api.commons.AnsweringMachineDetection answering_machine_detection = 18;
   */
  answeringMachineDetection: AnsweringMachineDetection;

  /**
   * Determines whether linkback recording is enabled.
   *
   * @generated from field: bool linkback_recording = 19;
   */
  linkbackRecording: boolean;

  constructor(data?: PartialMessage<PhonePreferences>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.PhonePreferences";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PhonePreferences;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PhonePreferences;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PhonePreferences;

  static equals(a: PhonePreferences | PlainMessage<PhonePreferences> | undefined, b: PhonePreferences | PlainMessage<PhonePreferences> | undefined): boolean;
}

/**
 * Dial order holds either a type enum, or one or more contact field
 * description fields for custom order.
 *
 * @generated from message api.commons.org.DialOrder
 */
export declare class DialOrder extends Message<DialOrder> {
  /**
   * @generated from oneof api.commons.org.DialOrder.type
   */
  type: {
    /**
     * Standard order enum, (CUSTOM_DIAL_ORDER should not be set here but
     * indicated by setting a CustomDialOrder below).
     *
     * @generated from field: api.commons.DialOrderType standard = 1;
     */
    value: DialOrderType;
    case: "standard";
  } | {
    /**
     * Defines a "Custom Order" using one or more contact field
     * descriptions.
     *
     * @generated from field: api.commons.org.CustomDialOrder custom = 2;
     */
    value: CustomDialOrder;
    case: "custom";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<DialOrder>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.DialOrder";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DialOrder;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DialOrder;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DialOrder;

  static equals(a: DialOrder | PlainMessage<DialOrder> | undefined, b: DialOrder | PlainMessage<DialOrder> | undefined): boolean;
}

/**
 * Custom dial order fields holds one or more contact field descriptions to
 * indicate which fields in a contact record, and the order.
 *
 * @generated from message api.commons.org.CustomDialOrder
 */
export declare class CustomDialOrder extends Message<CustomDialOrder> {
  /**
   * One or more contact field descriptions.
   *
   * @generated from field: repeated api.commons.org.DialOrderField dial_order_fields = 1;
   */
  dialOrderFields: DialOrderField[];

  constructor(data?: PartialMessage<CustomDialOrder>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.CustomDialOrder";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CustomDialOrder;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CustomDialOrder;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CustomDialOrder;

  static equals(a: CustomDialOrder | PlainMessage<CustomDialOrder> | undefined, b: CustomDialOrder | PlainMessage<CustomDialOrder> | undefined): boolean;
}

/**
 * Dial order field holds the ID for saving into preferences and the name
 * for display.
 *
 * @generated from message api.commons.org.DialOrderField
 */
export declare class DialOrderField extends Message<DialOrderField> {
  /**
   * Contact field description SID.
   *
   * @generated from field: int64 cfd_sid = 1;
   */
  cfdSid: bigint;

  /**
   * The field name, for display.
   *
   * @generated from field: string field_name = 2;
   */
  fieldName: string;

  constructor(data?: PartialMessage<DialOrderField>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.DialOrderField";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DialOrderField;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DialOrderField;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DialOrderField;

  static equals(a: DialOrderField | PlainMessage<DialOrderField> | undefined, b: DialOrderField | PlainMessage<DialOrderField> | undefined): boolean;
}

/**
 * Preferences for natural language compliance campaign settings.
 *
 * @generated from message api.commons.org.CompliancePreferences
 */
export declare class CompliancePreferences extends Message<CompliancePreferences> {
  /**
   * Org ID.
   *
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * Whether after-hours calls are displayed in campaigns.
   *
   * @generated from field: bool display_after_hours_calls = 10;
   */
  displayAfterHoursCalls: boolean;

  /**
   * Enable/disable after-hours calls in campaigns.
   *
   * @generated from field: bool after_hours_calls = 11;
   */
  afterHoursCalls: boolean;

  /**
   * Whether the default natural compliance rule set is displayed.
   *
   * @generated from field: bool display_natural_compliance = 12;
   */
  displayNaturalCompliance: boolean;

  /**
   * Enable using the default natural compliance rule set.
   *
   * @generated from field: bool use_natural_compliance = 13;
   */
  useNaturalCompliance: boolean;

  /**
   * Compliance rule set to use by default (UUID of set).
   *
   * @generated from field: string default_compliance_rule_set = 14;
   */
  defaultComplianceRuleSet: string;

  /**
   * Whether cell phone scrub from campaign view.
   *
   * @generated from field: bool display_cell_phone_scrub = 15;
   */
  displayCellPhoneScrub: boolean;

  /**
   * Enable/disable to the ability scrub cell phone numbers.
   *
   * @generated from field: bool cell_phone_scrub = 16;
   */
  cellPhoneScrub: boolean;

  /**
   * Whether schedule rules are displayed in campaigns.
   *
   * @generated from field: bool display_schedule_rules = 17;
   */
  displayScheduleRules: boolean;

  /**
   * Enable the use of the default schedule rules.
   *
   * @generated from field: bool use_schedule_rules = 18;
   */
  useScheduleRules: boolean;

  /**
   * Schedule rule to use by default.
   *
   * @generated from field: api.commons.org.ScheduleRuleField default_schedule_rule = 19;
   */
  defaultScheduleRule?: ScheduleRuleField;

  /**
   * Whether ZIP code scrubbing is enabled.
   *
   * @generated from field: bool do_zip_code_scrub = 20;
   */
  doZipCodeScrub: boolean;

  /**
   * Field for ZIP/postal code scrubbing to use.
   *
   * @generated from field: api.commons.org.ZipCodeField zip_code_scrub = 21;
   */
  zipCodeScrub?: ZipCodeField;

  /**
   * Default email compliance list.
   *
   * @generated from field: string default_email_compliance_list = 22;
   */
  defaultEmailComplianceList: string;

  /**
   * Default sms compliance list.
   *
   * @generated from field: string default_sms_compliance_list = 23;
   */
  defaultSmsComplianceList: string;

  constructor(data?: PartialMessage<CompliancePreferences>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.CompliancePreferences";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CompliancePreferences;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CompliancePreferences;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CompliancePreferences;

  static equals(a: CompliancePreferences | PlainMessage<CompliancePreferences> | undefined, b: CompliancePreferences | PlainMessage<CompliancePreferences> | undefined): boolean;
}

/**
 * Compliance schedule rule field properties.
 *
 * @generated from message api.commons.org.ScheduleRuleField
 */
export declare class ScheduleRuleField extends Message<ScheduleRuleField> {
  /**
   * The schdeulde rule SID.
   *
   * @generated from field: int64 rule_id = 1;
   */
  ruleId: bigint;

  /**
   * The rule name.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  constructor(data?: PartialMessage<ScheduleRuleField>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.ScheduleRuleField";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScheduleRuleField;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScheduleRuleField;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScheduleRuleField;

  static equals(a: ScheduleRuleField | PlainMessage<ScheduleRuleField> | undefined, b: ScheduleRuleField | PlainMessage<ScheduleRuleField> | undefined): boolean;
}

/**
 * ZIP/postal code scrubbing properties.
 *
 * @generated from message api.commons.org.ZipCodeField
 */
export declare class ZipCodeField extends Message<ZipCodeField> {
  /**
   * Contact field description SID.
   *
   * @generated from field: int64 cfd_sid = 1;
   */
  cfdSid: bigint;

  /**
   * The name of the field.
   *
   * @generated from field: string field_name = 2;
   */
  fieldName: string;

  constructor(data?: PartialMessage<ZipCodeField>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.ZipCodeField";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ZipCodeField;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ZipCodeField;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ZipCodeField;

  static equals(a: ZipCodeField | PlainMessage<ZipCodeField> | undefined, b: ZipCodeField | PlainMessage<ZipCodeField> | undefined): boolean;
}

/**
 * Preferences for editing templates and broadcast scheduling properties.
 *
 * @generated from message api.commons.org.BroadcastPreferences
 */
export declare class BroadcastPreferences extends Message<BroadcastPreferences> {
  /**
   * Org ID.
   *
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * Whether the 'Dial List Penetration Strategy' property in templates and
   * broadcast scheduling is displayed.
   *
   * @generated from field: bool display_list_penetration_strategy = 10;
   */
  displayListPenetrationStrategy: boolean;

  /**
   * List penetration strategy to give priority to dialing each number in a
   * single record before dialing from other records; false for depth first,
   * true for breadth first search.
   *
   * @generated from field: bool dial_list_penetration_strategy = 11;
   */
  dialListPenetrationStrategy: boolean;

  /**
   * Display the 'Follow the Sun' property in templates and broadcasts.
   *
   * @generated from field: bool display_follow_the_sun = 12;
   */
  displayFollowTheSun: boolean;

  /**
   * Whether broadcasts follow the sun (prioritized east to west).
   *
   * @generated from field: bool follow_the_sun = 13;
   */
  followTheSun: boolean;

  /**
   * Whether to hide the terminator select menu in the standard template
   * wizard and include only 'Connected, Live, and Machine' options in the
   * layered template wizard.
   *
   * @generated from field: bool sequence_terminator_override = 14;
   */
  sequenceTerminatorOverride: boolean;

  /**
   * Broadcast scheduling template ordering default value.
   *
   * @generated from field: api.commons.BroadcastTemplateOrdering broadcast_template_ordering = 15;
   */
  broadcastTemplateOrdering: BroadcastTemplateOrdering;

  /**
   * Whether the default broadcast start time is used.
   *
   * @generated from field: bool start_time_enabled = 16;
   */
  startTimeEnabled: boolean;

  /**
   * Default broadcast start time.
   *
   * @generated from field: api.commons.org.BroadcastTime default_start_time = 17;
   */
  defaultStartTime?: BroadcastTime;

  /**
   * Whether the default broadcast stop time is used.
   *
   * @generated from field: bool stop_time_enabled = 18;
   */
  stopTimeEnabled: boolean;

  /**
   * Default broadcast stop time.
   *
   * @generated from field: api.commons.org.BroadcastTime default_stop_time = 19;
   */
  defaultStopTime?: BroadcastTime;

  constructor(data?: PartialMessage<BroadcastPreferences>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.BroadcastPreferences";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BroadcastPreferences;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BroadcastPreferences;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BroadcastPreferences;

  static equals(a: BroadcastPreferences | PlainMessage<BroadcastPreferences> | undefined, b: BroadcastPreferences | PlainMessage<BroadcastPreferences> | undefined): boolean;
}

/**
 * Broadcast start/stop time properties.
 *
 * @generated from message api.commons.org.BroadcastTime
 */
export declare class BroadcastTime extends Message<BroadcastTime> {
  /**
   * Hour of the day (0-23).
   *
   * @generated from field: int32 hours = 1;
   */
  hours: number;

  /**
   * Minute of the hour (0-59).
   *
   * @generated from field: int32 minutes = 2;
   */
  minutes: number;

  /**
   * Time zone.
   *
   * @generated from field: api.commons.TimeZone timezone = 3;
   */
  timezone: TimeZone;

  constructor(data?: PartialMessage<BroadcastTime>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.BroadcastTime";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BroadcastTime;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BroadcastTime;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BroadcastTime;

  static equals(a: BroadcastTime | PlainMessage<BroadcastTime> | undefined, b: BroadcastTime | PlainMessage<BroadcastTime> | undefined): boolean;
}

/**
 * Preferences for editing campaign scheduling properties.
 *
 * @generated from message api.commons.org.SchedulePreferences
 */
export declare class SchedulePreferences extends Message<SchedulePreferences> {
  /**
   * Org ID.
   *
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * Whether to display the 'Schedule By Time Zone' setting.
   *
   * @generated from field: bool display_schedule_by_time_zone = 10;
   */
  displayScheduleByTimeZone: boolean;

  /**
   * Whether to schedule by time zone.
   *
   * @generated from field: bool use_schedule_by_time_zone = 11;
   */
  useScheduleByTimeZone: boolean;

  /**
   * Scope to limit your time zone schedules by.
   *
   * @generated from field: api.commons.ScheduleByTimeZoneScope schedule_by_time_zone_scope = 12;
   */
  scheduleByTimeZoneScope: ScheduleByTimeZoneScope;

  /**
   * Whether to display the 'Schedule As Paused' setting.
   *
   * @generated from field: bool display_schedule_as_paused = 13;
   */
  displayScheduleAsPaused: boolean;

  /**
   * Toggle for scheduling as running or schedule as paused.
   *
   * @generated from field: bool schedule_as_paused = 14;
   */
  scheduleAsPaused: boolean;

  /**
   * Threshold percentage to trigger a linked broadcast.
   *
   * @generated from field: int64 default_completion_threshold = 15;
   */
  defaultCompletionThreshold: bigint;

  /**
   * Whether to display 'Campaign Linking' in campaign options.
   *
   * @generated from field: bool display_campaign_linking = 16;
   */
  displayCampaignLinking: boolean;

  /**
   * Whether to use campaign linking as the default.
   *
   * @generated from field: bool use_campaign_linking = 17;
   */
  useCampaignLinking: boolean;

  /**
   * Campaign links map of properties, id/name as key, description as value.
   *
   * @generated from field: map<string, string> campaign_links = 18;
   */
  campaignLinks: { [key: string]: string };

  /**
   * Default campaign link ID.
   *
   * @generated from field: string default_campaign_link_id = 19;
   */
  defaultCampaignLinkId: string;

  /**
   * Whether user canceled campaigns can be resent in the organization.
   *
   * @generated from field: bool resend_cancelled_campaigns = 20;
   */
  resendCancelledCampaigns: boolean;

  constructor(data?: PartialMessage<SchedulePreferences>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.SchedulePreferences";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SchedulePreferences;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SchedulePreferences;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SchedulePreferences;

  static equals(a: SchedulePreferences | PlainMessage<SchedulePreferences> | undefined, b: SchedulePreferences | PlainMessage<SchedulePreferences> | undefined): boolean;
}

/**
 * Preferences for email and SMS management.
 *
 * @generated from message api.commons.org.EmailSmsPreferences
 */
export declare class EmailSmsPreferences extends Message<EmailSmsPreferences> {
  /**
   * Org ID.
   *
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * Whether to use custom unsubscribe links (all email templates must contain
   * one if enabled).
   *
   * @generated from field: bool use_custom_links = 10;
   */
  useCustomLinks: boolean;

  /**
   * Whether the client acknowledges that they are responsible for opt outs.
   *
   * @generated from field: bool client_acknowledgement = 11;
   */
  clientAcknowledgement: boolean;

  /**
   * Return email addresses that will be available in broadcasts.
   *
   * @generated from field: repeated string email_from_addresses = 12;
   */
  emailFromAddresses: string[];

  constructor(data?: PartialMessage<EmailSmsPreferences>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.EmailSmsPreferences";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EmailSmsPreferences;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EmailSmsPreferences;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EmailSmsPreferences;

  static equals(a: EmailSmsPreferences | PlainMessage<EmailSmsPreferences> | undefined, b: EmailSmsPreferences | PlainMessage<EmailSmsPreferences> | undefined): boolean;
}

/**
 * Preferences for business intelligence settings/controls in analytics.
 *
 * @generated from message api.commons.org.BusinessPreferences
 */
export declare class BusinessPreferences extends Message<BusinessPreferences> {
  /**
   * Org ID.
   *
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * Number of weeks of past data that are accessible.
   *
   * @generated from field: int32 weeks_of_data = 10;
   */
  weeksOfData: number;

  /**
   * Default time zone for business intelligence.
   *
   * @generated from field: api.commons.AnaTimeZone time_zone = 11;
   */
  timeZone: AnaTimeZone;

  /**
   * Whether to allow multi-client access.
   *
   * @generated from field: bool multi_client_access = 12;
   */
  multiClientAccess: boolean;

  /**
   * Enable/disable of custom visualizations in BI.
   *
   * @generated from field: bool custom_visualizations = 13;
   */
  customVisualizations: boolean;

  /**
   * Time filter for custom dashboard and visualizations.
   *
   * @generated from field: string time_filter = 14;
   */
  timeFilter: string;

  constructor(data?: PartialMessage<BusinessPreferences>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.BusinessPreferences";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BusinessPreferences;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BusinessPreferences;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BusinessPreferences;

  static equals(a: BusinessPreferences | PlainMessage<BusinessPreferences> | undefined, b: BusinessPreferences | PlainMessage<BusinessPreferences> | undefined): boolean;
}

/**
 * Preferences for scorecards management and evaluation.
 *
 * @generated from message api.commons.org.ScorecardsPreferences
 */
export declare class ScorecardsPreferences extends Message<ScorecardsPreferences> {
  /**
   * Org ID.
   *
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * The percentage of randomized calls shown to the user for evaluation.
   * Must be between 1-100.
   *
   * @generated from field: uint32 call_sample_percentage = 2;
   */
  callSamplePercentage: number;

  /**
   * Maximum number of evaluations per user, per category,
   * over the given time interval
   *
   * @generated from field: uint32 max_user_evaluations = 3;
   */
  maxUserEvaluations: number;

  /**
   * The time interval over which calls are listed for scoring.
   *
   * @generated from field: api.commons.org.Scorecards.EvaluationInterval evaluation_interval = 4;
   */
  evaluationInterval: Scorecards_EvaluationInterval;

  constructor(data?: PartialMessage<ScorecardsPreferences>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.ScorecardsPreferences";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScorecardsPreferences;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScorecardsPreferences;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScorecardsPreferences;

  static equals(a: ScorecardsPreferences | PlainMessage<ScorecardsPreferences> | undefined, b: ScorecardsPreferences | PlainMessage<ScorecardsPreferences> | undefined): boolean;
}

/**
 * Scorecards properties.
 *
 * @generated from message api.commons.org.Scorecards
 */
export declare class Scorecards extends Message<Scorecards> {
  constructor(data?: PartialMessage<Scorecards>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.Scorecards";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Scorecards;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Scorecards;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Scorecards;

  static equals(a: Scorecards | PlainMessage<Scorecards> | undefined, b: Scorecards | PlainMessage<Scorecards> | undefined): boolean;
}

/**
 * EvaluationsInterval enumerates common time periods for evaluations.
 *
 * @generated from enum api.commons.org.Scorecards.EvaluationInterval
 */
export declare enum Scorecards_EvaluationInterval {
  /**
   * @generated from enum value: EVALUATION_INTERVAL_DAY_UNSPECIFIED = 0;
   */
  DAY_UNSPECIFIED = 0,

  /**
   * @generated from enum value: EVALUATION_INTERVAL_WEEK = 1;
   */
  WEEK = 1,

  /**
   * @generated from enum value: EVALUATION_INTERVAL_MONTH = 2;
   */
  MONTH = 2,
}

/**
 * Preferences for voice analytics. Primarily consumed and interpreted by
 * localmixer when mixing and transcribing call recordings.
 *
 * @generated from message api.commons.org.VoiceAnalyticsPreferences
 */
export declare class VoiceAnalyticsPreferences extends Message<VoiceAnalyticsPreferences> {
  /**
   * Org ID.
   *
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * Optional. When enabled call recordings will be transcribed and archived
   * by localmixer in voice analytics.
   *
   * @generated from field: bool enabled = 2;
   */
  enabled: boolean;

  /**
   * Optional. List of redactions to be performed, when voice analytics is
   * enabled, on each call recording and transcript.
   *
   * @generated from field: repeated api.commons.org.VoiceAnalytics.Redact redact = 3;
   */
  redact: VoiceAnalytics_Redact[];

  /**
   * Optional. Flagging transcript notification preferences.
   *
   * @generated from field: api.commons.org.VoiceAnalytics.Notify notify = 4;
   */
  notify?: VoiceAnalytics_Notify;

  /**
   * Optional. Billing report notification preferences.
   *
   * @generated from field: api.commons.org.VoiceAnalytics.Notify billing_notify = 5;
   */
  billingNotify?: VoiceAnalytics_Notify;

  /**
   * Optional. Number format for transcript dispositions.
   *
   * @generated from field: string number_format = 6;
   */
  numberFormat: string;

  /**
   * Optional. Will eventually be deprecated. When voice analytics is enabled
   * and this is true all cardinal numbers in each call recording and
   * transcript will be redacted.
   *
   * @generated from field: bool redact_all_digits = 10;
   */
  redactAllDigits: boolean;

  /**
   * Required. Minimum milliseconds of silence to occur before considered to
   * be silence by voice analytics.
   *
   * @generated from field: uint32 silence_threshold = 100;
   */
  silenceThreshold: number;

  /**
   * Required. Minimum milliseconds of talk over to occur before considered
   * to be talk over by voice analytics.
   *
   * @generated from field: uint32 talk_over_threshold = 200;
   */
  talkOverThreshold: number;

  constructor(data?: PartialMessage<VoiceAnalyticsPreferences>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.VoiceAnalyticsPreferences";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VoiceAnalyticsPreferences;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VoiceAnalyticsPreferences;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VoiceAnalyticsPreferences;

  static equals(a: VoiceAnalyticsPreferences | PlainMessage<VoiceAnalyticsPreferences> | undefined, b: VoiceAnalyticsPreferences | PlainMessage<VoiceAnalyticsPreferences> | undefined): boolean;
}

/**
 * Namespace for voice analytics messages.
 *
 * @generated from message api.commons.org.VoiceAnalytics
 */
export declare class VoiceAnalytics extends Message<VoiceAnalytics> {
  constructor(data?: PartialMessage<VoiceAnalytics>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.VoiceAnalytics";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VoiceAnalytics;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VoiceAnalytics;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VoiceAnalytics;

  static equals(a: VoiceAnalytics | PlainMessage<VoiceAnalytics> | undefined, b: VoiceAnalytics | PlainMessage<VoiceAnalytics> | undefined): boolean;
}

/**
 * @generated from message api.commons.org.VoiceAnalytics.Redact
 */
export declare class VoiceAnalytics_Redact extends Message<VoiceAnalytics_Redact> {
  /**
   * @generated from oneof api.commons.org.VoiceAnalytics.Redact.where
   */
  where: {
    /**
     * Optional. Redact numbers.
     *
     * @generated from field: api.commons.org.VoiceAnalytics.Number number = 1;
     */
    value: VoiceAnalytics_Number;
    case: "number";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<VoiceAnalytics_Redact>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.VoiceAnalytics.Redact";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VoiceAnalytics_Redact;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VoiceAnalytics_Redact;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VoiceAnalytics_Redact;

  static equals(a: VoiceAnalytics_Redact | PlainMessage<VoiceAnalytics_Redact> | undefined, b: VoiceAnalytics_Redact | PlainMessage<VoiceAnalytics_Redact> | undefined): boolean;
}

/**
 * @generated from message api.commons.org.VoiceAnalytics.Number
 */
export declare class VoiceAnalytics_Number extends Message<VoiceAnalytics_Number> {
  /**
   * Optional. The kind of number to redact.
   *
   * @generated from field: api.commons.org.VoiceAnalytics.Number.Kind kind = 1;
   */
  kind: VoiceAnalytics_Number_Kind;

  /**
   * Optional. When value is non zero only numbers composed of at least
   * `min_consecutive` digits will be redacted. For example, when the
   * transcript contains the number `one two three four five six`
   * redaction will not occur when `min_consecutive` is greater than 6.
   *
   * @generated from field: uint32 min_consecutive = 2;
   */
  minConsecutive: number;

  /**
   * Optional. When value is non zero only numbers composed of at most
   * `max_consecutive` digits will be redacted. For example, when the
   * transcript contains the number `one two three four five six`
   * redaction will not occur when `max_consecutive` is less than 6.
   *
   * @generated from field: uint32 max_consecutive = 3;
   */
  maxConsecutive: number;

  /**
   * slop is the number of extra words that can be in between digits and
   * still count as a number. For example: slop of 2 with min_consecutive
   * 3 would allow "one uh two and three" to count as a number.
   *
   * @generated from field: uint32 slop = 4;
   */
  slop: number;

  constructor(data?: PartialMessage<VoiceAnalytics_Number>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.VoiceAnalytics.Number";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VoiceAnalytics_Number;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VoiceAnalytics_Number;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VoiceAnalytics_Number;

  static equals(a: VoiceAnalytics_Number | PlainMessage<VoiceAnalytics_Number> | undefined, b: VoiceAnalytics_Number | PlainMessage<VoiceAnalytics_Number> | undefined): boolean;
}

/**
 * @generated from enum api.commons.org.VoiceAnalytics.Number.Kind
 */
export declare enum VoiceAnalytics_Number_Kind {
  /**
   * Cardinal number
   *
   * @generated from enum value: KIND_CARDINAL_UNSPECIFIED = 0;
   */
  CARDINAL_UNSPECIFIED = 0,

  /**
   * Ordinal number
   *
   * @generated from enum value: KIND_ORDINAL = 1;
   */
  ORDINAL = 1,

  /**
   * Any number
   *
   * @generated from enum value: KIND_ANY = 2;
   */
  ANY = 2,
}

/**
 * @generated from message api.commons.org.VoiceAnalytics.Notify
 */
export declare class VoiceAnalytics_Notify extends Message<VoiceAnalytics_Notify> {
  /**
   * Optional. Cron pattern determining notification frequency. Defaults
   * to every 15 minutes when not specified.
   *
   * @generated from field: string cron = 1;
   */
  cron: string;

  constructor(data?: PartialMessage<VoiceAnalytics_Notify>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.VoiceAnalytics.Notify";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VoiceAnalytics_Notify;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VoiceAnalytics_Notify;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VoiceAnalytics_Notify;

  static equals(a: VoiceAnalytics_Notify | PlainMessage<VoiceAnalytics_Notify> | undefined, b: VoiceAnalytics_Notify | PlainMessage<VoiceAnalytics_Notify> | undefined): boolean;
}

/**
 * Preferences for automated report jobs end-of-day delivery times.
 *
 * @generated from message api.commons.org.EndOfDayPreferences
 */
export declare class EndOfDayPreferences extends Message<EndOfDayPreferences> {
  /**
   * Org ID.
   *
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * Delivery time for reports on Monday.
   *
   * @generated from field: int32 eod_monday = 10;
   */
  eodMonday: number;

  /**
   * Delivery time for reports on Tuesday.
   *
   * @generated from field: int32 eod_tuesday = 11;
   */
  eodTuesday: number;

  /**
   * Delivery time for reports on Wednesday.
   *
   * @generated from field: int32 eod_wednesday = 12;
   */
  eodWednesday: number;

  /**
   * Delivery time for reports on Thursday.
   *
   * @generated from field: int32 eod_thursday = 13;
   */
  eodThursday: number;

  /**
   * Delivery time for reports on Friday.
   *
   * @generated from field: int32 eod_friday = 14;
   */
  eodFriday: number;

  /**
   * Delivery time for reports on Saturday.
   *
   * @generated from field: int32 eod_saturday = 15;
   */
  eodSaturday: number;

  /**
   * Delivery time for reports on Sunday.
   *
   * @generated from field: int32 eod_sunday = 16;
   */
  eodSunday: number;

  constructor(data?: PartialMessage<EndOfDayPreferences>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.EndOfDayPreferences";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EndOfDayPreferences;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EndOfDayPreferences;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EndOfDayPreferences;

  static equals(a: EndOfDayPreferences | PlainMessage<EndOfDayPreferences> | undefined, b: EndOfDayPreferences | PlainMessage<EndOfDayPreferences> | undefined): boolean;
}

/**
 * Preferences for filters in reports and broadcasts.
 *
 * @generated from message api.commons.org.FilterPreferences
 */
export declare class FilterPreferences extends Message<FilterPreferences> {
  /**
   * Org ID.
   *
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * Default filtering for automated reports.
   *
   * @generated from field: api.commons.org.ReportFilter default_auto_report_filter = 10;
   */
  defaultAutoReportFilter?: ReportFilter;

  /**
   * Whether to send auto-reports even if they are empty.
   *
   * @generated from field: bool send_empty_auto_reports = 11;
   */
  sendEmptyAutoReports: boolean;

  /**
   * Whether or not to display the setting in the 'Resend' window.
   *
   * @generated from field: bool display_broadcast_resend_filter = 12;
   */
  displayBroadcastResendFilter: boolean;

  /**
   * Determines which contact records will be included in the new broadcast.
   *
   * @generated from field: api.commons.org.ReportFilter default_broadcast_resend_filter = 13;
   */
  defaultBroadcastResendFilter?: ReportFilter;

  constructor(data?: PartialMessage<FilterPreferences>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.FilterPreferences";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FilterPreferences;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FilterPreferences;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FilterPreferences;

  static equals(a: FilterPreferences | PlainMessage<FilterPreferences> | undefined, b: FilterPreferences | PlainMessage<FilterPreferences> | undefined): boolean;
}

/**
 * Report filter properties.
 *
 * @generated from message api.commons.org.ReportFilter
 */
export declare class ReportFilter extends Message<ReportFilter> {
  /**
   * @generated from oneof api.commons.org.ReportFilter.choice
   */
  choice: {
    /**
     * Standard report filter enum choice.
     *
     * @generated from field: api.commons.StandardReportFilter standard = 1;
     */
    value: StandardReportFilter;
    case: "standard";
  } | {
    /**
     * Custom report filter xml property SID.
     *
     * @generated from field: int64 custom = 2;
     */
    value: bigint;
    case: "custom";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<ReportFilter>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.ReportFilter";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReportFilter;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReportFilter;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReportFilter;

  static equals(a: ReportFilter | PlainMessage<ReportFilter> | undefined, b: ReportFilter | PlainMessage<ReportFilter> | undefined): boolean;
}

/**
 * Preferences for audio recording properties.
 *
 * @generated from message api.commons.org.RecordingPreferences
 */
export declare class RecordingPreferences extends Message<RecordingPreferences> {
  /**
   * Org ID.
   *
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * Whether to use custom recordings file name convention.
   *
   * @generated from field: bool convention_enabled = 10;
   */
  conventionEnabled: boolean;

  /**
   * File name convention for recording files.
   *
   * @generated from field: api.commons.org.RecordingsFileNamingConvention file_name_convention = 11;
   */
  fileNameConvention?: RecordingsFileNamingConvention;

  /**
   * Whether to use custom recordings file name convention for zip.
   *
   * @generated from field: bool zip_convention_enabled = 12;
   */
  zipConventionEnabled: boolean;

  /**
   * File name convention for archived/compressed zip recording files.
   *
   * @generated from field: api.commons.org.RecordingsZipFileNamingConvention zip_file_name_convention = 13;
   */
  zipFileNameConvention?: RecordingsZipFileNamingConvention;

  /**
   * Recording export file type (.wav or .mp3).
   *
   * @generated from field: api.commons.RecordingFileType export_file_type = 14;
   */
  exportFileType: RecordingFileType;

  constructor(data?: PartialMessage<RecordingPreferences>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.RecordingPreferences";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RecordingPreferences;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RecordingPreferences;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RecordingPreferences;

  static equals(a: RecordingPreferences | PlainMessage<RecordingPreferences> | undefined, b: RecordingPreferences | PlainMessage<RecordingPreferences> | undefined): boolean;
}

/**
 * Recording file naming convention properties (per call type).
 *
 * @generated from message api.commons.org.RecordingsFileNamingConvention
 */
export declare class RecordingsFileNamingConvention extends Message<RecordingsFileNamingConvention> {
  /**
   * XML client property SID.
   *
   * @generated from field: int64 xml_client_property_sid = 1;
   */
  xmlClientPropertySid: bigint;

  /**
   * Convention for inbound call recordings.
   *
   * @generated from field: api.commons.org.FileNamingConvention inbound = 2;
   */
  inbound?: FileNamingConvention;

  /**
   * Convention for manual-dial call recordings.
   *
   * @generated from field: api.commons.org.FileNamingConvention manual = 3;
   */
  manual?: FileNamingConvention;

  /**
   * Convention for outbound call recordings.
   *
   * @generated from field: api.commons.org.FileNamingConvention outbound = 4;
   */
  outbound?: FileNamingConvention;

  /**
   * Convention for preview-dial call recordings.
   *
   * @generated from field: api.commons.org.FileNamingConvention preview = 5;
   */
  preview?: FileNamingConvention;

  constructor(data?: PartialMessage<RecordingsFileNamingConvention>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.RecordingsFileNamingConvention";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RecordingsFileNamingConvention;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RecordingsFileNamingConvention;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RecordingsFileNamingConvention;

  static equals(a: RecordingsFileNamingConvention | PlainMessage<RecordingsFileNamingConvention> | undefined, b: RecordingsFileNamingConvention | PlainMessage<RecordingsFileNamingConvention> | undefined): boolean;
}

/**
 * Recording file naming convention properties for compressed call recordings.
 *
 * @generated from message api.commons.org.RecordingsZipFileNamingConvention
 */
export declare class RecordingsZipFileNamingConvention extends Message<RecordingsZipFileNamingConvention> {
  /**
   * XML client property SID.
   *
   * @generated from field: int64 xml_client_property_sid = 1;
   */
  xmlClientPropertySid: bigint;

  /**
   * Convention for inbound call recordings.
   *
   * @generated from field: api.commons.org.FileNamingConvention inbound = 2;
   */
  inbound?: FileNamingConvention;

  /**
   * Convention for manual call recordings.
   *
   * @generated from field: api.commons.org.FileNamingConvention manual = 3;
   */
  manual?: FileNamingConvention;

  /**
   * Convention for outbound call recordings.
   *
   * @generated from field: api.commons.org.FileNamingConvention outbound = 4;
   */
  outbound?: FileNamingConvention;

  /**
   * Convention for combined (all) call recordings.
   *
   * @generated from field: api.commons.org.FileNamingConvention combined = 5;
   */
  combined?: FileNamingConvention;

  constructor(data?: PartialMessage<RecordingsZipFileNamingConvention>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.RecordingsZipFileNamingConvention";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RecordingsZipFileNamingConvention;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RecordingsZipFileNamingConvention;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RecordingsZipFileNamingConvention;

  static equals(a: RecordingsZipFileNamingConvention | PlainMessage<RecordingsZipFileNamingConvention> | undefined, b: RecordingsZipFileNamingConvention | PlainMessage<RecordingsZipFileNamingConvention> | undefined): boolean;
}

/**
 * File naming convention properties containing name segments.
 *
 * @generated from message api.commons.org.FileNamingConvention
 */
export declare class FileNamingConvention extends Message<FileNamingConvention> {
  /**
   * List of file name segments.
   *
   * @generated from field: repeated api.commons.org.FileNameSegment segments = 1;
   */
  segments: FileNameSegment[];

  constructor(data?: PartialMessage<FileNamingConvention>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.FileNamingConvention";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FileNamingConvention;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FileNamingConvention;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FileNamingConvention;

  static equals(a: FileNamingConvention | PlainMessage<FileNamingConvention> | undefined, b: FileNamingConvention | PlainMessage<FileNamingConvention> | undefined): boolean;
}

/**
 * File name segment type and attributes.
 *
 * @generated from message api.commons.org.FileNameSegment
 */
export declare class FileNameSegment extends Message<FileNameSegment> {
  /**
   * Segment type.
   *
   * @generated from field: string segment_type = 1;
   */
  segmentType: string;

  /**
   * Format pattern.
   *
   * @generated from field: string format_pattern = 2;
   */
  formatPattern: string;

  /**
   * Time zone ID (only required for certain segment types).
   *
   * @generated from field: string time_zone_id = 3;
   */
  timeZoneId: string;

  constructor(data?: PartialMessage<FileNameSegment>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.FileNameSegment";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FileNameSegment;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FileNameSegment;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FileNameSegment;

  static equals(a: FileNameSegment | PlainMessage<FileNameSegment> | undefined, b: FileNameSegment | PlainMessage<FileNameSegment> | undefined): boolean;
}

/**
 * Preferences for essential organization properties only to be used by
 * account managers and customer support.
 *
 * @generated from message api.commons.org.AdminClientPreferences
 */
export declare class AdminClientPreferences extends Message<AdminClientPreferences> {
  /**
   * Org ID.
   *
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * Enable the use of reserved carriers.
   *
   * @generated from field: bool use_reserved_carrier = 10;
   */
  useReservedCarrier: boolean;

  /**
   * List of reserved carriers.
   *
   * @generated from field: repeated string reserved_carriers = 11;
   */
  reservedCarriers: string[];

  /**
   * Email sendgrid API key.
   *
   * @generated from field: string email_key = 12;
   */
  emailKey: string;

  /**
   * Email sendgrid API key ID.
   *
   * @generated from field: string email_id = 13;
   */
  emailId: string;

  /**
   * Email sendgrid API key name.
   *
   * @generated from field: string email_name = 14;
   */
  emailName: string;

  /**
   * Whitelisted IPs for the organization.
   *
   * @generated from field: repeated string whitelist_ips = 15;
   */
  whitelistIps: string[];

  /**
   * Whitelisted domain names for the organization.
   *
   * @generated from field: repeated string whitelist_domains = 16;
   */
  whitelistDomains: string[];

  /**
   * Scheduled callbacks service ID.
   *
   * @generated from field: string callbacks_service_id = 17;
   */
  callbacksServiceId: string;

  /**
   * Whether agent screen recording is enabled.
   *
   * @generated from field: bool agent_screen_recording = 18;
   */
  agentScreenRecording: boolean;

  /**
   * List of allowed countries for the organization.
   *
   * @generated from field: repeated api.commons.Country allowed_countries = 19;
   */
  allowedCountries: Country[];

  constructor(data?: PartialMessage<AdminClientPreferences>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.org.AdminClientPreferences";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdminClientPreferences;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdminClientPreferences;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdminClientPreferences;

  static equals(a: AdminClientPreferences | PlainMessage<AdminClientPreferences> | undefined, b: AdminClientPreferences | PlainMessage<AdminClientPreferences> | undefined): boolean;
}


// @generated by protoc-gen-es v1.8.0 with parameter "target=js+dts"
// @generated from file api/commons/classifier.proto (package api.commons, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * these are the types that will be used for File Templates
 *
 * @generated from enum api.commons.ClassifierEntityType
 */
export const ClassifierEntityType = /*@__PURE__*/ proto3.makeEnum(
  "api.commons.ClassifierEntityType",
  [
    {no: 0, name: "CET_UNKNOWN"},
    {no: 1, name: "CET_CREDIT_CARD"},
    {no: 2, name: "CET_CRYPTO"},
    {no: 3, name: "CET_DATE_TIME"},
    {no: 4, name: "CET_EMAIL_ADDRESS"},
    {no: 5, name: "CET_IBAN_CODE"},
    {no: 6, name: "CET_IP_ADDRESS"},
    {no: 7, name: "CET_NRP"},
    {no: 8, name: "CET_LOCATION"},
    {no: 9, name: "CET_PERSON"},
    {no: 10, name: "CET_PHONE_NUMBER"},
    {no: 11, name: "CET_MEDICAL_LICENSE"},
    {no: 12, name: "CET_URL"},
    {no: 13, name: "CET_US_BANK_NUMBER"},
    {no: 14, name: "CET_US_DRIVER_LICENSE"},
    {no: 15, name: "CET_US_ITIN"},
    {no: 16, name: "CET_US_PASSPORT"},
    {no: 17, name: "CET_US_SSN"},
    {no: 18, name: "CET_POSTAL_CODE"},
  ],
);

/**
 * @generated from message api.commons.FileTemplate
 */
export const FileTemplate = /*@__PURE__*/ proto3.makeMessageType(
  "api.commons.FileTemplate",
  () => [
    { no: 1, name: "file_template_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "filename", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "fields", kind: "message", T: FileTemplate_Field, repeated: true },
    { no: 4, name: "parse_opts", kind: "message", T: ParseOpts },
    { no: 5, name: "constraints", kind: "message", T: Constraints },
    { no: 6, name: "foid", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message api.commons.FileTemplate.Field
 */
export const FileTemplate_Field = /*@__PURE__*/ proto3.makeMessageType(
  "api.commons.FileTemplate.Field",
  () => [
    { no: 1, name: "syntax_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "entity_type", kind: "enum", T: proto3.getEnumType(ClassifierEntityType) },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "format", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "raw_value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
  {localName: "FileTemplate_Field"},
);

/**
 * details on how the data should be
 * parsed with respect to the file type
 *
 * @generated from message api.commons.ParseOpts
 */
export const ParseOpts = /*@__PURE__*/ proto3.makeMessageType(
  "api.commons.ParseOpts",
  () => [
    { no: 1, name: "csv", kind: "message", T: OptsCsv, oneof: "ftype" },
    { no: 2, name: "json", kind: "message", T: OptsJson, oneof: "ftype" },
    { no: 3, name: "jsonl", kind: "message", T: OptsJsonL, oneof: "ftype" },
    { no: 4, name: "fixed", kind: "message", T: OptsFixed, oneof: "ftype" },
    { no: 5, name: "parquet", kind: "message", T: OptsParquet, oneof: "ftype" },
  ],
);

/**
 * @generated from message api.commons.OptsCsv
 */
export const OptsCsv = /*@__PURE__*/ proto3.makeMessageType(
  "api.commons.OptsCsv",
  () => [
    { no: 1, name: "has_header", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "skip_rows", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "header", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "separator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.commons.OptsJson
 */
export const OptsJson = /*@__PURE__*/ proto3.makeMessageType(
  "api.commons.OptsJson",
  () => [
    { no: 1, name: "records_root", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.commons.OptsJsonL
 */
export const OptsJsonL = /*@__PURE__*/ proto3.makeMessageType(
  "api.commons.OptsJsonL",
  [],
);

/**
 * @generated from message api.commons.OptsFixed
 */
export const OptsFixed = /*@__PURE__*/ proto3.makeMessageType(
  "api.commons.OptsFixed",
  () => [
    { no: 1, name: "positions", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: OptsFixed_FieldOpts} },
  ],
);

/**
 * @generated from message api.commons.OptsFixed.FieldOpts
 */
export const OptsFixed_FieldOpts = /*@__PURE__*/ proto3.makeMessageType(
  "api.commons.OptsFixed.FieldOpts",
  () => [
    { no: 13, name: "starting_position", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 14, name: "field_length", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
  {localName: "OptsFixed_FieldOpts"},
);

/**
 * @generated from message api.commons.OptsParquet
 */
export const OptsParquet = /*@__PURE__*/ proto3.makeMessageType(
  "api.commons.OptsParquet",
  [],
);

/**
 * these are options to forbid/allow certain
 * types from being guessed by Classifier
 *
 * @generated from message api.commons.Constraints
 */
export const Constraints = /*@__PURE__*/ proto3.makeMessageType(
  "api.commons.Constraints",
  () => [
    { no: 1, name: "forbid", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: ClassifierEntityTypes} },
    { no: 2, name: "allow", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: ClassifierEntityTypes} },
  ],
);

/**
 * @generated from message api.commons.ClassifierEntityTypes
 */
export const ClassifierEntityTypes = /*@__PURE__*/ proto3.makeMessageType(
  "api.commons.ClassifierEntityTypes",
  () => [
    { no: 1, name: "types", kind: "enum", T: proto3.getEnumType(ClassifierEntityType), repeated: true },
  ],
);

/**
 * @generated from message api.commons.ParseHints
 */
export const ParseHints = /*@__PURE__*/ proto3.makeMessageType(
  "api.commons.ParseHints",
  () => [
    { no: 1, name: "parse_opts", kind: "message", T: ParseOpts },
    { no: 2, name: "constraints", kind: "message", T: Constraints },
  ],
);


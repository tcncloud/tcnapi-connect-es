// @generated by protoc-gen-es v1.2.0 with parameter "target=js+dts"
// @generated from file api/commons/workflows/flows.proto (package api.commons.workflows, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { NodeDefinition } from "./nodes_pb.js";

/**
 * The overarching object that defines a flow
 *
 * @generated from message api.commons.workflows.FlowDefinition
 */
export const FlowDefinition = proto3.makeMessageType(
  "api.commons.workflows.FlowDefinition",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "entry_node_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "nodes", kind: "message", T: NodeDefinition, repeated: true },
    { no: 11, name: "error_node_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.commons.workflows.FlowState
 */
export const FlowState = proto3.makeMessageType(
  "api.commons.workflows.FlowState",
  () => [
    { no: 1, name: "envelope", kind: "message", T: Envelope },
    { no: 2, name: "state", kind: "message", T: State },
    { no: 100, name: "payload", kind: "message", T: Payload },
  ],
);

/**
 * @generated from message api.commons.workflows.Envelope
 */
export const Envelope = proto3.makeMessageType(
  "api.commons.workflows.Envelope",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.commons.workflows.State
 */
export const State = proto3.makeMessageType(
  "api.commons.workflows.State",
  () => [
    { no: 1, name: "flow_done", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "flow_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "current_node", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "error", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.commons.workflows.Payload
 */
export const Payload = proto3.makeMessageType(
  "api.commons.workflows.Payload",
  () => [
    { no: 1, name: "data", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "error", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.commons.workflows.Message
 */
export const Message = proto3.makeMessageType(
  "api.commons.workflows.Message",
  () => [
    { no: 1, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "payload" },
  ],
);


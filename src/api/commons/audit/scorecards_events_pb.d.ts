// @generated by protoc-gen-es v1.7.0 with parameter "target=js+dts"
// @generated from file api/commons/audit/scorecards_events.proto (package api.commons.audit, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, FieldMask, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { AutoEvaluation, Category, Evaluation, EvaluationQuestion, EvaluationType, Question, RiskLevel, Scorecard, ScorecardQuestion, ScorecardState, ScoreType, Section } from "../scorecards_pb.js";
import type { CallType_Enum } from "../acd_pb.js";

/**
 * ScorecardsCreateQuestionEvent is event when a question library question is created
 *
 * @generated from message api.commons.audit.ScorecardsCreateQuestionEvent
 */
export declare class ScorecardsCreateQuestionEvent extends Message<ScorecardsCreateQuestionEvent> {
  /**
   * the creator of the question
   *
   * @generated from field: string author_id = 1;
   */
  authorId: string;

  /**
   * the question to display
   *
   * @generated from field: string question_text = 2;
   */
  questionText: string;

  /**
   * extra info or context for the question
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * question created
   *
   * @generated from field: api.commons.Question question = 4;
   */
  question?: Question;

  constructor(data?: PartialMessage<ScorecardsCreateQuestionEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.ScorecardsCreateQuestionEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScorecardsCreateQuestionEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScorecardsCreateQuestionEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScorecardsCreateQuestionEvent;

  static equals(a: ScorecardsCreateQuestionEvent | PlainMessage<ScorecardsCreateQuestionEvent> | undefined, b: ScorecardsCreateQuestionEvent | PlainMessage<ScorecardsCreateQuestionEvent> | undefined): boolean;
}

/**
 * ScorecardsUpdateQuestionEvent is event when a question library question is updated
 *
 * @generated from message api.commons.audit.ScorecardsUpdateQuestionEvent
 */
export declare class ScorecardsUpdateQuestionEvent extends Message<ScorecardsUpdateQuestionEvent> {
  /**
   * unique id of tcn user triggering event
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * the question to display
   *
   * @generated from field: string question_text = 2;
   */
  questionText: string;

  /**
   * extra info or context for the question
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * field mask of updated fields
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 4;
   */
  updateMask?: FieldMask;

  /**
   * question updated
   *
   * @generated from field: api.commons.Question question = 5;
   */
  question?: Question;

  constructor(data?: PartialMessage<ScorecardsUpdateQuestionEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.ScorecardsUpdateQuestionEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScorecardsUpdateQuestionEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScorecardsUpdateQuestionEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScorecardsUpdateQuestionEvent;

  static equals(a: ScorecardsUpdateQuestionEvent | PlainMessage<ScorecardsUpdateQuestionEvent> | undefined, b: ScorecardsUpdateQuestionEvent | PlainMessage<ScorecardsUpdateQuestionEvent> | undefined): boolean;
}

/**
 * ScorecardsDeleteQuestionEvent is event when a question library question is deleted
 *
 * @generated from message api.commons.audit.ScorecardsDeleteQuestionEvent
 */
export declare class ScorecardsDeleteQuestionEvent extends Message<ScorecardsDeleteQuestionEvent> {
  /**
   * unique id of tcn user triggering event
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * the question to display
   *
   * @generated from field: string question_text = 2;
   */
  questionText: string;

  /**
   * extra info or context for the question
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * category ids linked to question
   *
   * @generated from field: repeated int64 category_ids = 4;
   */
  categoryIds: bigint[];

  /**
   * question deleted
   *
   * @generated from field: api.commons.Question question = 5;
   */
  question?: Question;

  constructor(data?: PartialMessage<ScorecardsDeleteQuestionEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.ScorecardsDeleteQuestionEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScorecardsDeleteQuestionEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScorecardsDeleteQuestionEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScorecardsDeleteQuestionEvent;

  static equals(a: ScorecardsDeleteQuestionEvent | PlainMessage<ScorecardsDeleteQuestionEvent> | undefined, b: ScorecardsDeleteQuestionEvent | PlainMessage<ScorecardsDeleteQuestionEvent> | undefined): boolean;
}

/**
 * ScorecardsCreateScorecardEvent is event when a scorecard library scorecard is created
 *
 * @generated from message api.commons.audit.ScorecardsCreateScorecardEvent
 */
export declare class ScorecardsCreateScorecardEvent extends Message<ScorecardsCreateScorecardEvent> {
  /**
   * the creator of the scorecard
   *
   * @generated from field: string author_id = 1;
   */
  authorId: string;

  /**
   * the title of the scorecard
   *
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * extra info or context for the scorecard
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * passing score for the scorecard
   *
   * @generated from field: double pass_score = 4;
   */
  passScore: number;

  /**
   * method of score calculation
   *
   * @generated from field: api.commons.ScoreType score_type = 5;
   */
  scoreType: ScoreType;

  /**
   * method of evaluation (i.e. manual, auto)
   *
   * @generated from field: api.commons.EvaluationType evaluation_type = 6;
   */
  evaluationType: EvaluationType;

  /**
   * scorecard created
   *
   * @generated from field: api.commons.Scorecard scorecard = 7;
   */
  scorecard?: Scorecard;

  constructor(data?: PartialMessage<ScorecardsCreateScorecardEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.ScorecardsCreateScorecardEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScorecardsCreateScorecardEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScorecardsCreateScorecardEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScorecardsCreateScorecardEvent;

  static equals(a: ScorecardsCreateScorecardEvent | PlainMessage<ScorecardsCreateScorecardEvent> | undefined, b: ScorecardsCreateScorecardEvent | PlainMessage<ScorecardsCreateScorecardEvent> | undefined): boolean;
}

/**
 * ScorecardsUpdateScorecardEvent is event when a scorecard library scorecard is updated
 *
 * @generated from message api.commons.audit.ScorecardsUpdateScorecardEvent
 */
export declare class ScorecardsUpdateScorecardEvent extends Message<ScorecardsUpdateScorecardEvent> {
  /**
   * unique id of tcn user triggering event
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * the title of the scorecard
   *
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * extra info or context for the scorecard
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * passing score for the scorecard
   *
   * @generated from field: double pass_score = 4;
   */
  passScore: number;

  /**
   * method of score calculation
   *
   * @generated from field: api.commons.ScoreType score_type = 5;
   */
  scoreType: ScoreType;

  /**
   * method of evaluation (i.e. manual, auto)
   *
   * @generated from field: api.commons.EvaluationType evaluation_type = 6;
   */
  evaluationType: EvaluationType;

  /**
   * agent feedback allowed
   *
   * @generated from field: bool allow_feedback = 7;
   */
  allowFeedback: boolean;

  /**
   * state of the scorecard (i.e. draft, ready, in_use)
   *
   * @generated from field: api.commons.ScorecardState state = 8;
   */
  state: ScorecardState;

  /**
   * field mask of updated fields
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 9;
   */
  updateMask?: FieldMask;

  /**
   * scorecard updated
   *
   * @generated from field: api.commons.Scorecard scorecard = 10;
   */
  scorecard?: Scorecard;

  constructor(data?: PartialMessage<ScorecardsUpdateScorecardEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.ScorecardsUpdateScorecardEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScorecardsUpdateScorecardEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScorecardsUpdateScorecardEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScorecardsUpdateScorecardEvent;

  static equals(a: ScorecardsUpdateScorecardEvent | PlainMessage<ScorecardsUpdateScorecardEvent> | undefined, b: ScorecardsUpdateScorecardEvent | PlainMessage<ScorecardsUpdateScorecardEvent> | undefined): boolean;
}

/**
 * ScorecardsDeleteScorecardEvent is event when a scorecard library scorecard is deleted
 *
 * @generated from message api.commons.audit.ScorecardsDeleteScorecardEvent
 */
export declare class ScorecardsDeleteScorecardEvent extends Message<ScorecardsDeleteScorecardEvent> {
  /**
   * unique id of tcn user triggering event
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * the title of the scorecard
   *
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * extra info or context for the scorecard
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * passing score for the scorecard
   *
   * @generated from field: double pass_score = 4;
   */
  passScore: number;

  /**
   * method of score calculation
   *
   * @generated from field: api.commons.ScoreType score_type = 5;
   */
  scoreType: ScoreType;

  /**
   * method of evaluation (i.e. manual, auto)
   *
   * @generated from field: api.commons.EvaluationType evaluation_type = 6;
   */
  evaluationType: EvaluationType;

  /**
   * state of the scorecard (i.e. draft, ready, in_use)
   *
   * @generated from field: api.commons.ScorecardState state = 7;
   */
  state: ScorecardState;

  /**
   * scorecard deleted
   *
   * @generated from field: api.commons.Scorecard scorecard = 8;
   */
  scorecard?: Scorecard;

  constructor(data?: PartialMessage<ScorecardsDeleteScorecardEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.ScorecardsDeleteScorecardEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScorecardsDeleteScorecardEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScorecardsDeleteScorecardEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScorecardsDeleteScorecardEvent;

  static equals(a: ScorecardsDeleteScorecardEvent | PlainMessage<ScorecardsDeleteScorecardEvent> | undefined, b: ScorecardsDeleteScorecardEvent | PlainMessage<ScorecardsDeleteScorecardEvent> | undefined): boolean;
}

/**
 * ScorecardsCloneScorecardEvent is event when a scorecard library scorecard is cloned
 *
 * @generated from message api.commons.audit.ScorecardsCloneScorecardEvent
 */
export declare class ScorecardsCloneScorecardEvent extends Message<ScorecardsCloneScorecardEvent> {
  /**
   * the creator of the scorecard
   *
   * @generated from field: string author_id = 1;
   */
  authorId: string;

  /**
   * the title of the scorecard
   *
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * extra info or context for the scorecard
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * passing score for the scorecard
   *
   * @generated from field: double pass_score = 4;
   */
  passScore: number;

  /**
   * method of score calculation
   *
   * @generated from field: api.commons.ScoreType score_type = 5;
   */
  scoreType: ScoreType;

  /**
   * method of evaluation (i.e. manual, auto)
   *
   * @generated from field: api.commons.EvaluationType evaluation_type = 6;
   */
  evaluationType: EvaluationType;

  /**
   * scorecard clone
   *
   * @generated from field: api.commons.Scorecard scorecard = 7;
   */
  scorecard?: Scorecard;

  constructor(data?: PartialMessage<ScorecardsCloneScorecardEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.ScorecardsCloneScorecardEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScorecardsCloneScorecardEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScorecardsCloneScorecardEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScorecardsCloneScorecardEvent;

  static equals(a: ScorecardsCloneScorecardEvent | PlainMessage<ScorecardsCloneScorecardEvent> | undefined, b: ScorecardsCloneScorecardEvent | PlainMessage<ScorecardsCloneScorecardEvent> | undefined): boolean;
}

/**
 * ScorecardsCreateEvaluationEvent is event when an evaluation library evaluation is created
 *
 * @generated from message api.commons.audit.ScorecardsCreateEvaluationEvent
 */
export declare class ScorecardsCreateEvaluationEvent extends Message<ScorecardsCreateEvaluationEvent> {
  /**
   * id of the evaluation being created
   *
   * @generated from field: int64 evaluation_id = 1;
   */
  evaluationId: bigint;

  /**
   * id of evaluated scorecard
   *
   * @generated from field: int64 scorecard_id = 2;
   */
  scorecardId: bigint;

  /**
   * user_id of person performing evaluation
   *
   * @generated from field: string scorer_id = 3;
   */
  scorerId: string;

  /**
   * agent user id of agent getting evaluated
   *
   * @generated from field: string agent_user_id = 4;
   */
  agentUserId: string;

  /**
   * sid of the call being evaluated
   *
   * @generated from field: int64 call_sid = 5;
   */
  callSid: bigint;

  /**
   * the evaluation being created
   *
   * @generated from field: api.commons.Evaluation evaluation = 6;
   */
  evaluation?: Evaluation;

  constructor(data?: PartialMessage<ScorecardsCreateEvaluationEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.ScorecardsCreateEvaluationEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScorecardsCreateEvaluationEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScorecardsCreateEvaluationEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScorecardsCreateEvaluationEvent;

  static equals(a: ScorecardsCreateEvaluationEvent | PlainMessage<ScorecardsCreateEvaluationEvent> | undefined, b: ScorecardsCreateEvaluationEvent | PlainMessage<ScorecardsCreateEvaluationEvent> | undefined): boolean;
}

/**
 * ScorecardsUpdateEvaluationEvent is event when an evaluation library evaluation is updated
 *
 * @generated from message api.commons.audit.ScorecardsUpdateEvaluationEvent
 */
export declare class ScorecardsUpdateEvaluationEvent extends Message<ScorecardsUpdateEvaluationEvent> {
  /**
   * id of the evaluation being updated
   *
   * @generated from field: int64 evaluation_id = 1;
   */
  evaluationId: bigint;

  /**
   * id of evaluated scorecard
   *
   * @generated from field: int64 scorecard_id = 2;
   */
  scorecardId: bigint;

  /**
   * user_id of person performing evaluation
   *
   * @generated from field: string scorer_id = 3;
   */
  scorerId: string;

  /**
   * agent user id of agent getting evaluated
   *
   * @generated from field: string agent_user_id = 4;
   */
  agentUserId: string;

  /**
   * sid of the call being evaluated
   *
   * @generated from field: int64 call_sid = 5;
   */
  callSid: bigint;

  /**
   * the evaluation being updated
   *
   * @generated from field: api.commons.Evaluation evaluation = 6;
   */
  evaluation?: Evaluation;

  constructor(data?: PartialMessage<ScorecardsUpdateEvaluationEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.ScorecardsUpdateEvaluationEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScorecardsUpdateEvaluationEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScorecardsUpdateEvaluationEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScorecardsUpdateEvaluationEvent;

  static equals(a: ScorecardsUpdateEvaluationEvent | PlainMessage<ScorecardsUpdateEvaluationEvent> | undefined, b: ScorecardsUpdateEvaluationEvent | PlainMessage<ScorecardsUpdateEvaluationEvent> | undefined): boolean;
}

/**
 * ScorecardsDeleteEvaluationEvent is event when an evaluation library evaluation is deleted
 *
 * @generated from message api.commons.audit.ScorecardsDeleteEvaluationEvent
 */
export declare class ScorecardsDeleteEvaluationEvent extends Message<ScorecardsDeleteEvaluationEvent> {
  /**
   * id of the evaluation being created
   *
   * @generated from field: int64 evaluation_id = 1;
   */
  evaluationId: bigint;

  /**
   * id of evaluated scorecard
   *
   * @generated from field: int64 scorecard_id = 2;
   */
  scorecardId: bigint;

  /**
   * user_id of person deleting evaluation
   *
   * @generated from field: string user_id = 3;
   */
  userId: string;

  /**
   * agent user id of agent getting evaluated
   *
   * @generated from field: string agent_user_id = 4;
   */
  agentUserId: string;

  /**
   * sid of the call being evaluated
   *
   * @generated from field: int64 call_sid = 5;
   */
  callSid: bigint;

  /**
   * the evaluation being deleted
   *
   * @generated from field: api.commons.Evaluation evaluation = 6;
   */
  evaluation?: Evaluation;

  constructor(data?: PartialMessage<ScorecardsDeleteEvaluationEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.ScorecardsDeleteEvaluationEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScorecardsDeleteEvaluationEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScorecardsDeleteEvaluationEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScorecardsDeleteEvaluationEvent;

  static equals(a: ScorecardsDeleteEvaluationEvent | PlainMessage<ScorecardsDeleteEvaluationEvent> | undefined, b: ScorecardsDeleteEvaluationEvent | PlainMessage<ScorecardsDeleteEvaluationEvent> | undefined): boolean;
}

/**
 * ScorecardsCreateSectionEvent is event when a section library section is created
 *
 * @generated from message api.commons.audit.ScorecardsCreateSectionEvent
 */
export declare class ScorecardsCreateSectionEvent extends Message<ScorecardsCreateSectionEvent> {
  /**
   * unique id of tcn user triggering event
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * section title or name
   *
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * extra context about the section
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * used for scorecards with weighted scoring
   *
   * @generated from field: uint32 weight = 4;
   */
  weight: number;

  /**
   * section created
   *
   * @generated from field: api.commons.Section section = 5;
   */
  section?: Section;

  constructor(data?: PartialMessage<ScorecardsCreateSectionEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.ScorecardsCreateSectionEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScorecardsCreateSectionEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScorecardsCreateSectionEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScorecardsCreateSectionEvent;

  static equals(a: ScorecardsCreateSectionEvent | PlainMessage<ScorecardsCreateSectionEvent> | undefined, b: ScorecardsCreateSectionEvent | PlainMessage<ScorecardsCreateSectionEvent> | undefined): boolean;
}

/**
 * ScorecardsUpdateSectionEvent is event when a section library section is updated
 *
 * @generated from message api.commons.audit.ScorecardsUpdateSectionEvent
 */
export declare class ScorecardsUpdateSectionEvent extends Message<ScorecardsUpdateSectionEvent> {
  /**
   * unique id of tcn user triggering event
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * section title or name
   *
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * extra context about the section
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * used for scorecards with weighted scoring
   *
   * @generated from field: uint32 weight = 4;
   */
  weight: number;

  /**
   * order number of section
   *
   * @generated from field: int32 sort_order = 5;
   */
  sortOrder: number;

  /**
   * field mask of updated fields
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 6;
   */
  updateMask?: FieldMask;

  /**
   * section updated
   *
   * @generated from field: api.commons.Section section = 7;
   */
  section?: Section;

  constructor(data?: PartialMessage<ScorecardsUpdateSectionEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.ScorecardsUpdateSectionEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScorecardsUpdateSectionEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScorecardsUpdateSectionEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScorecardsUpdateSectionEvent;

  static equals(a: ScorecardsUpdateSectionEvent | PlainMessage<ScorecardsUpdateSectionEvent> | undefined, b: ScorecardsUpdateSectionEvent | PlainMessage<ScorecardsUpdateSectionEvent> | undefined): boolean;
}

/**
 * ScorecardsDeleteSectionEvent is event when a section library section is deleted
 *
 * @generated from message api.commons.audit.ScorecardsDeleteSectionEvent
 */
export declare class ScorecardsDeleteSectionEvent extends Message<ScorecardsDeleteSectionEvent> {
  /**
   * unique id of tcn user triggering event
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * section title or name
   *
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * extra context about the section
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * used for scorecards with weighted scoring
   *
   * @generated from field: uint32 weight = 4;
   */
  weight: number;

  /**
   * section deleted
   *
   * @generated from field: api.commons.Section section = 5;
   */
  section?: Section;

  constructor(data?: PartialMessage<ScorecardsDeleteSectionEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.ScorecardsDeleteSectionEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScorecardsDeleteSectionEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScorecardsDeleteSectionEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScorecardsDeleteSectionEvent;

  static equals(a: ScorecardsDeleteSectionEvent | PlainMessage<ScorecardsDeleteSectionEvent> | undefined, b: ScorecardsDeleteSectionEvent | PlainMessage<ScorecardsDeleteSectionEvent> | undefined): boolean;
}

/**
 * ScorecardsCreateCategoryEvent is event when a category library category is created
 *
 * @generated from message api.commons.audit.ScorecardsCreateCategoryEvent
 */
export declare class ScorecardsCreateCategoryEvent extends Message<ScorecardsCreateCategoryEvent> {
  /**
   * the creator of the category
   *
   * @generated from field: string author_id = 1;
   */
  authorId: string;

  /**
   * title of the category
   *
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * extra info or context for the category
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * timestamp of creation
   *
   * @generated from field: google.protobuf.Timestamp created_at = 4;
   */
  createdAt?: Timestamp;

  /**
   * category object created
   *
   * @generated from field: api.commons.Category category = 5;
   */
  category?: Category;

  constructor(data?: PartialMessage<ScorecardsCreateCategoryEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.ScorecardsCreateCategoryEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScorecardsCreateCategoryEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScorecardsCreateCategoryEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScorecardsCreateCategoryEvent;

  static equals(a: ScorecardsCreateCategoryEvent | PlainMessage<ScorecardsCreateCategoryEvent> | undefined, b: ScorecardsCreateCategoryEvent | PlainMessage<ScorecardsCreateCategoryEvent> | undefined): boolean;
}

/**
 * ScorecardsUpdateCategoryEvent is event when a category library category is updated
 *
 * @generated from message api.commons.audit.ScorecardsUpdateCategoryEvent
 */
export declare class ScorecardsUpdateCategoryEvent extends Message<ScorecardsUpdateCategoryEvent> {
  /**
   * unique id of tcn user triggering event
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * title of the category
   *
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * extra info or context for the category
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * field mask of updated fields
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 4;
   */
  updateMask?: FieldMask;

  /**
   * category object created
   *
   * @generated from field: api.commons.Category category = 5;
   */
  category?: Category;

  constructor(data?: PartialMessage<ScorecardsUpdateCategoryEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.ScorecardsUpdateCategoryEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScorecardsUpdateCategoryEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScorecardsUpdateCategoryEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScorecardsUpdateCategoryEvent;

  static equals(a: ScorecardsUpdateCategoryEvent | PlainMessage<ScorecardsUpdateCategoryEvent> | undefined, b: ScorecardsUpdateCategoryEvent | PlainMessage<ScorecardsUpdateCategoryEvent> | undefined): boolean;
}

/**
 * ScorecardsDeleteCategoryEvent is event when a category library category is deleted
 *
 * @generated from message api.commons.audit.ScorecardsDeleteCategoryEvent
 */
export declare class ScorecardsDeleteCategoryEvent extends Message<ScorecardsDeleteCategoryEvent> {
  /**
   * unique id of tcn user triggering event
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * title of the category
   *
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * extra info or context for the category
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * timestamp of deletion
   *
   * @generated from field: google.protobuf.Timestamp deleted_at = 4;
   */
  deletedAt?: Timestamp;

  /**
   * category object created
   *
   * @generated from field: api.commons.Category category = 5;
   */
  category?: Category;

  constructor(data?: PartialMessage<ScorecardsDeleteCategoryEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.ScorecardsDeleteCategoryEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScorecardsDeleteCategoryEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScorecardsDeleteCategoryEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScorecardsDeleteCategoryEvent;

  static equals(a: ScorecardsDeleteCategoryEvent | PlainMessage<ScorecardsDeleteCategoryEvent> | undefined, b: ScorecardsDeleteCategoryEvent | PlainMessage<ScorecardsDeleteCategoryEvent> | undefined): boolean;
}

/**
 * ScorecardsCreateEvaluationQuestionEvent is event when an evaluation question is created
 *
 * @generated from message api.commons.audit.ScorecardsCreateEvaluationQuestionEvent
 */
export declare class ScorecardsCreateEvaluationQuestionEvent extends Message<ScorecardsCreateEvaluationQuestionEvent> {
  /**
   * unique id of evaluation question
   *
   * @generated from field: int64 evaluation_question_id = 1;
   */
  evaluationQuestionId: bigint;

  /**
   * unique id of evaluation
   *
   * @generated from field: int64 evaluation_id = 2;
   */
  evaluationId: bigint;

  /**
   * unique id of scorecard question
   *
   * @generated from field: int64 scorecard_question_id = 3;
   */
  scorecardQuestionId: bigint;

  /**
   * tcn user id of person creating question
   *
   * @generated from field: string user_id = 4;
   */
  userId: string;

  /**
   * the question being created
   *
   * @generated from field: api.commons.EvaluationQuestion evaluation_question = 5;
   */
  evaluationQuestion?: EvaluationQuestion;

  constructor(data?: PartialMessage<ScorecardsCreateEvaluationQuestionEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.ScorecardsCreateEvaluationQuestionEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScorecardsCreateEvaluationQuestionEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScorecardsCreateEvaluationQuestionEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScorecardsCreateEvaluationQuestionEvent;

  static equals(a: ScorecardsCreateEvaluationQuestionEvent | PlainMessage<ScorecardsCreateEvaluationQuestionEvent> | undefined, b: ScorecardsCreateEvaluationQuestionEvent | PlainMessage<ScorecardsCreateEvaluationQuestionEvent> | undefined): boolean;
}

/**
 * ScorecardsUpdateEvaluationQuestionEvent is event when an evaluation question is updated
 *
 * @generated from message api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent
 */
export declare class ScorecardsUpdateEvaluationQuestionEvent extends Message<ScorecardsUpdateEvaluationQuestionEvent> {
  /**
   * unique id of evaluation question
   *
   * @generated from field: int64 evaluation_question_id = 1;
   */
  evaluationQuestionId: bigint;

  /**
   * unique id of evaluation
   *
   * @generated from field: int64 evaluation_id = 2;
   */
  evaluationId: bigint;

  /**
   * unique id of scorecard question
   *
   * @generated from field: int64 scorecard_question_id = 3;
   */
  scorecardQuestionId: bigint;

  /**
   * tcn user id of person performing request
   *
   * @generated from field: string user_id = 4;
   */
  userId: string;

  /**
   * @generated from field: bool skipped = 5;
   */
  skipped: boolean;

  /**
   * @generated from field: int64 points = 6;
   */
  points: bigint;

  /**
   * field mask of updated fields
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 7;
   */
  updateMask?: FieldMask;

  /**
   * the question being updated
   *
   * @generated from field: api.commons.EvaluationQuestion evaluation_question = 8;
   */
  evaluationQuestion?: EvaluationQuestion;

  constructor(data?: PartialMessage<ScorecardsUpdateEvaluationQuestionEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScorecardsUpdateEvaluationQuestionEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScorecardsUpdateEvaluationQuestionEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScorecardsUpdateEvaluationQuestionEvent;

  static equals(a: ScorecardsUpdateEvaluationQuestionEvent | PlainMessage<ScorecardsUpdateEvaluationQuestionEvent> | undefined, b: ScorecardsUpdateEvaluationQuestionEvent | PlainMessage<ScorecardsUpdateEvaluationQuestionEvent> | undefined): boolean;
}

/**
 * ScorecardsDeleteEvaluationQuestionEvent is event when an evaluation question is deleted
 *
 * @generated from message api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent
 */
export declare class ScorecardsDeleteEvaluationQuestionEvent extends Message<ScorecardsDeleteEvaluationQuestionEvent> {
  /**
   * unique id of evaluation question
   *
   * @generated from field: int64 evaluation_question_id = 1;
   */
  evaluationQuestionId: bigint;

  /**
   * unique id of evaluation
   *
   * @generated from field: int64 evaluation_id = 2;
   */
  evaluationId: bigint;

  /**
   * unique id of scorecard question
   *
   * @generated from field: int64 scorecard_question_id = 3;
   */
  scorecardQuestionId: bigint;

  /**
   * tcn user id of person performing request
   *
   * @generated from field: string user_id = 4;
   */
  userId: string;

  /**
   * the question being deleted
   *
   * @generated from field: api.commons.EvaluationQuestion evaluation_questions = 5;
   */
  evaluationQuestions?: EvaluationQuestion;

  constructor(data?: PartialMessage<ScorecardsDeleteEvaluationQuestionEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScorecardsDeleteEvaluationQuestionEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScorecardsDeleteEvaluationQuestionEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScorecardsDeleteEvaluationQuestionEvent;

  static equals(a: ScorecardsDeleteEvaluationQuestionEvent | PlainMessage<ScorecardsDeleteEvaluationQuestionEvent> | undefined, b: ScorecardsDeleteEvaluationQuestionEvent | PlainMessage<ScorecardsDeleteEvaluationQuestionEvent> | undefined): boolean;
}

/**
 * ScorecardsCreateScorecardQuestionEvent is event when a scorecard question library scorecard question is created
 *
 * @generated from message api.commons.audit.ScorecardsCreateScorecardQuestionEvent
 */
export declare class ScorecardsCreateScorecardQuestionEvent extends Message<ScorecardsCreateScorecardQuestionEvent> {
  /**
   * unique id of tcn user triggering event
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * question to display
   *
   * @generated from field: string question = 2;
   */
  question: string;

  /**
   * optional; additional info about question
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * question can be excluded from scoring (allow n/a)
   *
   * @generated from field: bool allow_skip = 4;
   */
  allowSkip: boolean;

  /**
   * max points allowed for scorecard question
   *
   * @generated from field: int64 max_points = 5;
   */
  maxPoints: bigint;

  /**
   * allow multiple selections for scorecard question
   *
   * @generated from field: bool allow_multi_select = 6;
   */
  allowMultiSelect: boolean;

  /**
   * scorecard question created
   *
   * @generated from field: api.commons.ScorecardQuestion scorecard_question = 7;
   */
  scorecardQuestion?: ScorecardQuestion;

  constructor(data?: PartialMessage<ScorecardsCreateScorecardQuestionEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.ScorecardsCreateScorecardQuestionEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScorecardsCreateScorecardQuestionEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScorecardsCreateScorecardQuestionEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScorecardsCreateScorecardQuestionEvent;

  static equals(a: ScorecardsCreateScorecardQuestionEvent | PlainMessage<ScorecardsCreateScorecardQuestionEvent> | undefined, b: ScorecardsCreateScorecardQuestionEvent | PlainMessage<ScorecardsCreateScorecardQuestionEvent> | undefined): boolean;
}

/**
 * ScorecardsUpdateScorecardQuestionEvent is event when a scorecard question library scorecard question is updated
 *
 * @generated from message api.commons.audit.ScorecardsUpdateScorecardQuestionEvent
 */
export declare class ScorecardsUpdateScorecardQuestionEvent extends Message<ScorecardsUpdateScorecardQuestionEvent> {
  /**
   * unique id of tcn user triggering event
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * question to display
   *
   * @generated from field: string question = 2;
   */
  question: string;

  /**
   * optional; additional info about question
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * question can be excluded from scoring (allow n/a)
   *
   * @generated from field: bool allow_skip = 4;
   */
  allowSkip: boolean;

  /**
   * max points allowed for scorecard question
   *
   * @generated from field: int64 max_points = 5;
   */
  maxPoints: bigint;

  /**
   * allow multiple selections for scorecard question
   *
   * @generated from field: bool allow_multi_select = 6;
   */
  allowMultiSelect: boolean;

  /**
   * order number of scorecard question
   *
   * @generated from field: int32 sort_order = 7;
   */
  sortOrder: number;

  /**
   * field mask of updated fields
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 8;
   */
  updateMask?: FieldMask;

  /**
   * scorecard question updated
   *
   * @generated from field: api.commons.ScorecardQuestion scorecard_question = 9;
   */
  scorecardQuestion?: ScorecardQuestion;

  constructor(data?: PartialMessage<ScorecardsUpdateScorecardQuestionEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.ScorecardsUpdateScorecardQuestionEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScorecardsUpdateScorecardQuestionEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScorecardsUpdateScorecardQuestionEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScorecardsUpdateScorecardQuestionEvent;

  static equals(a: ScorecardsUpdateScorecardQuestionEvent | PlainMessage<ScorecardsUpdateScorecardQuestionEvent> | undefined, b: ScorecardsUpdateScorecardQuestionEvent | PlainMessage<ScorecardsUpdateScorecardQuestionEvent> | undefined): boolean;
}

/**
 * ScorecardsDeleteScorecardQuestionEvent is event when a scorecard question library scorecard question is deleted
 *
 * @generated from message api.commons.audit.ScorecardsDeleteScorecardQuestionEvent
 */
export declare class ScorecardsDeleteScorecardQuestionEvent extends Message<ScorecardsDeleteScorecardQuestionEvent> {
  /**
   * unique id of tcn user triggering event
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * question to display
   *
   * @generated from field: string question = 2;
   */
  question: string;

  /**
   * optional; additional info about question
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * question can be excluded from scoring (allow n/a)
   *
   * @generated from field: bool allow_skip = 4;
   */
  allowSkip: boolean;

  /**
   * max points allowed for scorecard question
   *
   * @generated from field: int64 max_points = 5;
   */
  maxPoints: bigint;

  /**
   * allow multiple selections for scorecard question
   *
   * @generated from field: bool allow_multi_select = 6;
   */
  allowMultiSelect: boolean;

  /**
   * scorecard question deleted
   *
   * @generated from field: api.commons.ScorecardQuestion scorecard_question = 7;
   */
  scorecardQuestion?: ScorecardQuestion;

  constructor(data?: PartialMessage<ScorecardsDeleteScorecardQuestionEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.ScorecardsDeleteScorecardQuestionEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScorecardsDeleteScorecardQuestionEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScorecardsDeleteScorecardQuestionEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScorecardsDeleteScorecardQuestionEvent;

  static equals(a: ScorecardsDeleteScorecardQuestionEvent | PlainMessage<ScorecardsDeleteScorecardQuestionEvent> | undefined, b: ScorecardsDeleteScorecardQuestionEvent | PlainMessage<ScorecardsDeleteScorecardQuestionEvent> | undefined): boolean;
}

/**
 * ScorecardsCreateAutoEvaluationEvent is event when an auto evaluation library auto evaluation is created
 *
 * @generated from message api.commons.audit.ScorecardsCreateAutoEvaluationEvent
 */
export declare class ScorecardsCreateAutoEvaluationEvent extends Message<ScorecardsCreateAutoEvaluationEvent> {
  /**
   * id of the auto evaluation being created
   *
   * @generated from field: int64 auto_evaluation_id = 1;
   */
  autoEvaluationId: bigint;

  /**
   * id of evaluated scorecard
   *
   * @generated from field: int64 scorecard_id = 2;
   */
  scorecardId: bigint;

  /**
   * agent user id of agent getting evaluated
   *
   * @generated from field: string agent_user_id = 3;
   */
  agentUserId: string;

  /**
   * sid of the call being evaluated
   *
   * @generated from field: int64 call_sid = 4;
   */
  callSid: bigint;

  /**
   * type of call being evaluated
   *
   * @generated from field: api.commons.CallType.Enum call_type = 5;
   */
  callType: CallType_Enum;

  /**
   * transcript sid for the call evaluated
   *
   * @generated from field: int64 transcript_sid = 6;
   */
  transcriptSid: bigint;

  /**
   * risk level of the evaluation
   *
   * @generated from field: api.commons.RiskLevel risk_level = 7;
   */
  riskLevel: RiskLevel;

  /**
   * the auto evaluation being created
   *
   * @generated from field: api.commons.AutoEvaluation auto_evaluation = 8;
   */
  autoEvaluation?: AutoEvaluation;

  constructor(data?: PartialMessage<ScorecardsCreateAutoEvaluationEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.ScorecardsCreateAutoEvaluationEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScorecardsCreateAutoEvaluationEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScorecardsCreateAutoEvaluationEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScorecardsCreateAutoEvaluationEvent;

  static equals(a: ScorecardsCreateAutoEvaluationEvent | PlainMessage<ScorecardsCreateAutoEvaluationEvent> | undefined, b: ScorecardsCreateAutoEvaluationEvent | PlainMessage<ScorecardsCreateAutoEvaluationEvent> | undefined): boolean;
}


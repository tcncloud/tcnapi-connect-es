// @generated by protoc-gen-es v1.9.0 with parameter "target=js+dts"
// @generated from file api/commons/audit/vana_events.proto (package api.commons.audit, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, Duration, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * VanaFlagEvent represents a flag occurrence in voice analytics.
 * It summarizes a set of transcripts flagged over an interval.
 *
 * @generated from message api.commons.audit.VanaFlagEvent
 */
export declare class VanaFlagEvent extends Message<VanaFlagEvent> {
  /**
   * Required. User is not allowed to see flag sid.
   *
   * @generated from field: string flag_name = 1;
   */
  flagName: string;

  /**
   * Required. Used for matching user notification settings.
   *
   * @generated from field: int64 flag_sid = 2;
   */
  flagSid: bigint;

  /**
   * Required. Link to voice analytics page that shows reported transcripts.
   *
   * @generated from field: string url = 3;
   */
  url: string;

  /**
   * Required. Number of transcripts that were flagged.
   *
   * @generated from field: int64 num_transcripts = 4;
   */
  numTranscripts: bigint;

  /**
   * Required. Flag priority.
   *
   * @generated from field: int32 priority = 5;
   */
  priority: number;

  constructor(data?: PartialMessage<VanaFlagEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.VanaFlagEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VanaFlagEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VanaFlagEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VanaFlagEvent;

  static equals(a: VanaFlagEvent | PlainMessage<VanaFlagEvent> | undefined, b: VanaFlagEvent | PlainMessage<VanaFlagEvent> | undefined): boolean;
}

/**
 * VanaFlagReviewEvent represents a flag that needs review in voice analytics.
 * It summarizes a set of transcripts that need review.
 *
 * @generated from message api.commons.audit.VanaFlagReviewEvent
 */
export declare class VanaFlagReviewEvent extends Message<VanaFlagReviewEvent> {
  /**
   * Required. User is not allowed to see flag sid.
   *
   * @generated from field: string flag_name = 1;
   */
  flagName: string;

  /**
   * Required. Used for matching user notification settings.
   *
   * @generated from field: int64 flag_sid = 2;
   */
  flagSid: bigint;

  /**
   * Required. Link to voice analytics page that shows reported transcripts.
   *
   * @generated from field: string url = 3;
   */
  url: string;

  /**
   * Required. Number of transcripts that were flagged.
   *
   * @generated from field: int64 num_transcripts = 4;
   */
  numTranscripts: bigint;

  /**
   * Required. Flag priority.
   *
   * @generated from field: int32 priority = 5;
   */
  priority: number;

  constructor(data?: PartialMessage<VanaFlagReviewEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.VanaFlagReviewEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VanaFlagReviewEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VanaFlagReviewEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VanaFlagReviewEvent;

  static equals(a: VanaFlagReviewEvent | PlainMessage<VanaFlagReviewEvent> | undefined, b: VanaFlagReviewEvent | PlainMessage<VanaFlagReviewEvent> | undefined): boolean;
}

/**
 * VanaBillingReportEvent represents a billing report in voice analytics.
 * It gives a csv to a billing report of transcripts that occured that billing period.
 *
 * @generated from message api.commons.audit.VanaBillingReportEvent
 */
export declare class VanaBillingReportEvent extends Message<VanaBillingReportEvent> {
  /**
   * Required. Report data start time.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * Required. Report data end time.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * Required. Report download url.
   *
   * @generated from field: string url = 3;
   */
  url: string;

  constructor(data?: PartialMessage<VanaBillingReportEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.VanaBillingReportEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VanaBillingReportEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VanaBillingReportEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VanaBillingReportEvent;

  static equals(a: VanaBillingReportEvent | PlainMessage<VanaBillingReportEvent> | undefined, b: VanaBillingReportEvent | PlainMessage<VanaBillingReportEvent> | undefined): boolean;
}

/**
 * VanaFlagSummaryEvent is the summary of the flagging process.
 * It shows what transcripts were flagged.
 *
 * @generated from message api.commons.audit.VanaFlagSummaryEvent
 */
export declare class VanaFlagSummaryEvent extends Message<VanaFlagSummaryEvent> {
  /**
   * Required. Report data start time.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * Required. Report data end time.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;

  /**
   * Required. Flag Summaries
   *
   * @generated from field: repeated api.commons.audit.VanaFlagSummaryEvent.FlagSummary flag_summaries = 3;
   */
  flagSummaries: VanaFlagSummaryEvent_FlagSummary[];

  constructor(data?: PartialMessage<VanaFlagSummaryEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.VanaFlagSummaryEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VanaFlagSummaryEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VanaFlagSummaryEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VanaFlagSummaryEvent;

  static equals(a: VanaFlagSummaryEvent | PlainMessage<VanaFlagSummaryEvent> | undefined, b: VanaFlagSummaryEvent | PlainMessage<VanaFlagSummaryEvent> | undefined): boolean;
}

/**
 * FlagSummary is an overview of the flags in the transcript.
 *
 * @generated from message api.commons.audit.VanaFlagSummaryEvent.FlagSummary
 */
export declare class VanaFlagSummaryEvent_FlagSummary extends Message<VanaFlagSummaryEvent_FlagSummary> {
  /**
   * @generated from field: int64 transcript_sid = 1;
   */
  transcriptSid: bigint;

  /**
   * @generated from field: repeated int64 flag_sids = 2;
   */
  flagSids: bigint[];

  constructor(data?: PartialMessage<VanaFlagSummaryEvent_FlagSummary>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.VanaFlagSummaryEvent.FlagSummary";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VanaFlagSummaryEvent_FlagSummary;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VanaFlagSummaryEvent_FlagSummary;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VanaFlagSummaryEvent_FlagSummary;

  static equals(a: VanaFlagSummaryEvent_FlagSummary | PlainMessage<VanaFlagSummaryEvent_FlagSummary> | undefined, b: VanaFlagSummaryEvent_FlagSummary | PlainMessage<VanaFlagSummaryEvent_FlagSummary> | undefined): boolean;
}

/**
 * VanaPhraseCorrectionEvent is a user suggestion for what some words in a transcript
 * should be changed to when the original translation is off.
 *
 * @generated from message api.commons.audit.VanaPhraseCorrectionEvent
 */
export declare class VanaPhraseCorrectionEvent extends Message<VanaPhraseCorrectionEvent> {
  /**
   * Required. Start offset of the selected words in the transcript.
   *
   * @generated from field: google.protobuf.Duration start_offset = 1;
   */
  startOffset?: Duration;

  /**
   * Required. End offset of the selected words in the transcript.
   *
   * @generated from field: google.protobuf.Duration end_offset = 2;
   */
  endOffset?: Duration;

  /**
   * Required. Original text that the transcript was translated to.
   *
   * @generated from field: string original_text = 3;
   */
  originalText: string;

  /**
   * Required. Proposed text of what the transcript text should be.
   *
   * @generated from field: string proposed_text = 4;
   */
  proposedText: string;

  /**
   * Required. Url of the call recording for the transcript.
   *
   * @generated from field: string url = 5;
   */
  url: string;

  /**
   * Required. Channel that the words were spoken on.
   *
   * @generated from field: uint32 channel = 6;
   */
  channel: number;

  constructor(data?: PartialMessage<VanaPhraseCorrectionEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.commons.audit.VanaPhraseCorrectionEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VanaPhraseCorrectionEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VanaPhraseCorrectionEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VanaPhraseCorrectionEvent;

  static equals(a: VanaPhraseCorrectionEvent | PlainMessage<VanaPhraseCorrectionEvent> | undefined, b: VanaPhraseCorrectionEvent | PlainMessage<VanaPhraseCorrectionEvent> | undefined): boolean;
}


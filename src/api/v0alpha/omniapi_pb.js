// @generated by protoc-gen-es v1.5.1 with parameter "target=js+dts"
// @generated from file api/v0alpha/omniapi.proto (package api.v0alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { FieldMask, proto3, Timestamp } from "@bufbuild/protobuf";
import { ChannelType, ConnectedInbox, ContactList, ConversationStatus, Disposition, OmniAttachment, OmniCampaign, OmniCampaignDirection, OmniCampaignModule, OmniCampaignStatus, OmniConversation, OmniConversationSkills, OmniCustomUnsubscribeLink, OmniMessagePayload, OmniProjectComplianceConfig, OmniTask, ProjectStatus, Signature, VerifiedEmail } from "../commons/omnichannel_pb.js";
import { SkillType_Enum } from "../commons/wfm_pb.js";

/**
 * @generated from message api.v0alpha.SuggestResponseReq
 */
export const SuggestResponseReq = proto3.makeMessageType(
  "api.v0alpha.SuggestResponseReq",
  () => [
    { no: 1, name: "conversation_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.SuggestResponseRes
 */
export const SuggestResponseRes = proto3.makeMessageType(
  "api.v0alpha.SuggestResponseRes",
  () => [
    { no: 1, name: "suggested_response", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * CreateCampaignReq - request to create an omni campaign
 *
 * @generated from message api.v0alpha.CreateCampaignReq
 */
export const CreateCampaignReq = proto3.makeMessageType(
  "api.v0alpha.CreateCampaignReq",
  () => [
    { no: 1, name: "campaign", kind: "message", T: OmniCampaign },
    { no: 2, name: "modules", kind: "message", T: CreateCampaignReq_CampaignModule, repeated: true },
  ],
);

/**
 * CampaignModule - information required to create an omni campaign module
 *
 * @generated from message api.v0alpha.CreateCampaignReq.CampaignModule
 */
export const CreateCampaignReq_CampaignModule = proto3.makeMessageType(
  "api.v0alpha.CreateCampaignReq.CampaignModule",
  () => [
    { no: 1, name: "module", kind: "message", T: OmniCampaignModule },
    { no: 100, name: "omni_contact_list", kind: "message", T: ContactListsDataSource, oneof: "data_source" },
  ],
  {localName: "CreateCampaignReq_CampaignModule"},
);

/**
 * ContactListsDataSource - data source for getting contacts from one or more contact lists
 *
 * @generated from message api.v0alpha.ContactListsDataSource
 */
export const ContactListsDataSource = proto3.makeMessageType(
  "api.v0alpha.ContactListsDataSource",
  () => [
    { no: 1, name: "contact_lists_data_source", kind: "message", T: ContactListDataSource, repeated: true },
  ],
);

/**
 * ContactListDataSource  - contains information to retrieve data from a contact list
 *
 * @generated from message api.v0alpha.ContactListDataSource
 */
export const ContactListDataSource = proto3.makeMessageType(
  "api.v0alpha.ContactListDataSource",
  () => [
    { no: 1, name: "contact_list_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
);

/**
 * ListCampaignsReq - request to list all campaigns using a given filter
 *
 * @generated from message api.v0alpha.ListCampaignsReq
 */
export const ListCampaignsReq = proto3.makeMessageType(
  "api.v0alpha.ListCampaignsReq",
  () => [
    { no: 1, name: "statuses", kind: "enum", T: proto3.getEnumType(OmniCampaignStatus), repeated: true },
    { no: 2, name: "field_mask", kind: "message", T: FieldMask },
    { no: 100, name: "by_ids", kind: "message", T: ListCampaignsReq_ByIds, oneof: "filter" },
    { no: 101, name: "by_project", kind: "message", T: ListCampaignsReq_ByProject, oneof: "filter" },
    { no: 102, name: "by_time", kind: "message", T: ListCampaignsReq_ByTime, oneof: "filter" },
    { no: 103, name: "by_unsubscribe_link", kind: "message", T: ListCampaignsReq_ByUnsubscribeLink, oneof: "filter" },
    { no: 104, name: "by_connected_inbox", kind: "message", T: ListCampaignsReq_ByConnectedInbox, oneof: "filter" },
    { no: 105, name: "by_verified_email", kind: "message", T: ListCampaignsReq_ByVerifiedEmail, oneof: "filter" },
    { no: 106, name: "by_sms_number", kind: "message", T: ListCampaignsReq_BySmsNumber, oneof: "filter" },
  ],
);

/**
 * ByConnectedInbox - filter to list campaigns by the provided connected inbox
 *
 * @generated from message api.v0alpha.ListCampaignsReq.ByConnectedInbox
 */
export const ListCampaignsReq_ByConnectedInbox = proto3.makeMessageType(
  "api.v0alpha.ListCampaignsReq.ByConnectedInbox",
  () => [
    { no: 1, name: "inbox_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
  {localName: "ListCampaignsReq_ByConnectedInbox"},
);

/**
 * ByIds - filter to list campaigns by ids
 *
 * @generated from message api.v0alpha.ListCampaignsReq.ByIds
 */
export const ListCampaignsReq_ByIds = proto3.makeMessageType(
  "api.v0alpha.ListCampaignsReq.ByIds",
  () => [
    { no: 1, name: "campaign_sids", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */, repeated: true },
  ],
  {localName: "ListCampaignsReq_ByIds"},
);

/**
 * ByProject - filter to list campaigns by project
 *
 * @generated from message api.v0alpha.ListCampaignsReq.ByProject
 */
export const ListCampaignsReq_ByProject = proto3.makeMessageType(
  "api.v0alpha.ListCampaignsReq.ByProject",
  () => [
    { no: 1, name: "project_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
  {localName: "ListCampaignsReq_ByProject"},
);

/**
 * ByTime - filter to list running campaigns by scheduled_start_time
 *
 * @generated from message api.v0alpha.ListCampaignsReq.ByTime
 */
export const ListCampaignsReq_ByTime = proto3.makeMessageType(
  "api.v0alpha.ListCampaignsReq.ByTime",
  () => [
    { no: 1, name: "search_from", kind: "message", T: Timestamp },
    { no: 2, name: "search_to", kind: "message", T: Timestamp },
  ],
  {localName: "ListCampaignsReq_ByTime"},
);

/**
 * ByUnsubscribeLink - filter to list campaigns using the provided unsubscribe link
 *
 * @generated from message api.v0alpha.ListCampaignsReq.ByUnsubscribeLink
 */
export const ListCampaignsReq_ByUnsubscribeLink = proto3.makeMessageType(
  "api.v0alpha.ListCampaignsReq.ByUnsubscribeLink",
  () => [
    { no: 1, name: "link_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
  {localName: "ListCampaignsReq_ByUnsubscribeLink"},
);

/**
 * ByVerifiedEmail - filter to list campaigns by the verified email
 *
 * @generated from message api.v0alpha.ListCampaignsReq.ByVerifiedEmail
 */
export const ListCampaignsReq_ByVerifiedEmail = proto3.makeMessageType(
  "api.v0alpha.ListCampaignsReq.ByVerifiedEmail",
  () => [
    { no: 1, name: "email_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
  {localName: "ListCampaignsReq_ByVerifiedEmail"},
);

/**
 * BySmsNumber - filter the list of campaigns by the Sms Number
 *
 * @generated from message api.v0alpha.ListCampaignsReq.BySmsNumber
 */
export const ListCampaignsReq_BySmsNumber = proto3.makeMessageType(
  "api.v0alpha.ListCampaignsReq.BySmsNumber",
  () => [
    { no: 1, name: "number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
  {localName: "ListCampaignsReq_BySmsNumber"},
);

/**
 * ListCampaignsRes - result of listing filtered campaigns
 *
 * @generated from message api.v0alpha.ListCampaignsRes
 */
export const ListCampaignsRes = proto3.makeMessageType(
  "api.v0alpha.ListCampaignsRes",
  () => [
    { no: 1, name: "campaigns", kind: "message", T: OmniCampaign, repeated: true },
    { no: 2, name: "modules", kind: "message", T: OmniCampaignModule, repeated: true },
  ],
);

/**
 * Request to get a campaign by it's id
 *
 * @generated from message api.v0alpha.GetCampaignByIdReq
 */
export const GetCampaignByIdReq = proto3.makeMessageType(
  "api.v0alpha.GetCampaignByIdReq",
  () => [
    { no: 1, name: "campaign_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
);

/**
 * Request to retrieve an off-loaded text message payload
 *
 * @generated from message api.v0alpha.GetOffLoadedTextMessageReq
 */
export const GetOffLoadedTextMessageReq = proto3.makeMessageType(
  "api.v0alpha.GetOffLoadedTextMessageReq",
  () => [
    { no: 1, name: "location", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Result of retrieving an off-loaded text message payload
 *
 * @generated from message api.v0alpha.GetOffLoadedTextMessageRes
 */
export const GetOffLoadedTextMessageRes = proto3.makeMessageType(
  "api.v0alpha.GetOffLoadedTextMessageRes",
  () => [
    { no: 1, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.ManagerListMessagesReq
 */
export const ManagerListMessagesReq = proto3.makeMessageType(
  "api.v0alpha.ManagerListMessagesReq",
  () => [
    { no: 2, name: "timestamp", kind: "message", T: Timestamp },
    { no: 3, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "live", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "channel_type", kind: "enum", T: proto3.getEnumType(ChannelType) },
    { no: 101, name: "by_conversation_sid", kind: "message", T: ManagerListMessagesReq_ByConversationSid, oneof: "filter" },
    { no: 102, name: "by_task_sid", kind: "message", T: ManagerListMessagesReq_ByTaskSid, oneof: "filter" },
  ],
);

/**
 * filter used to get messages by conversation sid
 *
 * @generated from message api.v0alpha.ManagerListMessagesReq.ByConversationSid
 */
export const ManagerListMessagesReq_ByConversationSid = proto3.makeMessageType(
  "api.v0alpha.ManagerListMessagesReq.ByConversationSid",
  () => [
    { no: 1, name: "conversation_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
  {localName: "ManagerListMessagesReq_ByConversationSid"},
);

/**
 * filter used to get messages by task sid
 *
 * @generated from message api.v0alpha.ManagerListMessagesReq.ByTaskSid
 */
export const ManagerListMessagesReq_ByTaskSid = proto3.makeMessageType(
  "api.v0alpha.ManagerListMessagesReq.ByTaskSid",
  () => [
    { no: 1, name: "task_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
  {localName: "ManagerListMessagesReq_ByTaskSid"},
);

/**
 * @generated from message api.v0alpha.ListMessagesReq
 */
export const ListMessagesReq = proto3.makeMessageType(
  "api.v0alpha.ListMessagesReq",
  () => [
    { no: 2, name: "timestamp", kind: "message", T: Timestamp },
    { no: 5, name: "live", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "channel_type", kind: "enum", T: proto3.getEnumType(ChannelType) },
    { no: 101, name: "by_conversation_sid", kind: "message", T: ListMessagesReq_ByConversationSid, oneof: "filter" },
  ],
);

/**
 * @generated from message api.v0alpha.ListMessagesReq.ByConversationSid
 */
export const ListMessagesReq_ByConversationSid = proto3.makeMessageType(
  "api.v0alpha.ListMessagesReq.ByConversationSid",
  () => [
    { no: 1, name: "conversation_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
  {localName: "ListMessagesReq_ByConversationSid"},
);

/**
 * @generated from message api.v0alpha.ChatMessageUserInformation
 */
export const ChatMessageUserInformation = proto3.makeMessageType(
  "api.v0alpha.ChatMessageUserInformation",
  () => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.SendOmniMessageReq
 */
export const SendOmniMessageReq = proto3.makeMessageType(
  "api.v0alpha.SendOmniMessageReq",
  () => [
    { no: 1, name: "conversation_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
    { no: 3, name: "payload", kind: "message", T: OmniMessagePayload },
    { no: 4, name: "campaign_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
    { no: 5, name: "ui_reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "channel_type", kind: "enum", T: proto3.getEnumType(ChannelType) },
  ],
);

/**
 * Request to update a campaign
 *
 * @generated from message api.v0alpha.UpdateCampaignReq
 */
export const UpdateCampaignReq = proto3.makeMessageType(
  "api.v0alpha.UpdateCampaignReq",
  () => [
    { no: 1, name: "campaign", kind: "message", T: OmniCampaign },
    { no: 2, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 100, name: "field_mask", kind: "message", T: FieldMask },
  ],
);

/**
 * UpdateCampaignRes - result of updating a campaign
 *
 * @generated from message api.v0alpha.UpdateCampaignRes
 */
export const UpdateCampaignRes = proto3.makeMessageType(
  "api.v0alpha.UpdateCampaignRes",
  () => [
    { no: 1, name: "notifier_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * ListConversationsReq - request to get conversations
 *
 * @generated from message api.v0alpha.ListConversationsReq
 */
export const ListConversationsReq = proto3.makeMessageType(
  "api.v0alpha.ListConversationsReq",
  () => [
    { no: 1, name: "channel_types", kind: "enum", T: proto3.getEnumType(ChannelType), repeated: true },
    { no: 2, name: "field_mask", kind: "message", T: FieldMask },
    { no: 3, name: "statuses", kind: "enum", T: proto3.getEnumType(ConversationStatus), repeated: true },
    { no: 100, name: "by_time", kind: "message", T: ListConversationsReq_ByTime, oneof: "filter" },
    { no: 101, name: "by_assigned_user", kind: "message", T: ListConversationsReq_ByAssignedUser, oneof: "filter" },
  ],
);

/**
 * message filter to list conversations by time
 *
 * @generated from message api.v0alpha.ListConversationsReq.ByTime
 */
export const ListConversationsReq_ByTime = proto3.makeMessageType(
  "api.v0alpha.ListConversationsReq.ByTime",
  () => [
    { no: 1, name: "start_time", kind: "message", T: Timestamp },
    { no: 2, name: "end_time", kind: "message", T: Timestamp },
    { no: 4, name: "page_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 5, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
  {localName: "ListConversationsReq_ByTime"},
);

/**
 * message filter to list conversations by assigned user
 *
 * @generated from message api.v0alpha.ListConversationsReq.ByAssignedUser
 */
export const ListConversationsReq_ByAssignedUser = proto3.makeMessageType(
  "api.v0alpha.ListConversationsReq.ByAssignedUser",
  () => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "statuses", kind: "enum", T: proto3.getEnumType(ConversationStatus), repeated: true },
    { no: 4, name: "page_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 5, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
  {localName: "ListConversationsReq_ByAssignedUser"},
);

/**
 * ListConversationsRes - list of conversations satisfying the request parameters
 *
 * @generated from message api.v0alpha.ListConversationsRes
 */
export const ListConversationsRes = proto3.makeMessageType(
  "api.v0alpha.ListConversationsRes",
  () => [
    { no: 1, name: "conversations", kind: "message", T: OmniConversation, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * CreateDispositionReq - request to create a disposition
 *
 * @generated from message api.v0alpha.CreateDispositionReq
 */
export const CreateDispositionReq = proto3.makeMessageType(
  "api.v0alpha.CreateDispositionReq",
  () => [
    { no: 1, name: "disposition", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * CreateDispositionRes - result of creating a disposition
 *
 * @generated from message api.v0alpha.CreateDispositionRes
 */
export const CreateDispositionRes = proto3.makeMessageType(
  "api.v0alpha.CreateDispositionRes",
  () => [
    { no: 1, name: "disposition_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
);

/**
 * DeleteDispositionReq - request to delete a disposition
 *
 * @generated from message api.v0alpha.DeleteDispositionReq
 */
export const DeleteDispositionReq = proto3.makeMessageType(
  "api.v0alpha.DeleteDispositionReq",
  () => [
    { no: 1, name: "disposition", kind: "message", T: Disposition },
  ],
);

/**
 * ListDispositionsReq - request to list dispositions
 *
 * @generated from message api.v0alpha.ListDispositionsReq
 */
export const ListDispositionsReq = proto3.makeMessageType(
  "api.v0alpha.ListDispositionsReq",
  [],
);

/**
 * ListDispositionsRes - result to listing dispositions
 *
 * @generated from message api.v0alpha.ListDispositionsRes
 */
export const ListDispositionsRes = proto3.makeMessageType(
  "api.v0alpha.ListDispositionsRes",
  () => [
    { no: 1, name: "dispositions", kind: "message", T: Disposition, repeated: true },
  ],
);

/**
 * UpdateDispositionReq - request to update disposition
 *
 * @generated from message api.v0alpha.UpdateDispositionReq
 */
export const UpdateDispositionReq = proto3.makeMessageType(
  "api.v0alpha.UpdateDispositionReq",
  () => [
    { no: 1, name: "disposition_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
    { no: 2, name: "disposition", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * ListCustomUnsubscribeLinksRes - result to listing custom unsubscribe links
 *
 * @generated from message api.v0alpha.ListCustomUnsubscribeLinksRes
 */
export const ListCustomUnsubscribeLinksRes = proto3.makeMessageType(
  "api.v0alpha.ListCustomUnsubscribeLinksRes",
  () => [
    { no: 1, name: "custom_unsubscribe_links", kind: "message", T: OmniCustomUnsubscribeLink, repeated: true },
  ],
);

/**
 * CreateUnsubscribeLinkRes - result to creating unsubscribe link
 *
 * @generated from message api.v0alpha.CreateCustomUnsubscribeLinkRes
 */
export const CreateCustomUnsubscribeLinkRes = proto3.makeMessageType(
  "api.v0alpha.CreateCustomUnsubscribeLinkRes",
  () => [
    { no: 1, name: "custom_unsubscribe_link_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
    { no: 2, name: "validated", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * Request to update unsubscribe link details
 *
 * @generated from message api.v0alpha.UpdateCustomUnsubscribeLinkReq
 */
export const UpdateCustomUnsubscribeLinkReq = proto3.makeMessageType(
  "api.v0alpha.UpdateCustomUnsubscribeLinkReq",
  () => [
    { no: 1, name: "custom_unsubscribe_link_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
    { no: 2, name: "link_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "link_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Response to update unsubscribe link details
 *
 * @generated from message api.v0alpha.UpdateCustomUnsubscribeLinkRes
 */
export const UpdateCustomUnsubscribeLinkRes = proto3.makeMessageType(
  "api.v0alpha.UpdateCustomUnsubscribeLinkRes",
  () => [
    { no: 1, name: "validated", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "date_validated", kind: "message", T: Timestamp },
  ],
);

/**
 * Request to delete unsubscribe link details
 *
 * @generated from message api.v0alpha.DeleteCustomUnsubscribeLinkReq
 */
export const DeleteCustomUnsubscribeLinkReq = proto3.makeMessageType(
  "api.v0alpha.DeleteCustomUnsubscribeLinkReq",
  () => [
    { no: 1, name: "custom_unsubscribe_link_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
);

/**
 * Request to pause a campaign
 *
 * @generated from message api.v0alpha.PauseCampaignReq
 */
export const PauseCampaignReq = proto3.makeMessageType(
  "api.v0alpha.PauseCampaignReq",
  () => [
    { no: 1, name: "campaign_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
    { no: 2, name: "channel_type", kind: "enum", T: proto3.getEnumType(ChannelType) },
    { no: 3, name: "campaign_direction", kind: "enum", T: proto3.getEnumType(OmniCampaignDirection) },
  ],
);

/**
 * Response to pause a campaign
 *
 * @generated from message api.v0alpha.PauseCampaignRes
 */
export const PauseCampaignRes = proto3.makeMessageType(
  "api.v0alpha.PauseCampaignRes",
  () => [
    { no: 1, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Request to resume a campaign
 *
 * @generated from message api.v0alpha.ResumeCampaignReq
 */
export const ResumeCampaignReq = proto3.makeMessageType(
  "api.v0alpha.ResumeCampaignReq",
  () => [
    { no: 1, name: "campaign_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
    { no: 2, name: "channel_type", kind: "enum", T: proto3.getEnumType(ChannelType) },
    { no: 3, name: "campaign_direction", kind: "enum", T: proto3.getEnumType(OmniCampaignDirection) },
  ],
);

/**
 * Response to resume a campaign
 *
 * @generated from message api.v0alpha.ResumeCampaignRes
 */
export const ResumeCampaignRes = proto3.makeMessageType(
  "api.v0alpha.ResumeCampaignRes",
  () => [
    { no: 1, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Request to archive a campaign
 *
 * @generated from message api.v0alpha.ArchiveCampaignReq
 */
export const ArchiveCampaignReq = proto3.makeMessageType(
  "api.v0alpha.ArchiveCampaignReq",
  () => [
    { no: 1, name: "campaign_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
    { no: 2, name: "channel_type", kind: "enum", T: proto3.getEnumType(ChannelType) },
    { no: 3, name: "campaign_direction", kind: "enum", T: proto3.getEnumType(OmniCampaignDirection) },
  ],
);

/**
 * Response to archive a campaign
 *
 * @generated from message api.v0alpha.ArchiveCampaignRes
 */
export const ArchiveCampaignRes = proto3.makeMessageType(
  "api.v0alpha.ArchiveCampaignRes",
  () => [
    { no: 1, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Request to update pacing speed for a campaign
 * Pacing speed updates are possible only for outbound campaigns like Email|SMS (not for CHAT)
 *
 * @generated from message api.v0alpha.UpdateCampaignPacingSpeedReq
 */
export const UpdateCampaignPacingSpeedReq = proto3.makeMessageType(
  "api.v0alpha.UpdateCampaignPacingSpeedReq",
  () => [
    { no: 1, name: "campaign_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
    { no: 2, name: "channel_type", kind: "enum", T: proto3.getEnumType(ChannelType) },
    { no: 3, name: "campaign_direction", kind: "enum", T: proto3.getEnumType(OmniCampaignDirection) },
    { no: 4, name: "sends_per_hour", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "campaign_module_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
);

/**
 * Response to update pacing speed for a campaign
 *
 * @generated from message api.v0alpha.UpdateCampaignPacingSpeedRes
 */
export const UpdateCampaignPacingSpeedRes = proto3.makeMessageType(
  "api.v0alpha.UpdateCampaignPacingSpeedRes",
  () => [
    { no: 1, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * ListContactListsReq - request to list contact lists
 *
 * @generated from message api.v0alpha.ListContactListsReq
 */
export const ListContactListsReq = proto3.makeMessageType(
  "api.v0alpha.ListContactListsReq",
  () => [
    { no: 2, name: "field_mask", kind: "message", T: FieldMask },
    { no: 100, name: "by_project", kind: "message", T: ListContactListsReq_ByProject, oneof: "filter" },
  ],
);

/**
 * ByProject - filter to list campaigns by project
 *
 * @generated from message api.v0alpha.ListContactListsReq.ByProject
 */
export const ListContactListsReq_ByProject = proto3.makeMessageType(
  "api.v0alpha.ListContactListsReq.ByProject",
  () => [
    { no: 1, name: "project_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
  {localName: "ListContactListsReq_ByProject"},
);

/**
 * ListContactListsRes - result to listing contact lists
 *
 * @generated from message api.v0alpha.ListContactListsRes
 */
export const ListContactListsRes = proto3.makeMessageType(
  "api.v0alpha.ListContactListsRes",
  () => [
    { no: 1, name: "contact_lists", kind: "message", T: ContactList, repeated: true },
  ],
);

/**
 * GetAvailableHeadersReq - request to retrieve all available headers for contact lists
 *
 * @generated from message api.v0alpha.GetAvailableHeadersReq
 */
export const GetAvailableHeadersReq = proto3.makeMessageType(
  "api.v0alpha.GetAvailableHeadersReq",
  [],
);

/**
 * GetAvailableHeadersRes - response containing all available contact list headers
 *
 * @generated from message api.v0alpha.GetAvailableHeadersRes
 */
export const GetAvailableHeadersRes = proto3.makeMessageType(
  "api.v0alpha.GetAvailableHeadersRes",
  () => [
    { no: 1, name: "headers", kind: "message", T: HeaderGroup, repeated: true },
  ],
);

/**
 * HeaderGroup - represents a group of headers for a contact list
 *
 * @generated from message api.v0alpha.HeaderGroup
 */
export const HeaderGroup = proto3.makeMessageType(
  "api.v0alpha.HeaderGroup",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "headers", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.ApproveTaskRequest
 */
export const ApproveTaskRequest = proto3.makeMessageType(
  "api.v0alpha.ApproveTaskRequest",
  () => [
    { no: 1, name: "task_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.ApproveTaskResponse
 */
export const ApproveTaskResponse = proto3.makeMessageType(
  "api.v0alpha.ApproveTaskResponse",
  [],
);

/**
 * @generated from message api.v0alpha.GetNextQueuedTaskRequest
 */
export const GetNextQueuedTaskRequest = proto3.makeMessageType(
  "api.v0alpha.GetNextQueuedTaskRequest",
  () => [
    { no: 1, name: "skills", kind: "message", T: OmniConversationSkills },
    { no: 2, name: "agent_skills", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 3 /* ScalarType.INT64 */} },
  ],
);

/**
 * @generated from message api.v0alpha.GetNextQueuedTaskResponse
 */
export const GetNextQueuedTaskResponse = proto3.makeMessageType(
  "api.v0alpha.GetNextQueuedTaskResponse",
  () => [
    { no: 1, name: "task", kind: "message", T: OmniTask },
  ],
);

/**
 * GetTaskReq - request to retrieve a task
 *
 * @generated from message api.v0alpha.GetTaskReq
 */
export const GetTaskReq = proto3.makeMessageType(
  "api.v0alpha.GetTaskReq",
  () => [
    { no: 1, name: "field_mask", kind: "message", T: FieldMask },
    { no: 100, name: "by_conversation", kind: "message", T: GetTaskReq_ByConversation, oneof: "filter" },
  ],
);

/**
 * ByConversation - retrieves the task the conversation was created from
 *
 * @generated from message api.v0alpha.GetTaskReq.ByConversation
 */
export const GetTaskReq_ByConversation = proto3.makeMessageType(
  "api.v0alpha.GetTaskReq.ByConversation",
  () => [
    { no: 1, name: "conversation_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
  {localName: "GetTaskReq_ByConversation"},
);

/**
 * ListTasksReq - request to list tasks
 *
 * @generated from message api.v0alpha.ListTasksReq
 */
export const ListTasksReq = proto3.makeMessageType(
  "api.v0alpha.ListTasksReq",
  () => [
    { no: 1, name: "field_mask", kind: "message", T: FieldMask },
    { no: 100, name: "by_campaign", kind: "message", T: ListTasksReq_ByCampaign, oneof: "filter" },
  ],
);

/**
 * ByCampaign - retrieve tasks for the specified campaign
 *
 * @generated from message api.v0alpha.ListTasksReq.ByCampaign
 */
export const ListTasksReq_ByCampaign = proto3.makeMessageType(
  "api.v0alpha.ListTasksReq.ByCampaign",
  () => [
    { no: 1, name: "campaign_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
    { no: 2, name: "page_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
  {localName: "ListTasksReq_ByCampaign"},
);

/**
 * ListTasksRes - result of listing tasks
 *
 * @generated from message api.v0alpha.ListTasksRes
 */
export const ListTasksRes = proto3.makeMessageType(
  "api.v0alpha.ListTasksRes",
  () => [
    { no: 1, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "tasks", kind: "message", T: OmniTask, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.RejectTaskRequest
 */
export const RejectTaskRequest = proto3.makeMessageType(
  "api.v0alpha.RejectTaskRequest",
  () => [
    { no: 1, name: "task_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.RejectTaskResponse
 */
export const RejectTaskResponse = proto3.makeMessageType(
  "api.v0alpha.RejectTaskResponse",
  [],
);

/**
 * @generated from message api.v0alpha.RequeueTaskRequest
 */
export const RequeueTaskRequest = proto3.makeMessageType(
  "api.v0alpha.RequeueTaskRequest",
  () => [
    { no: 1, name: "task_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.RequeueTaskResponse
 */
export const RequeueTaskResponse = proto3.makeMessageType(
  "api.v0alpha.RequeueTaskResponse",
  [],
);

/**
 * CreateConnectedInboxRes - result of creating a new connected inbox
 *
 * @generated from message api.v0alpha.CreateConnectedInboxRes
 */
export const CreateConnectedInboxRes = proto3.makeMessageType(
  "api.v0alpha.CreateConnectedInboxRes",
  () => [
    { no: 1, name: "connected_inbox_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
);

/**
 * DeleteConnectedInboxBySidReq - request to delete a connected inbox
 *
 * @generated from message api.v0alpha.DeleteConnectedInboxBySidReq
 */
export const DeleteConnectedInboxBySidReq = proto3.makeMessageType(
  "api.v0alpha.DeleteConnectedInboxBySidReq",
  () => [
    { no: 1, name: "connected_inbox_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
);

/**
 * GetConnectedInboxBySid - request to retrieve a connected inbox
 *
 * @generated from message api.v0alpha.GetConnectedInboxBySidReq
 */
export const GetConnectedInboxBySidReq = proto3.makeMessageType(
  "api.v0alpha.GetConnectedInboxBySidReq",
  () => [
    { no: 1, name: "connected_inbox_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
);

/**
 * SendgridAccountByClientReq -
 *
 * @generated from message api.v0alpha.SendgridAccountByClientReq
 */
export const SendgridAccountByClientReq = proto3.makeMessageType(
  "api.v0alpha.SendgridAccountByClientReq",
  [],
);

/**
 * SendgridAccountByClientRes -
 *
 * @generated from message api.v0alpha.SendgridAccountByClientRes
 */
export const SendgridAccountByClientRes = proto3.makeMessageType(
  "api.v0alpha.SendgridAccountByClientRes",
  () => [
    { no: 1, name: "result", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * ListConnectedInboxesReq - request to list the connected inboxes for an organization
 *
 * @generated from message api.v0alpha.ListConnectedInboxesReq
 */
export const ListConnectedInboxesReq = proto3.makeMessageType(
  "api.v0alpha.ListConnectedInboxesReq",
  () => [
    { no: 1, name: "field_mask", kind: "message", T: FieldMask },
  ],
);

/**
 * ListConnectedInboxesRes - result to listing an organization's connected inboxes
 *
 * @generated from message api.v0alpha.ListConnectedInboxesRes
 */
export const ListConnectedInboxesRes = proto3.makeMessageType(
  "api.v0alpha.ListConnectedInboxesRes",
  () => [
    { no: 1, name: "connected_inboxes", kind: "message", T: ListConnectedInboxesRes_ListConnectedInbox, repeated: true },
  ],
);

/**
 * ListConnectedInbox - a wrapper for a listed connected inbox containing the inbox and a list of it's associated campaigns
 *
 * @generated from message api.v0alpha.ListConnectedInboxesRes.ListConnectedInbox
 */
export const ListConnectedInboxesRes_ListConnectedInbox = proto3.makeMessageType(
  "api.v0alpha.ListConnectedInboxesRes.ListConnectedInbox",
  () => [
    { no: 1, name: "connected_inbox", kind: "message", T: ConnectedInbox },
    { no: 2, name: "campaigns", kind: "message", T: OmniCampaign, repeated: true },
  ],
  {localName: "ListConnectedInboxesRes_ListConnectedInbox"},
);

/**
 * TestConnectedInboxRes - result of testing a connected inbox login
 *
 * @generated from message api.v0alpha.TestConnectedInboxRes
 */
export const TestConnectedInboxRes = proto3.makeMessageType(
  "api.v0alpha.TestConnectedInboxRes",
  () => [
    { no: 1, name: "success", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "details", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * UpdateConnectedInboxReq - request to update a connected inbox
 *
 * @generated from message api.v0alpha.UpdateConnectedInboxReq
 */
export const UpdateConnectedInboxReq = proto3.makeMessageType(
  "api.v0alpha.UpdateConnectedInboxReq",
  () => [
    { no: 1, name: "connected_inbox", kind: "message", T: ConnectedInbox },
    { no: 2, name: "field_mask", kind: "message", T: FieldMask },
  ],
);

/**
 * creates verified email
 *
 * @generated from message api.v0alpha.CreateVerifiedEmailRes
 */
export const CreateVerifiedEmailRes = proto3.makeMessageType(
  "api.v0alpha.CreateVerifiedEmailRes",
  () => [
    { no: 1, name: "verified_email_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
);

/**
 * request to send email notification
 *
 * @generated from message api.v0alpha.SendEmailNotificationReq
 */
export const SendEmailNotificationReq = proto3.makeMessageType(
  "api.v0alpha.SendEmailNotificationReq",
  () => [
    { no: 2, name: "subject", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "data", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "to_email_address_arr", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * response to email notification
 *
 * @generated from message api.v0alpha.SendEmailNotificationRes
 */
export const SendEmailNotificationRes = proto3.makeMessageType(
  "api.v0alpha.SendEmailNotificationRes",
  [],
);

/**
 * request to delete verified email
 * GetVerifiedEmailBySidReq -
 *
 * @generated from message api.v0alpha.GetVerifiedEmailBySidReq
 */
export const GetVerifiedEmailBySidReq = proto3.makeMessageType(
  "api.v0alpha.GetVerifiedEmailBySidReq",
  () => [
    { no: 1, name: "verified_email_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
);

/**
 * DeleteVerifiedEmailReq - request to delete verified email
 *
 * @generated from message api.v0alpha.DeleteVerifiedEmailReq
 */
export const DeleteVerifiedEmailReq = proto3.makeMessageType(
  "api.v0alpha.DeleteVerifiedEmailReq",
  () => [
    { no: 1, name: "verified_email_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
);

/**
 * request to list verified email
 *
 * @generated from message api.v0alpha.ListVerifiedEmailsReq
 */
export const ListVerifiedEmailsReq = proto3.makeMessageType(
  "api.v0alpha.ListVerifiedEmailsReq",
  [],
);

/**
 * response to list verified email
 *
 * @generated from message api.v0alpha.ListVerifiedEmailsRes
 */
export const ListVerifiedEmailsRes = proto3.makeMessageType(
  "api.v0alpha.ListVerifiedEmailsRes",
  () => [
    { no: 1, name: "verified_emails", kind: "message", T: VerifiedEmail, repeated: true },
  ],
);

/**
 * request to resend verified email
 *
 * @generated from message api.v0alpha.ResendVerifiedEmailReq
 */
export const ResendVerifiedEmailReq = proto3.makeMessageType(
  "api.v0alpha.ResendVerifiedEmailReq",
  () => [
    { no: 1, name: "verified_email_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
);

/**
 * response to resend verified email
 *
 * @generated from message api.v0alpha.ResendVerifiedEmailRes
 */
export const ResendVerifiedEmailRes = proto3.makeMessageType(
  "api.v0alpha.ResendVerifiedEmailRes",
  [],
);

/**
 * request to update verified email description
 *
 * @generated from message api.v0alpha.UpdateVerifiedEmailReq
 */
export const UpdateVerifiedEmailReq = proto3.makeMessageType(
  "api.v0alpha.UpdateVerifiedEmailReq",
  () => [
    { no: 1, name: "verified_email_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * GetPendingGoogleXOAuth2DataReq - request to get pending GoogleXOAuth2 data
 *
 * @generated from message api.v0alpha.GetPendingGoogleXOAuth2DataReq
 */
export const GetPendingGoogleXOAuth2DataReq = proto3.makeMessageType(
  "api.v0alpha.GetPendingGoogleXOAuth2DataReq",
  () => [
    { no: 1, name: "identification_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * GetPendingGoogleXOAuth2DataRes - result of getting pending GoogleXOAuth2 data
 *
 * @generated from message api.v0alpha.GetPendingGoogleXOAuth2DataRes
 */
export const GetPendingGoogleXOAuth2DataRes = proto3.makeMessageType(
  "api.v0alpha.GetPendingGoogleXOAuth2DataRes",
  () => [
    { no: 1, name: "email_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * request to send feedback notifications
 *
 * @generated from message api.v0alpha.SendFeedbackEmailReq
 */
export const SendFeedbackEmailReq = proto3.makeMessageType(
  "api.v0alpha.SendFeedbackEmailReq",
  () => [
    { no: 1, name: "from_email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "session_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "screenshot", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * response to send feedback notifications
 *
 * @generated from message api.v0alpha.SendFeedbackEmailRes
 */
export const SendFeedbackEmailRes = proto3.makeMessageType(
  "api.v0alpha.SendFeedbackEmailRes",
  [],
);

/**
 * request to get attachment details
 *
 * @generated from message api.v0alpha.GetOmniAttachmentReq
 */
export const GetOmniAttachmentReq = proto3.makeMessageType(
  "api.v0alpha.GetOmniAttachmentReq",
  () => [
    { no: 1, name: "include_download_url", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 100, name: "by_omni_attachment_sid", kind: "message", T: GetOmniAttachmentReq_ByOmniAttachmentSid, oneof: "filter" },
  ],
);

/**
 * ByOmniAttachmentSid - filter to get attachment details by sid
 *
 * @generated from message api.v0alpha.GetOmniAttachmentReq.ByOmniAttachmentSid
 */
export const GetOmniAttachmentReq_ByOmniAttachmentSid = proto3.makeMessageType(
  "api.v0alpha.GetOmniAttachmentReq.ByOmniAttachmentSid",
  () => [
    { no: 1, name: "omni_attachment_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
  {localName: "GetOmniAttachmentReq_ByOmniAttachmentSid"},
);

/**
 * CreateTasksReq - create tasks per a contact list
 *
 * @generated from message api.v0alpha.CreateTasksReq
 */
export const CreateTasksReq = proto3.makeMessageType(
  "api.v0alpha.CreateTasksReq",
  () => [
    { no: 1, name: "campaign_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
    { no: 2, name: "campaign_module_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
    { no: 100, name: "contact_list_data_source", kind: "message", T: ContactListDataSource, oneof: "data_source" },
  ],
);

/**
 * CreateTasksRes -
 *
 * @generated from message api.v0alpha.CreateTasksRes
 */
export const CreateTasksRes = proto3.makeMessageType(
  "api.v0alpha.CreateTasksRes",
  () => [
    { no: 1, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * CreateSignatureReq - request to create a new message signature
 *
 * @generated from message api.v0alpha.CreateSignatureReq
 */
export const CreateSignatureReq = proto3.makeMessageType(
  "api.v0alpha.CreateSignatureReq",
  () => [
    { no: 1, name: "signature", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * CreateSignatureRes - the result of creating a new signature
 *
 * @generated from message api.v0alpha.CreateSignatureRes
 */
export const CreateSignatureRes = proto3.makeMessageType(
  "api.v0alpha.CreateSignatureRes",
  () => [
    { no: 1, name: "signature", kind: "message", T: Signature },
  ],
);

/**
 * DeleteSignatureReq - request to delete message signature
 *
 * @generated from message api.v0alpha.DeleteSignatureReq
 */
export const DeleteSignatureReq = proto3.makeMessageType(
  "api.v0alpha.DeleteSignatureReq",
  () => [
    { no: 1, name: "signature_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
);

/**
 * DeleteSignatureReq - result of deleting message signature
 *
 * @generated from message api.v0alpha.DeleteSignatureRes
 */
export const DeleteSignatureRes = proto3.makeMessageType(
  "api.v0alpha.DeleteSignatureRes",
  [],
);

/**
 * ListSignaturesReq - request to list message signatures
 *
 * @generated from message api.v0alpha.ListSignaturesReq
 */
export const ListSignaturesReq = proto3.makeMessageType(
  "api.v0alpha.ListSignaturesReq",
  [],
);

/**
 * ListSignaturesRes - result of listing message signatures
 *
 * @generated from message api.v0alpha.ListSignaturesRes
 */
export const ListSignaturesRes = proto3.makeMessageType(
  "api.v0alpha.ListSignaturesRes",
  () => [
    { no: 1, name: "signatures", kind: "message", T: Signature, repeated: true },
  ],
);

/**
 * UpdateSignatureReq - request to update a message signature
 *
 * @generated from message api.v0alpha.UpdateSignatureReq
 */
export const UpdateSignatureReq = proto3.makeMessageType(
  "api.v0alpha.UpdateSignatureReq",
  () => [
    { no: 1, name: "signature", kind: "message", T: Signature },
    { no: 2, name: "field_mask", kind: "message", T: FieldMask },
  ],
);

/**
 * UpdateSignatureRes - response to updating a message signature
 *
 * @generated from message api.v0alpha.UpdateSignatureRes
 */
export const UpdateSignatureRes = proto3.makeMessageType(
  "api.v0alpha.UpdateSignatureRes",
  () => [
    { no: 1, name: "signature", kind: "message", T: Signature },
  ],
);

/**
 * CreateProjectReq -
 *
 * @generated from message api.v0alpha.CreateProjectReq
 */
export const CreateProjectReq = proto3.makeMessageType(
  "api.v0alpha.CreateProjectReq",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "compliance_config", kind: "message", T: OmniProjectComplianceConfig },
  ],
);

/**
 * CreateProjectRes -
 *
 * @generated from message api.v0alpha.CreateProjectRes
 */
export const CreateProjectRes = proto3.makeMessageType(
  "api.v0alpha.CreateProjectRes",
  () => [
    { no: 1, name: "project", kind: "message", T: Project },
    { no: 2, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Project -
 *
 * @generated from message api.v0alpha.Project
 */
export const Project = proto3.makeMessageType(
  "api.v0alpha.Project",
  () => [
    { no: 1, name: "project_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(ProjectStatus) },
    { no: 5, name: "date_created", kind: "message", T: Timestamp },
    { no: 6, name: "compliance_config", kind: "message", T: OmniProjectComplianceConfig },
  ],
);

/**
 * request used to get a list of projects
 *
 * @generated from message api.v0alpha.ListProjectsReq
 */
export const ListProjectsReq = proto3.makeMessageType(
  "api.v0alpha.ListProjectsReq",
  [],
);

/**
 * response holding the list of projects
 *
 * @generated from message api.v0alpha.ListProjectsRes
 */
export const ListProjectsRes = proto3.makeMessageType(
  "api.v0alpha.ListProjectsRes",
  () => [
    { no: 1, name: "projects", kind: "message", T: Project, repeated: true },
  ],
);

/**
 * request to update omni project details by project id
 *
 * @generated from message api.v0alpha.EditProjectByIdReq
 */
export const EditProjectByIdReq = proto3.makeMessageType(
  "api.v0alpha.EditProjectByIdReq",
  () => [
    { no: 1, name: "project", kind: "message", T: Project },
    { no: 2, name: "field_mask", kind: "message", T: FieldMask },
  ],
);

/**
 * EditProjectByIdRes - result of editing a project
 *
 * @generated from message api.v0alpha.EditProjectByIdRes
 */
export const EditProjectByIdRes = proto3.makeMessageType(
  "api.v0alpha.EditProjectByIdRes",
  () => [
    { no: 1, name: "project", kind: "message", T: Project },
    { no: 2, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * request to closing an omni project project id
 *
 * @generated from message api.v0alpha.CloseProjectByIdReq
 */
export const CloseProjectByIdReq = proto3.makeMessageType(
  "api.v0alpha.CloseProjectByIdReq",
  () => [
    { no: 1, name: "project_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
);

/**
 * response to closing an omni project project id
 *
 * @generated from message api.v0alpha.CloseProjectByIdRes
 */
export const CloseProjectByIdRes = proto3.makeMessageType(
  "api.v0alpha.CloseProjectByIdRes",
  [],
);

/**
 * request to get omni project details by project id
 *
 * @generated from message api.v0alpha.GetProjectByIdReq
 */
export const GetProjectByIdReq = proto3.makeMessageType(
  "api.v0alpha.GetProjectByIdReq",
  () => [
    { no: 1, name: "project_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
  ],
);

/**
 * request to create canned message
 *
 * @generated from message api.v0alpha.CreateCannedMessageReq
 */
export const CreateCannedMessageReq = proto3.makeMessageType(
  "api.v0alpha.CreateCannedMessageReq",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "message_body", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "canned_message_group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "allows_html", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "attachments", kind: "message", T: OmniAttachment, repeated: true },
  ],
);

/**
 * canned message creation details
 *
 * @generated from message api.v0alpha.CannedMessage
 */
export const CannedMessage = proto3.makeMessageType(
  "api.v0alpha.CannedMessage",
  () => [
    { no: 1, name: "canned_message_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "message_body", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "date_created", kind: "message", T: Timestamp },
    { no: 6, name: "last_updated", kind: "message", T: Timestamp },
    { no: 7, name: "canned_message_group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "allows_html", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "attachments", kind: "message", T: OmniAttachment, repeated: true },
  ],
);

/**
 * request used to get a list of CannedMessages
 *
 * @generated from message api.v0alpha.ListCannedMessagesReq
 */
export const ListCannedMessagesReq = proto3.makeMessageType(
  "api.v0alpha.ListCannedMessagesReq",
  [],
);

/**
 * response holding the list of CannedMessages with group details
 *
 * @generated from message api.v0alpha.ListCannedMessagesRes
 */
export const ListCannedMessagesRes = proto3.makeMessageType(
  "api.v0alpha.ListCannedMessagesRes",
  () => [
    { no: 1, name: "canned_messages_with_group", kind: "message", T: CannedMessageWithGroup, repeated: true },
  ],
);

/**
 * request to update canned message details
 *
 * @generated from message api.v0alpha.UpdateCannedMessageReq
 */
export const UpdateCannedMessageReq = proto3.makeMessageType(
  "api.v0alpha.UpdateCannedMessageReq",
  () => [
    { no: 1, name: "canned_message_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "message_body", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "canned_message_group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "allows_html", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "attachments", kind: "message", T: OmniAttachment, repeated: true },
  ],
);

/**
 * request to get canned message by id
 *
 * @generated from message api.v0alpha.GetCannedMessageByIdReq
 */
export const GetCannedMessageByIdReq = proto3.makeMessageType(
  "api.v0alpha.GetCannedMessageByIdReq",
  () => [
    { no: 1, name: "canned_message_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * request to delete canned message by id
 *
 * @generated from message api.v0alpha.DeleteCannedMessageByIdReq
 */
export const DeleteCannedMessageByIdReq = proto3.makeMessageType(
  "api.v0alpha.DeleteCannedMessageByIdReq",
  () => [
    { no: 1, name: "canned_message_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * response to delete canned message by id
 *
 * @generated from message api.v0alpha.DeleteCannedMessageByIdRes
 */
export const DeleteCannedMessageByIdRes = proto3.makeMessageType(
  "api.v0alpha.DeleteCannedMessageByIdRes",
  () => [
    { no: 1, name: "Result", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * request to create canned message group
 *
 * @generated from message api.v0alpha.CreateCannedMessageGroupReq
 */
export const CreateCannedMessageGroupReq = proto3.makeMessageType(
  "api.v0alpha.CreateCannedMessageGroupReq",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * canned message group creation details
 *
 * @generated from message api.v0alpha.CannedMessageGroup
 */
export const CannedMessageGroup = proto3.makeMessageType(
  "api.v0alpha.CannedMessageGroup",
  () => [
    { no: 1, name: "canned_message_group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "date_created", kind: "message", T: Timestamp },
    { no: 5, name: "last_updated", kind: "message", T: Timestamp },
  ],
);

/**
 * canned message with group details
 *
 * @generated from message api.v0alpha.CannedMessageWithGroup
 */
export const CannedMessageWithGroup = proto3.makeMessageType(
  "api.v0alpha.CannedMessageWithGroup",
  () => [
    { no: 1, name: "canned_message_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "message_body", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "date_created", kind: "message", T: Timestamp },
    { no: 6, name: "last_updated", kind: "message", T: Timestamp },
    { no: 7, name: "canned_message_group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "group_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "group_description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "group_date_created", kind: "message", T: Timestamp },
    { no: 11, name: "group_last_updated", kind: "message", T: Timestamp },
    { no: 12, name: "allows_html", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 13, name: "attachments", kind: "message", T: OmniAttachment, repeated: true },
  ],
);

/**
 * request used to get a list of CannedMessageGroups
 *
 * @generated from message api.v0alpha.ListCannedMessageGroupsReq
 */
export const ListCannedMessageGroupsReq = proto3.makeMessageType(
  "api.v0alpha.ListCannedMessageGroupsReq",
  [],
);

/**
 * response holding the list of CannedMessageGroups
 *
 * @generated from message api.v0alpha.ListCannedMessageGroupsRes
 */
export const ListCannedMessageGroupsRes = proto3.makeMessageType(
  "api.v0alpha.ListCannedMessageGroupsRes",
  () => [
    { no: 1, name: "canned_message_groups", kind: "message", T: CannedMessageGroup, repeated: true },
  ],
);

/**
 * request to update canned message group details
 *
 * @generated from message api.v0alpha.UpdateCannedMessageGroupReq
 */
export const UpdateCannedMessageGroupReq = proto3.makeMessageType(
  "api.v0alpha.UpdateCannedMessageGroupReq",
  () => [
    { no: 1, name: "canned_message_group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * response to update canned message group details
 *
 * @generated from message api.v0alpha.UpdateCannedMessageGroupRes
 */
export const UpdateCannedMessageGroupRes = proto3.makeMessageType(
  "api.v0alpha.UpdateCannedMessageGroupRes",
  [],
);

/**
 * request to delete canned message group
 *
 * @generated from message api.v0alpha.DeleteCannedMessageGroupReq
 */
export const DeleteCannedMessageGroupReq = proto3.makeMessageType(
  "api.v0alpha.DeleteCannedMessageGroupReq",
  () => [
    { no: 1, name: "canned_message_group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * response to delete canned message group
 *
 * @generated from message api.v0alpha.DeleteCannedMessageGroupRes
 */
export const DeleteCannedMessageGroupRes = proto3.makeMessageType(
  "api.v0alpha.DeleteCannedMessageGroupRes",
  [],
);

/**
 * request used to get a list of CannedMessages for the group
 *
 * @generated from message api.v0alpha.ListCannedMessagesByGroupIdReq
 */
export const ListCannedMessagesByGroupIdReq = proto3.makeMessageType(
  "api.v0alpha.ListCannedMessagesByGroupIdReq",
  () => [
    { no: 1, name: "canned_message_group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * response holding the list of CannedMessages with group details for the group
 *
 * @generated from message api.v0alpha.ListCannedMessagesByGroupIdRes
 */
export const ListCannedMessagesByGroupIdRes = proto3.makeMessageType(
  "api.v0alpha.ListCannedMessagesByGroupIdRes",
  () => [
    { no: 1, name: "canned_messages_with_group", kind: "message", T: CannedMessageWithGroup, repeated: true },
  ],
);

/**
 * request to get canned message group details by id
 *
 * @generated from message api.v0alpha.GetCannedMessageGroupByIdReq
 */
export const GetCannedMessageGroupByIdReq = proto3.makeMessageType(
  "api.v0alpha.GetCannedMessageGroupByIdReq",
  () => [
    { no: 1, name: "canned_message_group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * request to list user skills
 *
 * @generated from message api.v0alpha.ListUserSkillsReq
 */
export const ListUserSkillsReq = proto3.makeMessageType(
  "api.v0alpha.ListUserSkillsReq",
  () => [
    { no: 1, name: "type_filters", kind: "enum", T: proto3.getEnumType(SkillType_Enum), repeated: true },
  ],
);

/**
 * respose to list users skills
 *
 * @generated from message api.v0alpha.ListUserSkillsRes
 */
export const ListUserSkillsRes = proto3.makeMessageType(
  "api.v0alpha.ListUserSkillsRes",
  () => [
    { no: 1, name: "skills", kind: "message", T: OmniSkill, repeated: true },
  ],
);

/**
 * skill details
 *
 * @generated from message api.v0alpha.OmniSkill
 */
export const OmniSkill = proto3.makeMessageType(
  "api.v0alpha.OmniSkill",
  () => [
    { no: 1, name: "region", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "p3_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "type", kind: "enum", T: proto3.getEnumType(SkillType_Enum) },
  ],
);


// @generated by protoc-gen-connect-es v0.9.1
// @generated from file api/v0alpha/emailapi.proto (package api.v0alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AssignEmailConversationReq, AssignEmailConversationRes, CloseEmailConversationReq, CloseEmailConversationRes, CopyEmailTemplateWithAttachmentsReq, CopyEmailTemplateWithAttachmentsRes, CreateEmailMessageAgentReplyAttachmentReq, CreateEmailMessageAgentReplyAttachmentRes, CreateEmailMessageAgentReplyReq, CreateEmailMessageAttachmentReq, CreateEmailMessageAttachmentRes, CreateEmailTemplateAttachmentReq, CreateEmailTemplateAttachmentRes, CreateEmailTemplateReq, CreateEmailTemplateRes, CreateInboundEmailTemplateReq, CreateInboundEmailTemplateRes, DashboardEmailConversationSearchReq, DashboardEmailConversationSearchRes, DeleteEmailTemplateAttachmentByIdReq, DeleteEmailTemplateAttachmentByIdRes, DeleteEmailTemplateReq, DeleteEmailTemplateRes, DeleteInboundEmailTemplateByIdReq, DeleteInboundEmailTemplateByIdRes, DownloadInboundEmailAttachmentReq, DownloadInboundEmailAttachmentRes, EmailGroupDetailsWithAttachments, EmailGroupSearchReq, EmailGroupSearchRes, EmailGroupSendsPerMinuteReq, EmailGroupSendsPerMinuteRes, EmailGroupStatusReq, EmailGroupStatusRes, EmailMessageReplyWithAttachments, EmailTemplateWithAttachments, GetAllEmailTemplatesReq, GetAllEmailTemplatesRes, GetEmailGroupByGroupIdReq, GetEmailGroupByGroupSidReq, GetEmailGroupsByGroupSidsReq, GetEmailGroupsByGroupSidsRes, GetEmailMessageReq, GetEmailMessageRes, GetEmailTasksByGroupSidsReq, GetEmailTasksByGroupSidsRes, GetEmailTemplateByTemplateSidReq, GetInboundEmailTemplateByIdReq, InboundEmailGroup, InboundEmailGroupByIdReq, InboundEmailGroupSearchReq, InboundEmailGroupSearchRes, InboundEmailTemplate, ListActiveInboundEmailGroupsReq, ListActiveInboundEmailGroupsRes, ListCampaignsByConnectedInboxIdReq, ListCampaignsByConnectedInboxIdRes, ListEmailMessageAttachmentsReq, ListEmailMessageAttachmentsRes, ListInboundEmailGroupsByGroupIdsReq, ListInboundEmailGroupsByGroupIdsRes, ListInboundEmailTasksByGroupIdsReq, ListInboundEmailTasksByGroupIdsRes, ListInboundEmailTemplatesReq, ListInboundEmailTemplatesRes, ListNewEmailMessageRepliesReq, ListNewEmailMessageRepliesRes, PureInboundEmailGroupSearchReq, PureInboundEmailGroupSearchRes, ReassignEmailConversationReq, ReassignEmailConversationRes, ScheduleOutboundEmailGroupReq, ScheduleOutboundEmailGroupRes, SchedulePureInboundEmailReq, SchedulePureInboundEmailRes, SchedulePureOmniLinkInboundEmailReq, SchedulePureOmniLinkInboundEmailRes, ScheduleReq, ScheduleRes, SendReplyReq, StopAllInboundEmailGroupsReq, StopInboundEmailGroupReq, StopInboundEmailGroupRes, SuspendEmailConversationReq, SuspendEmailConversationRes, UnassignCurrentUserFromEmailConversationReq, UnassignUserFromEmailConversationRes, UpdateEmailTemplateAttachmentReq, UpdateEmailTemplateAttachmentRes, UpdateEmailTemplateReq, UpdateEmailTemplateRes, UpdateInboundEmailGroupReq, UpdateInboundEmailGroupRes, UpdateInboundEmailGroupStatusReq, UpdateInboundEmailGroupStatusRes, UpdateInboundEmailTemplateReq, UpdateInboundEmailTemplateRes, UpdateOutboundEmailGroupReq, UpdateOutboundEmailGroupRes } from "./emailapi_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service api.v0alpha.EmailApi
 */
export const EmailApi = {
  typeName: "api.v0alpha.EmailApi",
  methods: {
    /**
     * Create/Record email template details defined by CreateEmailTemplateReq message for a specified
     * email_subject, email_body.
     * The method will return a CreateEmailTemplateRes message/entity that will
     * contain the newly created email_template_sid value for this client
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.CreateEmailTemplate
     */
    createEmailTemplate: {
      name: "CreateEmailTemplate",
      I: CreateEmailTemplateReq,
      O: CreateEmailTemplateRes,
      kind: MethodKind.Unary,
    },
    /**
     * Update email template details defined by UpdateEmailTemplateReq message for a specified
     * email_template_sid, email_subject, email_body.
     * The method will return a UpdateEmailTemplateRes message/entity that will
     * contain the true/false after updating template details for this client
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.UpdateEmailTemplate
     */
    updateEmailTemplate: {
      name: "UpdateEmailTemplate",
      I: UpdateEmailTemplateReq,
      O: UpdateEmailTemplateRes,
      kind: MethodKind.Unary,
    },
    /**
     * Create/Record email template attachment details defined by CreateEmailTemplateAttachmentReq message for a specified
     * email_template_sid, file_name, file_size, content_type, hash.
     * The method will return a CreateEmailTemplateAttachmentRes message/entity that will
     * contain the newly created email_template_attachment_sid, fts storage url and gs_path  for this client
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.CreateEmailTemplateAttachment
     */
    createEmailTemplateAttachment: {
      name: "CreateEmailTemplateAttachment",
      I: CreateEmailTemplateAttachmentReq,
      O: CreateEmailTemplateAttachmentRes,
      kind: MethodKind.Unary,
    },
    /**
     * Copy/Record email template with attachment details defined by CopyEmailTemplateWithAttachmentsReq message for a specified
     * email_template_sid and email_body.
     * The method will return a CopyEmailTemplateWithAttachmentsRes message/entity that will
     * contain the newly copied email_template_sid value for this client along with attachments
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.CopyEmailTemplateWithAttachments
     */
    copyEmailTemplateWithAttachments: {
      name: "CopyEmailTemplateWithAttachments",
      I: CopyEmailTemplateWithAttachmentsReq,
      O: CopyEmailTemplateWithAttachmentsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Update email template attachment details defined by UpdateEmailTemplateAttachmentReq message for a specified
     * email_template_sid, email_template_attachment_sid, file_name, file_size, content_type, hash.
     * The method will return a UpdateEmailTemplateAttachmentRes message/entity that will
     * contain the true/false after updating template attachment details for this client
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.UpdateEmailTemplateAttachment
     */
    updateEmailTemplateAttachment: {
      name: "UpdateEmailTemplateAttachment",
      I: UpdateEmailTemplateAttachmentReq,
      O: UpdateEmailTemplateAttachmentRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets email template along with attachment details defined by GetEmailTemplateByTemplateSidReq message for a specified
     * email_template_sid.
     * The method will return a EmailTemplateWithAttachments message/entity that will
     * contain the email_template_sid, email_subject, email_body, EmailTemplateAttachmentDetails for this client_sid and email_template_sid
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.GetEmailTemplateByTemplateSid
     */
    getEmailTemplateByTemplateSid: {
      name: "GetEmailTemplateByTemplateSid",
      I: GetEmailTemplateByTemplateSidReq,
      O: EmailTemplateWithAttachments,
      kind: MethodKind.Unary,
    },
    /**
     * List stream of email template along with attachment details defined by GetAllEmailTemplatesReq message.
     * The method will return a GetAllEmailTemplatesRes message/entity that will
     * contain the stream of email_template_sid, email_subject, email_body, EmailTemplateAttachmentDetails for this client_sid
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.GetAllEmailTemplates
     */
    getAllEmailTemplates: {
      name: "GetAllEmailTemplates",
      I: GetAllEmailTemplatesReq,
      O: GetAllEmailTemplatesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Delete email template details defined by DeleteEmailTemplateReq message for a specified
     * email_template_sid.
     * The method will return a DeleteEmailTemplateRes message/entity that will
     * contain the true/false after deleting template details for this client_sid and email_template_sid
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.DeleteEmailTemplate
     */
    deleteEmailTemplate: {
      name: "DeleteEmailTemplate",
      I: DeleteEmailTemplateReq,
      O: DeleteEmailTemplateRes,
      kind: MethodKind.Unary,
    },
    /**
     * Delete email template attachments defined by DeleteEmailTemplateAttachmentByIdReq message for a specified
     * email_template_attachment_sid.
     * The method will return a DeleteEmailTemplateAttachmentByIdRes message/entity that will
     * contain the true/false after deleting template attachments for this client_sid and email_template_attachment_sid
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.DeleteEmailTemplateAttachmentById
     */
    deleteEmailTemplateAttachmentById: {
      name: "DeleteEmailTemplateAttachmentById",
      I: DeleteEmailTemplateAttachmentByIdReq,
      O: DeleteEmailTemplateAttachmentByIdRes,
      kind: MethodKind.Unary,
    },
    /**
     * Download local inbound file attachment file contents using FTS bucket
     * defined by DownloadInboundEmailAttachmentReq message for a specified
     * email_message_reply_id and email_message_reply_attachment_id.
     * The method will return a DownloadInboundEmailAttachmentRes message/entity that will
     * contain the url where attachment contents are stored
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.DownloadInboundEmailAttachment
     */
    downloadInboundEmailAttachment: {
      name: "DownloadInboundEmailAttachment",
      I: DownloadInboundEmailAttachmentReq,
      O: DownloadInboundEmailAttachmentRes,
      kind: MethodKind.Unary,
    },
    /**
     * List stream of pure email groups based on search criteria defined by EmailGroupSearchReq message for a specified
     * by search_from and search_to or by status or by name and any of these combinations
     * The method will return a EmailGroupSearchRes message/entity that will
     * contain the stream of EmailGroupSearchDetailsRes results
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.PureEmailGroupSearch
     */
    pureEmailGroupSearch: {
      name: "PureEmailGroupSearch",
      I: EmailGroupSearchReq,
      O: EmailGroupSearchRes,
      kind: MethodKind.Unary,
    },
    /**
     * Retreives a list of email replies for a conversation that come after the given
     * timestamp. Can set a user_id to get conversations for any user.
     * Required permissions:
     *    ??????
     *
     * @generated from rpc api.v0alpha.EmailApi.ManagerListNewEmailMessageReplies
     */
    managerListNewEmailMessageReplies: {
      name: "ManagerListNewEmailMessageReplies",
      I: ListNewEmailMessageRepliesReq,
      O: ListNewEmailMessageRepliesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Retreives a list of email replies for a conversation that come after the given
     * timestamp
     * Required permissions:
     *    ??????
     *
     * @generated from rpc api.v0alpha.EmailApi.ListNewEmailMessageReplies
     */
    listNewEmailMessageReplies: {
      name: "ListNewEmailMessageReplies",
      I: ListNewEmailMessageRepliesReq,
      O: ListNewEmailMessageRepliesRes,
      kind: MethodKind.Unary,
    },
    /**
     * List stream of email tasks defined by GetEmailTasksByGroupSidsReq message for a specified
     * array of email_group_sids
     * The method will return a GetEmailTasksByGroupSidsRes message/entity that will
     * contain the stream of EmailTaskMstrDetails results
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.GetEmailTasksByGroupSids
     */
    getEmailTasksByGroupSids: {
      name: "GetEmailTasksByGroupSids",
      I: GetEmailTasksByGroupSidsReq,
      O: GetEmailTasksByGroupSidsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Update email group status value defined by EmailGroupStatusReq message for a specified
     * email_group_sid and status_id.
     * The method will return a EmailGroupStatusRes message/entity that will
     * contain the true/false after updating status for this clients email_group_sid and status_id
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.UpdateEmailGroupStatus
     */
    updateEmailGroupStatus: {
      name: "UpdateEmailGroupStatus",
      I: EmailGroupStatusReq,
      O: EmailGroupStatusRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets email message details defined by GetEmailMessageReq message for a specified
     * email_message_sid.
     * The method will return a GetEmailMessageRes message/entity that will
     * contains email_subject and email_body for the email_message_sid
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.GetEmailMessageDetails
     */
    getEmailMessageDetails: {
      name: "GetEmailMessageDetails",
      I: GetEmailMessageReq,
      O: GetEmailMessageRes,
      kind: MethodKind.Unary,
    },
    /**
     * Create/Record inbound email template defined by CreateInboundEmailTemplateReq message for a specified
     *  connected_inbox_id, name.
     * The method will return a CreateInboundEmailTemplateRes message/entity that will
     * contain the newly created inbound_email_template_id value for this client
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.CreateInboundEmailTemplate
     */
    createInboundEmailTemplate: {
      name: "CreateInboundEmailTemplate",
      I: CreateInboundEmailTemplateReq,
      O: CreateInboundEmailTemplateRes,
      kind: MethodKind.Unary,
    },
    /**
     * Update inbound email template details defined by UpdateInboundEmailTemplateReq message for a specified
     *  inbound_email_template_id, connected_inbox_id, name.
     * The method will return a UpdateInboundEmailTemplateRes message/entity that will
     * contain the true/false after updating inbound email template details for inbound_email_template_id
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.UpdateInboundEmailTemplate
     */
    updateInboundEmailTemplate: {
      name: "UpdateInboundEmailTemplate",
      I: UpdateInboundEmailTemplateReq,
      O: UpdateInboundEmailTemplateRes,
      kind: MethodKind.Unary,
    },
    /**
     * Delete inbound email template details defined by DeleteInboundEmailTemplateByIdReq message for a specified
     *  inbound_email_template_id.
     * The method will return a DeleteInboundEmailTemplateByIdRes message/entity that will
     * contain the true/false after deleting inbound email template details for inbound_email_template_id
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.DeleteInboundEmailTemplateById
     */
    deleteInboundEmailTemplateById: {
      name: "DeleteInboundEmailTemplateById",
      I: DeleteInboundEmailTemplateByIdReq,
      O: DeleteInboundEmailTemplateByIdRes,
      kind: MethodKind.Unary,
    },
    /**
     * List stream of inbound email template details defined by ListInboundEmailTemplatesReq message
     * The method will return a ListInboundEmailTemplatesRes message/entity that will
     * contain the stream of inbound_email_template_id, connected_inbox_id, name.
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.ListInboundEmailTemplates
     */
    listInboundEmailTemplates: {
      name: "ListInboundEmailTemplates",
      I: ListInboundEmailTemplatesReq,
      O: ListInboundEmailTemplatesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets inbound email template details defined by GetInboundEmailTemplateByIdReq message for a specified
     * inbound_email_template_id.
     * The method will return a InboundEmailTemplate message/entity that will
     * contain the inbound email template details for inbound_email_template_id
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.GetInboundEmailTemplateById
     */
    getInboundEmailTemplateById: {
      name: "GetInboundEmailTemplateById",
      I: GetInboundEmailTemplateByIdReq,
      O: InboundEmailTemplate,
      kind: MethodKind.Unary,
    },
    /**
     * Update inbound email group status details defined by UpdateInboundEmailGroupStatusReq
     * status. The method will return a UpdateInboundEmailGroupStatusRes message/entity
     * that will contain the true/false after updating inbound email group details
     * for this org_id, region_id and inbound_email_group_id Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.UpdateInboundEmailGroupStatus
     */
    updateInboundEmailGroupStatus: {
      name: "UpdateInboundEmailGroupStatus",
      I: UpdateInboundEmailGroupStatusReq,
      O: UpdateInboundEmailGroupStatusRes,
      kind: MethodKind.Unary,
    },
    /**
     * Stop inbound email group defined by StopInboundEmailGroupReq message for a specified
     *  inbound_email_group_id.
     * The method will return a StopInboundEmailGroupRes message/entity that will
     * contain the true/false after updating inbound email group details for inbound_email_group_id
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.StopInboundEmailGroup
     */
    stopInboundEmailGroup: {
      name: "StopInboundEmailGroup",
      I: StopInboundEmailGroupReq,
      O: StopInboundEmailGroupRes,
      kind: MethodKind.Unary,
    },
    /**
     * Stop all InboundEmail groups defined by StopAllInboundEmailGroupsReq message for the specified
     * array of inbound_email_group_ids
     * The method will mark the InboundEmail groups as completed.
     * Required permissions: VIEW_EMAIL
     *
     * @generated from rpc api.v0alpha.EmailApi.StopAllInboundEmailGroups
     */
    stopAllInboundEmailGroups: {
      name: "StopAllInboundEmailGroups",
      I: StopAllInboundEmailGroupsReq,
      O: StopInboundEmailGroupRes,
      kind: MethodKind.Unary,
    },
    /**
     * List stream of pure inbound email groups based on search criteria defined by PureInboundEmailGroupSearchReq message for a specified
     *  by search_from and search_to or by status or by name and any of these combinations
     * The method will return a PureInboundEmailGroupSearchRes message/entity that will
     * contain the stream of InboundEmailGroups
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.PureInboundEmailGroupSearch
     */
    pureInboundEmailGroupSearch: {
      name: "PureInboundEmailGroupSearch",
      I: PureInboundEmailGroupSearchReq,
      O: PureInboundEmailGroupSearchRes,
      kind: MethodKind.Unary,
    },
    /**
     * List stream of inbound email groups based on search criteria defined by
     * InboundEmailGroupSearchReq message for a specified by
     * search_from and search_to or by status or by name and any of these
     * combinations The method will return a InboundEmailGroupSearchRes
     * message/entity that will contain the stream of InboundEmailGroups Required
     * permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.InboundEmailGroupSearch
     */
    inboundEmailGroupSearch: {
      name: "InboundEmailGroupSearch",
      I: InboundEmailGroupSearchReq,
      O: InboundEmailGroupSearchRes,
      kind: MethodKind.Unary,
    },
    /**
     * List stream of inbound email groups defined by ListInboundEmailGroupsByGroupIdsReq message for a specified
     * array of inbound email groups
     * The method will return a ListInboundEmailGroupsByGroupIdsRes message/entity that will
     * contain the stream of InboundEmailGroup
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.ListInboundEmailGroupsByGroupIds
     */
    listInboundEmailGroupsByGroupIds: {
      name: "ListInboundEmailGroupsByGroupIds",
      I: ListInboundEmailGroupsByGroupIdsReq,
      O: ListInboundEmailGroupsByGroupIdsRes,
      kind: MethodKind.Unary,
    },
    /**
     * List stream of inbound email tasks defined by ListInboundEmailTasksByGroupIdsReq message for a specified
     * array of inbound email groups
     * The method will return a ListInboundEmailTasksByGroupIdsRes message/entity that will
     * contain the stream of InboundEmailTaskDetails along with any file attachments
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.ListInboundEmailTasksByGroupIds
     */
    listInboundEmailTasksByGroupIds: {
      name: "ListInboundEmailTasksByGroupIds",
      I: ListInboundEmailTasksByGroupIdsReq,
      O: ListInboundEmailTasksByGroupIdsRes,
      kind: MethodKind.Unary,
    },
    /**
     * List stream of active/running inbound email groups defined by ListActiveInboundEmailGroupsReq message
     * The method will return a ListActiveInboundEmailGroupsRes message/entity that will
     * contain the stream of active/running InboundEmailGroups
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.ListActiveInboundEmailGroups
     */
    listActiveInboundEmailGroups: {
      name: "ListActiveInboundEmailGroups",
      I: ListActiveInboundEmailGroupsReq,
      O: ListActiveInboundEmailGroupsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Schedule Outbound email campaign defined by ScheduleReq message for the specified
     * email_template_sid, initial_pace, selected_email_col, from_address,
     * allow_duplicates, group_name, contact_group_sid, start_time, stop_time
     * The method will return ScheduleRes message/entity that will
     * contain newly scheduled email_group_sid and email_group_id for this client
     * Required permissions:
     *      EXECUTE_SEND_BROADCAST
     *
     * @generated from rpc api.v0alpha.EmailApi.Schedule
     */
    schedule: {
      name: "Schedule",
      I: ScheduleReq,
      O: ScheduleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Schedule Outbound email campaign defined by ScheduleOutboundEmailGroupReq message for the specified
     * subject, email message, initial_pace, selected_email_col, from_address,
     * allow_duplicates, group_name, contact_group_sid, start_time, stop_time
     * The method will return ScheduleOutboundEmailGroupRes message/entity that will
     * contain newly scheduled email_group_sid and email_group_id for this client
     * Required permissions:
     *      EXECUTE_SEND_BROADCAST
     *
     * @generated from rpc api.v0alpha.EmailApi.ScheduleOutboundEmailGroup
     */
    scheduleOutboundEmailGroup: {
      name: "ScheduleOutboundEmailGroup",
      I: ScheduleOutboundEmailGroupReq,
      O: ScheduleOutboundEmailGroupRes,
      kind: MethodKind.Unary,
    },
    /**
     * Schedule Pure Inbound email campaign defined by SchedulePureInboundEmailReq message for the specified
     * inbound_email_template_sid
     * The method will return SchedulePureInboundEmailRes message/entity that will
     * contain newly scheduled inbound_email_group_sid for this client
     * Required permissions:
     *      EXECUTE_SEND_BROADCAST
     *
     * @generated from rpc api.v0alpha.EmailApi.SchedulePureInboundEmail
     */
    schedulePureInboundEmail: {
      name: "SchedulePureInboundEmail",
      I: SchedulePureInboundEmailReq,
      O: SchedulePureInboundEmailRes,
      kind: MethodKind.Unary,
    },
    /**
     * Create/Record inbound agent email reply defined by CreateEmailMessageAgentReplyReq message for a specified
     * inbound_email_group_id, to_address, subject, email_conversation_id, agent_sid .
     * The method will return a EmailMessageReply message/entity that will
     * contain the newly created email_message_reply data
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.CreateEmailMessageAgentReply
     */
    createEmailMessageAgentReply: {
      name: "CreateEmailMessageAgentReply",
      I: CreateEmailMessageAgentReplyReq,
      O: EmailMessageReplyWithAttachments,
      kind: MethodKind.Unary,
    },
    /**
     * Create/Record inbound agent email reply attachment defined by CreateEmailMessageAgentReplyAttachmentReq message for a specified
     * file_name, file_size and file_type.
     * The method will return a CreateEmailMessageAgentReplyAttachmentRes message/entity that will
     * contain the newly created email_message_reply_attachment_id, url_path and gs_path for this client
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.CreateEmailMessageAgentReplyAttachment
     */
    createEmailMessageAgentReplyAttachment: {
      name: "CreateEmailMessageAgentReplyAttachment",
      I: CreateEmailMessageAgentReplyAttachmentReq,
      O: CreateEmailMessageAgentReplyAttachmentRes,
      kind: MethodKind.Unary,
    },
    /**
     * Sends email message based on email details defined in SendReplyReq specified by
     * in_reply_to and email_reply_id
     * The method will return a EmailMessageReplyWithAttachments message/entity that will
     * contain the email_message_reply data
     * along with along with attachment details
     * Required permissions:
     *      EXECUTE_SEND_BROADCAST
     *
     * @generated from rpc api.v0alpha.EmailApi.SendReply
     */
    sendReply: {
      name: "SendReply",
      I: SendReplyReq,
      O: EmailMessageReplyWithAttachments,
      kind: MethodKind.Unary,
    },
    /**
     * List stream of email groups defined by GetEmailGroupsByGroupSidsReq message for a specified
     * array of email_group_sids
     * The method will return a GetEmailGroupsByGroupSidsRes message/entity that will
     * contain the stream of EmailGroupSearchDetailsRes results
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.GetEmailGroupsByGroupSids
     */
    getEmailGroupsByGroupSids: {
      name: "GetEmailGroupsByGroupSids",
      I: GetEmailGroupsByGroupSidsReq,
      O: GetEmailGroupsByGroupSidsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Get outbound email group details defined by GetEmailGroupByGroupSidReq message for a specified
     * email_group_sid
     * The method will return a EmailGroupDetailsWithAttachments message/entity that will
     * contain the outbound email group details
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.GetEmailGroupByGroupSid
     */
    getEmailGroupByGroupSid: {
      name: "GetEmailGroupByGroupSid",
      I: GetEmailGroupByGroupSidReq,
      O: EmailGroupDetailsWithAttachments,
      kind: MethodKind.Unary,
    },
    /**
     * Get outbound email group details defined by GetEmailGroupByGroupIdReq message for a specified
     * email_group_id
     * The method will return a EmailGroupDetailsWithAttachments message/entity that will
     * contain the outbound email group details
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.GetEmailGroupByGroupId
     */
    getEmailGroupByGroupId: {
      name: "GetEmailGroupByGroupId",
      I: GetEmailGroupByGroupIdReq,
      O: EmailGroupDetailsWithAttachments,
      kind: MethodKind.Unary,
    },
    /**
     * Schedule Pure OmniLink Inbound email campaign defined by SchedulePureOmniLinkInboundEmailReq message for the specified
     * connectedInbox and skills
     * The method will return SchedulePureOmniLinkInboundEmailRes message/entity that will
     * contain newly scheduled inbound_email_group_sid for this client
     * Required permissions:
     *      EXECUTE_SEND_BROADCAST
     *
     * @generated from rpc api.v0alpha.EmailApi.SchedulePureOmniLinkInboundEmail
     */
    schedulePureOmniLinkInboundEmail: {
      name: "SchedulePureOmniLinkInboundEmail",
      I: SchedulePureOmniLinkInboundEmailReq,
      O: SchedulePureOmniLinkInboundEmailRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the name, skills, stop time for the inbound email group
     * Required permissions:
     *    OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.UpdateInboundEmailGroup
     */
    updateInboundEmailGroup: {
      name: "UpdateInboundEmailGroup",
      I: UpdateInboundEmailGroupReq,
      O: UpdateInboundEmailGroupRes,
      kind: MethodKind.Unary,
    },
    /**
     * Update email group sendsperminute defined by EmailGroupSendsPerMinuteReq
     * message for a specified email_group_sid and sends_per_minute.
     * The method will return a EmailGroupSendsPerMinuteRes message/entity that
     * will contain the true/false after updating sends_per_minute value for this
     * clients email_group_sid and sends_per_minute Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.UpdateEmailGroupMstrSendsPerMinute
     */
    updateEmailGroupMstrSendsPerMinute: {
      name: "UpdateEmailGroupMstrSendsPerMinute",
      I: EmailGroupSendsPerMinuteReq,
      O: EmailGroupSendsPerMinuteRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the name, start and stop time for the outbound email group
     * Required permissions:
     *    OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.UpdateOutboundEmailGroup
     */
    updateOutboundEmailGroup: {
      name: "UpdateOutboundEmailGroup",
      I: UpdateOutboundEmailGroupReq,
      O: UpdateOutboundEmailGroupRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets a inbound email group details defined by InboundEmailGroupByIdReq
     * message for the specified inbound_email_group_id, org_id and region_id. The
     * method will return a InboundEmailGroup message/entity. Required
     * permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.GetInboundEmailGroupById
     */
    getInboundEmailGroupById: {
      name: "GetInboundEmailGroupById",
      I: InboundEmailGroupByIdReq,
      O: InboundEmailGroup,
      kind: MethodKind.Unary,
    },
    /**
     * Create/Add email message attachment details defined by CreateEmailMessageAttachmentReq
     * message for the specified client.
     * This method will return a CreateEmailMessageAttachmentRes message/entity. Required
     * permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.CreateEmailMessageAttachment
     */
    createEmailMessageAttachment: {
      name: "CreateEmailMessageAttachment",
      I: CreateEmailMessageAttachmentReq,
      O: CreateEmailMessageAttachmentRes,
      kind: MethodKind.Unary,
    },
    /**
     * List all the email message attachments and their details defined by
     * ListEmailMessageAttachmentsReq for the specified client.
     * permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.ListEmailMessageAttachments
     */
    listEmailMessageAttachments: {
      name: "ListEmailMessageAttachments",
      I: ListEmailMessageAttachmentsReq,
      O: ListEmailMessageAttachmentsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Unassigns a conversation from the current user and puts it back into the matching pool
     * Required permissions:
     *    OMNI_LINK
     *
     * @generated from rpc api.v0alpha.EmailApi.UnassignCurrentUserFromEmailConversation
     */
    unassignCurrentUserFromEmailConversation: {
      name: "UnassignCurrentUserFromEmailConversation",
      I: UnassignCurrentUserFromEmailConversationReq,
      O: UnassignUserFromEmailConversationRes,
      kind: MethodKind.Unary,
    },
    /**
     * Listing all email conversations for the dashboard
     * Required Permissions:
     *    OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.DashboardEmailConversationSearch
     */
    dashboardEmailConversationSearch: {
      name: "DashboardEmailConversationSearch",
      I: DashboardEmailConversationSearchReq,
      O: DashboardEmailConversationSearchRes,
      kind: MethodKind.Unary,
    },
    /**
     * ReassignEmailConversation.  unassign current user and assign
     * new user.
     * This method will return a ReassignEmailConversationRes
     * Required permissions
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.ReassignEmailConversation
     */
    reassignEmailConversation: {
      name: "ReassignEmailConversation",
      I: ReassignEmailConversationReq,
      O: ReassignEmailConversationRes,
      kind: MethodKind.Unary,
    },
    /**
     * AssignEmailConversation - allowing the manager from the dashboard to assing a email conversation
     * before the matcher assigns it.
     *
     * @generated from rpc api.v0alpha.EmailApi.AssignEmailConversation
     */
    assignEmailConversation: {
      name: "AssignEmailConversation",
      I: AssignEmailConversationReq,
      O: AssignEmailConversationRes,
      kind: MethodKind.Unary,
    },
    /**
     * Suspends an email conversation
     *
     * @generated from rpc api.v0alpha.EmailApi.SuspendEmailConversation
     */
    suspendEmailConversation: {
      name: "SuspendEmailConversation",
      I: SuspendEmailConversationReq,
      O: SuspendEmailConversationRes,
      kind: MethodKind.Unary,
    },
    /**
     * List stream of inbound and outbound campaigns defined by ListCampaignsByConnectedInboxIdReq message
     * The method will return a ListCampaignsByConnectedInboxIdRes message/entity that will
     * contain the stream of all campaigns along with project details.
     * Required permissions:
     *      OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.ListCampaignsByConnectedInboxId
     */
    listCampaignsByConnectedInboxId: {
      name: "ListCampaignsByConnectedInboxId",
      I: ListCampaignsByConnectedInboxIdReq,
      O: ListCampaignsByConnectedInboxIdRes,
      kind: MethodKind.Unary,
    },
    /**
     * Close email conversation defined by CloseEmailConversationReq message
     * Required permissions:
     *    OMNI_BOSS
     *
     * @generated from rpc api.v0alpha.EmailApi.CloseEmailConversation
     */
    closeEmailConversation: {
      name: "CloseEmailConversation",
      I: CloseEmailConversationReq,
      O: CloseEmailConversationRes,
      kind: MethodKind.Unary,
    },
  }
};


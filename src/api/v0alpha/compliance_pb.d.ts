// @generated by protoc-gen-es v1.7.2 with parameter "target=js+dts"
// @generated from file api/v0alpha/compliance.proto (package api.v0alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { CommType } from "../commons/communication_pb.js";
import type { Channel, ConsentCondition, ContentType, Rule, RuleResponse, ScenarioData, ScenarioResult, ScrubEntryDetails } from "../commons/compliance_pb.js";
import type { Weekday_Enum } from "../commons/enums_pb.js";

/**
 * request used to process an outbound call against a rule set
 *
 * @generated from message api.v0alpha.ProcessOutboundCallReq
 */
export declare class ProcessOutboundCallReq extends Message<ProcessOutboundCallReq> {
  /**
   * The name of the rule set to use for processing
   *
   * @generated from field: string rule_set_name = 1;
   */
  ruleSetName: string;

  /**
   * The country code of the phone number
   *
   * @generated from field: string country_code = 2;
   */
  countryCode: string;

  /**
   * The phone number to process
   *
   * @generated from field: string phone_number = 3;
   */
  phoneNumber: string;

  /**
   * Extra compliance metadata
   *
   * @generated from field: map<string, string> call_metadata = 4;
   */
  callMetadata: { [key: string]: string };

  /**
   * The id of the caller associated with this process request
   *
   * @generated from field: int64 source_id = 5;
   */
  sourceId: bigint;

  /**
   * The call type of the caller associated with this process request
   *
   * @generated from field: string source_field = 6;
   */
  sourceField: string;

  /**
   * The caller id being called from
   *
   * @generated from field: string caller_id = 7;
   */
  callerId: string;

  /**
   * The client id
   *
   * @generated from field: int64 client_sid = 8;
   */
  clientSid: bigint;

  /**
   * The communication type
   *
   * @generated from field: api.commons.CommType comm_type = 9;
   */
  commType?: CommType;

  /**
   * The call type
   *
   * @generated from field: string call_type = 10;
   */
  callType: string;

  /**
   * The organization id
   *
   * @generated from field: string org_id = 11;
   */
  orgId: string;

  /**
   * The region id
   *
   * @generated from field: string region_id = 12;
   */
  regionId: string;

  /**
   * The email address to process
   *
   * @generated from field: string email = 13;
   */
  email: string;

  /**
   * The zip code
   *
   * @generated from field: string zip_code = 14;
   */
  zipCode: string;

  constructor(data?: PartialMessage<ProcessOutboundCallReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ProcessOutboundCallReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcessOutboundCallReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcessOutboundCallReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcessOutboundCallReq;

  static equals(a: ProcessOutboundCallReq | PlainMessage<ProcessOutboundCallReq> | undefined, b: ProcessOutboundCallReq | PlainMessage<ProcessOutboundCallReq> | undefined): boolean;
}

/**
 * response given after processing something against a rule set
 *
 * @generated from message api.v0alpha.ProcessRes
 */
export declare class ProcessRes extends Message<ProcessRes> {
  /**
   * indicates if the process request was permitted or not
   *
   * @generated from field: bool permit = 1;
   */
  permit: boolean;

  /**
   * the list of rules checked against
   *
   * @generated from field: repeated api.commons.RuleResponse rule_responses = 2;
   */
  ruleResponses: RuleResponse[];

  constructor(data?: PartialMessage<ProcessRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ProcessRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcessRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcessRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcessRes;

  static equals(a: ProcessRes | PlainMessage<ProcessRes> | undefined, b: ProcessRes | PlainMessage<ProcessRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ScrubList
 */
export declare class ScrubList extends Message<ScrubList> {
  /**
   * @generated from field: string list_id = 2;
   */
  listId: string;

  /**
   * @generated from field: repeated api.v0alpha.ScrubEntry entries = 3;
   */
  entries: ScrubEntry[];

  constructor(data?: PartialMessage<ScrubList>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ScrubList";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScrubList;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScrubList;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScrubList;

  static equals(a: ScrubList | PlainMessage<ScrubList> | undefined, b: ScrubList | PlainMessage<ScrubList> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.CreateScrubListReq
 */
export declare class CreateScrubListReq extends Message<CreateScrubListReq> {
  /**
   * @generated from field: string list_id = 2;
   */
  listId: string;

  /**
   * payload
   *
   * @generated from field: repeated string list = 10;
   */
  list: string[];

  /**
   * @generated from field: api.commons.ContentType content_type = 11;
   */
  contentType: ContentType;

  /**
   * @generated from field: string country_code = 12;
   */
  countryCode: string;

  /**
   * @generated from field: repeated api.commons.ScrubEntryDetails scrub_entry_details = 13;
   */
  scrubEntryDetails: ScrubEntryDetails[];

  constructor(data?: PartialMessage<CreateScrubListReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.CreateScrubListReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateScrubListReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateScrubListReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateScrubListReq;

  static equals(a: CreateScrubListReq | PlainMessage<CreateScrubListReq> | undefined, b: CreateScrubListReq | PlainMessage<CreateScrubListReq> | undefined): boolean;
}

/**
 * AddScrubListEntries request message
 *
 * @generated from message api.v0alpha.AddScrubListEntriesReq
 */
export declare class AddScrubListEntriesReq extends Message<AddScrubListEntriesReq> {
  /**
   * scrub list id, this is can be obtained from a GetScrubLists method
   *
   * @generated from field: string list_id = 2;
   */
  listId: string;

  /**
   * @deprecated
   * don't use it, it will be removed soon
   *
   * @generated from field: repeated string list = 10;
   */
  list: string[];

  /**
   * content_type represents the type of entries are stored in scrub_entry_details field (phone number, sms, email ...)
   *
   * @generated from field: api.commons.ContentType content_type = 11;
   */
  contentType: ContentType;

  /**
   * country calling code defined by ITU-T in E.164 standard w/o the + sign in front
   * this field is relevant if the scrub_entry_details list contains phone numbers
   *
   * @generated from field: string country_code = 12;
   */
  countryCode: string;

  /**
   * the list of scrub entries that are sent in order to be added
   *
   * @generated from field: repeated api.commons.ScrubEntryDetails scrub_entry_details = 13;
   */
  scrubEntryDetails: ScrubEntryDetails[];

  constructor(data?: PartialMessage<AddScrubListEntriesReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AddScrubListEntriesReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddScrubListEntriesReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddScrubListEntriesReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddScrubListEntriesReq;

  static equals(a: AddScrubListEntriesReq | PlainMessage<AddScrubListEntriesReq> | undefined, b: AddScrubListEntriesReq | PlainMessage<AddScrubListEntriesReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.UpdateScrubEntryReq
 */
export declare class UpdateScrubEntryReq extends Message<UpdateScrubEntryReq> {
  /**
   * keys
   *
   * @generated from field: string list_id = 2;
   */
  listId: string;

  /**
   * updateable fields
   *
   * @generated from field: google.protobuf.StringValue notes = 10;
   */
  notes?: string;

  /**
   * @generated from field: google.protobuf.StringValue content = 11;
   */
  content?: string;

  /**
   * @generated from field: google.protobuf.Timestamp expiration_date = 12;
   */
  expirationDate?: Timestamp;

  /**
   * @generated from field: google.protobuf.StringValue country_code = 13;
   */
  countryCode?: string;

  constructor(data?: PartialMessage<UpdateScrubEntryReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.UpdateScrubEntryReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateScrubEntryReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateScrubEntryReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateScrubEntryReq;

  static equals(a: UpdateScrubEntryReq | PlainMessage<UpdateScrubEntryReq> | undefined, b: UpdateScrubEntryReq | PlainMessage<UpdateScrubEntryReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.UpdateScrubEntryRes
 */
export declare class UpdateScrubEntryRes extends Message<UpdateScrubEntryRes> {
  constructor(data?: PartialMessage<UpdateScrubEntryRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.UpdateScrubEntryRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateScrubEntryRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateScrubEntryRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateScrubEntryRes;

  static equals(a: UpdateScrubEntryRes | PlainMessage<UpdateScrubEntryRes> | undefined, b: UpdateScrubEntryRes | PlainMessage<UpdateScrubEntryRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.DeleteScrubListEntriesReq
 */
export declare class DeleteScrubListEntriesReq extends Message<DeleteScrubListEntriesReq> {
  /**
   * @generated from field: string list_id = 2;
   */
  listId: string;

  /**
   * payload
   *
   * @generated from field: repeated string list = 10;
   */
  list: string[];

  constructor(data?: PartialMessage<DeleteScrubListEntriesReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.DeleteScrubListEntriesReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteScrubListEntriesReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteScrubListEntriesReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteScrubListEntriesReq;

  static equals(a: DeleteScrubListEntriesReq | PlainMessage<DeleteScrubListEntriesReq> | undefined, b: DeleteScrubListEntriesReq | PlainMessage<DeleteScrubListEntriesReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.GetScrubListReq
 */
export declare class GetScrubListReq extends Message<GetScrubListReq> {
  /**
   * @generated from field: string list_id = 2;
   */
  listId: string;

  constructor(data?: PartialMessage<GetScrubListReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.GetScrubListReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetScrubListReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetScrubListReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetScrubListReq;

  static equals(a: GetScrubListReq | PlainMessage<GetScrubListReq> | undefined, b: GetScrubListReq | PlainMessage<GetScrubListReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.GetScrubListsReq
 */
export declare class GetScrubListsReq extends Message<GetScrubListsReq> {
  constructor(data?: PartialMessage<GetScrubListsReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.GetScrubListsReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetScrubListsReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetScrubListsReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetScrubListsReq;

  static equals(a: GetScrubListsReq | PlainMessage<GetScrubListsReq> | undefined, b: GetScrubListsReq | PlainMessage<GetScrubListsReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ScrubListsRes
 */
export declare class ScrubListsRes extends Message<ScrubListsRes> {
  /**
   * @generated from field: repeated api.v0alpha.ScrubListRes lists = 1;
   */
  lists: ScrubListRes[];

  constructor(data?: PartialMessage<ScrubListsRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ScrubListsRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScrubListsRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScrubListsRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScrubListsRes;

  static equals(a: ScrubListsRes | PlainMessage<ScrubListsRes> | undefined, b: ScrubListsRes | PlainMessage<ScrubListsRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ScrubListRes
 */
export declare class ScrubListRes extends Message<ScrubListRes> {
  /**
   * @generated from field: string list_id = 1;
   */
  listId: string;

  /**
   * @generated from field: bool read_only = 2;
   */
  readOnly: boolean;

  /**
   * @generated from field: api.commons.ContentType content_type = 3;
   */
  contentType: ContentType;

  /**
   * @generated from field: int64 entries_added = 4;
   */
  entriesAdded: bigint;

  /**
   * @generated from field: repeated string invalid_entries = 5;
   */
  invalidEntries: string[];

  constructor(data?: PartialMessage<ScrubListRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ScrubListRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScrubListRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScrubListRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScrubListRes;

  static equals(a: ScrubListRes | PlainMessage<ScrubListRes> | undefined, b: ScrubListRes | PlainMessage<ScrubListRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.DeleteScrubListReq
 */
export declare class DeleteScrubListReq extends Message<DeleteScrubListReq> {
  /**
   * @generated from field: string list_id = 2;
   */
  listId: string;

  constructor(data?: PartialMessage<DeleteScrubListReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.DeleteScrubListReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteScrubListReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteScrubListReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteScrubListReq;

  static equals(a: DeleteScrubListReq | PlainMessage<DeleteScrubListReq> | undefined, b: DeleteScrubListReq | PlainMessage<DeleteScrubListReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.SearchScrubListReq
 */
export declare class SearchScrubListReq extends Message<SearchScrubListReq> {
  /**
   * @generated from field: string list_id = 2;
   */
  listId: string;

  /**
   * @generated from field: string term = 3;
   */
  term: string;

  constructor(data?: PartialMessage<SearchScrubListReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.SearchScrubListReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchScrubListReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchScrubListReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchScrubListReq;

  static equals(a: SearchScrubListReq | PlainMessage<SearchScrubListReq> | undefined, b: SearchScrubListReq | PlainMessage<SearchScrubListReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ScrubEntry
 */
export declare class ScrubEntry extends Message<ScrubEntry> {
  /**
   * @generated from field: int64 country_sid = 2;
   */
  countrySid: bigint;

  /**
   * @generated from field: string list_id = 6;
   */
  listId: string;

  /**
   * @generated from field: int64 source_id = 7;
   */
  sourceId: bigint;

  /**
   * @generated from field: string source_field = 8;
   */
  sourceField: string;

  /**
   * payload
   *
   * @generated from field: google.protobuf.StringValue notes = 10;
   */
  notes?: string;

  /**
   * @generated from field: google.protobuf.StringValue content = 11;
   */
  content?: string;

  /**
   * @generated from field: google.protobuf.Timestamp expiration_date = 12;
   */
  expirationDate?: Timestamp;

  /**
   * @generated from field: google.protobuf.StringValue result = 13;
   */
  result?: string;

  /**
   * @generated from field: api.commons.ContentType type = 14;
   */
  type: ContentType;

  /**
   * @generated from field: google.protobuf.StringValue country_code = 15;
   */
  countryCode?: string;

  /**
   * audit
   *
   * @generated from field: google.protobuf.Timestamp created_on = 200;
   */
  createdOn?: Timestamp;

  /**
   * @generated from field: google.protobuf.StringValue created_by = 201;
   */
  createdBy?: string;

  constructor(data?: PartialMessage<ScrubEntry>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ScrubEntry";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScrubEntry;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScrubEntry;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScrubEntry;

  static equals(a: ScrubEntry | PlainMessage<ScrubEntry> | undefined, b: ScrubEntry | PlainMessage<ScrubEntry> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.RuleAutoCompleteReq
 */
export declare class RuleAutoCompleteReq extends Message<RuleAutoCompleteReq> {
  /**
   * @generated from field: string phrase = 1;
   */
  phrase: string;

  /**
   * @generated from field: int32 cursor = 2;
   */
  cursor: number;

  constructor(data?: PartialMessage<RuleAutoCompleteReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.RuleAutoCompleteReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RuleAutoCompleteReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RuleAutoCompleteReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RuleAutoCompleteReq;

  static equals(a: RuleAutoCompleteReq | PlainMessage<RuleAutoCompleteReq> | undefined, b: RuleAutoCompleteReq | PlainMessage<RuleAutoCompleteReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.RuleAutoCompleteRes
 */
export declare class RuleAutoCompleteRes extends Message<RuleAutoCompleteRes> {
  /**
   * @generated from field: repeated string options = 1;
   */
  options: string[];

  constructor(data?: PartialMessage<RuleAutoCompleteRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.RuleAutoCompleteRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RuleAutoCompleteRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RuleAutoCompleteRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RuleAutoCompleteRes;

  static equals(a: RuleAutoCompleteRes | PlainMessage<RuleAutoCompleteRes> | undefined, b: RuleAutoCompleteRes | PlainMessage<RuleAutoCompleteRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.CheckRuleSetReq
 */
export declare class CheckRuleSetReq extends Message<CheckRuleSetReq> {
  /**
   * @generated from field: string phrase = 1;
   */
  phrase: string;

  constructor(data?: PartialMessage<CheckRuleSetReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.CheckRuleSetReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CheckRuleSetReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CheckRuleSetReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CheckRuleSetReq;

  static equals(a: CheckRuleSetReq | PlainMessage<CheckRuleSetReq> | undefined, b: CheckRuleSetReq | PlainMessage<CheckRuleSetReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.CheckRuleSetRes
 */
export declare class CheckRuleSetRes extends Message<CheckRuleSetRes> {
  /**
   * @generated from field: repeated api.commons.Rule rules = 1;
   */
  rules: Rule[];

  /**
   * @generated from field: repeated string warnings = 2;
   */
  warnings: string[];

  constructor(data?: PartialMessage<CheckRuleSetRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.CheckRuleSetRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CheckRuleSetRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CheckRuleSetRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CheckRuleSetRes;

  static equals(a: CheckRuleSetRes | PlainMessage<CheckRuleSetRes> | undefined, b: CheckRuleSetRes | PlainMessage<CheckRuleSetRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ListRuleSetsReq
 */
export declare class ListRuleSetsReq extends Message<ListRuleSetsReq> {
  /**
   * @generated from field: bool include_disabled = 2;
   */
  includeDisabled: boolean;

  constructor(data?: PartialMessage<ListRuleSetsReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ListRuleSetsReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListRuleSetsReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListRuleSetsReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListRuleSetsReq;

  static equals(a: ListRuleSetsReq | PlainMessage<ListRuleSetsReq> | undefined, b: ListRuleSetsReq | PlainMessage<ListRuleSetsReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ListRuleSetsRes
 */
export declare class ListRuleSetsRes extends Message<ListRuleSetsRes> {
  /**
   * @generated from field: string rule_set_id = 1;
   */
  ruleSetId: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: int64 rule_count = 4;
   */
  ruleCount: bigint;

  /**
   * @generated from field: bool disabled = 5;
   */
  disabled: boolean;

  constructor(data?: PartialMessage<ListRuleSetsRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ListRuleSetsRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListRuleSetsRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListRuleSetsRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListRuleSetsRes;

  static equals(a: ListRuleSetsRes | PlainMessage<ListRuleSetsRes> | undefined, b: ListRuleSetsRes | PlainMessage<ListRuleSetsRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.GetRuleSetReq
 */
export declare class GetRuleSetReq extends Message<GetRuleSetReq> {
  /**
   * @generated from field: string rule_set_id = 1;
   */
  ruleSetId: string;

  /**
   * @generated from field: string rule_set_sha = 2;
   */
  ruleSetSha: string;

  constructor(data?: PartialMessage<GetRuleSetReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.GetRuleSetReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetRuleSetReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetRuleSetReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetRuleSetReq;

  static equals(a: GetRuleSetReq | PlainMessage<GetRuleSetReq> | undefined, b: GetRuleSetReq | PlainMessage<GetRuleSetReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.GetRuleSetByNameReq
 */
export declare class GetRuleSetByNameReq extends Message<GetRuleSetByNameReq> {
  /**
   * @generated from field: string name = 3;
   */
  name: string;

  constructor(data?: PartialMessage<GetRuleSetByNameReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.GetRuleSetByNameReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetRuleSetByNameReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetRuleSetByNameReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetRuleSetByNameReq;

  static equals(a: GetRuleSetByNameReq | PlainMessage<GetRuleSetByNameReq> | undefined, b: GetRuleSetByNameReq | PlainMessage<GetRuleSetByNameReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AssignRuleSetReq
 */
export declare class AssignRuleSetReq extends Message<AssignRuleSetReq> {
  /**
   * @generated from field: api.commons.CommType comm_type = 1;
   */
  commType?: CommType;

  /**
   * @generated from field: string comm_id = 2;
   */
  commId: string;

  /**
   * @generated from field: string rule_set_id = 3;
   */
  ruleSetId: string;

  constructor(data?: PartialMessage<AssignRuleSetReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AssignRuleSetReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssignRuleSetReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssignRuleSetReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssignRuleSetReq;

  static equals(a: AssignRuleSetReq | PlainMessage<AssignRuleSetReq> | undefined, b: AssignRuleSetReq | PlainMessage<AssignRuleSetReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AssignRuleSetRes
 */
export declare class AssignRuleSetRes extends Message<AssignRuleSetRes> {
  /**
   * @generated from field: string cpl_rule_set_assignment_id = 1;
   */
  cplRuleSetAssignmentId: string;

  constructor(data?: PartialMessage<AssignRuleSetRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AssignRuleSetRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssignRuleSetRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssignRuleSetRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssignRuleSetRes;

  static equals(a: AssignRuleSetRes | PlainMessage<AssignRuleSetRes> | undefined, b: AssignRuleSetRes | PlainMessage<AssignRuleSetRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.RenameRuleSetReq
 */
export declare class RenameRuleSetReq extends Message<RenameRuleSetReq> {
  /**
   * @generated from field: string rule_set_id = 2;
   */
  ruleSetId: string;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  constructor(data?: PartialMessage<RenameRuleSetReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.RenameRuleSetReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RenameRuleSetReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RenameRuleSetReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RenameRuleSetReq;

  static equals(a: RenameRuleSetReq | PlainMessage<RenameRuleSetReq> | undefined, b: RenameRuleSetReq | PlainMessage<RenameRuleSetReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.RenameRuleSetRes
 */
export declare class RenameRuleSetRes extends Message<RenameRuleSetRes> {
  constructor(data?: PartialMessage<RenameRuleSetRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.RenameRuleSetRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RenameRuleSetRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RenameRuleSetRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RenameRuleSetRes;

  static equals(a: RenameRuleSetRes | PlainMessage<RenameRuleSetRes> | undefined, b: RenameRuleSetRes | PlainMessage<RenameRuleSetRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.CreateRuleSetReq
 */
export declare class CreateRuleSetReq extends Message<CreateRuleSetReq> {
  /**
   * @generated from field: string rule_set_id = 1;
   */
  ruleSetId: string;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: string rules_text = 6;
   */
  rulesText: string;

  /**
   * @generated from field: repeated api.commons.Rule rules = 7;
   */
  rules: Rule[];

  constructor(data?: PartialMessage<CreateRuleSetReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.CreateRuleSetReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateRuleSetReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateRuleSetReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateRuleSetReq;

  static equals(a: CreateRuleSetReq | PlainMessage<CreateRuleSetReq> | undefined, b: CreateRuleSetReq | PlainMessage<CreateRuleSetReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.EnableRuleSetReq
 */
export declare class EnableRuleSetReq extends Message<EnableRuleSetReq> {
  /**
   * @generated from field: string rule_set_id = 2;
   */
  ruleSetId: string;

  /**
   * @generated from field: string rule_set_sha = 3;
   */
  ruleSetSha: string;

  constructor(data?: PartialMessage<EnableRuleSetReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.EnableRuleSetReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EnableRuleSetReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EnableRuleSetReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EnableRuleSetReq;

  static equals(a: EnableRuleSetReq | PlainMessage<EnableRuleSetReq> | undefined, b: EnableRuleSetReq | PlainMessage<EnableRuleSetReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.DisableRuleSetReq
 */
export declare class DisableRuleSetReq extends Message<DisableRuleSetReq> {
  /**
   * @generated from field: string rule_set_id = 2;
   */
  ruleSetId: string;

  /**
   * @generated from field: string rule_set_sha = 3;
   */
  ruleSetSha: string;

  constructor(data?: PartialMessage<DisableRuleSetReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.DisableRuleSetReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DisableRuleSetReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DisableRuleSetReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DisableRuleSetReq;

  static equals(a: DisableRuleSetReq | PlainMessage<DisableRuleSetReq> | undefined, b: DisableRuleSetReq | PlainMessage<DisableRuleSetReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.EnableRuleSetRes
 */
export declare class EnableRuleSetRes extends Message<EnableRuleSetRes> {
  constructor(data?: PartialMessage<EnableRuleSetRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.EnableRuleSetRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EnableRuleSetRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EnableRuleSetRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EnableRuleSetRes;

  static equals(a: EnableRuleSetRes | PlainMessage<EnableRuleSetRes> | undefined, b: EnableRuleSetRes | PlainMessage<EnableRuleSetRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.DisableRuleSetRes
 */
export declare class DisableRuleSetRes extends Message<DisableRuleSetRes> {
  constructor(data?: PartialMessage<DisableRuleSetRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.DisableRuleSetRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DisableRuleSetRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DisableRuleSetRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DisableRuleSetRes;

  static equals(a: DisableRuleSetRes | PlainMessage<DisableRuleSetRes> | undefined, b: DisableRuleSetRes | PlainMessage<DisableRuleSetRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.EvaluationResults
 */
export declare class EvaluationResults extends Message<EvaluationResults> {
  constructor(data?: PartialMessage<EvaluationResults>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.EvaluationResults";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EvaluationResults;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EvaluationResults;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EvaluationResults;

  static equals(a: EvaluationResults | PlainMessage<EvaluationResults> | undefined, b: EvaluationResults | PlainMessage<EvaluationResults> | undefined): boolean;
}

/**
 * RuleSet / Rule
 *
 * @generated from message api.v0alpha.RuleSet
 */
export declare class RuleSet extends Message<RuleSet> {
  /**
   * @generated from field: string rule_set_id = 1;
   */
  ruleSetId: string;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: bool head = 5;
   */
  head: boolean;

  /**
   * @generated from field: bool disabled = 6;
   */
  disabled: boolean;

  /**
   * original text from where we derived the rules
   *
   * @generated from field: string rules_text = 9;
   */
  rulesText: string;

  /**
   * sha256 for the input strings
   *
   * @generated from field: string sha = 10;
   */
  sha: string;

  /**
   * @generated from field: repeated api.commons.Rule rules = 20;
   */
  rules: Rule[];

  constructor(data?: PartialMessage<RuleSet>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.RuleSet";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RuleSet;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RuleSet;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RuleSet;

  static equals(a: RuleSet | PlainMessage<RuleSet> | undefined, b: RuleSet | PlainMessage<RuleSet> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.GetDefaultRulesReq
 */
export declare class GetDefaultRulesReq extends Message<GetDefaultRulesReq> {
  constructor(data?: PartialMessage<GetDefaultRulesReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.GetDefaultRulesReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultRulesReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultRulesReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultRulesReq;

  static equals(a: GetDefaultRulesReq | PlainMessage<GetDefaultRulesReq> | undefined, b: GetDefaultRulesReq | PlainMessage<GetDefaultRulesReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.GetDefaultRulesRes
 */
export declare class GetDefaultRulesRes extends Message<GetDefaultRulesRes> {
  /**
   * @generated from field: repeated string rules = 1;
   */
  rules: string[];

  constructor(data?: PartialMessage<GetDefaultRulesRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.GetDefaultRulesRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDefaultRulesRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDefaultRulesRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDefaultRulesRes;

  static equals(a: GetDefaultRulesRes | PlainMessage<GetDefaultRulesRes> | undefined, b: GetDefaultRulesRes | PlainMessage<GetDefaultRulesRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.GetScrubListUploadUrlReq
 */
export declare class GetScrubListUploadUrlReq extends Message<GetScrubListUploadUrlReq> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  constructor(data?: PartialMessage<GetScrubListUploadUrlReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.GetScrubListUploadUrlReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetScrubListUploadUrlReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetScrubListUploadUrlReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetScrubListUploadUrlReq;

  static equals(a: GetScrubListUploadUrlReq | PlainMessage<GetScrubListUploadUrlReq> | undefined, b: GetScrubListUploadUrlReq | PlainMessage<GetScrubListUploadUrlReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.GetScrubListUploadUrlRes
 */
export declare class GetScrubListUploadUrlRes extends Message<GetScrubListUploadUrlRes> {
  /**
   * @generated from field: string url = 1;
   */
  url: string;

  /**
   * @generated from field: string filename = 2;
   */
  filename: string;

  /**
   * @generated from field: string bucket = 3;
   */
  bucket: string;

  constructor(data?: PartialMessage<GetScrubListUploadUrlRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.GetScrubListUploadUrlRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetScrubListUploadUrlRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetScrubListUploadUrlRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetScrubListUploadUrlRes;

  static equals(a: GetScrubListUploadUrlRes | PlainMessage<GetScrubListUploadUrlRes> | undefined, b: GetScrubListUploadUrlRes | PlainMessage<GetScrubListUploadUrlRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ProcessScrubListUploadReq
 */
export declare class ProcessScrubListUploadReq extends Message<ProcessScrubListUploadReq> {
  /**
   * @generated from field: string filename = 2;
   */
  filename: string;

  /**
   * @generated from field: string list_id = 4;
   */
  listId: string;

  /**
   * payload
   *
   * @generated from field: api.commons.ContentType content_type = 10;
   */
  contentType: ContentType;

  /**
   * @generated from field: string notification_message = 11;
   */
  notificationMessage: string;

  /**
   * @generated from field: string country_code = 12;
   */
  countryCode: string;

  constructor(data?: PartialMessage<ProcessScrubListUploadReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ProcessScrubListUploadReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcessScrubListUploadReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcessScrubListUploadReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcessScrubListUploadReq;

  static equals(a: ProcessScrubListUploadReq | PlainMessage<ProcessScrubListUploadReq> | undefined, b: ProcessScrubListUploadReq | PlainMessage<ProcessScrubListUploadReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ProcessScrubListUploadRes
 */
export declare class ProcessScrubListUploadRes extends Message<ProcessScrubListUploadRes> {
  /**
   * @generated from field: int64 entries_added = 1;
   */
  entriesAdded: bigint;

  /**
   * @generated from field: repeated string invalid_entries = 2;
   */
  invalidEntries: string[];

  constructor(data?: PartialMessage<ProcessScrubListUploadRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ProcessScrubListUploadRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcessScrubListUploadRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcessScrubListUploadRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcessScrubListUploadRes;

  static equals(a: ProcessScrubListUploadRes | PlainMessage<ProcessScrubListUploadRes> | undefined, b: ProcessScrubListUploadRes | PlainMessage<ProcessScrubListUploadRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ProcessScrubListDeleteUploadReq
 */
export declare class ProcessScrubListDeleteUploadReq extends Message<ProcessScrubListDeleteUploadReq> {
  /**
   * payload
   *
   * @generated from field: string list_id = 10;
   */
  listId: string;

  /**
   * @generated from field: string filename = 11;
   */
  filename: string;

  /**
   * @generated from field: string notification_message = 12;
   */
  notificationMessage: string;

  constructor(data?: PartialMessage<ProcessScrubListDeleteUploadReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ProcessScrubListDeleteUploadReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcessScrubListDeleteUploadReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcessScrubListDeleteUploadReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcessScrubListDeleteUploadReq;

  static equals(a: ProcessScrubListDeleteUploadReq | PlainMessage<ProcessScrubListDeleteUploadReq> | undefined, b: ProcessScrubListDeleteUploadReq | PlainMessage<ProcessScrubListDeleteUploadReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ProcessScrubListDeleteUploadRes
 */
export declare class ProcessScrubListDeleteUploadRes extends Message<ProcessScrubListDeleteUploadRes> {
  constructor(data?: PartialMessage<ProcessScrubListDeleteUploadRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ProcessScrubListDeleteUploadRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcessScrubListDeleteUploadRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcessScrubListDeleteUploadRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcessScrubListDeleteUploadRes;

  static equals(a: ProcessScrubListDeleteUploadRes | PlainMessage<ProcessScrubListDeleteUploadRes> | undefined, b: ProcessScrubListDeleteUploadRes | PlainMessage<ProcessScrubListDeleteUploadRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ExportScrubListReq
 */
export declare class ExportScrubListReq extends Message<ExportScrubListReq> {
  /**
   * @generated from field: string list_id = 1;
   */
  listId: string;

  constructor(data?: PartialMessage<ExportScrubListReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ExportScrubListReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExportScrubListReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExportScrubListReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExportScrubListReq;

  static equals(a: ExportScrubListReq | PlainMessage<ExportScrubListReq> | undefined, b: ExportScrubListReq | PlainMessage<ExportScrubListReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ExportScrubListRes
 */
export declare class ExportScrubListRes extends Message<ExportScrubListRes> {
  /**
   * @generated from field: string url = 1;
   */
  url: string;

  constructor(data?: PartialMessage<ExportScrubListRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ExportScrubListRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExportScrubListRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExportScrubListRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExportScrubListRes;

  static equals(a: ExportScrubListRes | PlainMessage<ExportScrubListRes> | undefined, b: ExportScrubListRes | PlainMessage<ExportScrubListRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.Scenario
 */
export declare class Scenario extends Message<Scenario> {
  /**
   * @generated from field: int64 cpl_scenario_id = 1;
   */
  cplScenarioId: bigint;

  /**
   * @generated from field: api.commons.ScenarioData should_allow = 3;
   */
  shouldAllow?: ScenarioData;

  /**
   * @generated from field: api.commons.ScenarioData should_deny = 4;
   */
  shouldDeny?: ScenarioData;

  /**
   * @generated from field: api.commons.ScenarioResult last_execution_result = 5;
   */
  lastExecutionResult?: ScenarioResult;

  /**
   * @generated from field: string name = 6;
   */
  name: string;

  constructor(data?: PartialMessage<Scenario>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.Scenario";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Scenario;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Scenario;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Scenario;

  static equals(a: Scenario | PlainMessage<Scenario> | undefined, b: Scenario | PlainMessage<Scenario> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.CreateScenarioReq
 */
export declare class CreateScenarioReq extends Message<CreateScenarioReq> {
  /**
   * @generated from field: api.commons.ScenarioData should_allow = 2;
   */
  shouldAllow?: ScenarioData;

  /**
   * @generated from field: api.commons.ScenarioData should_deny = 3;
   */
  shouldDeny?: ScenarioData;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  constructor(data?: PartialMessage<CreateScenarioReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.CreateScenarioReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateScenarioReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateScenarioReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateScenarioReq;

  static equals(a: CreateScenarioReq | PlainMessage<CreateScenarioReq> | undefined, b: CreateScenarioReq | PlainMessage<CreateScenarioReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.CreateScenarioRes
 */
export declare class CreateScenarioRes extends Message<CreateScenarioRes> {
  /**
   * @generated from field: api.v0alpha.Scenario scenario = 1;
   */
  scenario?: Scenario;

  constructor(data?: PartialMessage<CreateScenarioRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.CreateScenarioRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateScenarioRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateScenarioRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateScenarioRes;

  static equals(a: CreateScenarioRes | PlainMessage<CreateScenarioRes> | undefined, b: CreateScenarioRes | PlainMessage<CreateScenarioRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.GetScenarioReq
 */
export declare class GetScenarioReq extends Message<GetScenarioReq> {
  /**
   * @generated from field: int64 cpl_scenario_id = 1;
   */
  cplScenarioId: bigint;

  constructor(data?: PartialMessage<GetScenarioReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.GetScenarioReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetScenarioReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetScenarioReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetScenarioReq;

  static equals(a: GetScenarioReq | PlainMessage<GetScenarioReq> | undefined, b: GetScenarioReq | PlainMessage<GetScenarioReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.GetScenarioRes
 */
export declare class GetScenarioRes extends Message<GetScenarioRes> {
  /**
   * @generated from field: api.v0alpha.Scenario scenario = 1;
   */
  scenario?: Scenario;

  constructor(data?: PartialMessage<GetScenarioRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.GetScenarioRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetScenarioRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetScenarioRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetScenarioRes;

  static equals(a: GetScenarioRes | PlainMessage<GetScenarioRes> | undefined, b: GetScenarioRes | PlainMessage<GetScenarioRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.UpdateScenarioReq
 */
export declare class UpdateScenarioReq extends Message<UpdateScenarioReq> {
  /**
   * @generated from field: api.v0alpha.Scenario scenario = 1;
   */
  scenario?: Scenario;

  constructor(data?: PartialMessage<UpdateScenarioReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.UpdateScenarioReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateScenarioReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateScenarioReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateScenarioReq;

  static equals(a: UpdateScenarioReq | PlainMessage<UpdateScenarioReq> | undefined, b: UpdateScenarioReq | PlainMessage<UpdateScenarioReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.UpdateScenarioRes
 */
export declare class UpdateScenarioRes extends Message<UpdateScenarioRes> {
  /**
   * @generated from field: api.v0alpha.Scenario scenario = 1;
   */
  scenario?: Scenario;

  constructor(data?: PartialMessage<UpdateScenarioRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.UpdateScenarioRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateScenarioRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateScenarioRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateScenarioRes;

  static equals(a: UpdateScenarioRes | PlainMessage<UpdateScenarioRes> | undefined, b: UpdateScenarioRes | PlainMessage<UpdateScenarioRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.DeleteScenarioReq
 */
export declare class DeleteScenarioReq extends Message<DeleteScenarioReq> {
  /**
   * @generated from field: int64 cpl_scenario_id = 1;
   */
  cplScenarioId: bigint;

  constructor(data?: PartialMessage<DeleteScenarioReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.DeleteScenarioReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteScenarioReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteScenarioReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteScenarioReq;

  static equals(a: DeleteScenarioReq | PlainMessage<DeleteScenarioReq> | undefined, b: DeleteScenarioReq | PlainMessage<DeleteScenarioReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.DeleteScenarioRes
 */
export declare class DeleteScenarioRes extends Message<DeleteScenarioRes> {
  constructor(data?: PartialMessage<DeleteScenarioRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.DeleteScenarioRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteScenarioRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteScenarioRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteScenarioRes;

  static equals(a: DeleteScenarioRes | PlainMessage<DeleteScenarioRes> | undefined, b: DeleteScenarioRes | PlainMessage<DeleteScenarioRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.RunAssignedScenariosReq
 */
export declare class RunAssignedScenariosReq extends Message<RunAssignedScenariosReq> {
  /**
   * @generated from field: string cpl_rule_set_id = 1;
   */
  cplRuleSetId: string;

  constructor(data?: PartialMessage<RunAssignedScenariosReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.RunAssignedScenariosReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RunAssignedScenariosReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RunAssignedScenariosReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RunAssignedScenariosReq;

  static equals(a: RunAssignedScenariosReq | PlainMessage<RunAssignedScenariosReq> | undefined, b: RunAssignedScenariosReq | PlainMessage<RunAssignedScenariosReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.RunAssignedScenariosRes
 */
export declare class RunAssignedScenariosRes extends Message<RunAssignedScenariosRes> {
  /**
   * @generated from field: repeated api.commons.ScenarioResult results = 2;
   */
  results: ScenarioResult[];

  /**
   * @generated from field: bool passed_value = 4;
   */
  passedValue: boolean;

  /**
   * @generated from field: string cpl_rule_set_name = 3;
   */
  cplRuleSetName: string;

  constructor(data?: PartialMessage<RunAssignedScenariosRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.RunAssignedScenariosRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RunAssignedScenariosRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RunAssignedScenariosRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RunAssignedScenariosRes;

  static equals(a: RunAssignedScenariosRes | PlainMessage<RunAssignedScenariosRes> | undefined, b: RunAssignedScenariosRes | PlainMessage<RunAssignedScenariosRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ListAllScenariosReq
 */
export declare class ListAllScenariosReq extends Message<ListAllScenariosReq> {
  constructor(data?: PartialMessage<ListAllScenariosReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ListAllScenariosReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAllScenariosReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAllScenariosReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAllScenariosReq;

  static equals(a: ListAllScenariosReq | PlainMessage<ListAllScenariosReq> | undefined, b: ListAllScenariosReq | PlainMessage<ListAllScenariosReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ListAllScenariosRes
 */
export declare class ListAllScenariosRes extends Message<ListAllScenariosRes> {
  /**
   * @generated from field: repeated api.v0alpha.Scenario scenarios = 1;
   */
  scenarios: Scenario[];

  constructor(data?: PartialMessage<ListAllScenariosRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ListAllScenariosRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAllScenariosRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAllScenariosRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAllScenariosRes;

  static equals(a: ListAllScenariosRes | PlainMessage<ListAllScenariosRes> | undefined, b: ListAllScenariosRes | PlainMessage<ListAllScenariosRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ListAssignedRuleSetsReq
 */
export declare class ListAssignedRuleSetsReq extends Message<ListAssignedRuleSetsReq> {
  /**
   * @generated from field: int64 cpl_scenario_id = 3;
   */
  cplScenarioId: bigint;

  constructor(data?: PartialMessage<ListAssignedRuleSetsReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ListAssignedRuleSetsReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAssignedRuleSetsReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAssignedRuleSetsReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAssignedRuleSetsReq;

  static equals(a: ListAssignedRuleSetsReq | PlainMessage<ListAssignedRuleSetsReq> | undefined, b: ListAssignedRuleSetsReq | PlainMessage<ListAssignedRuleSetsReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ListAssignedRuleSetsRes
 */
export declare class ListAssignedRuleSetsRes extends Message<ListAssignedRuleSetsRes> {
  /**
   * @generated from field: repeated api.v0alpha.RuleSet rule_sets = 1;
   */
  ruleSets: RuleSet[];

  constructor(data?: PartialMessage<ListAssignedRuleSetsRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ListAssignedRuleSetsRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAssignedRuleSetsRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAssignedRuleSetsRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAssignedRuleSetsRes;

  static equals(a: ListAssignedRuleSetsRes | PlainMessage<ListAssignedRuleSetsRes> | undefined, b: ListAssignedRuleSetsRes | PlainMessage<ListAssignedRuleSetsRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ListAssignedScenariosReq
 */
export declare class ListAssignedScenariosReq extends Message<ListAssignedScenariosReq> {
  /**
   * @generated from field: string cpl_rule_set_id = 3;
   */
  cplRuleSetId: string;

  constructor(data?: PartialMessage<ListAssignedScenariosReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ListAssignedScenariosReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAssignedScenariosReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAssignedScenariosReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAssignedScenariosReq;

  static equals(a: ListAssignedScenariosReq | PlainMessage<ListAssignedScenariosReq> | undefined, b: ListAssignedScenariosReq | PlainMessage<ListAssignedScenariosReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AssignedScenario
 */
export declare class AssignedScenario extends Message<AssignedScenario> {
  /**
   * @generated from field: api.v0alpha.Scenario scenario = 1;
   */
  scenario?: Scenario;

  /**
   * @generated from field: bool enabled = 2;
   */
  enabled: boolean;

  /**
   * @generated from field: api.commons.ScenarioResult last_execution_result = 3;
   */
  lastExecutionResult?: ScenarioResult;

  constructor(data?: PartialMessage<AssignedScenario>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AssignedScenario";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssignedScenario;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssignedScenario;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssignedScenario;

  static equals(a: AssignedScenario | PlainMessage<AssignedScenario> | undefined, b: AssignedScenario | PlainMessage<AssignedScenario> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ListAssignedScenariosRes
 */
export declare class ListAssignedScenariosRes extends Message<ListAssignedScenariosRes> {
  /**
   * @generated from field: repeated api.v0alpha.AssignedScenario assigned_scenarios = 1;
   */
  assignedScenarios: AssignedScenario[];

  constructor(data?: PartialMessage<ListAssignedScenariosRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ListAssignedScenariosRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAssignedScenariosRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAssignedScenariosRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAssignedScenariosRes;

  static equals(a: ListAssignedScenariosRes | PlainMessage<ListAssignedScenariosRes> | undefined, b: ListAssignedScenariosRes | PlainMessage<ListAssignedScenariosRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ListUnassignedScenariosReq
 */
export declare class ListUnassignedScenariosReq extends Message<ListUnassignedScenariosReq> {
  /**
   * @generated from field: string cpl_rule_set_id = 3;
   */
  cplRuleSetId: string;

  constructor(data?: PartialMessage<ListUnassignedScenariosReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ListUnassignedScenariosReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUnassignedScenariosReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUnassignedScenariosReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUnassignedScenariosReq;

  static equals(a: ListUnassignedScenariosReq | PlainMessage<ListUnassignedScenariosReq> | undefined, b: ListUnassignedScenariosReq | PlainMessage<ListUnassignedScenariosReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ListUnassignedScenariosRes
 */
export declare class ListUnassignedScenariosRes extends Message<ListUnassignedScenariosRes> {
  /**
   * @generated from field: repeated api.v0alpha.Scenario scenarios = 1;
   */
  scenarios: Scenario[];

  constructor(data?: PartialMessage<ListUnassignedScenariosRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ListUnassignedScenariosRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUnassignedScenariosRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUnassignedScenariosRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUnassignedScenariosRes;

  static equals(a: ListUnassignedScenariosRes | PlainMessage<ListUnassignedScenariosRes> | undefined, b: ListUnassignedScenariosRes | PlainMessage<ListUnassignedScenariosRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AssignScenarioReq
 */
export declare class AssignScenarioReq extends Message<AssignScenarioReq> {
  /**
   * @generated from field: string cpl_rule_set_id = 3;
   */
  cplRuleSetId: string;

  /**
   * @generated from field: int64 cpl_scenario_id = 4;
   */
  cplScenarioId: bigint;

  constructor(data?: PartialMessage<AssignScenarioReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AssignScenarioReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssignScenarioReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssignScenarioReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssignScenarioReq;

  static equals(a: AssignScenarioReq | PlainMessage<AssignScenarioReq> | undefined, b: AssignScenarioReq | PlainMessage<AssignScenarioReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.UnassignScenarioReq
 */
export declare class UnassignScenarioReq extends Message<UnassignScenarioReq> {
  /**
   * @generated from field: string cpl_rule_set_id = 3;
   */
  cplRuleSetId: string;

  /**
   * @generated from field: int64 cpl_scenario_id = 4;
   */
  cplScenarioId: bigint;

  constructor(data?: PartialMessage<UnassignScenarioReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.UnassignScenarioReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnassignScenarioReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnassignScenarioReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnassignScenarioReq;

  static equals(a: UnassignScenarioReq | PlainMessage<UnassignScenarioReq> | undefined, b: UnassignScenarioReq | PlainMessage<UnassignScenarioReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.EnableScenarioReq
 */
export declare class EnableScenarioReq extends Message<EnableScenarioReq> {
  /**
   * @generated from field: string cpl_rule_set_id = 3;
   */
  cplRuleSetId: string;

  /**
   * @generated from field: int64 cpl_scenario_id = 4;
   */
  cplScenarioId: bigint;

  constructor(data?: PartialMessage<EnableScenarioReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.EnableScenarioReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EnableScenarioReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EnableScenarioReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EnableScenarioReq;

  static equals(a: EnableScenarioReq | PlainMessage<EnableScenarioReq> | undefined, b: EnableScenarioReq | PlainMessage<EnableScenarioReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.DisableScenarioReq
 */
export declare class DisableScenarioReq extends Message<DisableScenarioReq> {
  /**
   * @generated from field: string cpl_rule_set_id = 3;
   */
  cplRuleSetId: string;

  /**
   * @generated from field: int64 cpl_scenario_id = 4;
   */
  cplScenarioId: bigint;

  constructor(data?: PartialMessage<DisableScenarioReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.DisableScenarioReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DisableScenarioReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DisableScenarioReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DisableScenarioReq;

  static equals(a: DisableScenarioReq | PlainMessage<DisableScenarioReq> | undefined, b: DisableScenarioReq | PlainMessage<DisableScenarioReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.CreateConsentProfileReq
 */
export declare class CreateConsentProfileReq extends Message<CreateConsentProfileReq> {
  /**
   * @generated from field: string consent_profile_id = 1;
   */
  consentProfileId: string;

  /**
   * payload
   *
   * @generated from field: string profile_name = 10;
   */
  profileName: string;

  /**
   * @generated from field: bool disabled = 11;
   */
  disabled: boolean;

  /**
   * channel (email, sms, phone, etc)
   *
   * @generated from field: api.commons.CommType channel = 12 [deprecated = true];
   * @deprecated
   */
  channel?: CommType;

  /**
   * auditing
   *
   * @generated from field: string created_by = 50;
   */
  createdBy: string;

  constructor(data?: PartialMessage<CreateConsentProfileReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.CreateConsentProfileReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateConsentProfileReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateConsentProfileReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateConsentProfileReq;

  static equals(a: CreateConsentProfileReq | PlainMessage<CreateConsentProfileReq> | undefined, b: CreateConsentProfileReq | PlainMessage<CreateConsentProfileReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.CreateConsentProfileRes
 */
export declare class CreateConsentProfileRes extends Message<CreateConsentProfileRes> {
  /**
   * @generated from field: string consent_profile_id = 1;
   */
  consentProfileId: string;

  constructor(data?: PartialMessage<CreateConsentProfileRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.CreateConsentProfileRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateConsentProfileRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateConsentProfileRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateConsentProfileRes;

  static equals(a: CreateConsentProfileRes | PlainMessage<CreateConsentProfileRes> | undefined, b: CreateConsentProfileRes | PlainMessage<CreateConsentProfileRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.GetConsentReq
 */
export declare class GetConsentReq extends Message<GetConsentReq> {
  /**
   * @generated from field: int64 consent_id = 1;
   */
  consentId: bigint;

  constructor(data?: PartialMessage<GetConsentReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.GetConsentReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetConsentReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetConsentReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetConsentReq;

  static equals(a: GetConsentReq | PlainMessage<GetConsentReq> | undefined, b: GetConsentReq | PlainMessage<GetConsentReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.CreateConsentReq
 */
export declare class CreateConsentReq extends Message<CreateConsentReq> {
  /**
   * @generated from field: string consent_profile_id = 2;
   */
  consentProfileId: string;

  /**
   * payload
   *
   * @generated from field: string content = 10;
   */
  content: string;

  /**
   * @generated from field: google.protobuf.Timestamp recorded = 11;
   */
  recorded?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp expire = 12;
   */
  expire?: Timestamp;

  /**
   * @generated from field: string referring_url = 13;
   */
  referringUrl: string;

  /**
   * channel (email, sms, phone, etc)
   *
   * @generated from field: api.commons.CommType channel = 15 [deprecated = true];
   * @deprecated
   */
  channel?: CommType;

  /**
   * topic (future payment vs payment reminder vs account reminders vs receipts)
   *
   * @generated from field: string topic = 16;
   */
  topic: string;

  /**
   * notate revocation (reason)
   *
   * @generated from field: string revoked_reason = 17;
   */
  revokedReason: string;

  /**
   * notate grant reason
   *
   * @generated from field: string granted_reason = 18;
   */
  grantedReason: string;

  /**
   * proof of consent (pdf, voice recording etc) this will be filename which can be retrieved via matrix-fts
   *
   * @generated from field: string proof = 19;
   */
  proof: string;

  /**
   * consent conditions
   *
   * @generated from field: repeated api.commons.Weekday.Enum condition_days_of_the_week = 20;
   */
  conditionDaysOfTheWeek: Weekday_Enum[];

  /**
   * @generated from field: string condition_time_of_day_from = 21;
   */
  conditionTimeOfDayFrom: string;

  /**
   * @generated from field: string condition_time_of_day_to = 22;
   */
  conditionTimeOfDayTo: string;

  /**
   * @generated from field: google.protobuf.Timestamp condition_from = 23;
   */
  conditionFrom?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp condition_to = 24;
   */
  conditionTo?: Timestamp;

  /**
   * @generated from field: string notes = 25;
   */
  notes: string;

  /**
   * Consent Conditions
   *
   * @generated from field: repeated api.commons.ConsentCondition conditions = 26;
   */
  conditions: ConsentCondition[];

  /**
   * content_type (call, email, sms, account number)
   *
   * @generated from field: api.commons.ContentType content_type = 27;
   */
  contentType: ContentType;

  /**
   * @generated from field: api.commons.Channel channel_type = 28;
   */
  channelType: Channel;

  constructor(data?: PartialMessage<CreateConsentReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.CreateConsentReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateConsentReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateConsentReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateConsentReq;

  static equals(a: CreateConsentReq | PlainMessage<CreateConsentReq> | undefined, b: CreateConsentReq | PlainMessage<CreateConsentReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.CreateConsentRes
 */
export declare class CreateConsentRes extends Message<CreateConsentRes> {
  /**
   * @generated from field: int64 consent_id = 1;
   */
  consentId: bigint;

  constructor(data?: PartialMessage<CreateConsentRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.CreateConsentRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateConsentRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateConsentRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateConsentRes;

  static equals(a: CreateConsentRes | PlainMessage<CreateConsentRes> | undefined, b: CreateConsentRes | PlainMessage<CreateConsentRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ConsentProfile
 */
export declare class ConsentProfile extends Message<ConsentProfile> {
  /**
   * @generated from field: string consent_profile_id = 1;
   */
  consentProfileId: string;

  /**
   * payload
   *
   * @generated from field: string profile_name = 10;
   */
  profileName: string;

  /**
   * @generated from field: bool disabled = 11;
   */
  disabled: boolean;

  /**
   * @generated from field: repeated api.v0alpha.Consent consents = 12;
   */
  consents: Consent[];

  /**
   * channel (email, sms, phone, etc)
   *
   * @generated from field: api.commons.CommType channel = 13 [deprecated = true];
   * @deprecated
   */
  channel?: CommType;

  /**
   * auditing
   *
   * @generated from field: google.protobuf.Timestamp created_on = 50;
   */
  createdOn?: Timestamp;

  /**
   * @generated from field: string created_by = 51;
   */
  createdBy: string;

  constructor(data?: PartialMessage<ConsentProfile>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ConsentProfile";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConsentProfile;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConsentProfile;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConsentProfile;

  static equals(a: ConsentProfile | PlainMessage<ConsentProfile> | undefined, b: ConsentProfile | PlainMessage<ConsentProfile> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.Consent
 */
export declare class Consent extends Message<Consent> {
  /**
   * @generated from field: int64 consent_id = 1;
   */
  consentId: bigint;

  /**
   * @generated from field: string consent_profile_id = 2;
   */
  consentProfileId: string;

  /**
   * @generated from field: bool deleted = 4;
   */
  deleted: boolean;

  /**
   * @generated from field: google.protobuf.Timestamp deleted_on = 5;
   */
  deletedOn?: Timestamp;

  /**
   * payload
   *
   * @generated from field: string content = 10;
   */
  content: string;

  /**
   * date consent granted
   *
   * @generated from field: google.protobuf.Timestamp recorded = 11;
   */
  recorded?: Timestamp;

  /**
   * date consent revoked
   *
   * @generated from field: google.protobuf.Timestamp revoked = 12;
   */
  revoked?: Timestamp;

  /**
   * expiration of consent
   *
   * @generated from field: google.protobuf.Timestamp expire = 13;
   */
  expire?: Timestamp;

  /**
   * @generated from field: string referring_url = 14;
   */
  referringUrl: string;

  /**
   * channel (email, sms, phone, etc)
   *
   * @generated from field: api.commons.CommType channel = 15 [deprecated = true];
   * @deprecated
   */
  channel?: CommType;

  /**
   * topic (future payment vs payment reminder vs account reminders vs receipts)
   *
   * @generated from field: string topic = 16;
   */
  topic: string;

  /**
   * notate revocation (reason)
   *
   * @generated from field: string revoked_reason = 17;
   */
  revokedReason: string;

  /**
   * notate grant reason
   *
   * @generated from field: string granted_reason = 18;
   */
  grantedReason: string;

  /**
   * proof of consent (pdf, voice recording etc) this will be filename which can be retrieved via matrix-fts
   *
   * @generated from field: string proof = 19;
   */
  proof: string;

  /**
   * consent conditions
   *
   * @generated from field: repeated api.commons.Weekday.Enum condition_days_of_the_week = 20 [deprecated = true];
   * @deprecated
   */
  conditionDaysOfTheWeek: Weekday_Enum[];

  /**
   * @generated from field: string condition_time_of_day_from = 21 [deprecated = true];
   * @deprecated
   */
  conditionTimeOfDayFrom: string;

  /**
   * @generated from field: string condition_time_of_day_to = 22 [deprecated = true];
   * @deprecated
   */
  conditionTimeOfDayTo: string;

  /**
   * @generated from field: google.protobuf.Timestamp condition_from = 23 [deprecated = true];
   * @deprecated
   */
  conditionFrom?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp condition_to = 24 [deprecated = true];
   * @deprecated
   */
  conditionTo?: Timestamp;

  /**
   * @generated from field: string notes = 25;
   */
  notes: string;

  /**
   * Consent Conditions
   *
   * @generated from field: repeated api.commons.ConsentCondition conditions = 26;
   */
  conditions: ConsentCondition[];

  /**
   * content_type (call, email, sms, account number)
   *
   * @generated from field: api.commons.ContentType content_type = 27;
   */
  contentType: ContentType;

  /**
   * @generated from field: api.commons.Channel channel_type = 28;
   */
  channelType: Channel;

  constructor(data?: PartialMessage<Consent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.Consent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Consent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Consent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Consent;

  static equals(a: Consent | PlainMessage<Consent> | undefined, b: Consent | PlainMessage<Consent> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.GetConsentProfileReq
 */
export declare class GetConsentProfileReq extends Message<GetConsentProfileReq> {
  /**
   * @generated from field: string consent_profile_id = 1;
   */
  consentProfileId: string;

  constructor(data?: PartialMessage<GetConsentProfileReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.GetConsentProfileReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetConsentProfileReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetConsentProfileReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetConsentProfileReq;

  static equals(a: GetConsentProfileReq | PlainMessage<GetConsentProfileReq> | undefined, b: GetConsentProfileReq | PlainMessage<GetConsentProfileReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.UpdateConsentReq
 */
export declare class UpdateConsentReq extends Message<UpdateConsentReq> {
  /**
   * @generated from field: int64 consent_id = 1;
   */
  consentId: bigint;

  /**
   * @generated from field: string consent_profile_id = 3;
   */
  consentProfileId: string;

  /**
   * payload
   *
   * @generated from field: string content = 10;
   */
  content: string;

  /**
   * @generated from field: google.protobuf.Timestamp recorded = 11;
   */
  recorded?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp revoked = 12;
   */
  revoked?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp expire = 13;
   */
  expire?: Timestamp;

  /**
   * @generated from field: string referring_url = 14;
   */
  referringUrl: string;

  /**
   * channel (email, sms, phone, etc)
   *
   * @generated from field: api.commons.CommType channel = 15 [deprecated = true];
   * @deprecated
   */
  channel?: CommType;

  /**
   * topic (future payment vs payment reminder vs account reminders vs receipts)
   *
   * @generated from field: string topic = 16;
   */
  topic: string;

  /**
   * notate revocation (reason)
   *
   * @generated from field: string revoked_reason = 17;
   */
  revokedReason: string;

  /**
   * notate grant reason
   *
   * @generated from field: string granted_reason = 18;
   */
  grantedReason: string;

  /**
   * proof of consent (pdf, voice recording etc) this will be filename which can be retrieved via matrix-fts
   *
   * @generated from field: string proof = 19;
   */
  proof: string;

  /**
   * consent conditions
   *
   * @generated from field: repeated api.commons.Weekday.Enum condition_days_of_the_week = 20;
   */
  conditionDaysOfTheWeek: Weekday_Enum[];

  /**
   * @generated from field: string condition_time_of_day_from = 21;
   */
  conditionTimeOfDayFrom: string;

  /**
   * @generated from field: string condition_time_of_day_to = 22;
   */
  conditionTimeOfDayTo: string;

  /**
   * @generated from field: google.protobuf.Timestamp condition_from = 23;
   */
  conditionFrom?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp condition_to = 24;
   */
  conditionTo?: Timestamp;

  /**
   * @generated from field: string notes = 25;
   */
  notes: string;

  /**
   * Consent Conditions
   *
   * @generated from field: repeated api.commons.ConsentCondition conditions = 26;
   */
  conditions: ConsentCondition[];

  /**
   * content_type (call, email, sms, account number)
   *
   * @generated from field: api.commons.ContentType content_type = 27;
   */
  contentType: ContentType;

  /**
   * @generated from field: api.commons.Channel channel_type = 28;
   */
  channelType: Channel;

  constructor(data?: PartialMessage<UpdateConsentReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.UpdateConsentReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateConsentReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateConsentReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateConsentReq;

  static equals(a: UpdateConsentReq | PlainMessage<UpdateConsentReq> | undefined, b: UpdateConsentReq | PlainMessage<UpdateConsentReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ExpireConsentReq
 */
export declare class ExpireConsentReq extends Message<ExpireConsentReq> {
  /**
   * @generated from field: int64 consent_id = 1;
   */
  consentId: bigint;

  /**
   * @generated from field: google.protobuf.Timestamp expire = 3;
   */
  expire?: Timestamp;

  constructor(data?: PartialMessage<ExpireConsentReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ExpireConsentReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExpireConsentReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExpireConsentReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExpireConsentReq;

  static equals(a: ExpireConsentReq | PlainMessage<ExpireConsentReq> | undefined, b: ExpireConsentReq | PlainMessage<ExpireConsentReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.RevokeConsentReq
 */
export declare class RevokeConsentReq extends Message<RevokeConsentReq> {
  /**
   * @generated from field: int64 consent_id = 1;
   */
  consentId: bigint;

  /**
   * @generated from field: google.protobuf.Timestamp revoked = 3;
   */
  revoked?: Timestamp;

  /**
   * @generated from field: string consent_profile_id = 4;
   */
  consentProfileId: string;

  /**
   * @generated from field: string content = 5;
   */
  content: string;

  /**
   * @generated from field: api.commons.Channel channel_type = 6;
   */
  channelType: Channel;

  /**
   * @generated from field: string revoked_reason = 7;
   */
  revokedReason: string;

  /**
   * @generated from field: api.commons.ContentType content_type = 8;
   */
  contentType: ContentType;

  constructor(data?: PartialMessage<RevokeConsentReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.RevokeConsentReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RevokeConsentReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RevokeConsentReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RevokeConsentReq;

  static equals(a: RevokeConsentReq | PlainMessage<RevokeConsentReq> | undefined, b: RevokeConsentReq | PlainMessage<RevokeConsentReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.EnableConsentProfileReq
 */
export declare class EnableConsentProfileReq extends Message<EnableConsentProfileReq> {
  /**
   * @generated from field: string consent_profile_id = 1;
   */
  consentProfileId: string;

  constructor(data?: PartialMessage<EnableConsentProfileReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.EnableConsentProfileReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EnableConsentProfileReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EnableConsentProfileReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EnableConsentProfileReq;

  static equals(a: EnableConsentProfileReq | PlainMessage<EnableConsentProfileReq> | undefined, b: EnableConsentProfileReq | PlainMessage<EnableConsentProfileReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.DisableConsentProfileReq
 */
export declare class DisableConsentProfileReq extends Message<DisableConsentProfileReq> {
  /**
   * @generated from field: string consent_profile_id = 1;
   */
  consentProfileId: string;

  constructor(data?: PartialMessage<DisableConsentProfileReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.DisableConsentProfileReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DisableConsentProfileReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DisableConsentProfileReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DisableConsentProfileReq;

  static equals(a: DisableConsentProfileReq | PlainMessage<DisableConsentProfileReq> | undefined, b: DisableConsentProfileReq | PlainMessage<DisableConsentProfileReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ListConsentProfilesReq
 */
export declare class ListConsentProfilesReq extends Message<ListConsentProfilesReq> {
  constructor(data?: PartialMessage<ListConsentProfilesReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ListConsentProfilesReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListConsentProfilesReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListConsentProfilesReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListConsentProfilesReq;

  static equals(a: ListConsentProfilesReq | PlainMessage<ListConsentProfilesReq> | undefined, b: ListConsentProfilesReq | PlainMessage<ListConsentProfilesReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ListConsentProfile
 */
export declare class ListConsentProfile extends Message<ListConsentProfile> {
  /**
   * @generated from field: string consent_profile_id = 1;
   */
  consentProfileId: string;

  /**
   * @generated from field: string profile_name = 2;
   */
  profileName: string;

  /**
   * @generated from field: int64 count = 3;
   */
  count: bigint;

  /**
   * @generated from field: bool disabled = 4;
   */
  disabled: boolean;

  /**
   * channel (email, sms, phone, etc)
   *
   * @generated from field: api.commons.CommType channel = 5 [deprecated = true];
   * @deprecated
   */
  channel?: CommType;

  constructor(data?: PartialMessage<ListConsentProfile>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ListConsentProfile";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListConsentProfile;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListConsentProfile;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListConsentProfile;

  static equals(a: ListConsentProfile | PlainMessage<ListConsentProfile> | undefined, b: ListConsentProfile | PlainMessage<ListConsentProfile> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ListConsentProfilesRes
 */
export declare class ListConsentProfilesRes extends Message<ListConsentProfilesRes> {
  /**
   * @generated from field: repeated api.v0alpha.ListConsentProfile consent_profiles = 1;
   */
  consentProfiles: ListConsentProfile[];

  constructor(data?: PartialMessage<ListConsentProfilesRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ListConsentProfilesRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListConsentProfilesRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListConsentProfilesRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListConsentProfilesRes;

  static equals(a: ListConsentProfilesRes | PlainMessage<ListConsentProfilesRes> | undefined, b: ListConsentProfilesRes | PlainMessage<ListConsentProfilesRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.GetConsentUploadUrlReq
 */
export declare class GetConsentUploadUrlReq extends Message<GetConsentUploadUrlReq> {
  constructor(data?: PartialMessage<GetConsentUploadUrlReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.GetConsentUploadUrlReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetConsentUploadUrlReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetConsentUploadUrlReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetConsentUploadUrlReq;

  static equals(a: GetConsentUploadUrlReq | PlainMessage<GetConsentUploadUrlReq> | undefined, b: GetConsentUploadUrlReq | PlainMessage<GetConsentUploadUrlReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.GetConsentUploadUrlRes
 */
export declare class GetConsentUploadUrlRes extends Message<GetConsentUploadUrlRes> {
  /**
   * @generated from field: string url = 1;
   */
  url: string;

  /**
   * @generated from field: string filename = 2;
   */
  filename: string;

  /**
   * @generated from field: string bucket = 3;
   */
  bucket: string;

  constructor(data?: PartialMessage<GetConsentUploadUrlRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.GetConsentUploadUrlRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetConsentUploadUrlRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetConsentUploadUrlRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetConsentUploadUrlRes;

  static equals(a: GetConsentUploadUrlRes | PlainMessage<GetConsentUploadUrlRes> | undefined, b: GetConsentUploadUrlRes | PlainMessage<GetConsentUploadUrlRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.DeleteConsentReq
 */
export declare class DeleteConsentReq extends Message<DeleteConsentReq> {
  /**
   * @generated from field: int64 consent_id = 1;
   */
  consentId: bigint;

  constructor(data?: PartialMessage<DeleteConsentReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.DeleteConsentReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteConsentReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteConsentReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteConsentReq;

  static equals(a: DeleteConsentReq | PlainMessage<DeleteConsentReq> | undefined, b: DeleteConsentReq | PlainMessage<DeleteConsentReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ProcessConsentUploadReq
 */
export declare class ProcessConsentUploadReq extends Message<ProcessConsentUploadReq> {
  /**
   * @generated from field: string filename = 2;
   */
  filename: string;

  /**
   * @generated from field: string consent_profile_id = 3;
   */
  consentProfileId: string;

  /**
   * @generated from field: string user_id = 4;
   */
  userId: string;

  constructor(data?: PartialMessage<ProcessConsentUploadReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ProcessConsentUploadReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcessConsentUploadReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcessConsentUploadReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcessConsentUploadReq;

  static equals(a: ProcessConsentUploadReq | PlainMessage<ProcessConsentUploadReq> | undefined, b: ProcessConsentUploadReq | PlainMessage<ProcessConsentUploadReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ProcessConsentUploadRes
 */
export declare class ProcessConsentUploadRes extends Message<ProcessConsentUploadRes> {
  /**
   * @generated from field: int64 entries_added = 1;
   */
  entriesAdded: bigint;

  constructor(data?: PartialMessage<ProcessConsentUploadRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ProcessConsentUploadRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcessConsentUploadRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcessConsentUploadRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcessConsentUploadRes;

  static equals(a: ProcessConsentUploadRes | PlainMessage<ProcessConsentUploadRes> | undefined, b: ProcessConsentUploadRes | PlainMessage<ProcessConsentUploadRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.GetFieldNamesReq
 */
export declare class GetFieldNamesReq extends Message<GetFieldNamesReq> {
  /**
   * @generated from field: bool phone_only = 2;
   */
  phoneOnly: boolean;

  constructor(data?: PartialMessage<GetFieldNamesReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.GetFieldNamesReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFieldNamesReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFieldNamesReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFieldNamesReq;

  static equals(a: GetFieldNamesReq | PlainMessage<GetFieldNamesReq> | undefined, b: GetFieldNamesReq | PlainMessage<GetFieldNamesReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.FieldNames
 */
export declare class FieldNames extends Message<FieldNames> {
  /**
   * @generated from field: repeated string names = 1;
   */
  names: string[];

  constructor(data?: PartialMessage<FieldNames>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.FieldNames";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FieldNames;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FieldNames;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FieldNames;

  static equals(a: FieldNames | PlainMessage<FieldNames> | undefined, b: FieldNames | PlainMessage<FieldNames> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.GetResultDescriptionsReq
 */
export declare class GetResultDescriptionsReq extends Message<GetResultDescriptionsReq> {
  constructor(data?: PartialMessage<GetResultDescriptionsReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.GetResultDescriptionsReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetResultDescriptionsReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetResultDescriptionsReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetResultDescriptionsReq;

  static equals(a: GetResultDescriptionsReq | PlainMessage<GetResultDescriptionsReq> | undefined, b: GetResultDescriptionsReq | PlainMessage<GetResultDescriptionsReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.PurgeScrubListReq
 */
export declare class PurgeScrubListReq extends Message<PurgeScrubListReq> {
  /**
   * @generated from field: string list_id = 1;
   */
  listId: string;

  constructor(data?: PartialMessage<PurgeScrubListReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.PurgeScrubListReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurgeScrubListReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurgeScrubListReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurgeScrubListReq;

  static equals(a: PurgeScrubListReq | PlainMessage<PurgeScrubListReq> | undefined, b: PurgeScrubListReq | PlainMessage<PurgeScrubListReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.PurgeScrubListRes
 */
export declare class PurgeScrubListRes extends Message<PurgeScrubListRes> {
  /**
   * @generated from field: int64 entries_found = 1;
   */
  entriesFound: bigint;

  constructor(data?: PartialMessage<PurgeScrubListRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.PurgeScrubListRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PurgeScrubListRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PurgeScrubListRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PurgeScrubListRes;

  static equals(a: PurgeScrubListRes | PlainMessage<PurgeScrubListRes> | undefined, b: PurgeScrubListRes | PlainMessage<PurgeScrubListRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.Empty
 */
export declare class Empty extends Message<Empty> {
  constructor(data?: PartialMessage<Empty>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.Empty";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Empty;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Empty;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Empty;

  static equals(a: Empty | PlainMessage<Empty> | undefined, b: Empty | PlainMessage<Empty> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ConsentTopic
 */
export declare class ConsentTopic extends Message<ConsentTopic> {
  /**
   * @generated from field: string topic = 1;
   */
  topic: string;

  /**
   * @generated from field: string org_id = 2;
   */
  orgId: string;

  /**
   * @generated from field: bool deleted = 3;
   */
  deleted: boolean;

  constructor(data?: PartialMessage<ConsentTopic>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ConsentTopic";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConsentTopic;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConsentTopic;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConsentTopic;

  static equals(a: ConsentTopic | PlainMessage<ConsentTopic> | undefined, b: ConsentTopic | PlainMessage<ConsentTopic> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ListConsentTopicsReq
 */
export declare class ListConsentTopicsReq extends Message<ListConsentTopicsReq> {
  constructor(data?: PartialMessage<ListConsentTopicsReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ListConsentTopicsReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListConsentTopicsReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListConsentTopicsReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListConsentTopicsReq;

  static equals(a: ListConsentTopicsReq | PlainMessage<ListConsentTopicsReq> | undefined, b: ListConsentTopicsReq | PlainMessage<ListConsentTopicsReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ListConsentTopicsRes
 */
export declare class ListConsentTopicsRes extends Message<ListConsentTopicsRes> {
  /**
   * @generated from field: repeated api.v0alpha.ConsentTopic topics = 1;
   */
  topics: ConsentTopic[];

  constructor(data?: PartialMessage<ListConsentTopicsRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ListConsentTopicsRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListConsentTopicsRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListConsentTopicsRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListConsentTopicsRes;

  static equals(a: ListConsentTopicsRes | PlainMessage<ListConsentTopicsRes> | undefined, b: ListConsentTopicsRes | PlainMessage<ListConsentTopicsRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.GetConsentTopicReq
 */
export declare class GetConsentTopicReq extends Message<GetConsentTopicReq> {
  /**
   * @generated from field: string topic = 1;
   */
  topic: string;

  constructor(data?: PartialMessage<GetConsentTopicReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.GetConsentTopicReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetConsentTopicReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetConsentTopicReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetConsentTopicReq;

  static equals(a: GetConsentTopicReq | PlainMessage<GetConsentTopicReq> | undefined, b: GetConsentTopicReq | PlainMessage<GetConsentTopicReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.UpdateConsentTopicReq
 */
export declare class UpdateConsentTopicReq extends Message<UpdateConsentTopicReq> {
  /**
   * @generated from field: string original_topic = 1;
   */
  originalTopic: string;

  /**
   * @generated from field: string new_topic = 3;
   */
  newTopic: string;

  constructor(data?: PartialMessage<UpdateConsentTopicReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.UpdateConsentTopicReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateConsentTopicReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateConsentTopicReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateConsentTopicReq;

  static equals(a: UpdateConsentTopicReq | PlainMessage<UpdateConsentTopicReq> | undefined, b: UpdateConsentTopicReq | PlainMessage<UpdateConsentTopicReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.SearchConsentByContentReq
 */
export declare class SearchConsentByContentReq extends Message<SearchConsentByContentReq> {
  /**
   * @generated from field: string content = 2;
   */
  content: string;

  /**
   * optional field to also filter by consent_profile_id
   *
   * @generated from field: string consent_profile_id = 3;
   */
  consentProfileId: string;

  constructor(data?: PartialMessage<SearchConsentByContentReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.SearchConsentByContentReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchConsentByContentReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchConsentByContentReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchConsentByContentReq;

  static equals(a: SearchConsentByContentReq | PlainMessage<SearchConsentByContentReq> | undefined, b: SearchConsentByContentReq | PlainMessage<SearchConsentByContentReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ConsentByContent
 */
export declare class ConsentByContent extends Message<ConsentByContent> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * @generated from field: string profile_id = 2;
   */
  profileId: string;

  /**
   * @generated from field: string profile_name = 3;
   */
  profileName: string;

  /**
   * @generated from field: int64 consent_id = 4;
   */
  consentId: bigint;

  /**
   * consent content (phone number, email address, account number, etc.)
   *
   * @generated from field: string content = 5;
   */
  content: string;

  /**
   * @generated from field: google.protobuf.Timestamp revoked = 10;
   */
  revoked?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp expire = 11;
   */
  expire?: Timestamp;

  /**
   * @generated from field: bool disabled = 12;
   */
  disabled: boolean;

  /**
   * channel (email, sms, phone, etc)
   *
   * @generated from field: api.commons.CommType channel = 13 [deprecated = true];
   * @deprecated
   */
  channel?: CommType;

  /**
   * topic (future payment vs payment reminder vs account reminders vs receipts)
   *
   * @generated from field: string topic = 14;
   */
  topic: string;

  /**
   * consent conditions
   *
   * @generated from field: repeated api.commons.Weekday.Enum condition_days_of_the_week = 15;
   */
  conditionDaysOfTheWeek: Weekday_Enum[];

  /**
   * @generated from field: string condition_time_of_day_from = 16;
   */
  conditionTimeOfDayFrom: string;

  /**
   * @generated from field: string condition_time_of_day_to = 17;
   */
  conditionTimeOfDayTo: string;

  /**
   * @generated from field: google.protobuf.Timestamp condition_from = 18;
   */
  conditionFrom?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp condition_to = 19;
   */
  conditionTo?: Timestamp;

  /**
   * @generated from field: string notes = 20;
   */
  notes: string;

  /**
   * content_type (call, email, sms, account number)
   *
   * @generated from field: api.commons.ContentType content_type = 21;
   */
  contentType: ContentType;

  /**
   * Consent Conditions
   *
   * @generated from field: repeated api.commons.ConsentCondition conditions = 22;
   */
  conditions: ConsentCondition[];

  /**
   * @generated from field: api.commons.Channel channel_type = 23;
   */
  channelType: Channel;

  constructor(data?: PartialMessage<ConsentByContent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ConsentByContent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConsentByContent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConsentByContent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConsentByContent;

  static equals(a: ConsentByContent | PlainMessage<ConsentByContent> | undefined, b: ConsentByContent | PlainMessage<ConsentByContent> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.SearchConsentByContentRes
 */
export declare class SearchConsentByContentRes extends Message<SearchConsentByContentRes> {
  /**
   * @generated from field: repeated api.v0alpha.ConsentByContent consents = 1;
   */
  consents: ConsentByContent[];

  constructor(data?: PartialMessage<SearchConsentByContentRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.SearchConsentByContentRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchConsentByContentRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchConsentByContentRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchConsentByContentRes;

  static equals(a: SearchConsentByContentRes | PlainMessage<SearchConsentByContentRes> | undefined, b: SearchConsentByContentRes | PlainMessage<SearchConsentByContentRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.GetConsentByProfileAndContentReq
 */
export declare class GetConsentByProfileAndContentReq extends Message<GetConsentByProfileAndContentReq> {
  /**
   * @generated from field: string profile_name = 2;
   */
  profileName: string;

  /**
   * @generated from field: string content = 3;
   */
  content: string;

  /**
   * @generated from field: string profile_id = 4;
   */
  profileId: string;

  /**
   * @generated from field: api.commons.ContentType content_type = 5;
   */
  contentType: ContentType;

  /**
   * @generated from field: api.commons.Channel channel_type = 6;
   */
  channelType: Channel;

  constructor(data?: PartialMessage<GetConsentByProfileAndContentReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.GetConsentByProfileAndContentReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetConsentByProfileAndContentReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetConsentByProfileAndContentReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetConsentByProfileAndContentReq;

  static equals(a: GetConsentByProfileAndContentReq | PlainMessage<GetConsentByProfileAndContentReq> | undefined, b: GetConsentByProfileAndContentReq | PlainMessage<GetConsentByProfileAndContentReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.GetConsentByProfileAndContentRes
 */
export declare class GetConsentByProfileAndContentRes extends Message<GetConsentByProfileAndContentRes> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * @generated from field: string profile_id = 2;
   */
  profileId: string;

  /**
   * @generated from field: string profile_name = 3;
   */
  profileName: string;

  /**
   * id of consent
   *
   * @generated from field: int64 consent_id = 4;
   */
  consentId: bigint;

  /**
   * @generated from field: google.protobuf.Timestamp revoked = 10;
   */
  revoked?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp expire = 11;
   */
  expire?: Timestamp;

  /**
   * @generated from field: bool disabled = 12;
   */
  disabled: boolean;

  /**
   * channel (email, sms, phone, etc)
   *
   * @generated from field: api.commons.CommType channel = 13 [deprecated = true];
   * @deprecated
   */
  channel?: CommType;

  /**
   * topic (future payment vs payment reminder vs account reminders vs receipts)
   *
   * @generated from field: string topic = 14;
   */
  topic: string;

  /**
   * consent conditions
   *
   * @generated from field: repeated api.commons.Weekday.Enum condition_days_of_the_week = 15;
   */
  conditionDaysOfTheWeek: Weekday_Enum[];

  /**
   * @generated from field: string condition_time_of_day_from = 16;
   */
  conditionTimeOfDayFrom: string;

  /**
   * @generated from field: string condition_time_of_day_to = 17;
   */
  conditionTimeOfDayTo: string;

  /**
   * @generated from field: google.protobuf.Timestamp condition_from = 18;
   */
  conditionFrom?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp condition_to = 19;
   */
  conditionTo?: Timestamp;

  /**
   * @generated from field: string notes = 20;
   */
  notes: string;

  /**
   * content_type (call, email, sms, account number)
   *
   * @generated from field: api.commons.ContentType content_type = 21;
   */
  contentType: ContentType;

  /**
   * Consent Conditions
   *
   * @generated from field: repeated api.commons.ConsentCondition conditions = 22;
   */
  conditions: ConsentCondition[];

  /**
   * @generated from field: api.commons.Channel channel_type = 23;
   */
  channelType: Channel;

  /**
   * notate revocation (reason)
   *
   * @generated from field: string revoked_reason = 24;
   */
  revokedReason: string;

  /**
   * notate grant reason
   *
   * @generated from field: string granted_reason = 25;
   */
  grantedReason: string;

  /**
   * proof of consent (pdf, voice recording etc) this will be filename which can be retrieved via matrix-fts
   *
   * @generated from field: string proof = 26;
   */
  proof: string;

  constructor(data?: PartialMessage<GetConsentByProfileAndContentRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.GetConsentByProfileAndContentRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetConsentByProfileAndContentRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetConsentByProfileAndContentRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetConsentByProfileAndContentRes;

  static equals(a: GetConsentByProfileAndContentRes | PlainMessage<GetConsentByProfileAndContentRes> | undefined, b: GetConsentByProfileAndContentRes | PlainMessage<GetConsentByProfileAndContentRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.GetConsentByContentReq
 */
export declare class GetConsentByContentReq extends Message<GetConsentByContentReq> {
  /**
   * name of consent profile
   *
   * @generated from field: string profile_name = 2;
   */
  profileName: string;

  /**
   * consent content (phone_number, email, account number, etc.)
   *
   * @generated from field: string content = 3;
   */
  content: string;

  /**
   * id of consent profile
   *
   * @generated from field: string profile_id = 4;
   */
  profileId: string;

  /**
   * consent channel
   *
   * @generated from field: api.commons.Channel channel_type = 5;
   */
  channelType: Channel;

  constructor(data?: PartialMessage<GetConsentByContentReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.GetConsentByContentReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetConsentByContentReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetConsentByContentReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetConsentByContentReq;

  static equals(a: GetConsentByContentReq | PlainMessage<GetConsentByContentReq> | undefined, b: GetConsentByContentReq | PlainMessage<GetConsentByContentReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.GetConsentByContentRes
 */
export declare class GetConsentByContentRes extends Message<GetConsentByContentRes> {
  /**
   * id of assigned org
   *
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * name of consent profile
   *
   * @generated from field: string profile_name = 2;
   */
  profileName: string;

  /**
   * consent entity
   *
   * @generated from field: api.v0alpha.Consent consent = 3;
   */
  consent?: Consent;

  /**
   * consent profile disabled
   *
   * @generated from field: bool disabled = 4;
   */
  disabled: boolean;

  constructor(data?: PartialMessage<GetConsentByContentRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.GetConsentByContentRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetConsentByContentRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetConsentByContentRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetConsentByContentRes;

  static equals(a: GetConsentByContentRes | PlainMessage<GetConsentByContentRes> | undefined, b: GetConsentByContentRes | PlainMessage<GetConsentByContentRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ProcessConsentListDeleteUploadReq
 */
export declare class ProcessConsentListDeleteUploadReq extends Message<ProcessConsentListDeleteUploadReq> {
  /**
   * payload
   *
   * @generated from field: string consent_profile_id = 10;
   */
  consentProfileId: string;

  /**
   * @generated from field: string filename = 11;
   */
  filename: string;

  /**
   * @generated from field: string notification_message = 12;
   */
  notificationMessage: string;

  constructor(data?: PartialMessage<ProcessConsentListDeleteUploadReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ProcessConsentListDeleteUploadReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcessConsentListDeleteUploadReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcessConsentListDeleteUploadReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcessConsentListDeleteUploadReq;

  static equals(a: ProcessConsentListDeleteUploadReq | PlainMessage<ProcessConsentListDeleteUploadReq> | undefined, b: ProcessConsentListDeleteUploadReq | PlainMessage<ProcessConsentListDeleteUploadReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ProcessConsentListDeleteUploadRes
 */
export declare class ProcessConsentListDeleteUploadRes extends Message<ProcessConsentListDeleteUploadRes> {
  constructor(data?: PartialMessage<ProcessConsentListDeleteUploadRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ProcessConsentListDeleteUploadRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcessConsentListDeleteUploadRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcessConsentListDeleteUploadRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcessConsentListDeleteUploadRes;

  static equals(a: ProcessConsentListDeleteUploadRes | PlainMessage<ProcessConsentListDeleteUploadRes> | undefined, b: ProcessConsentListDeleteUploadRes | PlainMessage<ProcessConsentListDeleteUploadRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ProcessConsentListDeleteUploadMeta
 */
export declare class ProcessConsentListDeleteUploadMeta extends Message<ProcessConsentListDeleteUploadMeta> {
  /**
   * @generated from field: google.protobuf.Timestamp time_started = 1;
   */
  timeStarted?: Timestamp;

  constructor(data?: PartialMessage<ProcessConsentListDeleteUploadMeta>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ProcessConsentListDeleteUploadMeta";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProcessConsentListDeleteUploadMeta;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProcessConsentListDeleteUploadMeta;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProcessConsentListDeleteUploadMeta;

  static equals(a: ProcessConsentListDeleteUploadMeta | PlainMessage<ProcessConsentListDeleteUploadMeta> | undefined, b: ProcessConsentListDeleteUploadMeta | PlainMessage<ProcessConsentListDeleteUploadMeta> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.QueryHolidaysResponse
 */
export declare class QueryHolidaysResponse extends Message<QueryHolidaysResponse> {
  /**
   * @generated from field: repeated api.v0alpha.HolidayData rows = 1;
   */
  rows: HolidayData[];

  constructor(data?: PartialMessage<QueryHolidaysResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.QueryHolidaysResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryHolidaysResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryHolidaysResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryHolidaysResponse;

  static equals(a: QueryHolidaysResponse | PlainMessage<QueryHolidaysResponse> | undefined, b: QueryHolidaysResponse | PlainMessage<QueryHolidaysResponse> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.HolidayData
 */
export declare class HolidayData extends Message<HolidayData> {
  /**
   * @generated from field: string date = 1;
   */
  date: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string year = 3;
   */
  year: string;

  /**
   * @generated from field: string month = 4;
   */
  month: string;

  /**
   * @generated from field: string day = 5;
   */
  day: string;

  /**
   * @generated from field: string weekday = 6;
   */
  weekday: string;

  /**
   * @generated from field: repeated string types = 7;
   */
  types: string[];

  /**
   * @generated from field: string is_observed = 8;
   */
  isObserved: string;

  /**
   * @generated from field: string country = 9;
   */
  country: string;

  /**
   * @generated from field: repeated string states = 11;
   */
  states: string[];

  constructor(data?: PartialMessage<HolidayData>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.HolidayData";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HolidayData;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HolidayData;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HolidayData;

  static equals(a: HolidayData | PlainMessage<HolidayData> | undefined, b: HolidayData | PlainMessage<HolidayData> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.QueryHolidaysRequest
 */
export declare class QueryHolidaysRequest extends Message<QueryHolidaysRequest> {
  /**
   * @generated from field: string date = 1;
   */
  date: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string year = 3;
   */
  year: string;

  /**
   * @generated from field: string month = 4;
   */
  month: string;

  /**
   * @generated from field: string day = 5;
   */
  day: string;

  /**
   * @generated from field: string weekday = 6;
   */
  weekday: string;

  /**
   * @generated from field: string type = 7;
   */
  type: string;

  /**
   * @generated from field: string is_observed = 8;
   */
  isObserved: string;

  /**
   * @generated from field: string country = 9;
   */
  country: string;

  /**
   * @generated from field: string state = 11;
   */
  state: string;

  constructor(data?: PartialMessage<QueryHolidaysRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.QueryHolidaysRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryHolidaysRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryHolidaysRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryHolidaysRequest;

  static equals(a: QueryHolidaysRequest | PlainMessage<QueryHolidaysRequest> | undefined, b: QueryHolidaysRequest | PlainMessage<QueryHolidaysRequest> | undefined): boolean;
}


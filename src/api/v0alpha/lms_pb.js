// @generated by protoc-gen-es v1.4.1 with parameter "target=js+dts"
// @generated from file api/v0alpha/lms.proto (package api.v0alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Duration, Int64Value, proto3, StringValue, Timestamp as Timestamp$1 } from "@bufbuild/protobuf";
import { AbsentPolicyType, ChainOperator, CompareOperator, ComplianceListType, ConsentActionType, ConstructedFilename, DateTimePrecision, DeDupActions, DedupKeyPolicy, DialOrderType, DuplicatePolicyType, EnrichmentType, EventState, ExportType, FieldType, FileFormat, FilePattern, HttpVerb, PaginationTerminator, PipelineElementStatusType, PrimarySource, RecordType, RunType, SortOrder } from "../commons/lms_pb.js";
import { CommType } from "../commons/communication_pb.js";
import { Channel, ContentType } from "../commons/compliance_pb.js";
import { StringArraySql } from "../commons/types_pb.js";
import { HttpBody } from "../../google/api/httpbody_pb.js";

/**
 * @generated from enum api.v0alpha.TimeUnit
 */
export const TimeUnit = proto3.makeEnum(
  "api.v0alpha.TimeUnit",
  [
    {no: 0, name: "DEFAULT"},
    {no: 1, name: "TIME_WEEKS"},
    {no: 2, name: "TIME_DAYS"},
    {no: 3, name: "TIME_HOURS"},
  ],
);

/**
 * The types of entities that can be returned from Epic's bulk data api.
 *
 * @generated from enum api.v0alpha.EpicEntityType
 */
export const EpicEntityType = proto3.makeEnum(
  "api.v0alpha.EpicEntityType",
  [
    {no: 0, name: "EPIC_UNKNOWN_TYPE"},
    {no: 1, name: "EPIC_ENTITY_TYPE_PATIENT"},
    {no: 2, name: "EPIC_ENTITY_TYPE_APPOINTMENT"},
    {no: 3, name: "EPIC_ENTITY_TYPE_MEDICATION"},
    {no: 4, name: "EPIC_ENTITY_TYPE_MEDICATION_REQUEST"},
    {no: 5, name: "EPIC_ENTITY_TYPE_ACCOUNT"},
  ],
);

/**
 * @generated from message api.v0alpha.GetPublicKeyReq
 */
export const GetPublicKeyReq = proto3.makeMessageType(
  "api.v0alpha.GetPublicKeyReq",
  [],
);

/**
 * @generated from message api.v0alpha.PublicKey
 */
export const PublicKey = proto3.makeMessageType(
  "api.v0alpha.PublicKey",
  () => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.FindFieldUsagesReq
 */
export const FindFieldUsagesReq = proto3.makeMessageType(
  "api.v0alpha.FindFieldUsagesReq",
  () => [
    { no: 3, name: "field_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.NameAndId
 */
export const NameAndId = proto3.makeMessageType(
  "api.v0alpha.NameAndId",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.FindFieldUsagesRes
 */
export const FindFieldUsagesRes = proto3.makeMessageType(
  "api.v0alpha.FindFieldUsagesRes",
  () => [
    { no: 1, name: "field_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "file_templates", kind: "message", T: NameAndId, repeated: true },
    { no: 3, name: "elements", kind: "message", T: NameAndId, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.ElementError
 */
export const ElementError = proto3.makeMessageType(
  "api.v0alpha.ElementError",
  () => [
    { no: 4, name: "invalid_expression", kind: "message", T: ElementError_InvalidExpression, oneof: "reason" },
    { no: 5, name: "missing_field", kind: "message", T: ElementError_MissingField, oneof: "reason" },
    { no: 6, name: "bad_field_type", kind: "message", T: ElementError_BadFieldType, oneof: "reason" },
  ],
);

/**
 * @generated from message api.v0alpha.ElementError.InvalidExpression
 */
export const ElementError_InvalidExpression = proto3.makeMessageType(
  "api.v0alpha.ElementError.InvalidExpression",
  () => [
    { no: 1, name: "expression", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
  {localName: "ElementError_InvalidExpression"},
);

/**
 * @generated from message api.v0alpha.ElementError.MissingField
 */
export const ElementError_MissingField = proto3.makeMessageType(
  "api.v0alpha.ElementError.MissingField",
  () => [
    { no: 2, name: "field_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
  {localName: "ElementError_MissingField"},
);

/**
 * this element is doing an operation that will always fail.
 * Examples:
 *   - Enrichment with fields that are not phone or zip type
 *   - reshape Add/Subtract functions on non number types
 *   - Filter using datetime math with non datetime fields
 * this will be possible to determine all cases after https://git.tcncloud.net/m/neo/-/issues/6924
 *
 * @generated from message api.v0alpha.ElementError.BadFieldType
 */
export const ElementError_BadFieldType = proto3.makeMessageType(
  "api.v0alpha.ElementError.BadFieldType",
  () => [
    { no: 3, name: "field_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
  {localName: "ElementError_BadFieldType"},
);

/**
 * @generated from message api.v0alpha.ElementSummary
 */
export const ElementSummary = proto3.makeMessageType(
  "api.v0alpha.ElementSummary",
  () => [
    { no: 1, name: "element_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "element_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "error", kind: "message", T: ElementError },
  ],
);

/**
 * @generated from message api.v0alpha.FindInvalidElementsReq
 */
export const FindInvalidElementsReq = proto3.makeMessageType(
  "api.v0alpha.FindInvalidElementsReq",
  () => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "region_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.FindInvalidElementsRes
 */
export const FindInvalidElementsRes = proto3.makeMessageType(
  "api.v0alpha.FindInvalidElementsRes",
  () => [
    { no: 1, name: "invalid_elements", kind: "message", T: ElementSummary, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.GetComplianceScrubListsReq
 */
export const GetComplianceScrubListsReq = proto3.makeMessageType(
  "api.v0alpha.GetComplianceScrubListsReq",
  [],
);

/**
 * @generated from message api.v0alpha.GetComplianceScrubListsRes
 */
export const GetComplianceScrubListsRes = proto3.makeMessageType(
  "api.v0alpha.GetComplianceScrubListsRes",
  () => [
    { no: 1, name: "scrub_lists", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.ProcessElementReq
 */
export const ProcessElementReq = proto3.makeMessageType(
  "api.v0alpha.ProcessElementReq",
  () => [
    { no: 1, name: "element_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "process_message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.ProcessListRequest
 */
export const ProcessListRequest = proto3.makeMessageType(
  "api.v0alpha.ProcessListRequest",
  () => [
    { no: 3, name: "element_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "list", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
);

/**
 * empty for now
 *
 * @generated from message api.v0alpha.ProcessListResponse
 */
export const ProcessListResponse = proto3.makeMessageType(
  "api.v0alpha.ProcessListResponse",
  [],
);

/**
 * @generated from message api.v0alpha.StreamListRequest
 */
export const StreamListRequest = proto3.makeMessageType(
  "api.v0alpha.StreamListRequest",
  () => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "region_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "element_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "chunk", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
);

/**
 * empty for now
 *
 * @generated from message api.v0alpha.StreamListResponse
 */
export const StreamListResponse = proto3.makeMessageType(
  "api.v0alpha.StreamListResponse",
  [],
);

/**
 * @generated from message api.v0alpha.ListAvailableFieldsByElementIdReq
 */
export const ListAvailableFieldsByElementIdReq = proto3.makeMessageType(
  "api.v0alpha.ListAvailableFieldsByElementIdReq",
  () => [
    { no: 1, name: "element_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.ListFieldsForElementReq
 */
export const ListFieldsForElementReq = proto3.makeMessageType(
  "api.v0alpha.ListFieldsForElementReq",
  () => [
    { no: 1, name: "element_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.ListFieldsForElementRes
 */
export const ListFieldsForElementRes = proto3.makeMessageType(
  "api.v0alpha.ListFieldsForElementRes",
  () => [
    { no: 1, name: "fields", kind: "message", T: Field, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.ListAutocompleteFieldsReq
 */
export const ListAutocompleteFieldsReq = proto3.makeMessageType(
  "api.v0alpha.ListAutocompleteFieldsReq",
  [],
);

/**
 * @generated from message api.v0alpha.ListAutocompleteFieldsRes
 */
export const ListAutocompleteFieldsRes = proto3.makeMessageType(
  "api.v0alpha.ListAutocompleteFieldsRes",
  () => [
    { no: 1, name: "fields", kind: "message", T: Field, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.ElementPK
 */
export const ElementPK = proto3.makeMessageType(
  "api.v0alpha.ElementPK",
  () => [
    { no: 1, name: "element_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * REPLACES PipelineElement and List
 *
 * @generated from message api.v0alpha.Element
 */
export const Element = proto3.makeMessageType(
  "api.v0alpha.Element",
  () => [
    { no: 3, name: "element_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "inputs", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 20, name: "input_is_discard", kind: "scalar", T: 8 /* ScalarType.BOOL */, repeated: true },
    { no: 13, name: "transform", kind: "message", T: Process },
    { no: 14, name: "last_status", kind: "enum", T: proto3.getEnumType(PipelineElementStatusType) },
    { no: 16, name: "labels", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 17, name: "created_date", kind: "message", T: Timestamp$1 },
    { no: 18, name: "last_edited", kind: "message", T: Timestamp$1 },
    { no: 19, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.PeekListReq
 */
export const PeekListReq = proto3.makeMessageType(
  "api.v0alpha.PeekListReq",
  () => [
    { no: 3, name: "element_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "version", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 10, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 12, name: "page", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 13, name: "process", kind: "message", T: Process },
    { no: 14, name: "peek_at_discards", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message api.v0alpha.PeekListRes
 */
export const PeekListRes = proto3.makeMessageType(
  "api.v0alpha.PeekListRes",
  () => [
    { no: 1, name: "records", kind: "message", T: RecordProto, repeated: true },
    { no: 2, name: "metrics", kind: "message", T: ListMetrics },
  ],
);

/**
 * @generated from message api.v0alpha.GetHistoryReq
 */
export const GetHistoryReq = proto3.makeMessageType(
  "api.v0alpha.GetHistoryReq",
  () => [
    { no: 3, name: "element_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 11, name: "starting_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message api.v0alpha.GetHistoryRes
 */
export const GetHistoryRes = proto3.makeMessageType(
  "api.v0alpha.GetHistoryRes",
  () => [
    { no: 3, name: "element_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "commits", kind: "message", T: HistoryAndCount, repeated: true },
  ],
);

/**
 * the history table stores history for pipeline_elements
 *
 * @generated from message api.v0alpha.History
 */
export const History = proto3.makeMessageType(
  "api.v0alpha.History",
  () => [
    { no: 3, name: "element_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "history_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 7, name: "process", kind: "message", T: Process },
    { no: 10, name: "failed", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 12, name: "attempt_number", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 13, name: "reason", kind: "message", T: StringValue },
    { no: 14, name: "upload_ts", kind: "message", T: Timestamp$1 },
    { no: 15, name: "started_ts", kind: "message", T: Timestamp$1 },
    { no: 16, name: "finished_ts", kind: "message", T: Timestamp$1 },
    { no: 18, name: "event_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 22, name: "parent_element_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "metrics", kind: "message", T: ListMetrics },
    { no: 24, name: "discard_metrics", kind: "message", T: ListMetrics },
  ],
);

/**
 * since its possible to get a load of history events that all look the same
 * this keeps track of the range. history_id and ending_history_id
 * are the range of data where 'failed', and 'reason' were the same.
 * The rest of the fields point to the history_id's record
 * 'count' is the field that keeps track of how many messages in a row were
 * similar
 *
 * @generated from message api.v0alpha.HistoryAndCount
 */
export const HistoryAndCount = proto3.makeMessageType(
  "api.v0alpha.HistoryAndCount",
  () => [
    { no: 3, name: "element_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "history_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "ending_history_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 7, name: "process", kind: "message", T: Process },
    { no: 10, name: "failed", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 12, name: "attempt_number", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 13, name: "reason", kind: "message", T: StringValue },
    { no: 14, name: "upload_ts", kind: "message", T: Timestamp$1 },
    { no: 15, name: "started_ts", kind: "message", T: Timestamp$1 },
    { no: 16, name: "finished_ts", kind: "message", T: Timestamp$1 },
    { no: 18, name: "event_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 22, name: "parent_element_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "metrics", kind: "message", T: ListMetrics },
    { no: 25, name: "discard_metrics", kind: "message", T: ListMetrics },
    { no: 24, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message api.v0alpha.RecordProto
 */
export const RecordProto = proto3.makeMessageType(
  "api.v0alpha.RecordProto",
  () => [
    { no: 1, name: "fields", kind: "message", T: RecordFieldProto, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.RecordProtoPair
 */
export const RecordProtoPair = proto3.makeMessageType(
  "api.v0alpha.RecordProtoPair",
  () => [
    { no: 1, name: "old", kind: "message", T: RecordProto },
    { no: 2, name: "new", kind: "message", T: RecordProto },
  ],
);

/**
 * @generated from message api.v0alpha.ProcessFields
 */
export const ProcessFields = proto3.makeMessageType(
  "api.v0alpha.ProcessFields",
  () => [
    { no: 8, name: "fields", kind: "message", T: ProcessFields_Field, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.ProcessFields.NestedField
 */
export const ProcessFields_NestedField = proto3.makeMessageType(
  "api.v0alpha.ProcessFields.NestedField",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "field_type", kind: "enum", T: proto3.getEnumType(RecordType) },
  ],
  {localName: "ProcessFields_NestedField"},
);

/**
 * @generated from message api.v0alpha.ProcessFields.Field
 */
export const ProcessFields_Field = proto3.makeMessageType(
  "api.v0alpha.ProcessFields.Field",
  () => [
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "field_type", kind: "enum", T: proto3.getEnumType(RecordType) },
    { no: 5, name: "nested", kind: "message", T: ProcessFields_NestedField, repeated: true },
    { no: 9, name: "format", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
  {localName: "ProcessFields_Field"},
);

/**
 * @generated from message api.v0alpha.FieldPK
 */
export const FieldPK = proto3.makeMessageType(
  "api.v0alpha.FieldPK",
  () => [
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.Field
 */
export const Field = proto3.makeMessageType(
  "api.v0alpha.Field",
  () => [
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "type", kind: "enum", T: proto3.getEnumType(FieldType) },
    { no: 5, name: "date_modified", kind: "message", T: Timestamp$1 },
    { no: 10, name: "metadata", kind: "message", T: FieldMetadata },
    { no: 11, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.UpdateFieldReq
 */
export const UpdateFieldReq = proto3.makeMessageType(
  "api.v0alpha.UpdateFieldReq",
  () => [
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "type", kind: "enum", T: proto3.getEnumType(FieldType) },
    { no: 5, name: "date_modified", kind: "message", T: Timestamp$1 },
    { no: 6, name: "new_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "metadata", kind: "message", T: FieldMetadata },
    { no: 11, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.FieldMetadata
 */
export const FieldMetadata = proto3.makeMessageType(
  "api.v0alpha.FieldMetadata",
  () => [
    { no: 1, name: "time_format", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "precision", kind: "enum", T: proto3.getEnumType(DateTimePrecision) },
    { no: 3, name: "remove_characters", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "replace_empty", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "replace_error", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "remove_letters", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "remove_numbers", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "remove_symbols", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "leave_characters", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "remove_string", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "json_dot_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "json_force_type_match", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 13, name: "starting_position", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 14, name: "field_length", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * @generated from message api.v0alpha.Fields
 */
export const Fields = proto3.makeMessageType(
  "api.v0alpha.Fields",
  () => [
    { no: 1, name: "fields", kind: "message", T: Field, repeated: true },
  ],
);

/**
 * first value is the field_name in the record.
 * additional values are nested fields on record field looked up from index[0]
 *
 * @generated from message api.v0alpha.FieldIndex
 */
export const FieldIndex = proto3.makeMessageType(
  "api.v0alpha.FieldIndex",
  () => [
    { no: 1, name: "index", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "datetime", kind: "message", T: DateTimeModifier, oneof: "modifier" },
  ],
);

/**
 * @generated from message api.v0alpha.ListFieldsReq
 */
export const ListFieldsReq = proto3.makeMessageType(
  "api.v0alpha.ListFieldsReq",
  [],
);

/**
 * @generated from message api.v0alpha.RecordFieldProto
 */
export const RecordFieldProto = proto3.makeMessageType(
  "api.v0alpha.RecordFieldProto",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "string_value", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "payload" },
    { no: 3, name: "number_value", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, oneof: "payload" },
    { no: 4, name: "bool_value", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "payload" },
    { no: 5, name: "phone", kind: "message", T: Phone, oneof: "payload" },
    { no: 6, name: "currency", kind: "message", T: Currency, oneof: "payload" },
    { no: 8, name: "postal_code", kind: "message", T: PostalCode, oneof: "payload" },
    { no: 9, name: "email", kind: "message", T: Email, oneof: "payload" },
    { no: 10, name: "date_time", kind: "message", T: DateTime, oneof: "payload" },
    { no: 13, name: "repeated_records", kind: "message", T: RepeatedRecords, oneof: "payload" },
    { no: 14, name: "record_field_map", kind: "message", T: RecordFieldMap, oneof: "payload" },
    { no: 15, name: "err", kind: "message", T: Error, oneof: "payload" },
    { no: 16, name: "enriched_phone", kind: "message", T: EnrichedPhone, oneof: "payload" },
    { no: 17, name: "enriched_zip", kind: "message", T: EnrichedZip, oneof: "payload" },
  ],
);

/**
 * @generated from message api.v0alpha.RepeatedRecords
 */
export const RepeatedRecords = proto3.makeMessageType(
  "api.v0alpha.RepeatedRecords",
  () => [
    { no: 1, name: "records", kind: "message", T: RecordProto, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.ListElementsReq
 */
export const ListElementsReq = proto3.makeMessageType(
  "api.v0alpha.ListElementsReq",
  () => [
    { no: 1, name: "labels", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.GetFileTemplatesReq
 */
export const GetFileTemplatesReq = proto3.makeMessageType(
  "api.v0alpha.GetFileTemplatesReq",
  [],
);

/**
 * @generated from message api.v0alpha.FileTemplateField
 */
export const FileTemplateField = proto3.makeMessageType(
  "api.v0alpha.FileTemplateField",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "type", kind: "enum", T: proto3.getEnumType(FieldType) },
  ],
);

/**
 * @generated from message api.v0alpha.FileTemplateFields
 */
export const FileTemplateFields = proto3.makeMessageType(
  "api.v0alpha.FileTemplateFields",
  () => [
    { no: 1, name: "fields", kind: "message", T: FileTemplateField, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.FieldTypes
 */
export const FieldTypes = proto3.makeMessageType(
  "api.v0alpha.FieldTypes",
  () => [
    { no: 1, name: "values", kind: "enum", T: proto3.getEnumType(FieldType), repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.FileTemplate
 */
export const FileTemplate = proto3.makeMessageType(
  "api.v0alpha.FileTemplate",
  () => [
    { no: 3, name: "file_template_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "field_names", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 14, name: "file_format_params", kind: "message", T: FileFormatParams },
    { no: 15, name: "file_format", kind: "enum", T: proto3.getEnumType(FileFormat) },
    { no: 16, name: "fields", kind: "message", T: Field, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.LMSUploadReq
 */
export const LMSUploadReq = proto3.makeMessageType(
  "api.v0alpha.LMSUploadReq",
  () => [
    { no: 3, name: "element_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "file_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.LMSUploadRes
 */
export const LMSUploadRes = proto3.makeMessageType(
  "api.v0alpha.LMSUploadRes",
  [],
);

/**
 * @generated from message api.v0alpha.ReRunReq
 */
export const ReRunReq = proto3.makeMessageType(
  "api.v0alpha.ReRunReq",
  () => [
    { no: 3, name: "list_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "rerun_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.ReRunRes
 */
export const ReRunRes = proto3.makeMessageType(
  "api.v0alpha.ReRunRes",
  [],
);

/**
 * @generated from message api.v0alpha.Process
 */
export const Process = proto3.makeMessageType(
  "api.v0alpha.Process",
  () => [
    { no: 55, name: "expression", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "append", kind: "message", T: AppendProcess, oneof: "proc" },
    { no: 31, name: "sort", kind: "message", T: SortCriteria, oneof: "proc" },
    { no: 32, name: "filter", kind: "message", T: FilterProcess, oneof: "proc" },
    { no: 42, name: "gs_export", kind: "message", T: GSExportProcess, oneof: "proc" },
    { no: 44, name: "p3_export", kind: "message", T: P3ExportProcess, oneof: "proc" },
    { no: 45, name: "compl", kind: "message", T: ComplProcess, oneof: "proc" },
    { no: 46, name: "dedup", kind: "message", T: DeDupCriteria, oneof: "proc" },
    { no: 47, name: "cfs_export", kind: "message", T: CFSExportProcess, oneof: "proc" },
    { no: 48, name: "sftp_export", kind: "message", T: SftpExportProcess, oneof: "proc" },
    { no: 49, name: "reshape", kind: "message", T: ReshapeProcess, oneof: "proc" },
    { no: 50, name: "lookup", kind: "message", T: LookupProcess, oneof: "proc" },
    { no: 51, name: "entrypoint", kind: "message", T: EntrypointProcess, oneof: "proc" },
    { no: 52, name: "compliance_export", kind: "message", T: ComplianceExportProcess, oneof: "proc" },
    { no: 53, name: "api_entrypoint", kind: "message", T: ApiEntrypoint, oneof: "proc" },
    { no: 54, name: "sftp_import", kind: "message", T: SftpImport, oneof: "proc" },
    { no: 56, name: "scrub", kind: "message", T: ScrubProcess, oneof: "proc" },
    { no: 57, name: "frequency", kind: "message", T: FrequencyProcess, oneof: "proc" },
    { no: 58, name: "cjs_import", kind: "message", T: CjsImportProcess, oneof: "proc" },
    { no: 59, name: "cjs_export", kind: "message", T: CjsExportProcess, oneof: "proc" },
    { no: 60, name: "cjs_enrich", kind: "message", T: CjsEnrichmentProcess, oneof: "proc" },
    { no: 61, name: "web_entrypoint", kind: "message", T: WebEntrypointProcess, oneof: "proc" },
    { no: 62, name: "delete_scrub_entries", kind: "message", T: DeleteScrubEntriesProcess, oneof: "proc" },
    { no: 63, name: "wfm_export", kind: "message", T: WfmExportProcess, oneof: "proc" },
    { no: 64, name: "link_enrich", kind: "message", T: PaymentLinkEnrichment, oneof: "proc" },
    { no: 65, name: "rnd", kind: "message", T: RndEnrichmentProcess, oneof: "proc" },
    { no: 66, name: "consent_enrich", kind: "message", T: ConsentEnrichmentProcess, oneof: "proc" },
    { no: 67, name: "consent_export", kind: "message", T: ConsentExportProcess, oneof: "proc" },
    { no: 69, name: "compliance_processor", kind: "message", T: ComplianceProcessor, oneof: "proc" },
    { no: 70, name: "consent_entrypoint", kind: "message", T: ConsentEntrypointProcess, oneof: "proc" },
    { no: 71, name: "portal_link_enrich", kind: "message", T: PortalLinkEnrichment, oneof: "proc" },
    { no: 72, name: "bulk_web_entrypoint", kind: "message", T: BulkWebEntrypointProcess, oneof: "proc" },
    { no: 73, name: "omni_exchange_process", kind: "message", T: OmniExchangeProcess, oneof: "proc" },
    { no: 74, name: "web_exchange_process", kind: "message", T: WebExchangeProcess, oneof: "proc" },
    { no: 75, name: "split", kind: "message", T: SplitCriteria, oneof: "proc" },
    { no: 76, name: "epic_entry_point", kind: "message", T: EpicEntrypoint, oneof: "proc" },
  ],
);

/**
 * @generated from message api.v0alpha.ComplianceProcessor
 */
export const ComplianceProcessor = proto3.makeMessageType(
  "api.v0alpha.ComplianceProcessor",
  () => [
    { no: 1, name: "rule_set_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "comm_type", kind: "message", T: CommType },
    { no: 6, name: "call_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "phone_number_field", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "email_field", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "zip_code_field", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "call_metadata", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 11, name: "country_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * sources the LMS list with consent records
 *
 * @generated from message api.v0alpha.ConsentEntrypointProcess
 */
export const ConsentEntrypointProcess = proto3.makeMessageType(
  "api.v0alpha.ConsentEntrypointProcess",
  () => [
    { no: 1, name: "consent_profile_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.ConsentEnrichmentProcess
 */
export const ConsentEnrichmentProcess = proto3.makeMessageType(
  "api.v0alpha.ConsentEnrichmentProcess",
  () => [
    { no: 3, name: "content_field", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "consent_profile", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "consent_profile_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.ConsentExportProcess
 */
export const ConsentExportProcess = proto3.makeMessageType(
  "api.v0alpha.ConsentExportProcess",
  () => [
    { no: 3, name: "content_field", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "consent_profile", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "consent_profile_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "run_type", kind: "enum", T: proto3.getEnumType(RunType) },
    { no: 7, name: "action", kind: "enum", T: proto3.getEnumType(ConsentActionType) },
    { no: 8, name: "referring_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "topic", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "revoked_reason", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "granted_reason", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "proof", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "condition_time_of_day_from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "condition_time_of_day_to", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "notes", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "expire", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "condition_from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 18, name: "condition_to", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 27, name: "content_type_val", kind: "enum", T: proto3.getEnumType(ContentType), oneof: "content_type" },
    { no: 28, name: "content_type_field_name", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "content_type" },
    { no: 29, name: "channel_type_val", kind: "enum", T: proto3.getEnumType(Channel), oneof: "channel_type" },
    { no: 30, name: "channel_type_field_name", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "channel_type" },
    { no: 31, name: "expiration_date", kind: "message", T: Timestamp$1, oneof: "expiration" },
    { no: 32, name: "expiration_field_name", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "expiration" },
    { no: 33, name: "expiration_after_duration", kind: "message", T: Duration, oneof: "expiration" },
  ],
);

/**
 * @generated from message api.v0alpha.PaymentLinkEnrichment
 */
export const PaymentLinkEnrichment = proto3.makeMessageType(
  "api.v0alpha.PaymentLinkEnrichment",
  () => [
    { no: 1, name: "fields", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "payment_link_config_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "discard_on_missing_fields", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "key_map", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 5, name: "portal_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.PortalLinkEnrichment
 */
export const PortalLinkEnrichment = proto3.makeMessageType(
  "api.v0alpha.PortalLinkEnrichment",
  () => [
    { no: 1, name: "key_map", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 2, name: "portal_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "expiration", kind: "message", T: Expiration },
    { no: 7, name: "demo", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message api.v0alpha.Expiration
 */
export const Expiration = proto3.makeMessageType(
  "api.v0alpha.Expiration",
  () => [
    { no: 1, name: "units", kind: "enum", T: proto3.getEnumType(TimeUnit) },
    { no: 2, name: "quantity", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * split into ApiEntrypoint and SftpImport
 *
 * @generated from message api.v0alpha.EntrypointProcess
 */
export const EntrypointProcess = proto3.makeMessageType(
  "api.v0alpha.EntrypointProcess",
  [],
);

/**
 * @generated from message api.v0alpha.ApiEntrypoint
 */
export const ApiEntrypoint = proto3.makeMessageType(
  "api.v0alpha.ApiEntrypoint",
  () => [
    { no: 100, name: "fts_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "file_template_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "incremental", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 18, name: "encrypted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * HttpReq is what we will use to construct a GET or POST request to the server.
 *
 * @generated from message api.v0alpha.HttpReq
 */
export const HttpReq = proto3.makeMessageType(
  "api.v0alpha.HttpReq",
  () => [
    { no: 1, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "headers", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 3, name: "body", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "method", kind: "enum", T: proto3.getEnumType(HttpVerb) },
    { no: 5, name: "named_response_values", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ],
);

/**
 * @generated from message api.v0alpha.WebEntrypointProcess
 */
export const WebEntrypointProcess = proto3.makeMessageType(
  "api.v0alpha.WebEntrypointProcess",
  () => [
    { no: 1, name: "http_requests", kind: "message", T: HttpReq, repeated: true },
    { no: 5, name: "file_template_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "file_template", kind: "message", T: FileTemplate },
    { no: 7, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "cron", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "timezone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * BulkWebEntrypointProcess works like a WebEntrypointProcess, but allows
 * user to specify a paginated request that is repeated till there are no
 * more records to import. This should be used when we don't know how much
 * data we are importing, or if we have a long running
 *
 * @generated from message api.v0alpha.BulkWebEntrypointProcess
 */
export const BulkWebEntrypointProcess = proto3.makeMessageType(
  "api.v0alpha.BulkWebEntrypointProcess",
  () => [
    { no: 2, name: "preliminary_requests", kind: "message", T: HttpReq, repeated: true },
    { no: 4, name: "paginated_request", kind: "message", T: PaginatedHttpRequest },
    { no: 5, name: "file_template_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "cron", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "timezone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 22, name: "flush_page_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 23, name: "flush_minute_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 24, name: "flush_during_check", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * OmniExchangeProcess allows omni to import contacts using LMS file upload
 *
 * @generated from message api.v0alpha.OmniExchangeProcess
 */
export const OmniExchangeProcess = proto3.makeMessageType(
  "api.v0alpha.OmniExchangeProcess",
  () => [
    { no: 1, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
    { no: 2, name: "campaign_id", kind: "scalar", T: 3 /* ScalarType.INT64 */, L: 1 /* LongType.STRING */ },
    { no: 5, name: "time_zone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "days", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "hour", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 7, name: "minute", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * WebExchangeProcess is an lms exchange process that lets the user upload data to third part api.
 * right now rest is supported with non bulk uploads.
 *
 * @generated from message api.v0alpha.WebExchangeProcess
 */
export const WebExchangeProcess = proto3.makeMessageType(
  "api.v0alpha.WebExchangeProcess",
  () => [
    { no: 1, name: "http_requests", kind: "message", T: HttpReq, repeated: true },
    { no: 2, name: "error_threshold", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * this request is expected to return records that can be parsed by
 * the file template each time it is called.
 * if no termination case is specified, (end_for_any, and end_for_all are empty)
 * then we terminate after the first call.
 *
 * @generated from message api.v0alpha.PaginatedHttpRequest
 */
export const PaginatedHttpRequest = proto3.makeMessageType(
  "api.v0alpha.PaginatedHttpRequest",
  () => [
    { no: 1, name: "iteration_request", kind: "message", T: HttpReq },
    { no: 2, name: "start_index", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "end_for_any", kind: "message", T: PaginationTerminator, repeated: true },
    { no: 4, name: "end_for_all", kind: "message", T: PaginationTerminator, repeated: true },
    { no: 5, name: "request_not_ready", kind: "message", T: PaginationTerminator },
    { no: 6, name: "not_ready_wait_seconds", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 7, name: "not_ready_redo_preliminary", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "not_ready_skip_iteration", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "process_stop_page", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * Takes SFTP credentials and import a file
 *
 * @generated from message api.v0alpha.SftpImport
 */
export const SftpImport = proto3.makeMessageType(
  "api.v0alpha.SftpImport",
  () => [
    { no: 4, name: "user", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "private_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "port", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "file_pattern", kind: "message", T: FilePattern },
    { no: 15, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 16, name: "file_template_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "incremental", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 18, name: "encrypted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 19, name: "cron", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "timezone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "transfer_config_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.RndEnrichmentProcess
 */
export const RndEnrichmentProcess = proto3.makeMessageType(
  "api.v0alpha.RndEnrichmentProcess",
  () => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "field", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "date_last_contact_field", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.CjsImportProcess
 */
export const CjsImportProcess = proto3.makeMessageType(
  "api.v0alpha.CjsImportProcess",
  () => [
    { no: 3, name: "cjs_collection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "cron", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "timezone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "dedup", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message api.v0alpha.CjsExportProcess
 */
export const CjsExportProcess = proto3.makeMessageType(
  "api.v0alpha.CjsExportProcess",
  () => [
    { no: 3, name: "cjs_collection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "header", kind: "message", T: ExportHeader },
    { no: 5, name: "run_type", kind: "enum", T: proto3.getEnumType(RunType) },
    { no: 6, name: "cjs_collection_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "overwrite", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "update", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 10, name: "update_key_field", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.CjsEnrichmentProcess
 */
export const CjsEnrichmentProcess = proto3.makeMessageType(
  "api.v0alpha.CjsEnrichmentProcess",
  () => [
    { no: 3, name: "cjs_collection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "key_field", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "enrich_type", kind: "enum", T: proto3.getEnumType(EnrichmentType) },
    { no: 6, name: "primary_source", kind: "enum", T: proto3.getEnumType(PrimarySource) },
    { no: 7, name: "cjs_key_field_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "column_overwrite", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "dedup_key_policy", kind: "enum", T: proto3.getEnumType(DedupKeyPolicy) },
  ],
);

/**
 * this process downloads the records from the signed_url
 * and writes them to the output
 *
 * @generated from message api.v0alpha.AppendProcess
 */
export const AppendProcess = proto3.makeMessageType(
  "api.v0alpha.AppendProcess",
  () => [
    { no: 5, name: "fts_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * USE INSTEAD of ComplProcess
 *
 * @generated from message api.v0alpha.LookupProcess
 */
export const LookupProcess = proto3.makeMessageType(
  "api.v0alpha.LookupProcess",
  () => [
    { no: 6, name: "field_names", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 7, name: "compl", kind: "message", T: LookupProcess_ComplProcess, oneof: "proc" },
    { no: 8, name: "list", kind: "message", T: LookupProcess_ListLookup, oneof: "proc" },
    { no: 9, name: "url", kind: "message", T: LookupProcess_UrlLookup, oneof: "proc" },
  ],
);

/**
 * @generated from message api.v0alpha.LookupProcess.ComplProcess
 */
export const LookupProcess_ComplProcess = proto3.makeMessageType(
  "api.v0alpha.LookupProcess.ComplProcess",
  () => [
    { no: 11, name: "country_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
  {localName: "LookupProcess_ComplProcess"},
);

/**
 * @generated from message api.v0alpha.LookupProcess.ListLookup
 */
export const LookupProcess_ListLookup = proto3.makeMessageType(
  "api.v0alpha.LookupProcess.ListLookup",
  () => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "region_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "element_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "version", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
  {localName: "LookupProcess_ListLookup"},
);

/**
 * @generated from message api.v0alpha.LookupProcess.UrlLookup
 */
export const LookupProcess_UrlLookup = proto3.makeMessageType(
  "api.v0alpha.LookupProcess.UrlLookup",
  () => [
    { no: 5, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "file_template", kind: "message", T: FileTemplate },
  ],
  {localName: "LookupProcess_UrlLookup"},
);

/**
 * DEPRECATED
 *
 * @generated from message api.v0alpha.ComplProcess
 */
export const ComplProcess = proto3.makeMessageType(
  "api.v0alpha.ComplProcess",
  [],
);

/**
 * @generated from message api.v0alpha.CFSExportConfig
 */
export const CFSExportConfig = proto3.makeMessageType(
  "api.v0alpha.CFSExportConfig",
  () => [
    { no: 1, name: "type", kind: "enum", T: proto3.getEnumType(ExportType) },
    { no: 2, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.CFSExportReqHeader
 */
export const CFSExportReqHeader = proto3.makeMessageType(
  "api.v0alpha.CFSExportReqHeader",
  () => [
    { no: 1, name: "export_header", kind: "message", T: ExportHeader },
    { no: 2, name: "configs", kind: "message", T: CFSExportConfig, repeated: true },
    { no: 3, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "region_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.CFSExportProcess
 */
export const CFSExportProcess = proto3.makeMessageType(
  "api.v0alpha.CFSExportProcess",
  () => [
    { no: 1, name: "export_header", kind: "message", T: ExportHeader },
    { no: 2, name: "configs", kind: "message", T: CFSExportConfig, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.FilterProcess
 */
export const FilterProcess = proto3.makeMessageType(
  "api.v0alpha.FilterProcess",
  () => [
    { no: 1, name: "expression", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "operations", kind: "message", T: FilterOperation, repeated: true },
    { no: 3, name: "negate", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message api.v0alpha.FilterOperation
 */
export const FilterOperation = proto3.makeMessageType(
  "api.v0alpha.FilterOperation",
  () => [
    { no: 1, name: "checks", kind: "message", T: FilterCheck, repeated: true },
    { no: 2, name: "operator", kind: "enum", T: proto3.getEnumType(ChainOperator) },
  ],
);

/**
 * Describes a lookup of a field on a record, checking its value or type against
 * another value. Each FilterCheck must boil down to a bool value.
 *
 * @generated from message api.v0alpha.FilterCheck
 */
export const FilterCheck = proto3.makeMessageType(
  "api.v0alpha.FilterCheck",
  () => [
    { no: 12, name: "val_comp", kind: "message", T: FilterCheck_ValueComparison, oneof: "check" },
    { no: 13, name: "type_comp", kind: "message", T: FilterCheck_TypeComparison, oneof: "check" },
    { no: 14, name: "list_comp", kind: "message", T: FilterCheck_ListComparison, oneof: "check" },
  ],
);

/**
 * a value to compare against.
 *
 * @generated from message api.v0alpha.FilterCheck.Value
 */
export const FilterCheck_Value = proto3.makeMessageType(
  "api.v0alpha.FilterCheck.Value",
  () => [
    { no: 1, name: "string_val", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "val" },
    { no: 2, name: "number_val", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, oneof: "val" },
    { no: 3, name: "bool_val", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "val" },
    { no: 5, name: "field_name", kind: "message", T: FieldIndex, oneof: "val" },
    { no: 14, name: "date_time", kind: "message", T: DateTime, oneof: "val" },
  ],
  {localName: "FilterCheck_Value"},
);

/**
 * A bool comparison of a field vs some other value
 *
 * @generated from message api.v0alpha.FilterCheck.ValueComparison
 */
export const FilterCheck_ValueComparison = proto3.makeMessageType(
  "api.v0alpha.FilterCheck.ValueComparison",
  () => [
    { no: 6, name: "field_name", kind: "message", T: FieldIndex },
    { no: 7, name: "op", kind: "enum", T: proto3.getEnumType(CompareOperator) },
    { no: 8, name: "value", kind: "message", T: FilterCheck_Value },
    { no: 9, name: "negate", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 10, name: "exists", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
  {localName: "FilterCheck_ValueComparison"},
);

/**
 * bool comparison saying the field matches a specific type or not
 *
 * @generated from message api.v0alpha.FilterCheck.TypeComparison
 */
export const FilterCheck_TypeComparison = proto3.makeMessageType(
  "api.v0alpha.FilterCheck.TypeComparison",
  () => [
    { no: 9, name: "field_name", kind: "message", T: FieldIndex },
    { no: 10, name: "matches_field_type", kind: "enum", T: proto3.getEnumType(RecordType) },
    { no: 11, name: "negate", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
  {localName: "FilterCheck_TypeComparison"},
);

/**
 * list comparison of a list of fields vs list of values
 *
 * @generated from message api.v0alpha.FilterCheck.ListComparison
 */
export const FilterCheck_ListComparison = proto3.makeMessageType(
  "api.v0alpha.FilterCheck.ListComparison",
  () => [
    { no: 5, name: "field_name", kind: "message", T: FieldIndex },
    { no: 8, name: "data", kind: "message", T: FilterCheck_ListComparison_FieldOrVal, repeated: true },
    { no: 9, name: "negate", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
  {localName: "FilterCheck_ListComparison"},
);

/**
 * @generated from message api.v0alpha.FilterCheck.ListComparison.FieldOrVal
 */
export const FilterCheck_ListComparison_FieldOrVal = proto3.makeMessageType(
  "api.v0alpha.FilterCheck.ListComparison.FieldOrVal",
  () => [
    { no: 6, name: "field", kind: "message", T: FieldIndex, oneof: "val" },
    { no: 7, name: "value", kind: "message", T: FilterCheck_Value, oneof: "val" },
  ],
  {localName: "FilterCheck_ListComparison_FieldOrVal"},
);

/**
 * @generated from message api.v0alpha.GSExportProcess
 */
export const GSExportProcess = proto3.makeMessageType(
  "api.v0alpha.GSExportProcess",
  () => [
    { no: 2, name: "bucket", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "file", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.P3ExportProcess
 */
export const P3ExportProcess = proto3.makeMessageType(
  "api.v0alpha.P3ExportProcess",
  () => [
    { no: 1, name: "header", kind: "message", T: ExportHeader },
    { no: 2, name: "contact_list_prefix", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "country", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "dupe_policy", kind: "enum", T: proto3.getEnumType(DuplicatePolicyType) },
    { no: 7, name: "absent_policy", kind: "enum", T: proto3.getEnumType(AbsentPolicyType) },
    { no: 8, name: "template_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "default_area_code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 10, name: "schedule_template_number", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 11, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "run_type", kind: "enum", T: proto3.getEnumType(RunType) },
    { no: 13, name: "file_pattern", kind: "message", T: FilePattern },
    { no: 43, name: "filename", kind: "message", T: ConstructedFilename },
    { no: 14, name: "caller_ids", kind: "scalar", T: 3 /* ScalarType.INT64 */, repeated: true },
    { no: 15, name: "cell_scrub", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 16, name: "start_time", kind: "message", T: Timestamp$1 },
    { no: 17, name: "end_time", kind: "message", T: Timestamp$1 },
    { no: 18, name: "dial_order", kind: "enum", T: proto3.getEnumType(DialOrderType) },
    { no: 20, name: "email_field", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "email_from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "follow_the_sun", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 23, name: "messages_per_minute", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 24, name: "randomize_contacts", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 25, name: "schedule_as_paused", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 26, name: "schedule_rule", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 27, name: "sha_digest_override", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 28, name: "sms_field", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 29, name: "sms_source_number", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 30, name: "timezone_override", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 31, name: "zip_scrub", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 32, name: "completion_threshold", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 33, name: "timezone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 34, name: "compliance_rule", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 35, name: "field_delimiter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 36, name: "record_delimiter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 37, name: "quote_fields", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 38, name: "use_custom_date_format", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 39, name: "file_format", kind: "enum", T: proto3.getEnumType(FileFormat) },
    { no: 40, name: "days_into_future", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 41, name: "start_hour", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 42, name: "end_hour", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 44, name: "schedule_by_timezone", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 45, name: "shift_phone_fields", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 46, name: "do_campaign_linking", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 47, name: "campaign_link_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 48, name: "stop_trigger", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * Describes an export process to compliance list/DNCL
 * Expiration is optional
 * CountryCode is required only if the field type is phone/sms
 *
 * @generated from message api.v0alpha.ComplianceExportProcess
 */
export const ComplianceExportProcess = proto3.makeMessageType(
  "api.v0alpha.ComplianceExportProcess",
  () => [
    { no: 2, name: "list_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "field", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "expiration_field", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "country_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "run_type", kind: "enum", T: proto3.getEnumType(RunType) },
    { no: 7, name: "compliance_list_type", kind: "enum", T: proto3.getEnumType(ComplianceListType) },
  ],
);

/**
 * @generated from message api.v0alpha.ScrubProcess
 */
export const ScrubProcess = proto3.makeMessageType(
  "api.v0alpha.ScrubProcess",
  () => [
    { no: 3, name: "list_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "field", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * This process collects data from a specific fields in all the records in the lms list
 * and calls Compliance.DeleteScrubListEntries() on them.
 *
 * @generated from message api.v0alpha.DeleteScrubEntriesProcess
 */
export const DeleteScrubEntriesProcess = proto3.makeMessageType(
  "api.v0alpha.DeleteScrubEntriesProcess",
  () => [
    { no: 3, name: "list_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "field", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.FrequencyProcess
 */
export const FrequencyProcess = proto3.makeMessageType(
  "api.v0alpha.FrequencyProcess",
  () => [
    { no: 4, name: "field", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "days", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "country_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "meta_field", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "dispositions", kind: "message", T: DispositionPair, repeated: true },
    { no: 9, name: "results", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 10, name: "disposition_sets", kind: "message", T: DispositionSet, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.DispositionSet
 */
export const DispositionSet = proto3.makeMessageType(
  "api.v0alpha.DispositionSet",
  () => [
    { no: 1, name: "dispositions", kind: "message", T: DispositionPair, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.DispositionPair
 */
export const DispositionPair = proto3.makeMessageType(
  "api.v0alpha.DispositionPair",
  () => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.SftpExportProcess
 */
export const SftpExportProcess = proto3.makeMessageType(
  "api.v0alpha.SftpExportProcess",
  () => [
    { no: 1, name: "dest_filepath", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "port", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "fileformat", kind: "enum", T: proto3.getEnumType(FileFormat) },
    { no: 8, name: "prepend_headers", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "field_delimiter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "record_delimiter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "file_pattern", kind: "message", T: FilePattern },
    { no: 12, name: "run_type", kind: "enum", T: proto3.getEnumType(RunType) },
    { no: 13, name: "header", kind: "message", T: ExportHeader },
    { no: 14, name: "quote_fields", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 15, name: "use_custom_date_format", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 16, name: "directory", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "filename", kind: "message", T: ConstructedFilename },
    { no: 18, name: "shift_phone_fields", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 19, name: "transfer_config_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.WfmMultiSkill
 */
export const WfmMultiSkill = proto3.makeMessageType(
  "api.v0alpha.WfmMultiSkill",
  [],
);

/**
 * @generated from message api.v0alpha.WfmExportProcess
 */
export const WfmExportProcess = proto3.makeMessageType(
  "api.v0alpha.WfmExportProcess",
  () => [
    { no: 1, name: "single", kind: "scalar", T: 3 /* ScalarType.INT64 */, oneof: "skill_profile" },
    { no: 2, name: "multi", kind: "message", T: WfmMultiSkill, oneof: "skill_profile" },
  ],
);

/**
 * @generated from message api.v0alpha.ExportHeader
 */
export const ExportHeader = proto3.makeMessageType(
  "api.v0alpha.ExportHeader",
  () => [
    { no: 1, name: "names", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.SortReq
 */
export const SortReq = proto3.makeMessageType(
  "api.v0alpha.SortReq",
  () => [
    { no: 1, name: "criteria", kind: "message", T: SortCriteria, oneof: "request" },
    { no: 2, name: "record", kind: "message", T: RecordProto, oneof: "request" },
  ],
);

/**
 * @generated from message api.v0alpha.CFSExportReq
 */
export const CFSExportReq = proto3.makeMessageType(
  "api.v0alpha.CFSExportReq",
  () => [
    { no: 1, name: "header", kind: "message", T: CFSExportReqHeader, oneof: "request" },
    { no: 2, name: "record", kind: "message", T: RecordProto, oneof: "request" },
  ],
);

/**
 * @generated from message api.v0alpha.DeDupCriteria
 */
export const DeDupCriteria = proto3.makeMessageType(
  "api.v0alpha.DeDupCriteria",
  () => [
    { no: 3, name: "action", kind: "enum", T: proto3.getEnumType(DeDupActions) },
    { no: 2, name: "fields", kind: "message", T: FieldIndex, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.SortCriteria
 */
export const SortCriteria = proto3.makeMessageType(
  "api.v0alpha.SortCriteria",
  () => [
    { no: 1, name: "ordering", kind: "enum", T: proto3.getEnumType(SortOrder), repeated: true },
    { no: 2, name: "field_order", kind: "message", T: FieldIndex, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.Error
 */
export const Error = proto3.makeMessageType(
  "api.v0alpha.Error",
  () => [
    { no: 1, name: "error", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "raw_value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.RecordFieldMap
 */
export const RecordFieldMap = proto3.makeMessageType(
  "api.v0alpha.RecordFieldMap",
  () => [
    { no: 1, name: "fields", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: RecordFieldProto} },
  ],
);

/**
 * @generated from message api.v0alpha.Currency
 */
export const Currency = proto3.makeMessageType(
  "api.v0alpha.Currency",
  () => [
    { no: 1, name: "symbol", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "raw_value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "value", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 4, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "invalid", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message api.v0alpha.Phone
 */
export const Phone = proto3.makeMessageType(
  "api.v0alpha.Phone",
  () => [
    { no: 3, name: "raw_value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "full_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "invalid", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message api.v0alpha.PostalCode
 */
export const PostalCode = proto3.makeMessageType(
  "api.v0alpha.PostalCode",
  () => [
    { no: 1, name: "postal_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "invalid", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message api.v0alpha.Email
 */
export const Email = proto3.makeMessageType(
  "api.v0alpha.Email",
  () => [
    { no: 1, name: "local_part", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "domain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "full_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "invalid", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * modifies a DateTime by specific amount
 *
 * @generated from message api.v0alpha.DateTimeModifier
 */
export const DateTimeModifier = proto3.makeMessageType(
  "api.v0alpha.DateTimeModifier",
  () => [
    { no: 1, name: "years", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "weeks", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "days", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "hours", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "minutes", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "seconds", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * @generated from message api.v0alpha.DateTime
 */
export const DateTime = proto3.makeMessageType(
  "api.v0alpha.DateTime",
  () => [
    { no: 1, name: "raw_value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "format", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "precision", kind: "enum", T: proto3.getEnumType(DateTimePrecision) },
    { no: 11, name: "modifier", kind: "message", T: DateTimeModifier },
  ],
);

/**
 * @generated from message api.v0alpha.EnrichedPhone
 */
export const EnrichedPhone = proto3.makeMessageType(
  "api.v0alpha.EnrichedPhone",
  () => [
    { no: 1, name: "area_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "block_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "carrier", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "cc", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "ccnsn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "cell_prefix", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "city", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "coc_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "dst", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 10, name: "international_prefix", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "iso2", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "max", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "min", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "national_prefix", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "ndc", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 18, name: "prefix", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "region_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "region_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "ssc1", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "ssc2", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "ssc3", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 24, name: "ssc4", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 25, name: "source", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 26, name: "time_zone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 27, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 28, name: "uses_ndc", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 29, name: "utc", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
  ],
);

/**
 * @generated from message api.v0alpha.EnrichedZip
 */
export const EnrichedZip = proto3.makeMessageType(
  "api.v0alpha.EnrichedZip",
  () => [
    { no: 1, name: "accuracy", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "admin_code1", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "admin_code2", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "admin_code3", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "admin_name1", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "admin_name2", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "admin_name3", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "area_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "city_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "city_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "country_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "county_fips", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "county_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "dst", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 15, name: "iso2", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "msa_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 18, name: "place_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "postal_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "postal_code_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "postal_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "province_abbr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "province_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 24, name: "source", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 25, name: "state_fips", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 26, name: "time_zone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 27, name: "utc", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
  ],
);

/**
 * represents need for getting current timestamp during processing
 *
 * @generated from message api.v0alpha.Now
 */
export const Now = proto3.makeMessageType(
  "api.v0alpha.Now",
  [],
);

/**
 * a specific point in time, down to second presision.
 *
 * @generated from message api.v0alpha.Timestamp
 */
export const Timestamp = proto3.makeMessageType(
  "api.v0alpha.Timestamp",
  () => [
    { no: 3, name: "year", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "month", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "week", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "day_of_month", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "day_of_week", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "day_of_year", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "hour", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 10, name: "minute", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 11, name: "second", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * a specific year, month, and day.
 *
 * @generated from message api.v0alpha.Date
 */
export const Date = proto3.makeMessageType(
  "api.v0alpha.Date",
  () => [
    { no: 3, name: "year", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "month", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "week", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "day_of_month", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "day_of_week", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "day_of_year", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * a specific month and day of the year
 *
 * @generated from message api.v0alpha.MonthAndDay
 */
export const MonthAndDay = proto3.makeMessageType(
  "api.v0alpha.MonthAndDay",
  () => [
    { no: 3, name: "month", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "week", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "day_of_month", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "day_of_week", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "day_of_year", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * a specific day of the week.  sunday = 0
 *
 * @generated from message api.v0alpha.DayOfWeek
 */
export const DayOfWeek = proto3.makeMessageType(
  "api.v0alpha.DayOfWeek",
  () => [
    { no: 3, name: "day_of_week", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * a specific time of day. 24 hour format. 12:00:00AM = 0,0,0
 *
 * @generated from message api.v0alpha.TimeOfDay
 */
export const TimeOfDay = proto3.makeMessageType(
  "api.v0alpha.TimeOfDay",
  () => [
    { no: 3, name: "hour", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "minute", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "second", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * @generated from message api.v0alpha.FileFormatParams
 */
export const FileFormatParams = proto3.makeMessageType(
  "api.v0alpha.FileFormatParams",
  () => [
    { no: 10, name: "skip_first_no_lines", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 11, name: "skip_lines_match_regex", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "trim_spaces", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 13, name: "custom_delimiter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "skip_first_line", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 15, name: "json_dot_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.ReshapeProcess
 */
export const ReshapeProcess = proto3.makeMessageType(
  "api.v0alpha.ReshapeProcess",
  () => [
    { no: 1, name: "actions", kind: "message", T: ReshapeAction, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.ReshapeAction
 */
export const ReshapeAction = proto3.makeMessageType(
  "api.v0alpha.ReshapeAction",
  () => [
    { no: 19, name: "field", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "matching_type", kind: "enum", T: proto3.getEnumType(RecordType) },
    { no: 50, name: "predicate", kind: "message", T: FilterCheck },
    { no: 22, name: "rename", kind: "message", T: ReshapeAction_Rename, oneof: "action" },
    { no: 23, name: "add_value", kind: "message", T: ReshapeAction_AddValue, oneof: "action" },
    { no: 24, name: "add_field", kind: "message", T: ReshapeAction_AddField, oneof: "action" },
    { no: 47, name: "add_date", kind: "message", T: ReshapeAction_AddDate, oneof: "action" },
    { no: 25, name: "subtract_value", kind: "message", T: ReshapeAction_SubtractValue, oneof: "action" },
    { no: 26, name: "subtract_field", kind: "message", T: ReshapeAction_SubtractField, oneof: "action" },
    { no: 28, name: "convert", kind: "message", T: ReshapeAction_Convert, oneof: "action" },
    { no: 29, name: "remove_field", kind: "message", T: ReshapeAction_RemoveField, oneof: "action" },
    { no: 30, name: "add_new_field", kind: "message", T: ReshapeAction_AddNewField, oneof: "action" },
    { no: 31, name: "change_currency_type", kind: "message", T: ReshapeAction_ChangeCurrencyType, oneof: "action" },
    { no: 32, name: "divide", kind: "message", T: ReshapeAction_Divide, oneof: "action" },
    { no: 33, name: "multiply", kind: "message", T: ReshapeAction_Multiply, oneof: "action" },
    { no: 34, name: "modulo", kind: "message", T: ReshapeAction_Modulo, oneof: "action" },
    { no: 40, name: "merge", kind: "message", T: ReshapeAction_Merge, oneof: "action" },
    { no: 41, name: "set_field_value", kind: "message", T: ReshapeAction_SetFieldValue, oneof: "action" },
    { no: 45, name: "add_new_field_from_field", kind: "message", T: ReshapeAction_AddNewFieldFromField, oneof: "action" },
    { no: 46, name: "set_field_from_field", kind: "message", T: ReshapeAction_SetFieldFromField, oneof: "action" },
    { no: 52, name: "pad", kind: "message", T: ReshapeAction_Pad, oneof: "action" },
    { no: 53, name: "trim", kind: "message", T: ReshapeAction_Trim, oneof: "action" },
    { no: 54, name: "extract", kind: "message", T: ReshapeAction_Extract, oneof: "action" },
  ],
);

/**
 * rename this field's name to new_name, keep the value the same
 *
 * legal: All
 *
 * @generated from message api.v0alpha.ReshapeAction.Rename
 */
export const ReshapeAction_Rename = proto3.makeMessageType(
  "api.v0alpha.ReshapeAction.Rename",
  () => [
    { no: 10, name: "new_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
  {localName: "ReshapeAction_Rename"},
);

/**
 * add a static value to field's current value.
 *
 * legal: numbers, currency, timestamp, time, date
 *
 * @generated from message api.v0alpha.ReshapeAction.AddValue
 */
export const ReshapeAction_AddValue = proto3.makeMessageType(
  "api.v0alpha.ReshapeAction.AddValue",
  () => [
    { no: 11, name: "value", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
  ],
  {localName: "ReshapeAction_AddValue"},
);

/**
 * add or subtract a datetime modifier to the field
 *
 * @generated from message api.v0alpha.ReshapeAction.AddDate
 */
export const ReshapeAction_AddDate = proto3.makeMessageType(
  "api.v0alpha.ReshapeAction.AddDate",
  () => [
    { no: 45, name: "datetime", kind: "message", T: DateTimeModifier },
  ],
  {localName: "ReshapeAction_AddDate"},
);

/**
 * add two fields values together. If field is time-like, other_field must be
 * either number or timestamp
 *
 * legal: numbers, currency, timestamp, time, date
 *
 * @generated from message api.v0alpha.ReshapeAction.AddField
 */
export const ReshapeAction_AddField = proto3.makeMessageType(
  "api.v0alpha.ReshapeAction.AddField",
  () => [
    { no: 12, name: "other_field", kind: "message", T: FieldIndex },
  ],
  {localName: "ReshapeAction_AddField"},
);

/**
 * subtract a static value to field's current value
 *
 * legal: numbers, currency, timestamp, time, date
 *
 * @generated from message api.v0alpha.ReshapeAction.SubtractValue
 */
export const ReshapeAction_SubtractValue = proto3.makeMessageType(
  "api.v0alpha.ReshapeAction.SubtractValue",
  () => [
    { no: 11, name: "value", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
  ],
  {localName: "ReshapeAction_SubtractValue"},
);

/**
 * subtract two fields values. If field is time-like, other_field must be
 * either number or timestamp
 *
 * legal: numbers, currency, timestamp, time, date
 *
 * @generated from message api.v0alpha.ReshapeAction.SubtractField
 */
export const ReshapeAction_SubtractField = proto3.makeMessageType(
  "api.v0alpha.ReshapeAction.SubtractField",
  () => [
    { no: 12, name: "other_field", kind: "message", T: FieldIndex },
  ],
  {localName: "ReshapeAction_SubtractField"},
);

/**
 * convert a field to another type, if conversion fails, it will be an error
 * type
 *
 * @generated from message api.v0alpha.ReshapeAction.Convert
 */
export const ReshapeAction_Convert = proto3.makeMessageType(
  "api.v0alpha.ReshapeAction.Convert",
  () => [
    { no: 17, name: "newType", kind: "enum", T: proto3.getEnumType(RecordType) },
    { no: 18, name: "new_field", kind: "message", T: Field },
    { no: 19, name: "default_value", kind: "message", T: RecordFieldProto },
  ],
  {localName: "ReshapeAction_Convert"},
);

/**
 * Represents a message for division operation.
 *
 * @generated from message api.v0alpha.ReshapeAction.Divide
 */
export const ReshapeAction_Divide = proto3.makeMessageType(
  "api.v0alpha.ReshapeAction.Divide",
  () => [
    { no: 1, name: "default_value", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 2, name: "divisor", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
  ],
  {localName: "ReshapeAction_Divide"},
);

/**
 * Represents a message for multiplication operation.
 *
 * @generated from message api.v0alpha.ReshapeAction.Multiply
 */
export const ReshapeAction_Multiply = proto3.makeMessageType(
  "api.v0alpha.ReshapeAction.Multiply",
  () => [
    { no: 1, name: "default_value", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 2, name: "multiplier", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
  ],
  {localName: "ReshapeAction_Multiply"},
);

/**
 * Represents a message for modulo operation.
 *
 * @generated from message api.v0alpha.ReshapeAction.Modulo
 */
export const ReshapeAction_Modulo = proto3.makeMessageType(
  "api.v0alpha.ReshapeAction.Modulo",
  () => [
    { no: 1, name: "default_value", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "modulus", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
  {localName: "ReshapeAction_Modulo"},
);

/**
 * will remove "field" from the record
 *
 * @generated from message api.v0alpha.ReshapeAction.RemoveField
 */
export const ReshapeAction_RemoveField = proto3.makeMessageType(
  "api.v0alpha.ReshapeAction.RemoveField",
  [],
  {localName: "ReshapeAction_RemoveField"},
);

/**
 * will add "field" to the record with default starting value
 * TODO: make a RecordFieldProtoValue, it is a noeof
 *
 * @generated from message api.v0alpha.ReshapeAction.AddNewField
 */
export const ReshapeAction_AddNewField = proto3.makeMessageType(
  "api.v0alpha.ReshapeAction.AddNewField",
  () => [
    { no: 18, name: "starting_value", kind: "message", T: RecordFieldProto },
  ],
  {localName: "ReshapeAction_AddNewField"},
);

/**
 * will add "field" to the record with default starting value from other field
 *
 * @generated from message api.v0alpha.ReshapeAction.AddNewFieldFromField
 */
export const ReshapeAction_AddNewFieldFromField = proto3.makeMessageType(
  "api.v0alpha.ReshapeAction.AddNewFieldFromField",
  () => [
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "other_field", kind: "message", T: FieldIndex },
  ],
  {localName: "ReshapeAction_AddNewFieldFromField"},
);

/**
 * change the currency value to one represented
 *
 * legal: Currency
 *
 * @generated from message api.v0alpha.ReshapeAction.ChangeCurrencyType
 */
export const ReshapeAction_ChangeCurrencyType = proto3.makeMessageType(
  "api.v0alpha.ReshapeAction.ChangeCurrencyType",
  [],
  {localName: "ReshapeAction_ChangeCurrencyType"},
);

/**
 * will set field with the value
 *
 * @generated from message api.v0alpha.ReshapeAction.SetFieldValue
 */
export const ReshapeAction_SetFieldValue = proto3.makeMessageType(
  "api.v0alpha.ReshapeAction.SetFieldValue",
  () => [
    { no: 18, name: "value", kind: "message", T: RecordFieldProto },
  ],
  {localName: "ReshapeAction_SetFieldValue"},
);

/**
 * will set "field" from other field
 *
 * @generated from message api.v0alpha.ReshapeAction.SetFieldFromField
 */
export const ReshapeAction_SetFieldFromField = proto3.makeMessageType(
  "api.v0alpha.ReshapeAction.SetFieldFromField",
  () => [
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "other_field", kind: "message", T: FieldIndex },
  ],
  {localName: "ReshapeAction_SetFieldFromField"},
);

/**
 * merges together all the strings fetched from FieldOrVal into the reshape
 * action field. overrides any data already in the field.
 *
 * Legal: StringValue
 *
 * @generated from message api.v0alpha.ReshapeAction.Merge
 */
export const ReshapeAction_Merge = proto3.makeMessageType(
  "api.v0alpha.ReshapeAction.Merge",
  () => [
    { no: 44, name: "data", kind: "message", T: ReshapeAction_Merge_FieldOrVal, repeated: true },
  ],
  {localName: "ReshapeAction_Merge"},
);

/**
 * @generated from message api.v0alpha.ReshapeAction.Merge.FieldOrVal
 */
export const ReshapeAction_Merge_FieldOrVal = proto3.makeMessageType(
  "api.v0alpha.ReshapeAction.Merge.FieldOrVal",
  () => [
    { no: 38, name: "field", kind: "message", T: FieldIndex, oneof: "val" },
    { no: 43, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "val" },
  ],
  {localName: "ReshapeAction_Merge_FieldOrVal"},
);

/**
 * provide padding to the right or left of the string field
 *
 * @generated from message api.v0alpha.ReshapeAction.Pad
 */
export const ReshapeAction_Pad = proto3.makeMessageType(
  "api.v0alpha.ReshapeAction.Pad",
  () => [
    { no: 10, name: "char", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "amount", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 13, name: "prefix", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
  {localName: "ReshapeAction_Pad"},
);

/**
 * trims off specific characters from a prefix or suffix.
 * Or can trim off a certain amount of characters from the left or right.
 *
 * @generated from message api.v0alpha.ReshapeAction.Trim
 */
export const ReshapeAction_Trim = proto3.makeMessageType(
  "api.v0alpha.ReshapeAction.Trim",
  () => [
    { no: 1, name: "amount", kind: "scalar", T: 5 /* ScalarType.INT32 */, oneof: "opt" },
    { no: 2, name: "data", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "opt" },
    { no: 3, name: "marker", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "opt" },
    { no: 10, name: "suffix", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
  {localName: "ReshapeAction_Trim"},
);

/**
 * extract takes a string and can take any combination of substrings of the string
 *
 * @generated from message api.v0alpha.ReshapeAction.Extract
 */
export const ReshapeAction_Extract = proto3.makeMessageType(
  "api.v0alpha.ReshapeAction.Extract",
  () => [
    { no: 39, name: "parts", kind: "message", T: ReshapeAction_Extract_Slice, repeated: true },
  ],
  {localName: "ReshapeAction_Extract"},
);

/**
 * represents an index. can be a string or a number
 *
 * @generated from message api.v0alpha.ReshapeAction.Extract.Index
 */
export const ReshapeAction_Extract_Index = proto3.makeMessageType(
  "api.v0alpha.ReshapeAction.Extract.Index",
  () => [
    { no: 12, name: "position", kind: "scalar", T: 5 /* ScalarType.INT32 */, oneof: "val" },
    { no: 43, name: "match", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "val" },
  ],
  {localName: "ReshapeAction_Extract_Index"},
);

/**
 * Slice represents a part of a string. think of a python or golang slice operator
 * where the new substring starts at the starting index and ends at the ending index exclusively
 *
 * @generated from message api.v0alpha.ReshapeAction.Extract.Slice
 */
export const ReshapeAction_Extract_Slice = proto3.makeMessageType(
  "api.v0alpha.ReshapeAction.Extract.Slice",
  () => [
    { no: 13, name: "start_is_exclusive", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 14, name: "end_is_inclusive", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 35, name: "start_index", kind: "message", T: ReshapeAction_Extract_Index, repeated: true },
    { no: 36, name: "end_index", kind: "message", T: ReshapeAction_Extract_Index, repeated: true },
  ],
  {localName: "ReshapeAction_Extract_Slice"},
);

/**
 * stored as json in lms_history table
 *
 * @generated from message api.v0alpha.ListMetrics
 */
export const ListMetrics = proto3.makeMessageType(
  "api.v0alpha.ListMetrics",
  () => [
    { no: 1, name: "input_record_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "output_record_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "field_names", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "field_types", kind: "enum", T: proto3.getEnumType(RecordType), repeated: true },
    { no: 18, name: "ftypes", kind: "enum", T: proto3.getEnumType(FieldType), repeated: true },
    { no: 5, name: "field_counts", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
    { no: 6, name: "run_type", kind: "enum", T: proto3.getEnumType(RunType) },
    { no: 7, name: "success_message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "max_record_width", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "min_record_width", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 10, name: "max_record_index", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 11, name: "min_record_index", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 12, name: "files", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 13, name: "groups", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 15, name: "missing_fields", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 16, name: "seconds_to_start", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 17, name: "seconds_to_process", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
  ],
);

/**
 * @generated from message api.v0alpha.ParseReq
 */
export const ParseReq = proto3.makeMessageType(
  "api.v0alpha.ParseReq",
  () => [
    { no: 3, name: "element_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "session_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "expression", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.ParseRes
 */
export const ParseRes = proto3.makeMessageType(
  "api.v0alpha.ParseRes",
  () => [
    { no: 1, name: "session_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "expression", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "next_tokens", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "error", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "complete", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "process", kind: "message", T: Process },
  ],
);

/**
 * @generated from message api.v0alpha.Event
 */
export const Event = proto3.makeMessageType(
  "api.v0alpha.Event",
  () => [
    { no: 3, name: "event_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "parent_id", kind: "message", T: StringValue },
    { no: 6, name: "input_ids", kind: "message", T: StringArraySql },
    { no: 7, name: "element_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "process", kind: "message", T: Process },
    { no: 10, name: "upload_ts", kind: "message", T: Timestamp$1 },
    { no: 11, name: "started_ts", kind: "message", T: Timestamp$1 },
    { no: 12, name: "finished_ts", kind: "message", T: Timestamp$1 },
    { no: 13, name: "backoff_till", kind: "message", T: Timestamp$1 },
    { no: 14, name: "attempts", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 15, name: "latest_history", kind: "message", T: Int64Value },
  ],
);

/**
 * @generated from message api.v0alpha.Events
 */
export const Events = proto3.makeMessageType(
  "api.v0alpha.Events",
  () => [
    { no: 1, name: "events", kind: "message", T: Event, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.ViewQueueReq
 */
export const ViewQueueReq = proto3.makeMessageType(
  "api.v0alpha.ViewQueueReq",
  () => [
    { no: 1, name: "newer_than", kind: "message", T: Timestamp$1 },
    { no: 2, name: "no_newer_than", kind: "message", T: Timestamp$1 },
    { no: 3, name: "after_event_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "number_of_records", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message api.v0alpha.CollectionMetadata
 */
export const CollectionMetadata = proto3.makeMessageType(
  "api.v0alpha.CollectionMetadata",
  () => [
    { no: 3, name: "collection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "collection_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "fields", kind: "message", T: CollectionFieldMetadata, repeated: true },
    { no: 6, name: "deleted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "created_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "created_on", kind: "message", T: Timestamp$1 },
    { no: 9, name: "last_queried", kind: "message", T: Timestamp$1 },
    { no: 10, name: "query_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 11, name: "entry_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 12, name: "last_updated", kind: "message", T: Timestamp$1 },
    { no: 13, name: "search_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 14, name: "last_searched", kind: "message", T: Timestamp$1 },
  ],
);

/**
 * @generated from message api.v0alpha.CollectionEntry
 */
export const CollectionEntry = proto3.makeMessageType(
  "api.v0alpha.CollectionEntry",
  () => [
    { no: 3, name: "collection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "entry_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "fields", kind: "message", T: CollectionField, repeated: true },
    { no: 6, name: "last_updated", kind: "message", T: Timestamp$1 },
  ],
);

/**
 * @generated from message api.v0alpha.MatchReq
 */
export const MatchReq = proto3.makeMessageType(
  "api.v0alpha.MatchReq",
  () => [
    { no: 3, name: "collection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "fields", kind: "message", T: CollectionField, repeated: true },
    { no: 5, name: "batch_size", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message api.v0alpha.MatchRes
 */
export const MatchRes = proto3.makeMessageType(
  "api.v0alpha.MatchRes",
  () => [
    { no: 1, name: "entries", kind: "message", T: CollectionEntry, repeated: true },
  ],
);

/**
 * Metadata associated with a field
 *
 * @generated from message api.v0alpha.CollectionFieldMetadata
 */
export const CollectionFieldMetadata = proto3.makeMessageType(
  "api.v0alpha.CollectionFieldMetadata",
  () => [
    { no: 1, name: "field_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "field_type", kind: "enum", T: proto3.getEnumType(FieldType) },
    { no: 3, name: "field_format", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.CollectionField
 */
export const CollectionField = proto3.makeMessageType(
  "api.v0alpha.CollectionField",
  () => [
    { no: 1, name: "field_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "field_value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.GetCollectionReq
 */
export const GetCollectionReq = proto3.makeMessageType(
  "api.v0alpha.GetCollectionReq",
  () => [
    { no: 3, name: "collection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.StreamCollectionReq
 */
export const StreamCollectionReq = proto3.makeMessageType(
  "api.v0alpha.StreamCollectionReq",
  () => [
    { no: 3, name: "collection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.DeleteCollectionReq
 */
export const DeleteCollectionReq = proto3.makeMessageType(
  "api.v0alpha.DeleteCollectionReq",
  () => [
    { no: 3, name: "collection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.ResetCollectionReq
 */
export const ResetCollectionReq = proto3.makeMessageType(
  "api.v0alpha.ResetCollectionReq",
  () => [
    { no: 3, name: "collection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.ListCollectionsReq
 */
export const ListCollectionsReq = proto3.makeMessageType(
  "api.v0alpha.ListCollectionsReq",
  [],
);

/**
 * @generated from message api.v0alpha.ListCollectionsRes
 */
export const ListCollectionsRes = proto3.makeMessageType(
  "api.v0alpha.ListCollectionsRes",
  () => [
    { no: 1, name: "collections", kind: "message", T: CollectionMetadata, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.SearchCollectionsPaginatedReq
 */
export const SearchCollectionsPaginatedReq = proto3.makeMessageType(
  "api.v0alpha.SearchCollectionsPaginatedReq",
  () => [
    { no: 3, name: "collection_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "search", kind: "message", T: Search },
    { no: 5, name: "from", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "page_size", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message api.v0alpha.Search
 */
export const Search = proto3.makeMessageType(
  "api.v0alpha.Search",
  () => [
    { no: 1, name: "term", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "fuzziness", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "substring", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "negate", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "case_sensitive", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message api.v0alpha.PaginatedSearchRes
 */
export const PaginatedSearchRes = proto3.makeMessageType(
  "api.v0alpha.PaginatedSearchRes",
  () => [
    { no: 1, name: "entries", kind: "message", T: CollectionEntry, repeated: true },
    { no: 2, name: "total", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message api.v0alpha.GetCollectionEntriesReq
 */
export const GetCollectionEntriesReq = proto3.makeMessageType(
  "api.v0alpha.GetCollectionEntriesReq",
  () => [
    { no: 3, name: "collection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "from", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "page_size", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "search_after_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.GetCollectionEntriesRes
 */
export const GetCollectionEntriesRes = proto3.makeMessageType(
  "api.v0alpha.GetCollectionEntriesRes",
  () => [
    { no: 1, name: "metadata", kind: "message", T: CollectionMetadata },
    { no: 2, name: "entries", kind: "message", T: CollectionEntry, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.DeleteCollectionEntryReq
 */
export const DeleteCollectionEntryReq = proto3.makeMessageType(
  "api.v0alpha.DeleteCollectionEntryReq",
  () => [
    { no: 3, name: "collection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "entry_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.ListCampaignLinksRes
 */
export const ListCampaignLinksRes = proto3.makeMessageType(
  "api.v0alpha.ListCampaignLinksRes",
  () => [
    { no: 1, name: "Links", kind: "message", T: Link, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.Link
 */
export const Link = proto3.makeMessageType(
  "api.v0alpha.Link",
  () => [
    { no: 1, name: "xml_client_prop_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.CjsSearchField
 */
export const CjsSearchField = proto3.makeMessageType(
  "api.v0alpha.CjsSearchField",
  () => [
    { no: 1, name: "cjs_search_field_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "cjs_search_definition_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "field_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "field_type", kind: "enum", T: proto3.getEnumType(FieldType) },
    { no: 5, name: "field_value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.CjsSearchDefinitionMetadata
 */
export const CjsSearchDefinitionMetadata = proto3.makeMessageType(
  "api.v0alpha.CjsSearchDefinitionMetadata",
  () => [
    { no: 1, name: "cjs_search_definition_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "deleted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "exec_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 8, name: "exec_success", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 9, name: "exec_fail", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 10, name: "created_date", kind: "message", T: Timestamp$1 },
    { no: 11, name: "last_edited", kind: "message", T: Timestamp$1 },
  ],
);

/**
 * @generated from message api.v0alpha.CjsSearchDefinition
 */
export const CjsSearchDefinition = proto3.makeMessageType(
  "api.v0alpha.CjsSearchDefinition",
  () => [
    { no: 1, name: "metadata", kind: "message", T: CjsSearchDefinitionMetadata },
    { no: 2, name: "search_fields", kind: "message", T: CjsSearchField, repeated: true },
    { no: 3, name: "whitelisted_return_fields", kind: "message", T: CjsSearchField, repeated: true },
    { no: 4, name: "blacklisted_return_fields", kind: "message", T: CjsSearchField, repeated: true },
    { no: 5, name: "unique_identifiers", kind: "message", T: CjsSearchField, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.GetCjsSearchDefinitionReq
 */
export const GetCjsSearchDefinitionReq = proto3.makeMessageType(
  "api.v0alpha.GetCjsSearchDefinitionReq",
  () => [
    { no: 1, name: "cjs_search_definition_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.DeleteCjsSearchDefinitionReq
 */
export const DeleteCjsSearchDefinitionReq = proto3.makeMessageType(
  "api.v0alpha.DeleteCjsSearchDefinitionReq",
  () => [
    { no: 1, name: "cjs_search_definition_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.ListCjsSearchDefinitionsReq
 */
export const ListCjsSearchDefinitionsReq = proto3.makeMessageType(
  "api.v0alpha.ListCjsSearchDefinitionsReq",
  [],
);

/**
 * @generated from message api.v0alpha.ListCjsSearchDefinitionsRes
 */
export const ListCjsSearchDefinitionsRes = proto3.makeMessageType(
  "api.v0alpha.ListCjsSearchDefinitionsRes",
  () => [
    { no: 1, name: "definitions", kind: "message", T: CjsSearchDefinitionMetadata, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.ExecuteCjsSearchDefinitionReq
 */
export const ExecuteCjsSearchDefinitionReq = proto3.makeMessageType(
  "api.v0alpha.ExecuteCjsSearchDefinitionReq",
  () => [
    { no: 1, name: "search_definition_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "search_fields", kind: "message", T: CjsExecuteSearchField, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.ExecuteCjsSearchDefinitionRes
 */
export const ExecuteCjsSearchDefinitionRes = proto3.makeMessageType(
  "api.v0alpha.ExecuteCjsSearchDefinitionRes",
  () => [
    { no: 1, name: "collection_entries", kind: "message", T: CollectionEntries, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.CollectionEntries
 */
export const CollectionEntries = proto3.makeMessageType(
  "api.v0alpha.CollectionEntries",
  () => [
    { no: 1, name: "metadata", kind: "message", T: CollectionMetadata },
    { no: 2, name: "entries", kind: "message", T: CollectionEntry, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.CjsExecuteSearchField
 */
export const CjsExecuteSearchField = proto3.makeMessageType(
  "api.v0alpha.CjsExecuteSearchField",
  () => [
    { no: 1, name: "field_name", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "field" },
    { no: 2, name: "field_type", kind: "enum", T: proto3.getEnumType(FieldType), oneof: "field" },
    { no: 3, name: "field_value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.CjsSecureSearchCriteriaMetadata
 */
export const CjsSecureSearchCriteriaMetadata = proto3.makeMessageType(
  "api.v0alpha.CjsSecureSearchCriteriaMetadata",
  () => [
    { no: 1, name: "cjs_secure_search_criteria_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "deleted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 10, name: "created_on", kind: "message", T: Timestamp$1 },
    { no: 11, name: "last_updated", kind: "message", T: Timestamp$1 },
  ],
);

/**
 * @generated from message api.v0alpha.CjsSecureSearchCriteria
 */
export const CjsSecureSearchCriteria = proto3.makeMessageType(
  "api.v0alpha.CjsSecureSearchCriteria",
  () => [
    { no: 1, name: "metadata", kind: "message", T: CjsSecureSearchCriteriaMetadata },
    { no: 2, name: "fields", kind: "message", T: CjsSecureSearchCriteriaField, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.GetCjsSecureSearchCriteriaReq
 */
export const GetCjsSecureSearchCriteriaReq = proto3.makeMessageType(
  "api.v0alpha.GetCjsSecureSearchCriteriaReq",
  [],
);

/**
 * @generated from message api.v0alpha.CjsSecureSearchCriteriaField
 */
export const CjsSecureSearchCriteriaField = proto3.makeMessageType(
  "api.v0alpha.CjsSecureSearchCriteriaField",
  () => [
    { no: 1, name: "cjs_secure_search_criteria_field_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "cjs_secure_search_criteria_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "field_type", kind: "enum", T: proto3.getEnumType(FieldType) },
  ],
);

/**
 * @generated from message api.v0alpha.SplitCriteria
 */
export const SplitCriteria = proto3.makeMessageType(
  "api.v0alpha.SplitCriteria",
  () => [
    { no: 1, name: "unique", kind: "message", T: SplitByUnique, oneof: "action" },
    { no: 2, name: "max_size", kind: "message", T: SplitByMaxSize, oneof: "action" },
    { no: 3, name: "equal_parts", kind: "message", T: SplitByEqualParts, oneof: "action" },
  ],
);

/**
 * @generated from message api.v0alpha.UniquePair
 */
export const UniquePair = proto3.makeMessageType(
  "api.v0alpha.UniquePair",
  () => [
    { no: 1, name: "split_on_fields", kind: "message", T: FieldIndex },
    { no: 2, name: "split_value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.SplitByNamedUnique
 */
export const SplitByNamedUnique = proto3.makeMessageType(
  "api.v0alpha.SplitByNamedUnique",
  () => [
    { no: 1, name: "named_fields", kind: "message", T: UniquePair, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.SplitByUnique
 */
export const SplitByUnique = proto3.makeMessageType(
  "api.v0alpha.SplitByUnique",
  () => [
    { no: 1, name: "split_on_fields", kind: "message", T: FieldIndex, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.SplitByMaxSize
 */
export const SplitByMaxSize = proto3.makeMessageType(
  "api.v0alpha.SplitByMaxSize",
  () => [
    { no: 1, name: "max_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * @generated from message api.v0alpha.SplitByEqualParts
 */
export const SplitByEqualParts = proto3.makeMessageType(
  "api.v0alpha.SplitByEqualParts",
  () => [
    { no: 1, name: "part_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * EHR EPIC
 *
 * @generated from message api.v0alpha.EpicEntrypoint
 */
export const EpicEntrypoint = proto3.makeMessageType(
  "api.v0alpha.EpicEntrypoint",
  () => [
    { no: 2, name: "cron", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "max_wait_time", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 4, name: "entity_types", kind: "enum", T: proto3.getEnumType(EpicEntityType), repeated: true },
    { no: 5, name: "group_base_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "group_fhir_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "runtime_values", kind: "message", T: RuntimeValues },
    { no: 8, name: "flush_page_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 9, name: "flush_minute_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 10, name: "flush_during_check", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 11, name: "timezone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * These values are invisible to the user, and null in the lms_elements table.
 * These will be used during the processing of the event.
 *
 * @generated from message api.v0alpha.RuntimeValues
 */
export const RuntimeValues = proto3.makeMessageType(
  "api.v0alpha.RuntimeValues",
  () => [
    { no: 1, name: "state", kind: "enum", T: proto3.getEnumType(EventState) },
    { no: 2, name: "access_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "check_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "data_urls", kind: "message", T: EntityURL, repeated: true },
    { no: 5, name: "current_iteration", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 6, name: "total_seconds_spent", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 7, name: "errors", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 8, name: "total_not_ready_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 9, name: "file_ids", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 3 /* ScalarType.INT64 */} },
    { no: 10, name: "preliminary_vars", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 11, name: "parent_event_ids", kind: "scalar", T: 3 /* ScalarType.INT64 */, repeated: true },
    { no: 12, name: "no_more_pages", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 13, name: "total_fts_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * @generated from message api.v0alpha.EntityURL
 */
export const EntityURL = proto3.makeMessageType(
  "api.v0alpha.EntityURL",
  () => [
    { no: 1, name: "entity_type", kind: "enum", T: proto3.getEnumType(EpicEntityType) },
    { no: 2, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v0alpha.SampleRequest
 */
export const SampleRequest = proto3.makeMessageType(
  "api.v0alpha.SampleRequest",
  () => [
    { no: 2, name: "http_body", kind: "message", T: HttpBody },
  ],
);


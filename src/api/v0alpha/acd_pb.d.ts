// Copyright (c) 2019, TCN Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.3.0 with parameter "target=js+dts"
// @generated from file api/v0alpha/acd.proto (package api.v0alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { AgentSessionLogActionKey_Enum, AgentStatus_Enum, CallType_Enum, DTMFDigit, HoldType, ReplaceConfig_Enum, TransferMember } from "../commons/acd_pb.js";

/**
 * @generated from message api.v0alpha.AgentGetStatusRequest
 */
export declare class AgentGetStatusRequest extends Message<AgentGetStatusRequest> {
  /**
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  /**
   * @generated from field: bool perform_keep_alive = 2;
   */
  performKeepAlive: boolean;

  constructor(data?: PartialMessage<AgentGetStatusRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentGetStatusRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentGetStatusRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentGetStatusRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentGetStatusRequest;

  static equals(a: AgentGetStatusRequest | PlainMessage<AgentGetStatusRequest> | undefined, b: AgentGetStatusRequest | PlainMessage<AgentGetStatusRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentGetStatusReply
 */
export declare class AgentGetStatusReply extends Message<AgentGetStatusReply> {
  /**
   * @generated from field: int64 status = 2;
   */
  status: bigint;

  /**
   * @generated from field: api.commons.AgentStatus.Enum status_desc = 3;
   */
  statusDesc: AgentStatus_Enum;

  /**
   * @generated from field: bool paused = 4;
   */
  paused: boolean;

  /**
   * @generated from field: string queue = 5;
   */
  queue: string;

  /**
   * @generated from field: int64 current_session_id = 6;
   */
  currentSessionId: bigint;

  /**
   * @generated from field: int64 last_status_change = 7;
   */
  lastStatusChange: bigint;

  /**
   * @generated from field: bool monitoring = 8;
   */
  monitoring: boolean;

  /**
   * @generated from field: int64 calls_count = 9;
   */
  callsCount: bigint;

  /**
   * @generated from field: int64 last_sip_code = 10;
   */
  lastSipCode: bigint;

  /**
   * @generated from field: bool agent_peer_is_lost_call = 11;
   */
  agentPeerIsLostCall: boolean;

  /**
   * @generated from field: bool disabled = 12;
   */
  disabled: boolean;

  /**
   * @generated from field: bool keep_alive_succeeded = 13;
   */
  keepAliveSucceeded: boolean;

  /**
   * @generated from field: repeated api.commons.TransferMember transfer_members = 14;
   */
  transferMembers: TransferMember[];

  /**
   * @generated from field: bool agent_is_muted = 15;
   */
  agentIsMuted: boolean;

  constructor(data?: PartialMessage<AgentGetStatusReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentGetStatusReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentGetStatusReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentGetStatusReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentGetStatusReply;

  static equals(a: AgentGetStatusReply | PlainMessage<AgentGetStatusReply> | undefined, b: AgentGetStatusReply | PlainMessage<AgentGetStatusReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentGetConnectedPartyRequest
 */
export declare class AgentGetConnectedPartyRequest extends Message<AgentGetConnectedPartyRequest> {
  /**
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  /**
   * @generated from field: string user_id = 2;
   */
  userId: string;

  constructor(data?: PartialMessage<AgentGetConnectedPartyRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentGetConnectedPartyRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentGetConnectedPartyRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentGetConnectedPartyRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentGetConnectedPartyRequest;

  static equals(a: AgentGetConnectedPartyRequest | PlainMessage<AgentGetConnectedPartyRequest> | undefined, b: AgentGetConnectedPartyRequest | PlainMessage<AgentGetConnectedPartyRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentGetConnectedPartyReply
 */
export declare class AgentGetConnectedPartyReply extends Message<AgentGetConnectedPartyReply> {
  /**
   * @generated from field: int64 call_id = 2;
   */
  callId: bigint;

  /**
   * @generated from field: api.commons.CallType.Enum call_type = 3;
   */
  callType: CallType_Enum;

  constructor(data?: PartialMessage<AgentGetConnectedPartyReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentGetConnectedPartyReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentGetConnectedPartyReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentGetConnectedPartyReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentGetConnectedPartyReply;

  static equals(a: AgentGetConnectedPartyReply | PlainMessage<AgentGetConnectedPartyReply> | undefined, b: AgentGetConnectedPartyReply | PlainMessage<AgentGetConnectedPartyReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ManagerAgentGetConnectedPartyRequest
 */
export declare class ManagerAgentGetConnectedPartyRequest extends Message<ManagerAgentGetConnectedPartyRequest> {
  /**
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  /**
   * @generated from field: string user_id = 2;
   */
  userId: string;

  constructor(data?: PartialMessage<ManagerAgentGetConnectedPartyRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ManagerAgentGetConnectedPartyRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ManagerAgentGetConnectedPartyRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ManagerAgentGetConnectedPartyRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ManagerAgentGetConnectedPartyRequest;

  static equals(a: ManagerAgentGetConnectedPartyRequest | PlainMessage<ManagerAgentGetConnectedPartyRequest> | undefined, b: ManagerAgentGetConnectedPartyRequest | PlainMessage<ManagerAgentGetConnectedPartyRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ManagerAgentGetConnectedPartyReply
 */
export declare class ManagerAgentGetConnectedPartyReply extends Message<ManagerAgentGetConnectedPartyReply> {
  /**
   * @generated from field: int64 call_id = 2;
   */
  callId: bigint;

  /**
   * @generated from field: api.commons.CallType.Enum call_type = 3;
   */
  callType: CallType_Enum;

  constructor(data?: PartialMessage<ManagerAgentGetConnectedPartyReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ManagerAgentGetConnectedPartyReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ManagerAgentGetConnectedPartyReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ManagerAgentGetConnectedPartyReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ManagerAgentGetConnectedPartyReply;

  static equals(a: ManagerAgentGetConnectedPartyReply | PlainMessage<ManagerAgentGetConnectedPartyReply> | undefined, b: ManagerAgentGetConnectedPartyReply | PlainMessage<ManagerAgentGetConnectedPartyReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentIntercomRequest
 */
export declare class AgentIntercomRequest extends Message<AgentIntercomRequest> {
  /**
   * @generated from field: int64 target_agent_id = 3;
   */
  targetAgentId: bigint;

  /**
   * @generated from field: int64 session_sid = 4;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<AgentIntercomRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentIntercomRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentIntercomRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentIntercomRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentIntercomRequest;

  static equals(a: AgentIntercomRequest | PlainMessage<AgentIntercomRequest> | undefined, b: AgentIntercomRequest | PlainMessage<AgentIntercomRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentIntercomReply
 */
export declare class AgentIntercomReply extends Message<AgentIntercomReply> {
  constructor(data?: PartialMessage<AgentIntercomReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentIntercomReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentIntercomReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentIntercomReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentIntercomReply;

  static equals(a: AgentIntercomReply | PlainMessage<AgentIntercomReply> | undefined, b: AgentIntercomReply | PlainMessage<AgentIntercomReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentIntercomAcceptRequest
 */
export declare class AgentIntercomAcceptRequest extends Message<AgentIntercomAcceptRequest> {
  /**
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<AgentIntercomAcceptRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentIntercomAcceptRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentIntercomAcceptRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentIntercomAcceptRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentIntercomAcceptRequest;

  static equals(a: AgentIntercomAcceptRequest | PlainMessage<AgentIntercomAcceptRequest> | undefined, b: AgentIntercomAcceptRequest | PlainMessage<AgentIntercomAcceptRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentIntercomAcceptReply
 */
export declare class AgentIntercomAcceptReply extends Message<AgentIntercomAcceptReply> {
  constructor(data?: PartialMessage<AgentIntercomAcceptReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentIntercomAcceptReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentIntercomAcceptReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentIntercomAcceptReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentIntercomAcceptReply;

  static equals(a: AgentIntercomAcceptReply | PlainMessage<AgentIntercomAcceptReply> | undefined, b: AgentIntercomAcceptReply | PlainMessage<AgentIntercomAcceptReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentIntercomRejectRequest
 */
export declare class AgentIntercomRejectRequest extends Message<AgentIntercomRejectRequest> {
  /**
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<AgentIntercomRejectRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentIntercomRejectRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentIntercomRejectRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentIntercomRejectRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentIntercomRejectRequest;

  static equals(a: AgentIntercomRejectRequest | PlainMessage<AgentIntercomRejectRequest> | undefined, b: AgentIntercomRejectRequest | PlainMessage<AgentIntercomRejectRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentIntercomRejectReply
 */
export declare class AgentIntercomRejectReply extends Message<AgentIntercomRejectReply> {
  constructor(data?: PartialMessage<AgentIntercomRejectReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentIntercomRejectReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentIntercomRejectReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentIntercomRejectReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentIntercomRejectReply;

  static equals(a: AgentIntercomRejectReply | PlainMessage<AgentIntercomRejectReply> | undefined, b: AgentIntercomRejectReply | PlainMessage<AgentIntercomRejectReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentIntercomCancelRequest
 */
export declare class AgentIntercomCancelRequest extends Message<AgentIntercomCancelRequest> {
  /**
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<AgentIntercomCancelRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentIntercomCancelRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentIntercomCancelRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentIntercomCancelRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentIntercomCancelRequest;

  static equals(a: AgentIntercomCancelRequest | PlainMessage<AgentIntercomCancelRequest> | undefined, b: AgentIntercomCancelRequest | PlainMessage<AgentIntercomCancelRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentIntercomCancelReply
 */
export declare class AgentIntercomCancelReply extends Message<AgentIntercomCancelReply> {
  constructor(data?: PartialMessage<AgentIntercomCancelReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentIntercomCancelReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentIntercomCancelReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentIntercomCancelReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentIntercomCancelReply;

  static equals(a: AgentIntercomCancelReply | PlainMessage<AgentIntercomCancelReply> | undefined, b: AgentIntercomCancelReply | PlainMessage<AgentIntercomCancelReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.DialManualPrepareRequest
 */
export declare class DialManualPrepareRequest extends Message<DialManualPrepareRequest> {
  /**
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<DialManualPrepareRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.DialManualPrepareRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DialManualPrepareRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DialManualPrepareRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DialManualPrepareRequest;

  static equals(a: DialManualPrepareRequest | PlainMessage<DialManualPrepareRequest> | undefined, b: DialManualPrepareRequest | PlainMessage<DialManualPrepareRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.DialManualPrepareReply
 */
export declare class DialManualPrepareReply extends Message<DialManualPrepareReply> {
  constructor(data?: PartialMessage<DialManualPrepareReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.DialManualPrepareReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DialManualPrepareReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DialManualPrepareReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DialManualPrepareReply;

  static equals(a: DialManualPrepareReply | PlainMessage<DialManualPrepareReply> | undefined, b: DialManualPrepareReply | PlainMessage<DialManualPrepareReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.DialManualCancelRequest
 */
export declare class DialManualCancelRequest extends Message<DialManualCancelRequest> {
  /**
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<DialManualCancelRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.DialManualCancelRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DialManualCancelRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DialManualCancelRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DialManualCancelRequest;

  static equals(a: DialManualCancelRequest | PlainMessage<DialManualCancelRequest> | undefined, b: DialManualCancelRequest | PlainMessage<DialManualCancelRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.DialManualCancelReply
 */
export declare class DialManualCancelReply extends Message<DialManualCancelReply> {
  constructor(data?: PartialMessage<DialManualCancelReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.DialManualCancelReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DialManualCancelReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DialManualCancelReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DialManualCancelReply;

  static equals(a: DialManualCancelReply | PlainMessage<DialManualCancelReply> | undefined, b: DialManualCancelReply | PlainMessage<DialManualCancelReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.DialPreviewPrepareRequest
 */
export declare class DialPreviewPrepareRequest extends Message<DialPreviewPrepareRequest> {
  /**
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<DialPreviewPrepareRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.DialPreviewPrepareRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DialPreviewPrepareRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DialPreviewPrepareRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DialPreviewPrepareRequest;

  static equals(a: DialPreviewPrepareRequest | PlainMessage<DialPreviewPrepareRequest> | undefined, b: DialPreviewPrepareRequest | PlainMessage<DialPreviewPrepareRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.DialPreviewPrepareReply
 */
export declare class DialPreviewPrepareReply extends Message<DialPreviewPrepareReply> {
  constructor(data?: PartialMessage<DialPreviewPrepareReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.DialPreviewPrepareReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DialPreviewPrepareReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DialPreviewPrepareReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DialPreviewPrepareReply;

  static equals(a: DialPreviewPrepareReply | PlainMessage<DialPreviewPrepareReply> | undefined, b: DialPreviewPrepareReply | PlainMessage<DialPreviewPrepareReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentPauseRequest
 */
export declare class AgentPauseRequest extends Message<AgentPauseRequest> {
  /**
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  /**
   * @generated from field: string reason = 2;
   */
  reason: string;

  constructor(data?: PartialMessage<AgentPauseRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentPauseRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentPauseRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentPauseRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentPauseRequest;

  static equals(a: AgentPauseRequest | PlainMessage<AgentPauseRequest> | undefined, b: AgentPauseRequest | PlainMessage<AgentPauseRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentPauseReply
 */
export declare class AgentPauseReply extends Message<AgentPauseReply> {
  constructor(data?: PartialMessage<AgentPauseReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentPauseReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentPauseReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentPauseReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentPauseReply;

  static equals(a: AgentPauseReply | PlainMessage<AgentPauseReply> | undefined, b: AgentPauseReply | PlainMessage<AgentPauseReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentSetReadyRequest
 */
export declare class AgentSetReadyRequest extends Message<AgentSetReadyRequest> {
  /**
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<AgentSetReadyRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentSetReadyRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentSetReadyRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentSetReadyRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentSetReadyRequest;

  static equals(a: AgentSetReadyRequest | PlainMessage<AgentSetReadyRequest> | undefined, b: AgentSetReadyRequest | PlainMessage<AgentSetReadyRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentSetReadyReply
 */
export declare class AgentSetReadyReply extends Message<AgentSetReadyReply> {
  constructor(data?: PartialMessage<AgentSetReadyReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentSetReadyReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentSetReadyReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentSetReadyReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentSetReadyReply;

  static equals(a: AgentSetReadyReply | PlainMessage<AgentSetReadyReply> | undefined, b: AgentSetReadyReply | PlainMessage<AgentSetReadyReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentGUIBusyRequest
 */
export declare class AgentGUIBusyRequest extends Message<AgentGUIBusyRequest> {
  /**
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<AgentGUIBusyRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentGUIBusyRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentGUIBusyRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentGUIBusyRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentGUIBusyRequest;

  static equals(a: AgentGUIBusyRequest | PlainMessage<AgentGUIBusyRequest> | undefined, b: AgentGUIBusyRequest | PlainMessage<AgentGUIBusyRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentGUIBusyReply
 */
export declare class AgentGUIBusyReply extends Message<AgentGUIBusyReply> {
  constructor(data?: PartialMessage<AgentGUIBusyReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentGUIBusyReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentGUIBusyReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentGUIBusyReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentGUIBusyReply;

  static equals(a: AgentGUIBusyReply | PlainMessage<AgentGUIBusyReply> | undefined, b: AgentGUIBusyReply | PlainMessage<AgentGUIBusyReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentDisconnectRequest
 */
export declare class AgentDisconnectRequest extends Message<AgentDisconnectRequest> {
  /**
   * TODO: reason - will need to be converted to use an ENUM.
   *
   * @generated from field: string reason = 1;
   */
  reason: string;

  /**
   * @generated from field: int64 session_sid = 2;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<AgentDisconnectRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentDisconnectRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentDisconnectRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentDisconnectRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentDisconnectRequest;

  static equals(a: AgentDisconnectRequest | PlainMessage<AgentDisconnectRequest> | undefined, b: AgentDisconnectRequest | PlainMessage<AgentDisconnectRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentDisconnectReply
 */
export declare class AgentDisconnectReply extends Message<AgentDisconnectReply> {
  constructor(data?: PartialMessage<AgentDisconnectReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentDisconnectReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentDisconnectReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentDisconnectReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentDisconnectReply;

  static equals(a: AgentDisconnectReply | PlainMessage<AgentDisconnectReply> | undefined, b: AgentDisconnectReply | PlainMessage<AgentDisconnectReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentSessionEventReq
 */
export declare class AgentSessionEventReq extends Message<AgentSessionEventReq> {
  /**
   * @generated from field: int64 agent_session_sid = 3;
   */
  agentSessionSid: bigint;

  /**
   * @generated from field: api.commons.AgentSessionLogActionKey.Enum action_key = 10;
   */
  actionKey: AgentSessionLogActionKey_Enum;

  /**
   * @generated from field: string action_value = 11;
   */
  actionValue: string;

  constructor(data?: PartialMessage<AgentSessionEventReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentSessionEventReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentSessionEventReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentSessionEventReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentSessionEventReq;

  static equals(a: AgentSessionEventReq | PlainMessage<AgentSessionEventReq> | undefined, b: AgentSessionEventReq | PlainMessage<AgentSessionEventReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentSessionEventRes
 */
export declare class AgentSessionEventRes extends Message<AgentSessionEventRes> {
  constructor(data?: PartialMessage<AgentSessionEventRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentSessionEventRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentSessionEventRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentSessionEventRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentSessionEventRes;

  static equals(a: AgentSessionEventRes | PlainMessage<AgentSessionEventRes> | undefined, b: AgentSessionEventRes | PlainMessage<AgentSessionEventRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.CallerRequeueRequest
 */
export declare class CallerRequeueRequest extends Message<CallerRequeueRequest> {
  /**
   * @generated from field: string new_config_folder = 3;
   */
  newConfigFolder: string;

  /**
   * @generated from field: map<string, bool> skills = 4;
   */
  skills: { [key: string]: boolean };

  /**
   * @generated from field: bool replace_skills = 5;
   */
  replaceSkills: boolean;

  /**
   * @generated from field: api.commons.ReplaceConfig.Enum replace_config = 6;
   */
  replaceConfig: ReplaceConfig_Enum;

  /**
   * @generated from field: int64 session_sid = 7;
   */
  sessionSid: bigint;

  /**
   * the voicemail extesion to use for the caller
   *
   * @generated from field: string voicemail_box = 8;
   */
  voicemailBox: string;

  constructor(data?: PartialMessage<CallerRequeueRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.CallerRequeueRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CallerRequeueRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CallerRequeueRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CallerRequeueRequest;

  static equals(a: CallerRequeueRequest | PlainMessage<CallerRequeueRequest> | undefined, b: CallerRequeueRequest | PlainMessage<CallerRequeueRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.CallerRequeueReply
 */
export declare class CallerRequeueReply extends Message<CallerRequeueReply> {
  constructor(data?: PartialMessage<CallerRequeueReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.CallerRequeueReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CallerRequeueReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CallerRequeueReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CallerRequeueReply;

  static equals(a: CallerRequeueReply | PlainMessage<CallerRequeueReply> | undefined, b: CallerRequeueReply | PlainMessage<CallerRequeueReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.TransferWarmToAgentCancelRequest
 */
export declare class TransferWarmToAgentCancelRequest extends Message<TransferWarmToAgentCancelRequest> {
  /**
   * @generated from field: int64 session_sid = 4;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<TransferWarmToAgentCancelRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.TransferWarmToAgentCancelRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferWarmToAgentCancelRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferWarmToAgentCancelRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferWarmToAgentCancelRequest;

  static equals(a: TransferWarmToAgentCancelRequest | PlainMessage<TransferWarmToAgentCancelRequest> | undefined, b: TransferWarmToAgentCancelRequest | PlainMessage<TransferWarmToAgentCancelRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.TransferWarmToAgentCancelReply
 */
export declare class TransferWarmToAgentCancelReply extends Message<TransferWarmToAgentCancelReply> {
  constructor(data?: PartialMessage<TransferWarmToAgentCancelReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.TransferWarmToAgentCancelReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferWarmToAgentCancelReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferWarmToAgentCancelReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferWarmToAgentCancelReply;

  static equals(a: TransferWarmToAgentCancelReply | PlainMessage<TransferWarmToAgentCancelReply> | undefined, b: TransferWarmToAgentCancelReply | PlainMessage<TransferWarmToAgentCancelReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.TransferWarmToOutboundCancelRequest
 */
export declare class TransferWarmToOutboundCancelRequest extends Message<TransferWarmToOutboundCancelRequest> {
  /**
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<TransferWarmToOutboundCancelRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.TransferWarmToOutboundCancelRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferWarmToOutboundCancelRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferWarmToOutboundCancelRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferWarmToOutboundCancelRequest;

  static equals(a: TransferWarmToOutboundCancelRequest | PlainMessage<TransferWarmToOutboundCancelRequest> | undefined, b: TransferWarmToOutboundCancelRequest | PlainMessage<TransferWarmToOutboundCancelRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.TransferWarmToOutboundCancelReply
 */
export declare class TransferWarmToOutboundCancelReply extends Message<TransferWarmToOutboundCancelReply> {
  constructor(data?: PartialMessage<TransferWarmToOutboundCancelReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.TransferWarmToOutboundCancelReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferWarmToOutboundCancelReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferWarmToOutboundCancelReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferWarmToOutboundCancelReply;

  static equals(a: TransferWarmToOutboundCancelReply | PlainMessage<TransferWarmToOutboundCancelReply> | undefined, b: TransferWarmToOutboundCancelReply | PlainMessage<TransferWarmToOutboundCancelReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.TransferWarmToAgentApproveRequest
 */
export declare class TransferWarmToAgentApproveRequest extends Message<TransferWarmToAgentApproveRequest> {
  /**
   * @generated from field: int64 session_sid = 4;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<TransferWarmToAgentApproveRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.TransferWarmToAgentApproveRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferWarmToAgentApproveRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferWarmToAgentApproveRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferWarmToAgentApproveRequest;

  static equals(a: TransferWarmToAgentApproveRequest | PlainMessage<TransferWarmToAgentApproveRequest> | undefined, b: TransferWarmToAgentApproveRequest | PlainMessage<TransferWarmToAgentApproveRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.TransferWarmToAgentApproveReply
 */
export declare class TransferWarmToAgentApproveReply extends Message<TransferWarmToAgentApproveReply> {
  constructor(data?: PartialMessage<TransferWarmToAgentApproveReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.TransferWarmToAgentApproveReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferWarmToAgentApproveReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferWarmToAgentApproveReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferWarmToAgentApproveReply;

  static equals(a: TransferWarmToAgentApproveReply | PlainMessage<TransferWarmToAgentApproveReply> | undefined, b: TransferWarmToAgentApproveReply | PlainMessage<TransferWarmToAgentApproveReply> | undefined): boolean;
}

/**
 * the request used to approve a warm outbound transfer
 *
 * @generated from message api.v0alpha.TransferWarmToOutboundApproveRequest
 */
export declare class TransferWarmToOutboundApproveRequest extends Message<TransferWarmToOutboundApproveRequest> {
  /**
   * the session sid of the current agent
   *
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  /**
   * the ids of the transfer member to want to be joined with the caller
   * it will hang up all others (you don't need need to include the caller)
   * If you leave this blank/empty it will include all members in the approval
   *
   * @generated from field: repeated string member_identifiers = 2;
   */
  memberIdentifiers: string[];

  constructor(data?: PartialMessage<TransferWarmToOutboundApproveRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.TransferWarmToOutboundApproveRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferWarmToOutboundApproveRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferWarmToOutboundApproveRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferWarmToOutboundApproveRequest;

  static equals(a: TransferWarmToOutboundApproveRequest | PlainMessage<TransferWarmToOutboundApproveRequest> | undefined, b: TransferWarmToOutboundApproveRequest | PlainMessage<TransferWarmToOutboundApproveRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.TransferWarmToOutboundApproveReply
 */
export declare class TransferWarmToOutboundApproveReply extends Message<TransferWarmToOutboundApproveReply> {
  constructor(data?: PartialMessage<TransferWarmToOutboundApproveReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.TransferWarmToOutboundApproveReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferWarmToOutboundApproveReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferWarmToOutboundApproveReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferWarmToOutboundApproveReply;

  static equals(a: TransferWarmToOutboundApproveReply | PlainMessage<TransferWarmToOutboundApproveReply> | undefined, b: TransferWarmToOutboundApproveReply | PlainMessage<TransferWarmToOutboundApproveReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.CallerSendToVoicemailRequest
 */
export declare class CallerSendToVoicemailRequest extends Message<CallerSendToVoicemailRequest> {
  /**
   * @generated from field: string mailbox = 3;
   */
  mailbox: string;

  /**
   * @generated from field: int64 session_sid = 4;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<CallerSendToVoicemailRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.CallerSendToVoicemailRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CallerSendToVoicemailRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CallerSendToVoicemailRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CallerSendToVoicemailRequest;

  static equals(a: CallerSendToVoicemailRequest | PlainMessage<CallerSendToVoicemailRequest> | undefined, b: CallerSendToVoicemailRequest | PlainMessage<CallerSendToVoicemailRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.CallerSendToVoicemailReply
 */
export declare class CallerSendToVoicemailReply extends Message<CallerSendToVoicemailReply> {
  constructor(data?: PartialMessage<CallerSendToVoicemailReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.CallerSendToVoicemailReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CallerSendToVoicemailReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CallerSendToVoicemailReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CallerSendToVoicemailReply;

  static equals(a: CallerSendToVoicemailReply | PlainMessage<CallerSendToVoicemailReply> | undefined, b: CallerSendToVoicemailReply | PlainMessage<CallerSendToVoicemailReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentInviteTransferCallerToConferenceRequest
 */
export declare class AgentInviteTransferCallerToConferenceRequest extends Message<AgentInviteTransferCallerToConferenceRequest> {
  /**
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<AgentInviteTransferCallerToConferenceRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentInviteTransferCallerToConferenceRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentInviteTransferCallerToConferenceRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentInviteTransferCallerToConferenceRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentInviteTransferCallerToConferenceRequest;

  static equals(a: AgentInviteTransferCallerToConferenceRequest | PlainMessage<AgentInviteTransferCallerToConferenceRequest> | undefined, b: AgentInviteTransferCallerToConferenceRequest | PlainMessage<AgentInviteTransferCallerToConferenceRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentInviteTransferCallerToConferenceReply
 */
export declare class AgentInviteTransferCallerToConferenceReply extends Message<AgentInviteTransferCallerToConferenceReply> {
  constructor(data?: PartialMessage<AgentInviteTransferCallerToConferenceReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentInviteTransferCallerToConferenceReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentInviteTransferCallerToConferenceReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentInviteTransferCallerToConferenceReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentInviteTransferCallerToConferenceReply;

  static equals(a: AgentInviteTransferCallerToConferenceReply | PlainMessage<AgentInviteTransferCallerToConferenceReply> | undefined, b: AgentInviteTransferCallerToConferenceReply | PlainMessage<AgentInviteTransferCallerToConferenceReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentMonitorCallsRequest
 */
export declare class AgentMonitorCallsRequest extends Message<AgentMonitorCallsRequest> {
  /**
   * @generated from field: bool monitor = 3;
   */
  monitor: boolean;

  /**
   * @generated from field: int64 session_sid = 4;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<AgentMonitorCallsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentMonitorCallsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentMonitorCallsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentMonitorCallsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentMonitorCallsRequest;

  static equals(a: AgentMonitorCallsRequest | PlainMessage<AgentMonitorCallsRequest> | undefined, b: AgentMonitorCallsRequest | PlainMessage<AgentMonitorCallsRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentMonitorCallsReply
 */
export declare class AgentMonitorCallsReply extends Message<AgentMonitorCallsReply> {
  constructor(data?: PartialMessage<AgentMonitorCallsReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentMonitorCallsReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentMonitorCallsReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentMonitorCallsReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentMonitorCallsReply;

  static equals(a: AgentMonitorCallsReply | PlainMessage<AgentMonitorCallsReply> | undefined, b: AgentMonitorCallsReply | PlainMessage<AgentMonitorCallsReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.TransferColdToOutboundRequest
 */
export declare class TransferColdToOutboundRequest extends Message<TransferColdToOutboundRequest> {
  /**
   * @generated from field: string caller_id = 3;
   */
  callerId: string;

  /**
   * @generated from field: string destination = 4;
   */
  destination: string;

  /**
   * @generated from field: repeated string reserved_carriers = 5;
   */
  reservedCarriers: string[];

  /**
   * @generated from field: int64 session_sid = 6;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<TransferColdToOutboundRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.TransferColdToOutboundRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferColdToOutboundRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferColdToOutboundRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferColdToOutboundRequest;

  static equals(a: TransferColdToOutboundRequest | PlainMessage<TransferColdToOutboundRequest> | undefined, b: TransferColdToOutboundRequest | PlainMessage<TransferColdToOutboundRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.TransferColdToOutboundReply
 */
export declare class TransferColdToOutboundReply extends Message<TransferColdToOutboundReply> {
  constructor(data?: PartialMessage<TransferColdToOutboundReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.TransferColdToOutboundReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferColdToOutboundReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferColdToOutboundReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferColdToOutboundReply;

  static equals(a: TransferColdToOutboundReply | PlainMessage<TransferColdToOutboundReply> | undefined, b: TransferColdToOutboundReply | PlainMessage<TransferColdToOutboundReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.TransferColdToAgentRequest
 */
export declare class TransferColdToAgentRequest extends Message<TransferColdToAgentRequest> {
  /**
   * @generated from field: int64 destination_agent_id = 3;
   */
  destinationAgentId: bigint;

  /**
   * @generated from field: int64 session_sid = 4;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<TransferColdToAgentRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.TransferColdToAgentRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferColdToAgentRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferColdToAgentRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferColdToAgentRequest;

  static equals(a: TransferColdToAgentRequest | PlainMessage<TransferColdToAgentRequest> | undefined, b: TransferColdToAgentRequest | PlainMessage<TransferColdToAgentRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.TransferColdToAgentReply
 */
export declare class TransferColdToAgentReply extends Message<TransferColdToAgentReply> {
  constructor(data?: PartialMessage<TransferColdToAgentReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.TransferColdToAgentReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferColdToAgentReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferColdToAgentReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferColdToAgentReply;

  static equals(a: TransferColdToAgentReply | PlainMessage<TransferColdToAgentReply> | undefined, b: TransferColdToAgentReply | PlainMessage<TransferColdToAgentReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.TransferWarmToOutboundStartRequest
 */
export declare class TransferWarmToOutboundStartRequest extends Message<TransferWarmToOutboundStartRequest> {
  /**
   * @generated from field: string caller_id = 3;
   */
  callerId: string;

  /**
   * @generated from field: string destination = 4;
   */
  destination: string;

  /**
   * @generated from field: repeated string reserved_carriers = 5;
   */
  reservedCarriers: string[];

  /**
   * @generated from field: bool caller_hold = 6;
   */
  callerHold: boolean;

  /**
   * @generated from field: int64 session_sid = 7;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<TransferWarmToOutboundStartRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.TransferWarmToOutboundStartRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferWarmToOutboundStartRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferWarmToOutboundStartRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferWarmToOutboundStartRequest;

  static equals(a: TransferWarmToOutboundStartRequest | PlainMessage<TransferWarmToOutboundStartRequest> | undefined, b: TransferWarmToOutboundStartRequest | PlainMessage<TransferWarmToOutboundStartRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.TransferWarmToOutboundStartReply
 */
export declare class TransferWarmToOutboundStartReply extends Message<TransferWarmToOutboundStartReply> {
  constructor(data?: PartialMessage<TransferWarmToOutboundStartReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.TransferWarmToOutboundStartReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferWarmToOutboundStartReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferWarmToOutboundStartReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferWarmToOutboundStartReply;

  static equals(a: TransferWarmToOutboundStartReply | PlainMessage<TransferWarmToOutboundStartReply> | undefined, b: TransferWarmToOutboundStartReply | PlainMessage<TransferWarmToOutboundStartReply> | undefined): boolean;
}

/**
 * request to add a new outbound transfer member
 *
 * @generated from message api.v0alpha.CreateWarmOutboundTransferMemberRequest
 */
export declare class CreateWarmOutboundTransferMemberRequest extends Message<CreateWarmOutboundTransferMemberRequest> {
  /**
   * where the call should look like it comming from
   *
   * @generated from field: string caller_id = 3;
   */
  callerId: string;

  /**
   * where the call should go to
   *
   * @generated from field: string destination = 4;
   */
  destination: string;

  /**
   * specific carriers to use
   *
   * @generated from field: repeated string reserved_carriers = 5;
   */
  reservedCarriers: string[];

  /**
   * the session sid for the agent
   *
   * @generated from field: int64 session_sid = 6;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<CreateWarmOutboundTransferMemberRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.CreateWarmOutboundTransferMemberRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateWarmOutboundTransferMemberRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateWarmOutboundTransferMemberRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateWarmOutboundTransferMemberRequest;

  static equals(a: CreateWarmOutboundTransferMemberRequest | PlainMessage<CreateWarmOutboundTransferMemberRequest> | undefined, b: CreateWarmOutboundTransferMemberRequest | PlainMessage<CreateWarmOutboundTransferMemberRequest> | undefined): boolean;
}

/**
 * request to add a new outbound transfer member
 *
 * @generated from message api.v0alpha.CreateWarmOutboundTransferMemberReply
 */
export declare class CreateWarmOutboundTransferMemberReply extends Message<CreateWarmOutboundTransferMemberReply> {
  constructor(data?: PartialMessage<CreateWarmOutboundTransferMemberReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.CreateWarmOutboundTransferMemberReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateWarmOutboundTransferMemberReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateWarmOutboundTransferMemberReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateWarmOutboundTransferMemberReply;

  static equals(a: CreateWarmOutboundTransferMemberReply | PlainMessage<CreateWarmOutboundTransferMemberReply> | undefined, b: CreateWarmOutboundTransferMemberReply | PlainMessage<CreateWarmOutboundTransferMemberReply> | undefined): boolean;
}

/**
 * request to add a new outbound transfer member
 *
 * @generated from message api.v0alpha.RemoveTransferMemberRequest
 */
export declare class RemoveTransferMemberRequest extends Message<RemoveTransferMemberRequest> {
  /**
   * the id of the member to be hungup
   *
   * @generated from field: string member_identifier = 1;
   */
  memberIdentifier: string;

  /**
   * the session sid for the agent
   *
   * @generated from field: int64 session_sid = 2;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<RemoveTransferMemberRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.RemoveTransferMemberRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveTransferMemberRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveTransferMemberRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveTransferMemberRequest;

  static equals(a: RemoveTransferMemberRequest | PlainMessage<RemoveTransferMemberRequest> | undefined, b: RemoveTransferMemberRequest | PlainMessage<RemoveTransferMemberRequest> | undefined): boolean;
}

/**
 * request to hangup a transfer member
 *
 * @generated from message api.v0alpha.RemoveTransferMemberReply
 */
export declare class RemoveTransferMemberReply extends Message<RemoveTransferMemberReply> {
  constructor(data?: PartialMessage<RemoveTransferMemberReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.RemoveTransferMemberReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveTransferMemberReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveTransferMemberReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveTransferMemberReply;

  static equals(a: RemoveTransferMemberReply | PlainMessage<RemoveTransferMemberReply> | undefined, b: RemoveTransferMemberReply | PlainMessage<RemoveTransferMemberReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.TransferWarmToAgentStartRequest
 */
export declare class TransferWarmToAgentStartRequest extends Message<TransferWarmToAgentStartRequest> {
  /**
   * @generated from field: int64 destination_agent_id = 3;
   */
  destinationAgentId: bigint;

  /**
   * @generated from field: bool caller_hold = 4;
   */
  callerHold: boolean;

  /**
   * @generated from field: int64 session_sid = 5;
   */
  sessionSid: bigint;

  /**
   * @generated from field: map<string, bool> skills = 6;
   */
  skills: { [key: string]: boolean };

  constructor(data?: PartialMessage<TransferWarmToAgentStartRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.TransferWarmToAgentStartRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferWarmToAgentStartRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferWarmToAgentStartRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferWarmToAgentStartRequest;

  static equals(a: TransferWarmToAgentStartRequest | PlainMessage<TransferWarmToAgentStartRequest> | undefined, b: TransferWarmToAgentStartRequest | PlainMessage<TransferWarmToAgentStartRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.TransferWarmToAgentStartReply
 */
export declare class TransferWarmToAgentStartReply extends Message<TransferWarmToAgentStartReply> {
  constructor(data?: PartialMessage<TransferWarmToAgentStartReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.TransferWarmToAgentStartReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferWarmToAgentStartReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferWarmToAgentStartReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferWarmToAgentStartReply;

  static equals(a: TransferWarmToAgentStartReply | PlainMessage<TransferWarmToAgentStartReply> | undefined, b: TransferWarmToAgentStartReply | PlainMessage<TransferWarmToAgentStartReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentGetCallFromHoldRequest
 */
export declare class AgentGetCallFromHoldRequest extends Message<AgentGetCallFromHoldRequest> {
  /**
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<AgentGetCallFromHoldRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentGetCallFromHoldRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentGetCallFromHoldRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentGetCallFromHoldRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentGetCallFromHoldRequest;

  static equals(a: AgentGetCallFromHoldRequest | PlainMessage<AgentGetCallFromHoldRequest> | undefined, b: AgentGetCallFromHoldRequest | PlainMessage<AgentGetCallFromHoldRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentGetCallFromHoldReply
 */
export declare class AgentGetCallFromHoldReply extends Message<AgentGetCallFromHoldReply> {
  constructor(data?: PartialMessage<AgentGetCallFromHoldReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentGetCallFromHoldReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentGetCallFromHoldReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentGetCallFromHoldReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentGetCallFromHoldReply;

  static equals(a: AgentGetCallFromHoldReply | PlainMessage<AgentGetCallFromHoldReply> | undefined, b: AgentGetCallFromHoldReply | PlainMessage<AgentGetCallFromHoldReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentGetSpecificCallFromHoldRequest
 */
export declare class AgentGetSpecificCallFromHoldRequest extends Message<AgentGetSpecificCallFromHoldRequest> {
  /**
   * @generated from field: int64 call_id = 3;
   */
  callId: bigint;

  /**
   * @generated from field: api.commons.CallType.Enum call_type = 4;
   */
  callType: CallType_Enum;

  /**
   * @generated from field: int64 session_sid = 5;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<AgentGetSpecificCallFromHoldRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentGetSpecificCallFromHoldRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentGetSpecificCallFromHoldRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentGetSpecificCallFromHoldRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentGetSpecificCallFromHoldRequest;

  static equals(a: AgentGetSpecificCallFromHoldRequest | PlainMessage<AgentGetSpecificCallFromHoldRequest> | undefined, b: AgentGetSpecificCallFromHoldRequest | PlainMessage<AgentGetSpecificCallFromHoldRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentGetSpecificCallFromHoldReply
 */
export declare class AgentGetSpecificCallFromHoldReply extends Message<AgentGetSpecificCallFromHoldReply> {
  constructor(data?: PartialMessage<AgentGetSpecificCallFromHoldReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentGetSpecificCallFromHoldReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentGetSpecificCallFromHoldReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentGetSpecificCallFromHoldReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentGetSpecificCallFromHoldReply;

  static equals(a: AgentGetSpecificCallFromHoldReply | PlainMessage<AgentGetSpecificCallFromHoldReply> | undefined, b: AgentGetSpecificCallFromHoldReply | PlainMessage<AgentGetSpecificCallFromHoldReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentPutCallOnHoldRequest
 */
export declare class AgentPutCallOnHoldRequest extends Message<AgentPutCallOnHoldRequest> {
  /**
   * @generated from field: api.commons.HoldType hold_type = 1;
   */
  holdType: HoldType;

  /**
   * @generated from field: int64 session_sid = 2;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<AgentPutCallOnHoldRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentPutCallOnHoldRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentPutCallOnHoldRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentPutCallOnHoldRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentPutCallOnHoldRequest;

  static equals(a: AgentPutCallOnHoldRequest | PlainMessage<AgentPutCallOnHoldRequest> | undefined, b: AgentPutCallOnHoldRequest | PlainMessage<AgentPutCallOnHoldRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentPutCallOnHoldReply
 */
export declare class AgentPutCallOnHoldReply extends Message<AgentPutCallOnHoldReply> {
  constructor(data?: PartialMessage<AgentPutCallOnHoldReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentPutCallOnHoldReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentPutCallOnHoldReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentPutCallOnHoldReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentPutCallOnHoldReply;

  static equals(a: AgentPutCallOnHoldReply | PlainMessage<AgentPutCallOnHoldReply> | undefined, b: AgentPutCallOnHoldReply | PlainMessage<AgentPutCallOnHoldReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ACDGetAllAgentsStatusesRequest
 */
export declare class ACDGetAllAgentsStatusesRequest extends Message<ACDGetAllAgentsStatusesRequest> {
  /**
   * @generated from field: repeated string skills = 2;
   */
  skills: string[];

  /**
   * @generated from field: bool all_skills_required = 3;
   */
  allSkillsRequired: boolean;

  constructor(data?: PartialMessage<ACDGetAllAgentsStatusesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ACDGetAllAgentsStatusesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ACDGetAllAgentsStatusesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ACDGetAllAgentsStatusesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ACDGetAllAgentsStatusesRequest;

  static equals(a: ACDGetAllAgentsStatusesRequest | PlainMessage<ACDGetAllAgentsStatusesRequest> | undefined, b: ACDGetAllAgentsStatusesRequest | PlainMessage<ACDGetAllAgentsStatusesRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentStatusDetails
 */
export declare class AgentStatusDetails extends Message<AgentStatusDetails> {
  /**
   * @generated from field: int64 sid = 1;
   */
  sid: bigint;

  /**
   * @generated from field: int64 current_session_id = 2;
   */
  currentSessionId: bigint;

  /**
   * @generated from field: int64 status = 3;
   */
  status: bigint;

  /**
   * @generated from field: api.commons.AgentStatus.Enum status_desc = 4;
   */
  statusDesc: AgentStatus_Enum;

  /**
   * The users id
   *
   * @generated from field: string user_id = 5;
   */
  userId: string;

  constructor(data?: PartialMessage<AgentStatusDetails>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentStatusDetails";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentStatusDetails;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentStatusDetails;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentStatusDetails;

  static equals(a: AgentStatusDetails | PlainMessage<AgentStatusDetails> | undefined, b: AgentStatusDetails | PlainMessage<AgentStatusDetails> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.ACDGetAllAgentsStatusesReply
 */
export declare class ACDGetAllAgentsStatusesReply extends Message<ACDGetAllAgentsStatusesReply> {
  /**
   * @generated from field: repeated api.v0alpha.AgentStatusDetails agent_status_details = 1;
   */
  agentStatusDetails: AgentStatusDetails[];

  constructor(data?: PartialMessage<ACDGetAllAgentsStatusesReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.ACDGetAllAgentsStatusesReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ACDGetAllAgentsStatusesReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ACDGetAllAgentsStatusesReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ACDGetAllAgentsStatusesReply;

  static equals(a: ACDGetAllAgentsStatusesReply | PlainMessage<ACDGetAllAgentsStatusesReply> | undefined, b: ACDGetAllAgentsStatusesReply | PlainMessage<ACDGetAllAgentsStatusesReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentReceiveMessageRequest
 */
export declare class AgentReceiveMessageRequest extends Message<AgentReceiveMessageRequest> {
  /**
   * @generated from field: int64 minimum_timestamp = 3;
   */
  minimumTimestamp: bigint;

  /**
   * @generated from field: int64 session_sid = 4;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<AgentReceiveMessageRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentReceiveMessageRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentReceiveMessageRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentReceiveMessageRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentReceiveMessageRequest;

  static equals(a: AgentReceiveMessageRequest | PlainMessage<AgentReceiveMessageRequest> | undefined, b: AgentReceiveMessageRequest | PlainMessage<AgentReceiveMessageRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentReceiveMessageReply
 */
export declare class AgentReceiveMessageReply extends Message<AgentReceiveMessageReply> {
  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: int64 timestamp = 3;
   */
  timestamp: bigint;

  constructor(data?: PartialMessage<AgentReceiveMessageReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentReceiveMessageReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentReceiveMessageReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentReceiveMessageReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentReceiveMessageReply;

  static equals(a: AgentReceiveMessageReply | PlainMessage<AgentReceiveMessageReply> | undefined, b: AgentReceiveMessageReply | PlainMessage<AgentReceiveMessageReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentPBXRejectCallRequest
 */
export declare class AgentPBXRejectCallRequest extends Message<AgentPBXRejectCallRequest> {
  /**
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<AgentPBXRejectCallRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentPBXRejectCallRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentPBXRejectCallRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentPBXRejectCallRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentPBXRejectCallRequest;

  static equals(a: AgentPBXRejectCallRequest | PlainMessage<AgentPBXRejectCallRequest> | undefined, b: AgentPBXRejectCallRequest | PlainMessage<AgentPBXRejectCallRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentPBXRejectCallReply
 */
export declare class AgentPBXRejectCallReply extends Message<AgentPBXRejectCallReply> {
  constructor(data?: PartialMessage<AgentPBXRejectCallReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentPBXRejectCallReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentPBXRejectCallReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentPBXRejectCallReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentPBXRejectCallReply;

  static equals(a: AgentPBXRejectCallReply | PlainMessage<AgentPBXRejectCallReply> | undefined, b: AgentPBXRejectCallReply | PlainMessage<AgentPBXRejectCallReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentPBXApproveCallRequest
 */
export declare class AgentPBXApproveCallRequest extends Message<AgentPBXApproveCallRequest> {
  /**
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<AgentPBXApproveCallRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentPBXApproveCallRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentPBXApproveCallRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentPBXApproveCallRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentPBXApproveCallRequest;

  static equals(a: AgentPBXApproveCallRequest | PlainMessage<AgentPBXApproveCallRequest> | undefined, b: AgentPBXApproveCallRequest | PlainMessage<AgentPBXApproveCallRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentPBXApproveCallReply
 */
export declare class AgentPBXApproveCallReply extends Message<AgentPBXApproveCallReply> {
  constructor(data?: PartialMessage<AgentPBXApproveCallReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentPBXApproveCallReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentPBXApproveCallReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentPBXApproveCallReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentPBXApproveCallReply;

  static equals(a: AgentPBXApproveCallReply | PlainMessage<AgentPBXApproveCallReply> | undefined, b: AgentPBXApproveCallReply | PlainMessage<AgentPBXApproveCallReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.GetCallerLostPeerRequest
 */
export declare class GetCallerLostPeerRequest extends Message<GetCallerLostPeerRequest> {
  /**
   * @generated from field: int64 call_sid = 1;
   */
  callSid: bigint;

  /**
   * @generated from field: api.commons.CallType.Enum call_type = 2;
   */
  callType: CallType_Enum;

  constructor(data?: PartialMessage<GetCallerLostPeerRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.GetCallerLostPeerRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCallerLostPeerRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCallerLostPeerRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCallerLostPeerRequest;

  static equals(a: GetCallerLostPeerRequest | PlainMessage<GetCallerLostPeerRequest> | undefined, b: GetCallerLostPeerRequest | PlainMessage<GetCallerLostPeerRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.GetCallerLostPeerReply
 */
export declare class GetCallerLostPeerReply extends Message<GetCallerLostPeerReply> {
  /**
   * @generated from field: int64 hunt_group_sid = 2;
   */
  huntGroupSid: bigint;

  constructor(data?: PartialMessage<GetCallerLostPeerReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.GetCallerLostPeerReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCallerLostPeerReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCallerLostPeerReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCallerLostPeerReply;

  static equals(a: GetCallerLostPeerReply | PlainMessage<GetCallerLostPeerReply> | undefined, b: GetCallerLostPeerReply | PlainMessage<GetCallerLostPeerReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.CallerGetRawEventRequest
 */
export declare class CallerGetRawEventRequest extends Message<CallerGetRawEventRequest> {
  /**
   * @generated from field: int64 call_sid = 1;
   */
  callSid: bigint;

  /**
   * @generated from field: api.commons.CallType.Enum call_type = 2;
   */
  callType: CallType_Enum;

  constructor(data?: PartialMessage<CallerGetRawEventRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.CallerGetRawEventRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CallerGetRawEventRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CallerGetRawEventRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CallerGetRawEventRequest;

  static equals(a: CallerGetRawEventRequest | PlainMessage<CallerGetRawEventRequest> | undefined, b: CallerGetRawEventRequest | PlainMessage<CallerGetRawEventRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.CallerGetRawEventReply
 */
export declare class CallerGetRawEventReply extends Message<CallerGetRawEventReply> {
  /**
   * @generated from field: api.v0alpha.CallerEvent event = 1;
   */
  event?: CallerEvent;

  constructor(data?: PartialMessage<CallerGetRawEventReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.CallerGetRawEventReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CallerGetRawEventReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CallerGetRawEventReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CallerGetRawEventReply;

  static equals(a: CallerGetRawEventReply | PlainMessage<CallerGetRawEventReply> | undefined, b: CallerGetRawEventReply | PlainMessage<CallerGetRawEventReply> | undefined): boolean;
}

/**
 * This is the front end version of the caller event. If more data is needed we can add.
 *
 * @generated from message api.v0alpha.CallerEvent
 */
export declare class CallerEvent extends Message<CallerEvent> {
  /**
   * @generated from field: map<string, bool> skills = 19;
   */
  skills: { [key: string]: boolean };

  /**
   * @generated from field: map<string, bool> allSkills = 20;
   */
  allSkills: { [key: string]: boolean };

  constructor(data?: PartialMessage<CallerEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.CallerEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CallerEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CallerEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CallerEvent;

  static equals(a: CallerEvent | PlainMessage<CallerEvent> | undefined, b: CallerEvent | PlainMessage<CallerEvent> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.PeerAgentWithCallerRequest
 */
export declare class PeerAgentWithCallerRequest extends Message<PeerAgentWithCallerRequest> {
  /**
   * @generated from field: int64 call_sid = 1;
   */
  callSid: bigint;

  /**
   * @generated from field: api.commons.CallType.Enum call_type = 2;
   */
  callType: CallType_Enum;

  /**
   * @generated from field: int64 session_sid = 3;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<PeerAgentWithCallerRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.PeerAgentWithCallerRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PeerAgentWithCallerRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PeerAgentWithCallerRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PeerAgentWithCallerRequest;

  static equals(a: PeerAgentWithCallerRequest | PlainMessage<PeerAgentWithCallerRequest> | undefined, b: PeerAgentWithCallerRequest | PlainMessage<PeerAgentWithCallerRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.PeerAgentWithCallerReply
 */
export declare class PeerAgentWithCallerReply extends Message<PeerAgentWithCallerReply> {
  constructor(data?: PartialMessage<PeerAgentWithCallerReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.PeerAgentWithCallerReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PeerAgentWithCallerReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PeerAgentWithCallerReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PeerAgentWithCallerReply;

  static equals(a: PeerAgentWithCallerReply | PlainMessage<PeerAgentWithCallerReply> | undefined, b: PeerAgentWithCallerReply | PlainMessage<PeerAgentWithCallerReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.HoldTransferMemberReq
 */
export declare class HoldTransferMemberReq extends Message<HoldTransferMemberReq> {
  /**
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  /**
   * @generated from field: string member_identifier = 2;
   */
  memberIdentifier: string;

  constructor(data?: PartialMessage<HoldTransferMemberReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.HoldTransferMemberReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HoldTransferMemberReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HoldTransferMemberReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HoldTransferMemberReq;

  static equals(a: HoldTransferMemberReq | PlainMessage<HoldTransferMemberReq> | undefined, b: HoldTransferMemberReq | PlainMessage<HoldTransferMemberReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.HoldTransferMemberRes
 */
export declare class HoldTransferMemberRes extends Message<HoldTransferMemberRes> {
  constructor(data?: PartialMessage<HoldTransferMemberRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.HoldTransferMemberRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HoldTransferMemberRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HoldTransferMemberRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HoldTransferMemberRes;

  static equals(a: HoldTransferMemberRes | PlainMessage<HoldTransferMemberRes> | undefined, b: HoldTransferMemberRes | PlainMessage<HoldTransferMemberRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.UnholdTransferMemberReq
 */
export declare class UnholdTransferMemberReq extends Message<UnholdTransferMemberReq> {
  /**
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  /**
   * @generated from field: string member_identifier = 2;
   */
  memberIdentifier: string;

  constructor(data?: PartialMessage<UnholdTransferMemberReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.UnholdTransferMemberReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnholdTransferMemberReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnholdTransferMemberReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnholdTransferMemberReq;

  static equals(a: UnholdTransferMemberReq | PlainMessage<UnholdTransferMemberReq> | undefined, b: UnholdTransferMemberReq | PlainMessage<UnholdTransferMemberReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.UnholdTransferMemberRes
 */
export declare class UnholdTransferMemberRes extends Message<UnholdTransferMemberRes> {
  constructor(data?: PartialMessage<UnholdTransferMemberRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.UnholdTransferMemberRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnholdTransferMemberRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnholdTransferMemberRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnholdTransferMemberRes;

  static equals(a: UnholdTransferMemberRes | PlainMessage<UnholdTransferMemberRes> | undefined, b: UnholdTransferMemberRes | PlainMessage<UnholdTransferMemberRes> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.GetAgentCallCountsReq
 */
export declare class GetAgentCallCountsReq extends Message<GetAgentCallCountsReq> {
  /**
   * @generated from field: repeated string agent_skills = 1;
   */
  agentSkills: string[];

  /**
   * @generated from field: repeated string agent_pbx_extensions = 2;
   */
  agentPbxExtensions: string[];

  constructor(data?: PartialMessage<GetAgentCallCountsReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.GetAgentCallCountsReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAgentCallCountsReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAgentCallCountsReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAgentCallCountsReq;

  static equals(a: GetAgentCallCountsReq | PlainMessage<GetAgentCallCountsReq> | undefined, b: GetAgentCallCountsReq | PlainMessage<GetAgentCallCountsReq> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.GetAgentCallCountsRes
 */
export declare class GetAgentCallCountsRes extends Message<GetAgentCallCountsRes> {
  /**
   * @generated from field: int64 agent_calls = 1;
   */
  agentCalls: bigint;

  /**
   * @generated from field: int64 skill_calls = 2;
   */
  skillCalls: bigint;

  /**
   * @generated from field: int64 on_hold_calls = 3;
   */
  onHoldCalls: bigint;

  constructor(data?: PartialMessage<GetAgentCallCountsRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.GetAgentCallCountsRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAgentCallCountsRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAgentCallCountsRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAgentCallCountsRes;

  static equals(a: GetAgentCallCountsRes | PlainMessage<GetAgentCallCountsRes> | undefined, b: GetAgentCallCountsRes | PlainMessage<GetAgentCallCountsRes> | undefined): boolean;
}

/**
 * message used to start a warm caller transfer
 *
 * @generated from message api.v0alpha.WarmCallerTransferStartReq
 */
export declare class WarmCallerTransferStartReq extends Message<WarmCallerTransferStartReq> {
  /**
   * the session sid for the agent
   *
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  /**
   * the sid for the destination caller
   *
   * @generated from field: int64 call_sid = 2;
   */
  callSid: bigint;

  /**
   * the type for the destination caller
   *
   * @generated from field: api.commons.CallType.Enum call_type = 3;
   */
  callType: CallType_Enum;

  /**
   * whether or not we should mute current caller ro not
   *
   * @generated from field: bool caller_hold = 4;
   */
  callerHold: boolean;

  constructor(data?: PartialMessage<WarmCallerTransferStartReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.WarmCallerTransferStartReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WarmCallerTransferStartReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WarmCallerTransferStartReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WarmCallerTransferStartReq;

  static equals(a: WarmCallerTransferStartReq | PlainMessage<WarmCallerTransferStartReq> | undefined, b: WarmCallerTransferStartReq | PlainMessage<WarmCallerTransferStartReq> | undefined): boolean;
}

/**
 * message used in response to start a warm caller transfer
 *
 * @generated from message api.v0alpha.WarmCallerTransferStartRes
 */
export declare class WarmCallerTransferStartRes extends Message<WarmCallerTransferStartRes> {
  constructor(data?: PartialMessage<WarmCallerTransferStartRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.WarmCallerTransferStartRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WarmCallerTransferStartRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WarmCallerTransferStartRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WarmCallerTransferStartRes;

  static equals(a: WarmCallerTransferStartRes | PlainMessage<WarmCallerTransferStartRes> | undefined, b: WarmCallerTransferStartRes | PlainMessage<WarmCallerTransferStartRes> | undefined): boolean;
}

/**
 * message used to cancel a warm caller transfer
 *
 * @generated from message api.v0alpha.WarmCallerTransferCancelReq
 */
export declare class WarmCallerTransferCancelReq extends Message<WarmCallerTransferCancelReq> {
  /**
   * the session sid for the agent
   *
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  /**
   * the reason for the cancel
   *
   * @generated from field: string reason = 2;
   */
  reason: string;

  constructor(data?: PartialMessage<WarmCallerTransferCancelReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.WarmCallerTransferCancelReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WarmCallerTransferCancelReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WarmCallerTransferCancelReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WarmCallerTransferCancelReq;

  static equals(a: WarmCallerTransferCancelReq | PlainMessage<WarmCallerTransferCancelReq> | undefined, b: WarmCallerTransferCancelReq | PlainMessage<WarmCallerTransferCancelReq> | undefined): boolean;
}

/**
 * message used in response to canceling a wamr caller transfer
 *
 * @generated from message api.v0alpha.WarmCallerTransferCancelRes
 */
export declare class WarmCallerTransferCancelRes extends Message<WarmCallerTransferCancelRes> {
  constructor(data?: PartialMessage<WarmCallerTransferCancelRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.WarmCallerTransferCancelRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WarmCallerTransferCancelRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WarmCallerTransferCancelRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WarmCallerTransferCancelRes;

  static equals(a: WarmCallerTransferCancelRes | PlainMessage<WarmCallerTransferCancelRes> | undefined, b: WarmCallerTransferCancelRes | PlainMessage<WarmCallerTransferCancelRes> | undefined): boolean;
}

/**
 * message used to approve a warm caller transfer
 *
 * @generated from message api.v0alpha.WarmCallerTransferApproveReq
 */
export declare class WarmCallerTransferApproveReq extends Message<WarmCallerTransferApproveReq> {
  /**
   * the session sid for the agent
   *
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  /**
   * the reason for the approve
   *
   * @generated from field: string reason = 2;
   */
  reason: string;

  constructor(data?: PartialMessage<WarmCallerTransferApproveReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.WarmCallerTransferApproveReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WarmCallerTransferApproveReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WarmCallerTransferApproveReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WarmCallerTransferApproveReq;

  static equals(a: WarmCallerTransferApproveReq | PlainMessage<WarmCallerTransferApproveReq> | undefined, b: WarmCallerTransferApproveReq | PlainMessage<WarmCallerTransferApproveReq> | undefined): boolean;
}

/**
 * message used in response to approving a wamr caller transfer
 *
 * @generated from message api.v0alpha.WarmCallerTransferApproveRes
 */
export declare class WarmCallerTransferApproveRes extends Message<WarmCallerTransferApproveRes> {
  constructor(data?: PartialMessage<WarmCallerTransferApproveRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.WarmCallerTransferApproveRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WarmCallerTransferApproveRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WarmCallerTransferApproveRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WarmCallerTransferApproveRes;

  static equals(a: WarmCallerTransferApproveRes | PlainMessage<WarmCallerTransferApproveRes> | undefined, b: WarmCallerTransferApproveRes | PlainMessage<WarmCallerTransferApproveRes> | undefined): boolean;
}

/**
 * message used in a request for playing audio from the soundboard
 *
 * @generated from message api.v0alpha.PlaySoundboardEntityReq
 */
export declare class PlaySoundboardEntityReq extends Message<PlaySoundboardEntityReq> {
  /**
   * the session sid for the agent
   *
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  /**
   * the id of the requested soundboard entity to play
   *
   * @generated from field: int64 soundboard_entity_id = 2;
   */
  soundboardEntityId: bigint;

  constructor(data?: PartialMessage<PlaySoundboardEntityReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.PlaySoundboardEntityReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlaySoundboardEntityReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlaySoundboardEntityReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlaySoundboardEntityReq;

  static equals(a: PlaySoundboardEntityReq | PlainMessage<PlaySoundboardEntityReq> | undefined, b: PlaySoundboardEntityReq | PlainMessage<PlaySoundboardEntityReq> | undefined): boolean;
}

/**
 * message used in a response for playing audio from the soundboard
 *
 * @generated from message api.v0alpha.PlaySoundboardEntityRes
 */
export declare class PlaySoundboardEntityRes extends Message<PlaySoundboardEntityRes> {
  /**
   * the id of the instance of sound being played
   *
   * @generated from field: string sound_instance_id = 1;
   */
  soundInstanceId: string;

  constructor(data?: PartialMessage<PlaySoundboardEntityRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.PlaySoundboardEntityRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlaySoundboardEntityRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlaySoundboardEntityRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlaySoundboardEntityRes;

  static equals(a: PlaySoundboardEntityRes | PlainMessage<PlaySoundboardEntityRes> | undefined, b: PlaySoundboardEntityRes | PlainMessage<PlaySoundboardEntityRes> | undefined): boolean;
}

/**
 * message used in a request for stopping audio from the soundbooard
 *
 * @generated from message api.v0alpha.StopSoundboardEntityReq
 */
export declare class StopSoundboardEntityReq extends Message<StopSoundboardEntityReq> {
  /**
   * the session sid for the agent
   *
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  /**
   * the id of the instance of sound being played
   *
   * @generated from field: string sound_instance_id = 2;
   */
  soundInstanceId: string;

  constructor(data?: PartialMessage<StopSoundboardEntityReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.StopSoundboardEntityReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StopSoundboardEntityReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StopSoundboardEntityReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StopSoundboardEntityReq;

  static equals(a: StopSoundboardEntityReq | PlainMessage<StopSoundboardEntityReq> | undefined, b: StopSoundboardEntityReq | PlainMessage<StopSoundboardEntityReq> | undefined): boolean;
}

/**
 * message used in a response for stopping audio from the soundbooard
 *
 * @generated from message api.v0alpha.StopSoundboardEntityRes
 */
export declare class StopSoundboardEntityRes extends Message<StopSoundboardEntityRes> {
  constructor(data?: PartialMessage<StopSoundboardEntityRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.StopSoundboardEntityRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StopSoundboardEntityRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StopSoundboardEntityRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StopSoundboardEntityRes;

  static equals(a: StopSoundboardEntityRes | PlainMessage<StopSoundboardEntityRes> | undefined, b: StopSoundboardEntityRes | PlainMessage<StopSoundboardEntityRes> | undefined): boolean;
}

/**
 * message used to update an agent's skills
 *
 * @generated from message api.v0alpha.UpdateAgentSkillsRequest
 */
export declare class UpdateAgentSkillsRequest extends Message<UpdateAgentSkillsRequest> {
  /**
   * the session sid for the agent
   *
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  /**
   * the skills to update
   *
   * @generated from field: map<string, int64> skills = 2;
   */
  skills: { [key: string]: bigint };

  /**
   * true to replace the skills or false to add them
   *
   * @generated from field: bool replace_skills = 4;
   */
  replaceSkills: boolean;

  constructor(data?: PartialMessage<UpdateAgentSkillsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.UpdateAgentSkillsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAgentSkillsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAgentSkillsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAgentSkillsRequest;

  static equals(a: UpdateAgentSkillsRequest | PlainMessage<UpdateAgentSkillsRequest> | undefined, b: UpdateAgentSkillsRequest | PlainMessage<UpdateAgentSkillsRequest> | undefined): boolean;
}

/**
 * message used in response to updating an agent's skills
 *
 * @generated from message api.v0alpha.UpdateAgentSkillsReply
 */
export declare class UpdateAgentSkillsReply extends Message<UpdateAgentSkillsReply> {
  constructor(data?: PartialMessage<UpdateAgentSkillsReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.UpdateAgentSkillsReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAgentSkillsReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAgentSkillsReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAgentSkillsReply;

  static equals(a: UpdateAgentSkillsReply | PlainMessage<UpdateAgentSkillsReply> | undefined, b: UpdateAgentSkillsReply | PlainMessage<UpdateAgentSkillsReply> | undefined): boolean;
}

/**
 * message used to play a dtmf tone in an agent's conference
 *
 * @generated from message api.v0alpha.PlayDTMFRequest
 */
export declare class PlayDTMFRequest extends Message<PlayDTMFRequest> {
  /**
   * the session sid for the agent
   *
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  /**
   * the dtmf tone to play
   *
   * @generated from field: repeated api.commons.DTMFDigit dtmf_digits = 2;
   */
  dtmfDigits: DTMFDigit[];

  constructor(data?: PartialMessage<PlayDTMFRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.PlayDTMFRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlayDTMFRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlayDTMFRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlayDTMFRequest;

  static equals(a: PlayDTMFRequest | PlainMessage<PlayDTMFRequest> | undefined, b: PlayDTMFRequest | PlainMessage<PlayDTMFRequest> | undefined): boolean;
}

/**
 * message used in response to playing a dtmf tone in an agent's conference
 *
 * @generated from message api.v0alpha.PlayDTMFReply
 */
export declare class PlayDTMFReply extends Message<PlayDTMFReply> {
  constructor(data?: PartialMessage<PlayDTMFReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.PlayDTMFReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PlayDTMFReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PlayDTMFReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PlayDTMFReply;

  static equals(a: PlayDTMFReply | PlainMessage<PlayDTMFReply> | undefined, b: PlayDTMFReply | PlainMessage<PlayDTMFReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentMuteRequest
 */
export declare class AgentMuteRequest extends Message<AgentMuteRequest> {
  /**
   * the session sid for the agent
   *
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<AgentMuteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentMuteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentMuteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentMuteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentMuteRequest;

  static equals(a: AgentMuteRequest | PlainMessage<AgentMuteRequest> | undefined, b: AgentMuteRequest | PlainMessage<AgentMuteRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentMuteReply
 */
export declare class AgentMuteReply extends Message<AgentMuteReply> {
  constructor(data?: PartialMessage<AgentMuteReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentMuteReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentMuteReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentMuteReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentMuteReply;

  static equals(a: AgentMuteReply | PlainMessage<AgentMuteReply> | undefined, b: AgentMuteReply | PlainMessage<AgentMuteReply> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentUnmuteRequest
 */
export declare class AgentUnmuteRequest extends Message<AgentUnmuteRequest> {
  /**
   * the session sid for the agent
   *
   * @generated from field: int64 session_sid = 1;
   */
  sessionSid: bigint;

  constructor(data?: PartialMessage<AgentUnmuteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentUnmuteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentUnmuteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentUnmuteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentUnmuteRequest;

  static equals(a: AgentUnmuteRequest | PlainMessage<AgentUnmuteRequest> | undefined, b: AgentUnmuteRequest | PlainMessage<AgentUnmuteRequest> | undefined): boolean;
}

/**
 * @generated from message api.v0alpha.AgentUnmuteReply
 */
export declare class AgentUnmuteReply extends Message<AgentUnmuteReply> {
  constructor(data?: PartialMessage<AgentUnmuteReply>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v0alpha.AgentUnmuteReply";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentUnmuteReply;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentUnmuteReply;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentUnmuteReply;

  static equals(a: AgentUnmuteReply | PlainMessage<AgentUnmuteReply> | undefined, b: AgentUnmuteReply | PlainMessage<AgentUnmuteReply> | undefined): boolean;
}


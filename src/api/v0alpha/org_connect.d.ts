// @generated by protoc-gen-connect-es v0.9.0
// @generated from file api/v0alpha/org.proto (package api.v0alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AcceptLinkbackRecordingTermsRequest, AcceptLinkbackRecordingTermsResponse, AddLoginToUserRequest, AddLoginToUserResponse, AddMyUserSubscriptionRequest, AddMyUserSubscriptionResponse, AddOrgBillingOverrideRequest, AddOrgBillingOverrideResponse, AddPermissionToAccountOwnerPermissionGroupRequest, AddPermissionToAccountOwnerPermissionGroupResponse, AddPermissionToOrgDefaultGroupRequest, AddPermissionToOrgDefaultGroupResponse, AddUserRegionRequest, AddUserRegionResponse, AddUserSubscriptionRequest, AddUserSubscriptionResponse, AdminGetUserDetailsRequest, AdminListUserDescriptionsRequest, AdminListUserDescriptionsResponse, ArchiveOrganizationRequest, ArchiveOrganizationResponse, AssignAgentProfileGroupsRequest, AssignAgentProfileGroupsResponse, AssignUserPermissionGroupRequest, AssignUserPermissionGroupResponse, AssignUsersP3PermissionGroupRequest, AssignUsersP3PermissionGroupResponse, AssignUsersPermissionGroupRequest, AssignUsersPermissionGroupResponse, AssignUserToAccountOwnerPermissionGroupRequest, AssignUserToAccountOwnerPermissionGroupResponse, ClearEmailUnsubscribeAcknowledgementRequest, ClearEmailUnsubscribeAcknowledgementResponse, ConvertOrgToManualRequest, ConvertOrgToManualResponse, CopyQueueConfigReq, CopyQueueConfigRes, CreateAgentPauseCodeRequest, CreateAgentPauseCodeResponse, CreateAgentProfileGroupRequest, CreateAgentProfileGroupResponse, CreateAgentStatisticsTemplateRequest, CreateAgentStatisticsTemplateResponse, CreateAgentTriggerTemplateRequest, CreateAgentTriggerTemplateResponse, CreateAuthConnectionRequest, CreateAuthConnectionResponse, CreateClientInfoDisplayTemplateRequest, CreateClientInfoDisplayTemplateResponse, CreateCustomReportFilterRequest, CreateCustomReportFilterResponse, CreateDelegatedUserRequest, CreateDelegatedUserResponse, CreateP3PermissionGroupRequest, CreateP3PermissionGroupResponse, CreatePermissionGroupRequest, CreatePermissionGroupResponse, CreateQueueConfigReq, CreateQueueConfigRes, CreateUserByOrgIdRequest, CreateUserByOrgIdResponse, CreateUserRequest, CreateUserResponse, CreateWebLinkTemplateRequest, CreateWebLinkTemplateResponse, DeleteAgentPauseCodeRequest, DeleteAgentPauseCodeResponse, DeleteAgentProfileGroupRequest, DeleteAgentProfileGroupResponse, DeleteAgentStatisticsTemplateRequest, DeleteAgentStatisticsTemplateResponse, DeleteAgentTriggerTemplateRequest, DeleteAgentTriggerTemplateResponse, DeleteAuthConnectionRequest, DeleteAuthConnectionResponse, DeleteClientInfoDisplayTemplateRequest, DeleteClientInfoDisplayTemplateResponse, DeleteCustomReportFilterRequest, DeleteCustomReportFilterResponse, DeleteP3PermissionGroupRequest, DeleteP3PermissionGroupResponse, DeletePermissionGroupRequest, DeletePermissionGroupResponse, DeleteQueueConfigReq, DeleteQueueConfigRes, DeleteWebLinkTemplateRequest, DeleteWebLinkTemplateResponse, EditAgentQuickViewPreferencesRequest, EditAgentQuickViewPreferencesResponse, EditBackofficeThemePreferenceRequest, EditBackofficeThemePreferenceResponse, GetAdminClientPreferencesRequest, GetAdminClientPreferencesResponse, GetAgentPreferencesRequest, GetAgentPreferencesResponse, GetAgentProfileGroupRequest, GetAgentProfileGroupResponse, GetAgentQuickViewPreferencesRequest, GetAgentQuickViewPreferencesResponse, GetAgentSettingsRequest, GetAgentSettingsResponse, GetAgentTriggerTemplateRequest, GetAgentTriggerTemplateResponse, GetAgentUsersRequest, GetAgentUsersResponse, GetAllQueueConfigSoundsReq, GetAllQueueConfigSoundsRes, GetAuthConnectionSettingsRequest, GetAuthConnectionSettingsResponse, GetAuthenticationPreferencesRequest, GetAuthenticationPreferencesResponse, GetBackofficeThemePreferenceRequest, GetBackofficeThemePreferenceResponse, GetBroadcastPreferencesRequest, GetBroadcastPreferencesResponse, GetBusinessPreferencesRequest, GetBusinessPreferencesResponse, GetClientInfoDisplayTemplateRequest, GetClientInfoDisplayTemplateResponse, GetCompliancePreferencesRequest, GetCompliancePreferencesResponse, GetContactPreferencesRequest, GetContactPreferencesResponse, GetCountriesListRequest, GetCountriesListResponse, GetDashboardGeneralPreferencesRequest, GetDashboardGeneralPreferencesResponse, GetDashboardQueuePreferencesRequest, GetDashboardQueuePreferencesResponse, GetEmailSmsPreferencesRequest, GetEmailSmsPreferencesResponse, GetEndOfDayPreferencesRequest, GetEndOfDayPreferencesResponse, GetFilterPreferencesRequest, GetFilterPreferencesResponse, GetMyUserDetailsRequest, GetMyUserPasswordResetLinkRequest, GetMyUserPasswordResetLinkResponse, GetMyUserSubscriptionRequest, GetMyUserSubscriptionResponse, GetOrganizationPreferencesRequest, GetOrganizationPreferencesResponse, GetOrganizationProfileByIdRequest, GetOrganizationProfileRequest, GetOrganizationProfileResponse, GetOrgBillingSettingsByOrgIdRequest, GetOrgBillingSettingsByOrgIdResponse, GetOrgBillingSettingsRequest, GetOrgBillingSettingsResponse, GetOrgDefaultSuperUserGroupRequest, GetOrgDefaultSuperUserGroupResponse, GetP3OwningOrgRequest, GetP3OwningOrgResponse, GetPermissionsRequest, GetPermissionsResponse, GetPhonePreferencesRequest, GetPhonePreferencesResponse, GetQueueConfigReq, GetQueueConfigRes, GetQueueConfigSoundReq, GetQueueConfigSoundRes, GetRecordingPreferencesRequest, GetRecordingPreferencesResponse, GetRegionsRequest, GetRegionsResponse, GetSchedulePreferencesRequest, GetSchedulePreferencesResponse, GetScorecardsPreferencesRequest, GetScorecardsPreferencesResponse, GetSystemDefaultBillingRatesRequest, GetSystemDefaultBillingRatesResponse, GetSystemEnvironmentDetailsRequest, GetSystemEnvironmentDetailsResponse, GetTempUserTokenByUserIdReq, GetTempUserTokenByUserIdRes, GetTempUserTokenReq, GetTempUserTokenRes, GetUserBlockedRequest, GetUserBlockedResponse, GetUserDetailsRequest, GetUserDirectoryRequest, GetUserDirectoryResponse, GetUserEmailVerifiedByOrgIdRequest, GetUserEmailVerifiedByOrgIdResponse, GetUserEmailVerifiedRequest, GetUserEmailVerifiedResponse, GetUserPasswordResetLinkByOrgIdRequest, GetUserPasswordResetLinkByOrgIdResponse, GetUserPasswordResetLinkRequest, GetUserPasswordResetLinkResponse, GetUserSubscriptionRequest, GetUserSubscriptionResponse, GetVoiceAnalyticsPreferencesRequest, GetVoiceAnalyticsPreferencesResponse, GetWebhookPreferencesRequest, GetWebhookPreferencesResponse, GetWebLinkTemplateRequest, GetWebLinkTemplateResponse, InitDefaultPermissionGroupsRequest, InitDefaultPermissionGroupsResponse, LinkbackUpdateBroadcastTemplatesRequest, LinkbackUpdateBroadcastTemplatesResponse, ListAgentPauseCodesRequest, ListAgentPauseCodesResponse, ListAgentProfileGroupsRequest, ListAgentProfileGroupsResponse, ListAgentResponseGroupsRequest, ListAgentResponseGroupsResponse, ListAgentStatisticsTemplatesRequest, ListAgentStatisticsTemplatesResponse, ListAgentTriggerTemplatesRequest, ListAgentTriggerTemplatesResponse, ListArchivedOrganizationsRequest, ListArchivedOrganizationsResponse, ListClientInfoDisplayTemplatesRequest, ListClientInfoDisplayTemplatesResponse, ListCustomReportFiltersRequest, ListCustomReportFiltersResponse, ListLastTemplateElementsRequest, ListLastTemplateElementsResponse, ListLoginHistoryRequest, ListLoginHistoryResponse, ListMyUserSubscriptionsRequest, ListMyUserSubscriptionsResponse, ListOrganizationDescriptionsRequest, ListOrganizationDescriptionsResponse, ListOrganizationUserDescriptionsRequest, ListOrganizationUserDescriptionsResponse, ListOrgSubscriptionsRequest, ListOrgSubscriptionsResponse, ListOwnedOrgsByOrgIdRequest, ListOwnedOrgsByOrgIdResponse, ListOwnedOrgsRequest, ListOwnedOrgsResponse, ListOwnedUsersRequest, ListOwnedUsersResponse, ListP3PermissionGroupsByOrgIdRequest, ListP3PermissionGroupsByOrgIdResponse, ListP3PermissionGroupsRequest, ListP3PermissionGroupsResponse, ListP3UnMigratedUsersRequest, ListP3UnMigratedUsersResponse, ListPermissionGroupsByOrgIdRequest, ListPermissionGroupsByOrgIdResponse, ListPermissionGroupsRequest, ListPermissionGroupsResponse, ListQueueConfigsByOrgIdReq, ListQueueConfigsByOrgIdRes, ListQueueConfigsReq, ListQueueConfigsRes, ListRegionalOrganizationsRequest, ListRegionalOrganizationsResponse, ListUserDescriptionsRequest, ListUserDescriptionsResponse, ListUserSubscriptionsRequest, ListUserSubscriptionsResponse, ListWebLinkTemplatesRequest, ListWebLinkTemplatesResponse, ManualUserEmailVerificationByOrgIdRequest, ManualUserEmailVerificationByOrgIdResponse, ManualUserEmailVerificationRequest, ManualUserEmailVerificationResponse, MigrateP3UserRequest, MigrateP3UserResponse, RecordEmailUnsubscribeAcknowledgementRequest, RecordEmailUnsubscribeAcknowledgementResponse, RegisterOrganizationRequest, RegisterOrganizationResponse, RemoveLoginStrikesRequest, RemoveLoginStrikesResponse, RemoveMyUserSubscriptionRequest, RemoveMyUserSubscriptionResponse, RemoveOrgBillingOverrideRequest, RemoveOrgBillingOverrideResponse, RemovePermissionFromOrgDefaultGroupRequest, RemovePermissionFromOrgDefaultGroupResponse, RemoveUserLoginStrikesRequest, RemoveUserLoginStrikesResponse, RemoveUserRegionRequest, RemoveUserRegionResponse, RemoveUserSubscriptionRequest, RemoveUserSubscriptionResponse, ResetUserRequirePasswordResetRequest, ResetUserRequirePasswordResetResponse, RevokeAccountOwnerPermissionFromUserRequest, RevokeAccountOwnerPermissionFromUserResponse, RevokePermissionToAccountOwnerPermissionGroupRequest, RevokePermissionToAccountOwnerPermissionGroupResponse, RevokeUserPermissionGroupRequest, RevokeUserPermissionGroupResponse, RevokeUsersP3PermissionGroupRequest, RevokeUsersP3PermissionGroupResponse, RevokeUsersPermissionGroupRequest, RevokeUsersPermissionGroupResponse, SendUserVerificationEmailByOrgIdRequest, SendUserVerificationEmailByOrgIdResponse, SendUserVerificationEmailRequest, SendUserVerificationEmailResponse, SetAllQueueConfigSoundsFromSourceReq, SetAllQueueConfigSoundsFromSourceRes, SetOrgBillingSettingsRequest, SetOrgBillingSettingsResponse, SetQueueConfigSoundReq, SetQueueConfigSoundRes, UnArchiveOrganizationRequest, UnArchiveOrganizationResponse, UnblockUserRequest, UnblockUserResponse, UpdateAdminClientPreferencesRequest, UpdateAdminClientPreferencesResponse, UpdateAgentPauseCodeRequest, UpdateAgentPauseCodeResponse, UpdateAgentPreferencesRequest, UpdateAgentPreferencesResponse, UpdateAgentProfileGroupRequest, UpdateAgentProfileGroupResponse, UpdateAgentStatisticsTemplateRequest, UpdateAgentStatisticsTemplateResponse, UpdateAgentTriggerTemplateRequest, UpdateAgentTriggerTemplateResponse, UpdateAuthConnectionSettingsRequest, UpdateAuthConnectionSettingsResponse, UpdateAuthenticationPreferencesRequest, UpdateAuthenticationPreferencesResponse, UpdateBroadcastPreferencesRequest, UpdateBroadcastPreferencesResponse, UpdateBulkUsersDisabledRequest, UpdateBulkUsersDisabledResponse, UpdateBusinessPreferencesRequest, UpdateBusinessPreferencesResponse, UpdateClientInfoDisplayTemplateRequest, UpdateClientInfoDisplayTemplateResponse, UpdateCompliancePreferencesRequest, UpdateCompliancePreferencesResponse, UpdateContactPreferencesRequest, UpdateContactPreferencesResponse, UpdateCustomReportFilterRequest, UpdateCustomReportFilterResponse, UpdateDashboardGeneralPreferencesRequest, UpdateDashboardGeneralPreferencesResponse, UpdateDashboardQueuePreferencesRequest, UpdateDashboardQueuePreferencesResponse, UpdateEmailSmsPreferencesRequest, UpdateEmailSmsPreferencesResponse, UpdateEndOfDayPreferencesRequest, UpdateEndOfDayPreferencesResponse, UpdateFilterPreferencesRequest, UpdateFilterPreferencesResponse, UpdateMyUserPasswordRequest, UpdateMyUserPasswordResponse, UpdateMyUserRequest, UpdateMyUserResponse, UpdateMyUserSubscriptionRequest, UpdateMyUserSubscriptionResponse, UpdateOrganizationPreferencesRequest, UpdateOrganizationPreferencesResponse, UpdateOrganizationRequest, UpdateOrganizationResponse, UpdateP3OwningOrgRequest, UpdateP3OwningOrgResponse, UpdateP3PermissionGroupByOrgIdRequest, UpdateP3PermissionGroupByOrgIdResponse, UpdateP3PermissionGroupRequest, UpdateP3PermissionGroupResponse, UpdateP3UserNameRequest, UpdateP3UserNameResponse, UpdateP3UserSidsRequest, UpdateP3UserSidsResponse, UpdatePermissionGroupRequest, UpdatePermissionGroupResponse, UpdatePhonePreferencesRequest, UpdatePhonePreferencesResponse, UpdateQueueConfigReq, UpdateQueueConfigRes, UpdateRecordingPreferencesRequest, UpdateRecordingPreferencesResponse, UpdateSchedulePreferencesRequest, UpdateSchedulePreferencesResponse, UpdateScorecardsPreferencesRequest, UpdateScorecardsPreferencesResponse, UpdateUserCallerIdRequest, UpdateUserCallerIdResponse, UpdateUserDisabledByOrgIdRequest, UpdateUserDisabledByOrgIdResponse, UpdateUserDisabledRequest, UpdateUserDisabledResponse, UpdateUserNeoPermissionGroupsRequest, UpdateUserNeoPermissionGroupsResponse, UpdateUserPasswordByOrgIdRequest, UpdateUserPasswordByOrgIdResponse, UpdateUserPasswordRequest, UpdateUserPasswordResponse, UpdateUserRequest, UpdateUserResponse, UpdateUserSubscriptionRequest, UpdateUserSubscriptionResponse, UpdateVoiceAnalyticsPreferencesEnabledRequest, UpdateVoiceAnalyticsPreferencesEnabledResponse, UpdateVoiceAnalyticsPreferencesRequest, UpdateVoiceAnalyticsPreferencesResponse, UpdateWebhookPreferencesRequest, UpdateWebhookPreferencesResponse, UpdateWebLinkTemplateRequest, UpdateWebLinkTemplateResponse, UserDetails } from "./org_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service api.v0alpha.Org
 */
export declare const Org: {
  readonly typeName: "api.v0alpha.Org",
  readonly methods: {
    /**
     * Registers a new organization
     *
     * @generated from rpc api.v0alpha.Org.RegisterOrganization
     */
    readonly registerOrganization: {
      readonly name: "RegisterOrganization",
      readonly I: typeof RegisterOrganizationRequest,
      readonly O: typeof RegisterOrganizationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Converts a standard organiztion to a manual one.
     * WARNING: this process cannot be reversed.
     *
     * @generated from rpc api.v0alpha.Org.ConvertOrgToManual
     */
    readonly convertOrgToManual: {
      readonly name: "ConvertOrgToManual",
      readonly I: typeof ConvertOrgToManualRequest,
      readonly O: typeof ConvertOrgToManualResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates an organization
     *
     * @generated from rpc api.v0alpha.Org.UpdateOrganization
     */
    readonly updateOrganization: {
      readonly name: "UpdateOrganization",
      readonly I: typeof UpdateOrganizationRequest,
      readonly O: typeof UpdateOrganizationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Archives an organization. An archived organization effectively disappears, but isn't deleted.
     *
     * @generated from rpc api.v0alpha.Org.ArchiveOrganization
     */
    readonly archiveOrganization: {
      readonly name: "ArchiveOrganization",
      readonly I: typeof ArchiveOrganizationRequest,
      readonly O: typeof ArchiveOrganizationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Restores an archived organization.
     *
     * @generated from rpc api.v0alpha.Org.UnArchiveOrganization
     */
    readonly unArchiveOrganization: {
      readonly name: "UnArchiveOrganization",
      readonly I: typeof UnArchiveOrganizationRequest,
      readonly O: typeof UnArchiveOrganizationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the list of organizations that have been archived.
     *
     * @generated from rpc api.v0alpha.Org.ListArchivedOrganizations
     */
    readonly listArchivedOrganizations: {
      readonly name: "ListArchivedOrganizations",
      readonly I: typeof ListArchivedOrganizationsRequest,
      readonly O: typeof ListArchivedOrganizationsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v0alpha.Org.GetOrganizationProfile
     */
    readonly getOrganizationProfile: {
      readonly name: "GetOrganizationProfile",
      readonly I: typeof GetOrganizationProfileRequest,
      readonly O: typeof GetOrganizationProfileResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v0alpha.Org.GetOrganizationProfileById
     */
    readonly getOrganizationProfileById: {
      readonly name: "GetOrganizationProfileById",
      readonly I: typeof GetOrganizationProfileByIdRequest,
      readonly O: typeof GetOrganizationProfileResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v0alpha.Org.ListOrganizationDescriptions
     */
    readonly listOrganizationDescriptions: {
      readonly name: "ListOrganizationDescriptions",
      readonly I: typeof ListOrganizationDescriptionsRequest,
      readonly O: typeof ListOrganizationDescriptionsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v0alpha.Org.ListRegionalOrganizations
     */
    readonly listRegionalOrganizations: {
      readonly name: "ListRegionalOrganizations",
      readonly I: typeof ListRegionalOrganizationsRequest,
      readonly O: typeof ListRegionalOrganizationsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * update an organizations owning organization.
     * Required Permissions:
     *    CUSTOMER_SUPPORT
     *
     * @generated from rpc api.v0alpha.Org.UpdateP3OwningOrg
     */
    readonly updateP3OwningOrg: {
      readonly name: "UpdateP3OwningOrg",
      readonly I: typeof UpdateP3OwningOrgRequest,
      readonly O: typeof UpdateP3OwningOrgResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * gets the owning organiztion for the given org
     * Required Permissions:
     *    CUSTOMER_SUPPORT
     *
     * @generated from rpc api.v0alpha.Org.GetP3OwningOrg
     */
    readonly getP3OwningOrg: {
      readonly name: "GetP3OwningOrg",
      readonly I: typeof GetP3OwningOrgRequest,
      readonly O: typeof GetP3OwningOrgResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v0alpha.Org.ListOrganizationUserDescriptions
     */
    readonly listOrganizationUserDescriptions: {
      readonly name: "ListOrganizationUserDescriptions",
      readonly I: typeof ListOrganizationUserDescriptionsRequest,
      readonly O: typeof ListOrganizationUserDescriptionsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v0alpha.Org.AdminListUserDescriptions
     */
    readonly adminListUserDescriptions: {
      readonly name: "AdminListUserDescriptions",
      readonly I: typeof AdminListUserDescriptionsRequest,
      readonly O: typeof AdminListUserDescriptionsResponse,
      readonly kind: MethodKind.ServerStreaming,
    },
    /**
     * @generated from rpc api.v0alpha.Org.ListUserDescriptions
     */
    readonly listUserDescriptions: {
      readonly name: "ListUserDescriptions",
      readonly I: typeof ListUserDescriptionsRequest,
      readonly O: typeof ListUserDescriptionsResponse,
      readonly kind: MethodKind.ServerStreaming,
    },
    /**
     * @generated from rpc api.v0alpha.Org.GetUserDirectory
     */
    readonly getUserDirectory: {
      readonly name: "GetUserDirectory",
      readonly I: typeof GetUserDirectoryRequest,
      readonly O: typeof GetUserDirectoryResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetRegions takes nothing in the request and returns a list of all region names
     *
     * @generated from rpc api.v0alpha.Org.GetRegions
     */
    readonly getRegions: {
      readonly name: "GetRegions",
      readonly I: typeof GetRegionsRequest,
      readonly O: typeof GetRegionsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v0alpha.Org.GetMyUserDetails
     */
    readonly getMyUserDetails: {
      readonly name: "GetMyUserDetails",
      readonly I: typeof GetMyUserDetailsRequest,
      readonly O: typeof UserDetails,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v0alpha.Org.GetUserDetails
     */
    readonly getUserDetails: {
      readonly name: "GetUserDetails",
      readonly I: typeof GetUserDetailsRequest,
      readonly O: typeof UserDetails,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v0alpha.Org.AdminGetUserDetails
     */
    readonly adminGetUserDetails: {
      readonly name: "AdminGetUserDetails",
      readonly I: typeof AdminGetUserDetailsRequest,
      readonly O: typeof UserDetails,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v0alpha.Org.GetAgentUsers
     */
    readonly getAgentUsers: {
      readonly name: "GetAgentUsers",
      readonly I: typeof GetAgentUsersRequest,
      readonly O: typeof GetAgentUsersResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * This is transitionary api. It will be removed when user api is available.
     * GetAgentSettings gets some agent settings as defined by the GetAgentSettingsRequest.
     * Required Permissions:
     * AGENT
     *
     * @generated from rpc api.v0alpha.Org.GetAgentSettings
     */
    readonly getAgentSettings: {
      readonly name: "GetAgentSettings",
      readonly I: typeof GetAgentSettingsRequest,
      readonly O: typeof GetAgentSettingsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetAgentProfileGroup gets a single AgentProfileGroup by given ID
     * Required Permissions:
     * ORG_VIEW
     *
     * @generated from rpc api.v0alpha.Org.GetAgentProfileGroup
     */
    readonly getAgentProfileGroup: {
      readonly name: "GetAgentProfileGroup",
      readonly I: typeof GetAgentProfileGroupRequest,
      readonly O: typeof GetAgentProfileGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateAgentProfileGroup updates an AgentProfileGroup. Can only update if user is in same org as AgentProfileGroup
     * Required Permissions:
     * ORG_EDIT
     *
     * @generated from rpc api.v0alpha.Org.UpdateAgentProfileGroup
     */
    readonly updateAgentProfileGroup: {
      readonly name: "UpdateAgentProfileGroup",
      readonly I: typeof UpdateAgentProfileGroupRequest,
      readonly O: typeof UpdateAgentProfileGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * CreateAgentProfileGroup creates an AgentProfileGroup. Can only create if user is in same org as AgentProfileGroup
     * Required Permissions:
     * ORG_EDIT
     *
     * @generated from rpc api.v0alpha.Org.CreateAgentProfileGroup
     */
    readonly createAgentProfileGroup: {
      readonly name: "CreateAgentProfileGroup",
      readonly I: typeof CreateAgentProfileGroupRequest,
      readonly O: typeof CreateAgentProfileGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ListAgentProfileGroups lists all AgentProfileGroups for a given org
     * Required Permissions:
     * ORG_VIEW
     *
     * @generated from rpc api.v0alpha.Org.ListAgentProfileGroups
     */
    readonly listAgentProfileGroups: {
      readonly name: "ListAgentProfileGroups",
      readonly I: typeof ListAgentProfileGroupsRequest,
      readonly O: typeof ListAgentProfileGroupsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * DeleteAgentProfileGroup deletes a single AgentProfileGroup by given ID. Can only delete if user is in same org as AgentProfileGroup
     * Required Permissions:
     * ORG_EDIT
     *
     * @generated from rpc api.v0alpha.Org.DeleteAgentProfileGroup
     */
    readonly deleteAgentProfileGroup: {
      readonly name: "DeleteAgentProfileGroup",
      readonly I: typeof DeleteAgentProfileGroupRequest,
      readonly O: typeof DeleteAgentProfileGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * AssignAgentProfileGroups bulk assigns a list of users to a given AgentProfileGroup
     * Required Permissions:
     * ORG_EDIT
     *
     * @generated from rpc api.v0alpha.Org.AssignAgentProfileGroups
     */
    readonly assignAgentProfileGroups: {
      readonly name: "AssignAgentProfileGroups",
      readonly I: typeof AssignAgentProfileGroupsRequest,
      readonly O: typeof AssignAgentProfileGroupsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateUser updates a user as defined by the UpdateUserRequest.
     * Required Permissions: USER_EDIT (default)
     *
     * @generated from rpc api.v0alpha.Org.UpdateUser
     */
    readonly updateUser: {
      readonly name: "UpdateUser",
      readonly I: typeof UpdateUserRequest,
      readonly O: typeof UpdateUserResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateMyUser updates the currently logged in user as defined by the UpdateMyUserRequest.
     * Required Permissions: USER_EDIT_OPTIONS
     * Only some of the fields on the request message can be updated
     * for the currently logged in user: time_zone, linkback_numbers,
     * caller_ids, and default_app.
     *
     * @generated from rpc api.v0alpha.Org.UpdateMyUser
     */
    readonly updateMyUser: {
      readonly name: "UpdateMyUser",
      readonly I: typeof UpdateMyUserRequest,
      readonly O: typeof UpdateMyUserResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateUserCallerId updates a user's caller id as defined by the UpdateUserCallerIdRequest.
     * Required Permissions: USER_EDIT_AGENT_CALLER_ID
     *
     * @generated from rpc api.v0alpha.Org.UpdateUserCallerId
     */
    readonly updateUserCallerId: {
      readonly name: "UpdateUserCallerId",
      readonly I: typeof UpdateUserCallerIdRequest,
      readonly O: typeof UpdateUserCallerIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * CreateUser creates a new user as defined by the CreateUserRequest
     * request message.
     * Required Permissions: USER_CREATE
     *
     * @generated from rpc api.v0alpha.Org.CreateUser
     */
    readonly createUser: {
      readonly name: "CreateUser",
      readonly I: typeof CreateUserRequest,
      readonly O: typeof CreateUserResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * CreateUserByOrgId creates a new user as defined by the CreateUserByOrgIdRequest
     * request message to a specific org.
     * Required Permissions: CUSTOMER_SUPPORT
     *
     * @generated from rpc api.v0alpha.Org.CreateUserByOrgId
     */
    readonly createUserByOrgId: {
      readonly name: "CreateUserByOrgId",
      readonly I: typeof CreateUserByOrgIdRequest,
      readonly O: typeof CreateUserByOrgIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Creates a delegated user. This should only be called by an auth0 action.
     *
     * @generated from rpc api.v0alpha.Org.CreateDelegatedUser
     */
    readonly createDelegatedUser: {
      readonly name: "CreateDelegatedUser",
      readonly I: typeof CreateDelegatedUserRequest,
      readonly O: typeof CreateDelegatedUserResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateUserPassword updates a user's password (in the same org as the current user)
     * to the password given on the request message.
     * Required Permissions: USER_EDIT (Update another user's password in the same org)
     *
     * @generated from rpc api.v0alpha.Org.UpdateUserPassword
     */
    readonly updateUserPassword: {
      readonly name: "UpdateUserPassword",
      readonly I: typeof UpdateUserPasswordRequest,
      readonly O: typeof UpdateUserPasswordResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateMyUserPassword updates the current user's password to the
     * password given on the request message.
     * Required Permissions: USER_EDIT_PASSWORD (Update your own password)
     *
     * @generated from rpc api.v0alpha.Org.UpdateMyUserPassword
     */
    readonly updateMyUserPassword: {
      readonly name: "UpdateMyUserPassword",
      readonly I: typeof UpdateMyUserPasswordRequest,
      readonly O: typeof UpdateMyUserPasswordResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateUserPasswordByOrgId updates a specific user's password
     * from a specific org to the password given on the request message.
     * Required Permissions: CUSTOMER_SUPPORT (Update a user's password from an org)
     *
     * @generated from rpc api.v0alpha.Org.UpdateUserPasswordByOrgId
     */
    readonly updateUserPasswordByOrgId: {
      readonly name: "UpdateUserPasswordByOrgId",
      readonly I: typeof UpdateUserPasswordByOrgIdRequest,
      readonly O: typeof UpdateUserPasswordByOrgIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * updates the users PasswordResetRequired field to false.
     * this should only be called by an auth0 action.
     *
     * @generated from rpc api.v0alpha.Org.ResetUserRequirePasswordReset
     */
    readonly resetUserRequirePasswordReset: {
      readonly name: "ResetUserRequirePasswordReset",
      readonly I: typeof ResetUserRequirePasswordResetRequest,
      readonly O: typeof ResetUserRequirePasswordResetResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetUserPasswordResetLink generates a password reset link for a user
     * in the same org as the current user.
     * Required Permissions: USER_EDIT
     *  USER_EDIT if user_id given on the request.
     *
     * @generated from rpc api.v0alpha.Org.GetUserPasswordResetLink
     */
    readonly getUserPasswordResetLink: {
      readonly name: "GetUserPasswordResetLink",
      readonly I: typeof GetUserPasswordResetLinkRequest,
      readonly O: typeof GetUserPasswordResetLinkResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetMyUserPasswordResetLink generate a password reset link for the current user.
     * Required Permissions: USER_EDIT_PASSWORD
     *
     * @generated from rpc api.v0alpha.Org.GetMyUserPasswordResetLink
     */
    readonly getMyUserPasswordResetLink: {
      readonly name: "GetMyUserPasswordResetLink",
      readonly I: typeof GetMyUserPasswordResetLinkRequest,
      readonly O: typeof GetMyUserPasswordResetLinkResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetUserPasswordResetLinkByOrgId generates a password reset link
     * for a specific user in a specific org.
     * Required Permissions: CUSTOMER_SUPPORT
     *
     * @generated from rpc api.v0alpha.Org.GetUserPasswordResetLinkByOrgId
     */
    readonly getUserPasswordResetLinkByOrgId: {
      readonly name: "GetUserPasswordResetLinkByOrgId",
      readonly I: typeof GetUserPasswordResetLinkByOrgIdRequest,
      readonly O: typeof GetUserPasswordResetLinkByOrgIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns whether or not the given user's email is verified.
     * Required Permissions: USER_EDIT
     *
     * @generated from rpc api.v0alpha.Org.GetUserEmailVerified
     */
    readonly getUserEmailVerified: {
      readonly name: "GetUserEmailVerified",
      readonly I: typeof GetUserEmailVerifiedRequest,
      readonly O: typeof GetUserEmailVerifiedResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetUserEmailVerifiedByOrgId returns whether or not the given user's email
     * from a specific org is verified.
     * Required Permissions: CUSTOMER_SUPPORT
     *
     * @generated from rpc api.v0alpha.Org.GetUserEmailVerifiedByOrgId
     */
    readonly getUserEmailVerifiedByOrgId: {
      readonly name: "GetUserEmailVerifiedByOrgId",
      readonly I: typeof GetUserEmailVerifiedByOrgIdRequest,
      readonly O: typeof GetUserEmailVerifiedByOrgIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Sends a verfication email to the given users email.
     *
     * @generated from rpc api.v0alpha.Org.SendUserVerificationEmailByOrgId
     */
    readonly sendUserVerificationEmailByOrgId: {
      readonly name: "SendUserVerificationEmailByOrgId",
      readonly I: typeof SendUserVerificationEmailByOrgIdRequest,
      readonly O: typeof SendUserVerificationEmailByOrgIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Sends a verfication email to the given users email.
     *
     * @generated from rpc api.v0alpha.Org.SendUserVerificationEmail
     */
    readonly sendUserVerificationEmail: {
      readonly name: "SendUserVerificationEmail",
      readonly I: typeof SendUserVerificationEmailRequest,
      readonly O: typeof SendUserVerificationEmailResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Sets the given user's to verified without needing to send a verification email.
     *
     * @generated from rpc api.v0alpha.Org.ManualUserEmailVerificationByOrgId
     */
    readonly manualUserEmailVerificationByOrgId: {
      readonly name: "ManualUserEmailVerificationByOrgId",
      readonly I: typeof ManualUserEmailVerificationByOrgIdRequest,
      readonly O: typeof ManualUserEmailVerificationByOrgIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Sets the given user's to verified without needing to send a verification email.
     *
     * @generated from rpc api.v0alpha.Org.ManualUserEmailVerification
     */
    readonly manualUserEmailVerification: {
      readonly name: "ManualUserEmailVerification",
      readonly I: typeof ManualUserEmailVerificationRequest,
      readonly O: typeof ManualUserEmailVerificationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetTempUserToken authenticates impersonation and generates token
     * to be used for the current user.
     * Required Permissions: None, anyone authorized can use this
     *
     * @generated from rpc api.v0alpha.Org.GetTempUserToken
     */
    readonly getTempUserToken: {
      readonly name: "GetTempUserToken",
      readonly I: typeof GetTempUserTokenReq,
      readonly O: typeof GetTempUserTokenRes,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetTempUserTokenByUserId authenticates impersonation and generates token
     * to be used for the user with the given user_id.
     * Required Permissions: CUSTOMER_SUPPORT
     *
     * @generated from rpc api.v0alpha.Org.GetTempUserTokenByUserId
     */
    readonly getTempUserTokenByUserId: {
      readonly name: "GetTempUserTokenByUserId",
      readonly I: typeof GetTempUserTokenByUserIdReq,
      readonly O: typeof GetTempUserTokenByUserIdRes,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v0alpha.Org.GetCountriesList
     */
    readonly getCountriesList: {
      readonly name: "GetCountriesList",
      readonly I: typeof GetCountriesListRequest,
      readonly O: typeof GetCountriesListResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v0alpha.Org.GetAdminClientPreferences
     */
    readonly getAdminClientPreferences: {
      readonly name: "GetAdminClientPreferences",
      readonly I: typeof GetAdminClientPreferencesRequest,
      readonly O: typeof GetAdminClientPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v0alpha.Org.UpdateAdminClientPreferences
     */
    readonly updateAdminClientPreferences: {
      readonly name: "UpdateAdminClientPreferences",
      readonly I: typeof UpdateAdminClientPreferencesRequest,
      readonly O: typeof UpdateAdminClientPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v0alpha.Org.GetPermissions
     */
    readonly getPermissions: {
      readonly name: "GetPermissions",
      readonly I: typeof GetPermissionsRequest,
      readonly O: typeof GetPermissionsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * RevokeAccountOwnerPermissionFromUser revokes the
     * account owner permission for the given user
     *
     * @generated from rpc api.v0alpha.Org.RevokeAccountOwnerPermissionFromUser
     */
    readonly revokeAccountOwnerPermissionFromUser: {
      readonly name: "RevokeAccountOwnerPermissionFromUser",
      readonly I: typeof RevokeAccountOwnerPermissionFromUserRequest,
      readonly O: typeof RevokeAccountOwnerPermissionFromUserResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateUserDisabled updates a specified user to disabled or enabled. A disabled user cannot log in.
     *
     * @generated from rpc api.v0alpha.Org.UpdateUserDisabled
     */
    readonly updateUserDisabled: {
      readonly name: "UpdateUserDisabled",
      readonly I: typeof UpdateUserDisabledRequest,
      readonly O: typeof UpdateUserDisabledResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateUserDisabledByOrgId updates a specified user in a specific organization to disabled or enabled.
     *
     * @generated from rpc api.v0alpha.Org.UpdateUserDisabledByOrgId
     */
    readonly updateUserDisabledByOrgId: {
      readonly name: "UpdateUserDisabledByOrgId",
      readonly I: typeof UpdateUserDisabledByOrgIdRequest,
      readonly O: typeof UpdateUserDisabledByOrgIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateBulkUsersDisabled updates every given user_id to be disabled or enabled. The returned list of updated_ids contains every id that was successfully updated.
     * Required Permissions:
     * 		- USER_EDIT
     *
     * @generated from rpc api.v0alpha.Org.UpdateBulkUsersDisabled
     */
    readonly updateBulkUsersDisabled: {
      readonly name: "UpdateBulkUsersDisabled",
      readonly I: typeof UpdateBulkUsersDisabledRequest,
      readonly O: typeof UpdateBulkUsersDisabledResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the billing data for the given org. Billing data
     * will only be included for countries present on the org's
     * allowed countries preference.
     * Errors:
     *    - grpc.InvalidArgument: The org_id on the request was invalid.
     *    - grpc.NotFound: The given org_id did not exist.
     *    - grpc.Internal: An unexpected error occurred while getting the orgs billing settings.
     *
     * @generated from rpc api.v0alpha.Org.GetOrgBillingSettingsByOrgId
     */
    readonly getOrgBillingSettingsByOrgId: {
      readonly name: "GetOrgBillingSettingsByOrgId",
      readonly I: typeof GetOrgBillingSettingsByOrgIdRequest,
      readonly O: typeof GetOrgBillingSettingsByOrgIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the billing data for the current org. Billing data
     * will only be included for countries present on the org's
     * allowed countries preference.
     * Errors:
     *    - grpc.InvalidArgument: The org_id on the request was invalid.
     *    - grpc.NotFound: The given org_id did not exist.
     *    - grpc.Internal: An unexpected error occurred while getting the orgs billing settings.
     *
     * @generated from rpc api.v0alpha.Org.GetOrgBillingSettings
     */
    readonly getOrgBillingSettings: {
      readonly name: "GetOrgBillingSettings",
      readonly I: typeof GetOrgBillingSettingsRequest,
      readonly O: typeof GetOrgBillingSettingsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates the given orgs billing settings as defined by the info
     * given on the request message. Only fields that are given on the
     * field mask will be updated.
     * Required Permissions:
     *    CUSTOMER_SUPPORT
     * Errors:
     *    - grpc.InvalidArgument: A field on the request was invalid.
     *    - grpc.NotFound: The given org_id did not exist.
     *    - grpc.Internal: An unexpected error occurred while updating the orgs billing settings.
     *
     * @generated from rpc api.v0alpha.Org.SetOrgBillingSettings
     */
    readonly setOrgBillingSettings: {
      readonly name: "SetOrgBillingSettings",
      readonly I: typeof SetOrgBillingSettingsRequest,
      readonly O: typeof SetOrgBillingSettingsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Adds a single billing region override for the given orgs billing settings.
     * If an override already exists for the given region it will be updated.
     * Required Permissions:
     *    CUSTOMER_SUPPORT
     * Errors:
     *    - grpc.InvalidArgument: A field on the request was invalid.
     *    - grpc.NotFound: The given org_id did not exist.
     *    - grpc.Internal: An unexpected error occurred while adding the override.
     *
     * @generated from rpc api.v0alpha.Org.AddOrgBillingOverride
     */
    readonly addOrgBillingOverride: {
      readonly name: "AddOrgBillingOverride",
      readonly I: typeof AddOrgBillingOverrideRequest,
      readonly O: typeof AddOrgBillingOverrideResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Removes a single billing region override for the given orgs billing settings.
     * If the region override doesn't exist the rpcs will just do nothing.
     * Required Permissions:
     *    CUSTOMER_SUPPORT
     * Errors:
     *    - grpc.InvalidArgument: The given org_id was invalid.
     *    - grpc.NotFound: The given org_id did not exist.
     *    - grpc.Internal: An unexpected error occurred while removing the override.
     *
     * @generated from rpc api.v0alpha.Org.RemoveOrgBillingOverride
     */
    readonly removeOrgBillingOverride: {
      readonly name: "RemoveOrgBillingOverride",
      readonly I: typeof RemoveOrgBillingOverrideRequest,
      readonly O: typeof RemoveOrgBillingOverrideResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the system default billing rates.
     * Required Permissions:
     *    CUSTOMER_SUPPORT
     *
     * @generated from rpc api.v0alpha.Org.GetSystemDefaultBillingRates
     */
    readonly getSystemDefaultBillingRates: {
      readonly name: "GetSystemDefaultBillingRates",
      readonly I: typeof GetSystemDefaultBillingRatesRequest,
      readonly O: typeof GetSystemDefaultBillingRatesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ListPermissionGroupsByOrgId returns the list of an org's permission groups.
     *
     * @generated from rpc api.v0alpha.Org.ListPermissionGroupsByOrgId
     */
    readonly listPermissionGroupsByOrgId: {
      readonly name: "ListPermissionGroupsByOrgId",
      readonly I: typeof ListPermissionGroupsByOrgIdRequest,
      readonly O: typeof ListPermissionGroupsByOrgIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ListPermissionGroups returns the list of an org's permission groups.
     *
     * @generated from rpc api.v0alpha.Org.ListPermissionGroups
     */
    readonly listPermissionGroups: {
      readonly name: "ListPermissionGroups",
      readonly I: typeof ListPermissionGroupsRequest,
      readonly O: typeof ListPermissionGroupsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * CreatePermissionGroup creates a new permission group for the caller's organization.
     *
     * @generated from rpc api.v0alpha.Org.CreatePermissionGroup
     */
    readonly createPermissionGroup: {
      readonly name: "CreatePermissionGroup",
      readonly I: typeof CreatePermissionGroupRequest,
      readonly O: typeof CreatePermissionGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdatePermissionGroup updates a permission group by id for the caller's organization.
     *
     * @generated from rpc api.v0alpha.Org.UpdatePermissionGroup
     */
    readonly updatePermissionGroup: {
      readonly name: "UpdatePermissionGroup",
      readonly I: typeof UpdatePermissionGroupRequest,
      readonly O: typeof UpdatePermissionGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * DeletePermissionGroup deletes a permission group by id for the caller's organization.
     *
     * @generated from rpc api.v0alpha.Org.DeletePermissionGroup
     */
    readonly deletePermissionGroup: {
      readonly name: "DeletePermissionGroup",
      readonly I: typeof DeletePermissionGroupRequest,
      readonly O: typeof DeletePermissionGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Assigns a user to a acount owner permission group.
     *
     * @generated from rpc api.v0alpha.Org.AssignUserToAccountOwnerPermissionGroup
     */
    readonly assignUserToAccountOwnerPermissionGroup: {
      readonly name: "AssignUserToAccountOwnerPermissionGroup",
      readonly I: typeof AssignUserToAccountOwnerPermissionGroupRequest,
      readonly O: typeof AssignUserToAccountOwnerPermissionGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Assigns a permission group to another user.
     * Requires that all three of permission group, calling user, and user being assigned to be of the same organization.
     * Calling user must have PERMISSION_PERMISSION_GROUP_ASSIGN.
     *
     * @generated from rpc api.v0alpha.Org.AssignUserPermissionGroup
     */
    readonly assignUserPermissionGroup: {
      readonly name: "AssignUserPermissionGroup",
      readonly I: typeof AssignUserPermissionGroupRequest,
      readonly O: typeof AssignUserPermissionGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Assigns a permission group to multiple users.
     * Requires that all three of permission group, calling user, and user being assigned to be of the same organization.
     * Calling user must have PERMISSION_PERMISSION_GROUP_ASSIGN.
     *
     * @generated from rpc api.v0alpha.Org.AssignUsersPermissionGroup
     */
    readonly assignUsersPermissionGroup: {
      readonly name: "AssignUsersPermissionGroup",
      readonly I: typeof AssignUsersPermissionGroupRequest,
      readonly O: typeof AssignUsersPermissionGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Assigns permission group(s) to another user.
     * Requires that all three of permission group, calling user, and user being assigned to be of the same organization.
     * Calling user must have PERMISSION_PERMISSION_GROUP_ASSIGN.
     *
     * @generated from rpc api.v0alpha.Org.UpdateUserNeoPermissionGroups
     */
    readonly updateUserNeoPermissionGroups: {
      readonly name: "UpdateUserNeoPermissionGroups",
      readonly I: typeof UpdateUserNeoPermissionGroupsRequest,
      readonly O: typeof UpdateUserNeoPermissionGroupsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Revokes a permission group from another user.
     * Requires that all three of permission group, calling user, and user being revoked to be of the same organization.
     * Calling user must have PERMISSION_PERMISSION_GROUP_ASSIGN.
     *
     * @generated from rpc api.v0alpha.Org.RevokeUserPermissionGroup
     */
    readonly revokeUserPermissionGroup: {
      readonly name: "RevokeUserPermissionGroup",
      readonly I: typeof RevokeUserPermissionGroupRequest,
      readonly O: typeof RevokeUserPermissionGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Revokes a permission group to multiple users.
     * Requires that all three of permission group, calling user, and user being revoked to be of the same organization.
     * Calling user must have PERMISSION_PERMISSION_GROUP_ASSIGN.
     *
     * @generated from rpc api.v0alpha.Org.RevokeUsersPermissionGroup
     */
    readonly revokeUsersPermissionGroup: {
      readonly name: "RevokeUsersPermissionGroup",
      readonly I: typeof RevokeUsersPermissionGroupRequest,
      readonly O: typeof RevokeUsersPermissionGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * InitDefaultPermissionGroups initializes the default read only permission groups for the callers organization.
     * Idempotent call. Returns the default permission groups for the organization.
     *
     * @generated from rpc api.v0alpha.Org.InitDefaultPermissionGroups
     */
    readonly initDefaultPermissionGroups: {
      readonly name: "InitDefaultPermissionGroups",
      readonly I: typeof InitDefaultPermissionGroupsRequest,
      readonly O: typeof InitDefaultPermissionGroupsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Adds a single permission to an organization's Account Owner Group.
     *
     * @generated from rpc api.v0alpha.Org.AddPermissionToAccountOwnerPermissionGroup
     */
    readonly addPermissionToAccountOwnerPermissionGroup: {
      readonly name: "AddPermissionToAccountOwnerPermissionGroup",
      readonly I: typeof AddPermissionToAccountOwnerPermissionGroupRequest,
      readonly O: typeof AddPermissionToAccountOwnerPermissionGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Adds a single permission to an organization's Account Owner Group.
     *
     * @generated from rpc api.v0alpha.Org.RevokePermissionToAccountOwnerPermissionGroup
     */
    readonly revokePermissionToAccountOwnerPermissionGroup: {
      readonly name: "RevokePermissionToAccountOwnerPermissionGroup",
      readonly I: typeof RevokePermissionToAccountOwnerPermissionGroupRequest,
      readonly O: typeof RevokePermissionToAccountOwnerPermissionGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Adds a single permission to an organization's default Super User Group.
     * Required Permissions:
     *    - TCN_ADMIN_SETTINGS
     *
     * @generated from rpc api.v0alpha.Org.AddPermissionToOrgDefaultGroup
     */
    readonly addPermissionToOrgDefaultGroup: {
      readonly name: "AddPermissionToOrgDefaultGroup",
      readonly I: typeof AddPermissionToOrgDefaultGroupRequest,
      readonly O: typeof AddPermissionToOrgDefaultGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Removes a single permission from an organization's default Super User Group.
     * Required Permissions:
     *    - TCN_ADMIN_SETTINGS
     *
     * @generated from rpc api.v0alpha.Org.RemovePermissionFromOrgDefaultGroup
     */
    readonly removePermissionFromOrgDefaultGroup: {
      readonly name: "RemovePermissionFromOrgDefaultGroup",
      readonly I: typeof RemovePermissionFromOrgDefaultGroupRequest,
      readonly O: typeof RemovePermissionFromOrgDefaultGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns an organization's default Super User Group.
     * Required Permissions:
     *    - TCN_ADMIN_SETTINGS
     *
     * @generated from rpc api.v0alpha.Org.GetOrgDefaultSuperUserGroup
     */
    readonly getOrgDefaultSuperUserGroup: {
      readonly name: "GetOrgDefaultSuperUserGroup",
      readonly I: typeof GetOrgDefaultSuperUserGroupRequest,
      readonly O: typeof GetOrgDefaultSuperUserGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ListP3PermissionGroupsByOrgId returns the list of an org's P3 permission groups.
     *
     * @generated from rpc api.v0alpha.Org.ListP3PermissionGroupsByOrgId
     */
    readonly listP3PermissionGroupsByOrgId: {
      readonly name: "ListP3PermissionGroupsByOrgId",
      readonly I: typeof ListP3PermissionGroupsByOrgIdRequest,
      readonly O: typeof ListP3PermissionGroupsByOrgIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ListP3PermissionGroups returns the list of an org's P3 permission groups.
     *
     * @generated from rpc api.v0alpha.Org.ListP3PermissionGroups
     */
    readonly listP3PermissionGroups: {
      readonly name: "ListP3PermissionGroups",
      readonly I: typeof ListP3PermissionGroupsRequest,
      readonly O: typeof ListP3PermissionGroupsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * AddUserRegion to a Users Accessible Regions
     *
     * @generated from rpc api.v0alpha.Org.AddUserRegion
     */
    readonly addUserRegion: {
      readonly name: "AddUserRegion",
      readonly I: typeof AddUserRegionRequest,
      readonly O: typeof AddUserRegionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * RemoveUserRegion from a Users Accessible Regions
     *
     * @generated from rpc api.v0alpha.Org.RemoveUserRegion
     */
    readonly removeUserRegion: {
      readonly name: "RemoveUserRegion",
      readonly I: typeof RemoveUserRegionRequest,
      readonly O: typeof RemoveUserRegionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Creates new p3 permission group
     *
     * @generated from rpc api.v0alpha.Org.CreateP3PermissionGroup
     */
    readonly createP3PermissionGroup: {
      readonly name: "CreateP3PermissionGroup",
      readonly I: typeof CreateP3PermissionGroupRequest,
      readonly O: typeof CreateP3PermissionGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Update p3 permission group
     *
     * @generated from rpc api.v0alpha.Org.UpdateP3PermissionGroupByOrgId
     */
    readonly updateP3PermissionGroupByOrgId: {
      readonly name: "UpdateP3PermissionGroupByOrgId",
      readonly I: typeof UpdateP3PermissionGroupByOrgIdRequest,
      readonly O: typeof UpdateP3PermissionGroupByOrgIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Update p3 permission group
     *
     * @generated from rpc api.v0alpha.Org.UpdateP3PermissionGroup
     */
    readonly updateP3PermissionGroup: {
      readonly name: "UpdateP3PermissionGroup",
      readonly I: typeof UpdateP3PermissionGroupRequest,
      readonly O: typeof UpdateP3PermissionGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Delete new p3 permission group
     *
     * @generated from rpc api.v0alpha.Org.DeleteP3PermissionGroup
     */
    readonly deleteP3PermissionGroup: {
      readonly name: "DeleteP3PermissionGroup",
      readonly I: typeof DeleteP3PermissionGroupRequest,
      readonly O: typeof DeleteP3PermissionGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Assign one or many users a p3 permission group
     *
     * @generated from rpc api.v0alpha.Org.AssignUsersP3PermissionGroup
     */
    readonly assignUsersP3PermissionGroup: {
      readonly name: "AssignUsersP3PermissionGroup",
      readonly I: typeof AssignUsersP3PermissionGroupRequest,
      readonly O: typeof AssignUsersP3PermissionGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * AddLoginToUser Creates new login for a given user
     *
     * @generated from rpc api.v0alpha.Org.AddLoginToUser
     */
    readonly addLoginToUser: {
      readonly name: "AddLoginToUser",
      readonly I: typeof AddLoginToUserRequest,
      readonly O: typeof AddLoginToUserResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Revoke a p3 permission group to another user(s).
     * Requires that permission group and user(s) being assigned to be of the same organization.
     * Calling user must have PERMISSION_PERMISSION_GROUP_ASSIGN.
     *
     * @generated from rpc api.v0alpha.Org.RevokeUsersP3PermissionGroup
     */
    readonly revokeUsersP3PermissionGroup: {
      readonly name: "RevokeUsersP3PermissionGroup",
      readonly I: typeof RevokeUsersP3PermissionGroupRequest,
      readonly O: typeof RevokeUsersP3PermissionGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetContactPreferences returns all contact preferences for client TODO: will replace ContactList above
     *
     * @generated from rpc api.v0alpha.Org.GetContactPreferences
     */
    readonly getContactPreferences: {
      readonly name: "GetContactPreferences",
      readonly I: typeof GetContactPreferencesRequest,
      readonly O: typeof GetContactPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateContactPreferences update fields for all contact preferences for client
     *
     * @generated from rpc api.v0alpha.Org.UpdateContactPreferences
     */
    readonly updateContactPreferences: {
      readonly name: "UpdateContactPreferences",
      readonly I: typeof UpdateContactPreferencesRequest,
      readonly O: typeof UpdateContactPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns all client compliance preferences
     *
     * @generated from rpc api.v0alpha.Org.GetCompliancePreferences
     */
    readonly getCompliancePreferences: {
      readonly name: "GetCompliancePreferences",
      readonly I: typeof GetCompliancePreferencesRequest,
      readonly O: typeof GetCompliancePreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates all client Compliance preferences
     *
     * @generated from rpc api.v0alpha.Org.UpdateCompliancePreferences
     */
    readonly updateCompliancePreferences: {
      readonly name: "UpdateCompliancePreferences",
      readonly I: typeof UpdateCompliancePreferencesRequest,
      readonly O: typeof UpdateCompliancePreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetAgentPreferences returns all client agent preferences
     *
     * @generated from rpc api.v0alpha.Org.GetAgentPreferences
     */
    readonly getAgentPreferences: {
      readonly name: "GetAgentPreferences",
      readonly I: typeof GetAgentPreferencesRequest,
      readonly O: typeof GetAgentPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateAgentPreferences updates client agent preferences
     *
     * @generated from rpc api.v0alpha.Org.UpdateAgentPreferences
     */
    readonly updateAgentPreferences: {
      readonly name: "UpdateAgentPreferences",
      readonly I: typeof UpdateAgentPreferencesRequest,
      readonly O: typeof UpdateAgentPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetOrganizationPreferences returns preferences for the organization tab
     *
     * @generated from rpc api.v0alpha.Org.GetOrganizationPreferences
     */
    readonly getOrganizationPreferences: {
      readonly name: "GetOrganizationPreferences",
      readonly I: typeof GetOrganizationPreferencesRequest,
      readonly O: typeof GetOrganizationPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateOrganizationPreferences updates preferences for the organization tab
     *
     * @generated from rpc api.v0alpha.Org.UpdateOrganizationPreferences
     */
    readonly updateOrganizationPreferences: {
      readonly name: "UpdateOrganizationPreferences",
      readonly I: typeof UpdateOrganizationPreferencesRequest,
      readonly O: typeof UpdateOrganizationPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetSchedulePreferences returns all schedule preferences for an org.
     *
     * @generated from rpc api.v0alpha.Org.GetSchedulePreferences
     */
    readonly getSchedulePreferences: {
      readonly name: "GetSchedulePreferences",
      readonly I: typeof GetSchedulePreferencesRequest,
      readonly O: typeof GetSchedulePreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateSchedulePreferences returns all schedule preferences for an org.
     *
     * @generated from rpc api.v0alpha.Org.UpdateSchedulePreferences
     */
    readonly updateSchedulePreferences: {
      readonly name: "UpdateSchedulePreferences",
      readonly I: typeof UpdateSchedulePreferencesRequest,
      readonly O: typeof UpdateSchedulePreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetBusinessPreferences returns all business intelligence and associated analytic preferences
     *
     * @generated from rpc api.v0alpha.Org.GetBusinessPreferences
     */
    readonly getBusinessPreferences: {
      readonly name: "GetBusinessPreferences",
      readonly I: typeof GetBusinessPreferencesRequest,
      readonly O: typeof GetBusinessPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateBusinessPreferences updates all business intelligence and associated analytic preferences
     *
     * @generated from rpc api.v0alpha.Org.UpdateBusinessPreferences
     */
    readonly updateBusinessPreferences: {
      readonly name: "UpdateBusinessPreferences",
      readonly I: typeof UpdateBusinessPreferencesRequest,
      readonly O: typeof UpdateBusinessPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetEndOfDayPreferences returns a time (hour 1-24) for each day of the week.
     *
     * @generated from rpc api.v0alpha.Org.GetEndOfDayPreferences
     */
    readonly getEndOfDayPreferences: {
      readonly name: "GetEndOfDayPreferences",
      readonly I: typeof GetEndOfDayPreferencesRequest,
      readonly O: typeof GetEndOfDayPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateEndOfDayPreferences update fields for a time (hour 1-24) for each day of the week.
     *
     * @generated from rpc api.v0alpha.Org.UpdateEndOfDayPreferences
     */
    readonly updateEndOfDayPreferences: {
      readonly name: "UpdateEndOfDayPreferences",
      readonly I: typeof UpdateEndOfDayPreferencesRequest,
      readonly O: typeof UpdateEndOfDayPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetReportFilterPreferences returns preferences for the organization tab
     *
     * @generated from rpc api.v0alpha.Org.GetReportFilterPreferences
     */
    readonly getReportFilterPreferences: {
      readonly name: "GetReportFilterPreferences",
      readonly I: typeof GetFilterPreferencesRequest,
      readonly O: typeof GetFilterPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateReportFilterPreferences updates preferences for the filter tab
     *
     * @generated from rpc api.v0alpha.Org.UpdateReportFilterPreferences
     */
    readonly updateReportFilterPreferences: {
      readonly name: "UpdateReportFilterPreferences",
      readonly I: typeof UpdateFilterPreferencesRequest,
      readonly O: typeof UpdateFilterPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetPhonePreferences returns all phone and recording preferences for an org.
     *
     * @generated from rpc api.v0alpha.Org.GetPhonePreferences
     */
    readonly getPhonePreferences: {
      readonly name: "GetPhonePreferences",
      readonly I: typeof GetPhonePreferencesRequest,
      readonly O: typeof GetPhonePreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdatePhonePreferences updates phone and recording preferences for an org.
     *
     * @generated from rpc api.v0alpha.Org.UpdatePhonePreferences
     */
    readonly updatePhonePreferences: {
      readonly name: "UpdatePhonePreferences",
      readonly I: typeof UpdatePhonePreferencesRequest,
      readonly O: typeof UpdatePhonePreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetDashboardGeneralPreferences returns all dashboard general preferences for an org.
     *
     * @generated from rpc api.v0alpha.Org.GetDashboardGeneralPreferences
     */
    readonly getDashboardGeneralPreferences: {
      readonly name: "GetDashboardGeneralPreferences",
      readonly I: typeof GetDashboardGeneralPreferencesRequest,
      readonly O: typeof GetDashboardGeneralPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateDashboardGeneralPreferences updates dashboard General preferences for an org.
     *
     * @generated from rpc api.v0alpha.Org.UpdateDashboardGeneralPreferences
     */
    readonly updateDashboardGeneralPreferences: {
      readonly name: "UpdateDashboardGeneralPreferences",
      readonly I: typeof UpdateDashboardGeneralPreferencesRequest,
      readonly O: typeof UpdateDashboardGeneralPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetWebhookPreferences returns all webhook preferences for an org.
     *
     * @generated from rpc api.v0alpha.Org.GetWebhookPreferences
     */
    readonly getWebhookPreferences: {
      readonly name: "GetWebhookPreferences",
      readonly I: typeof GetWebhookPreferencesRequest,
      readonly O: typeof GetWebhookPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateWebhookPreferences updates webhook preferences for an org.
     *
     * @generated from rpc api.v0alpha.Org.UpdateWebhookPreferences
     */
    readonly updateWebhookPreferences: {
      readonly name: "UpdateWebhookPreferences",
      readonly I: typeof UpdateWebhookPreferencesRequest,
      readonly O: typeof UpdateWebhookPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetBroadcastPreferences returns all broadcast options for campaign preferences for an org.
     *
     * @generated from rpc api.v0alpha.Org.GetBroadcastPreferences
     */
    readonly getBroadcastPreferences: {
      readonly name: "GetBroadcastPreferences",
      readonly I: typeof GetBroadcastPreferencesRequest,
      readonly O: typeof GetBroadcastPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateBroadcastPreferences updates broadcast options for campaign preferences for an org.
     *
     * @generated from rpc api.v0alpha.Org.UpdateBroadcastPreferences
     */
    readonly updateBroadcastPreferences: {
      readonly name: "UpdateBroadcastPreferences",
      readonly I: typeof UpdateBroadcastPreferencesRequest,
      readonly O: typeof UpdateBroadcastPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetAuthenticationPreferences returns all authentication options for an org.
     *
     * @generated from rpc api.v0alpha.Org.GetAuthenticationPreferences
     */
    readonly getAuthenticationPreferences: {
      readonly name: "GetAuthenticationPreferences",
      readonly I: typeof GetAuthenticationPreferencesRequest,
      readonly O: typeof GetAuthenticationPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateAuthenticationPreferences updates authentication preferences for an org.
     *
     * @generated from rpc api.v0alpha.Org.UpdateAuthenticationPreferences
     */
    readonly updateAuthenticationPreferences: {
      readonly name: "UpdateAuthenticationPreferences",
      readonly I: typeof UpdateAuthenticationPreferencesRequest,
      readonly O: typeof UpdateAuthenticationPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetRecordingPreferences returns all recording options for an org.
     *
     * @generated from rpc api.v0alpha.Org.GetRecordingPreferences
     */
    readonly getRecordingPreferences: {
      readonly name: "GetRecordingPreferences",
      readonly I: typeof GetRecordingPreferencesRequest,
      readonly O: typeof GetRecordingPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateRecordingPreferences updates Recording preferences for an org.
     *
     * @generated from rpc api.v0alpha.Org.UpdateRecordingPreferences
     */
    readonly updateRecordingPreferences: {
      readonly name: "UpdateRecordingPreferences",
      readonly I: typeof UpdateRecordingPreferencesRequest,
      readonly O: typeof UpdateRecordingPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetDashboardQueuePreferences returns the Dashboard Queue table preferences.
     *
     * @generated from rpc api.v0alpha.Org.GetDashboardQueuePreferences
     */
    readonly getDashboardQueuePreferences: {
      readonly name: "GetDashboardQueuePreferences",
      readonly I: typeof GetDashboardQueuePreferencesRequest,
      readonly O: typeof GetDashboardQueuePreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateDashboardQueuePreferences updates the Dashboard Queue table preferences.
     *
     * @generated from rpc api.v0alpha.Org.UpdateDashboardQueuePreferences
     */
    readonly updateDashboardQueuePreferences: {
      readonly name: "UpdateDashboardQueuePreferences",
      readonly I: typeof UpdateDashboardQueuePreferencesRequest,
      readonly O: typeof UpdateDashboardQueuePreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetAgentQuickViewPreferences returns the diplay templates for the client
     *
     * @generated from rpc api.v0alpha.Org.GetAgentQuickViewPreferences
     */
    readonly getAgentQuickViewPreferences: {
      readonly name: "GetAgentQuickViewPreferences",
      readonly I: typeof GetAgentQuickViewPreferencesRequest,
      readonly O: typeof GetAgentQuickViewPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetVoiceAnalyticsPreferences returns the all preferences for voice analytics
     *
     * @generated from rpc api.v0alpha.Org.GetVoiceAnalyticsPreferences
     */
    readonly getVoiceAnalyticsPreferences: {
      readonly name: "GetVoiceAnalyticsPreferences",
      readonly I: typeof GetVoiceAnalyticsPreferencesRequest,
      readonly O: typeof GetVoiceAnalyticsPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateVoiceAnalyticsPreferences updates the all preferences except for enabled for voice analytics
     *
     * @generated from rpc api.v0alpha.Org.UpdateVoiceAnalyticsPreferences
     */
    readonly updateVoiceAnalyticsPreferences: {
      readonly name: "UpdateVoiceAnalyticsPreferences",
      readonly I: typeof UpdateVoiceAnalyticsPreferencesRequest,
      readonly O: typeof UpdateVoiceAnalyticsPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateVoiceAnalyticsPreferencesEnabled updates the enabled preferences for voice analytics
     *
     * @generated from rpc api.v0alpha.Org.UpdateVoiceAnalyticsPreferencesEnabled
     */
    readonly updateVoiceAnalyticsPreferencesEnabled: {
      readonly name: "UpdateVoiceAnalyticsPreferencesEnabled",
      readonly I: typeof UpdateVoiceAnalyticsPreferencesEnabledRequest,
      readonly O: typeof UpdateVoiceAnalyticsPreferencesEnabledResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetScorecardsPreferences returns the all preferences for scorecards
     *
     * @generated from rpc api.v0alpha.Org.GetScorecardsPreferences
     */
    readonly getScorecardsPreferences: {
      readonly name: "GetScorecardsPreferences",
      readonly I: typeof GetScorecardsPreferencesRequest,
      readonly O: typeof GetScorecardsPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetScorecardsPreferences updates the all preferences for scorecards
     *
     * @generated from rpc api.v0alpha.Org.UpdateScorecardsPreferences
     */
    readonly updateScorecardsPreferences: {
      readonly name: "UpdateScorecardsPreferences",
      readonly I: typeof UpdateScorecardsPreferencesRequest,
      readonly O: typeof UpdateScorecardsPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetEmailSmsPreferences returns the all preferences for email and sms
     *
     * @generated from rpc api.v0alpha.Org.GetEmailSmsPreferences
     */
    readonly getEmailSmsPreferences: {
      readonly name: "GetEmailSmsPreferences",
      readonly I: typeof GetEmailSmsPreferencesRequest,
      readonly O: typeof GetEmailSmsPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetEmailSmsPreferences updates the all preferences for email and sms
     *
     * @generated from rpc api.v0alpha.Org.UpdateEmailSmsPreferences
     */
    readonly updateEmailSmsPreferences: {
      readonly name: "UpdateEmailSmsPreferences",
      readonly I: typeof UpdateEmailSmsPreferencesRequest,
      readonly O: typeof UpdateEmailSmsPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * EditAgentQuickViewPreferences return nil,error
     *
     * @generated from rpc api.v0alpha.Org.EditAgentQuickViewPreferences
     */
    readonly editAgentQuickViewPreferences: {
      readonly name: "EditAgentQuickViewPreferences",
      readonly I: typeof EditAgentQuickViewPreferencesRequest,
      readonly O: typeof EditAgentQuickViewPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * EditBackofficeThemePreference returns nil, error
     * changes the Client Skin client property
     *
     * @generated from rpc api.v0alpha.Org.EditBackofficeThemePreference
     */
    readonly editBackofficeThemePreference: {
      readonly name: "EditBackofficeThemePreference",
      readonly I: typeof EditBackofficeThemePreferenceRequest,
      readonly O: typeof EditBackofficeThemePreferenceResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v0alpha.Org.GetBackofficeThemePreference
     */
    readonly getBackofficeThemePreference: {
      readonly name: "GetBackofficeThemePreference",
      readonly I: typeof GetBackofficeThemePreferenceRequest,
      readonly O: typeof GetBackofficeThemePreferenceResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * AcceptLinkbackRecordingTerms controls acknowledgement for linkback recording terms and conditions
     *
     * @generated from rpc api.v0alpha.Org.AcceptLinkbackRecordingTerms
     */
    readonly acceptLinkbackRecordingTerms: {
      readonly name: "AcceptLinkbackRecordingTerms",
      readonly I: typeof AcceptLinkbackRecordingTermsRequest,
      readonly O: typeof AcceptLinkbackRecordingTermsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * LinkbackUpdateBroadcastTemplates updates broadcast template action parameters pertaining to linkback recording
     *
     * @generated from rpc api.v0alpha.Org.LinkbackUpdateBroadcastTemplates
     */
    readonly linkbackUpdateBroadcastTemplates: {
      readonly name: "LinkbackUpdateBroadcastTemplates",
      readonly I: typeof LinkbackUpdateBroadcastTemplatesRequest,
      readonly O: typeof LinkbackUpdateBroadcastTemplatesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * RecordEmailUnsubscribeAcknowledgement inserts an activity log when the client acknowledges responsibility
     * for their own email unsubscribe links.
     *
     * @generated from rpc api.v0alpha.Org.RecordEmailUnsubscribeAcknowledgement
     */
    readonly recordEmailUnsubscribeAcknowledgement: {
      readonly name: "RecordEmailUnsubscribeAcknowledgement",
      readonly I: typeof RecordEmailUnsubscribeAcknowledgementRequest,
      readonly O: typeof RecordEmailUnsubscribeAcknowledgementResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ClearEmailUnsubscribeAcknowledgement inserts an activity log when the client clears acknowledgement for
     * their own email unsubscribe links.
     *
     * @generated from rpc api.v0alpha.Org.ClearEmailUnsubscribeAcknowledgement
     */
    readonly clearEmailUnsubscribeAcknowledgement: {
      readonly name: "ClearEmailUnsubscribeAcknowledgement",
      readonly I: typeof ClearEmailUnsubscribeAcknowledgementRequest,
      readonly O: typeof ClearEmailUnsubscribeAcknowledgementResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Creates a new WebLinkTemplate as defined by request message CreateWebLinkTemplateRequest.
     * Required Permissions:
     *  ORG_EDIT
     *
     * @generated from rpc api.v0alpha.Org.CreateWebLinkTemplate
     */
    readonly createWebLinkTemplate: {
      readonly name: "CreateWebLinkTemplate",
      readonly I: typeof CreateWebLinkTemplateRequest,
      readonly O: typeof CreateWebLinkTemplateResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * List every WebLinkTemplate.
     * Required Permissions:
     *  ORG_VIEW
     *
     * @generated from rpc api.v0alpha.Org.ListWebLinkTemplates
     */
    readonly listWebLinkTemplates: {
      readonly name: "ListWebLinkTemplates",
      readonly I: typeof ListWebLinkTemplatesRequest,
      readonly O: typeof ListWebLinkTemplatesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Get one WebLinkTemplate with the given web_link_template_id.
     * Required Permissions:
     *  ORG_VIEW
     *
     * @generated from rpc api.v0alpha.Org.GetWebLinkTemplate
     */
    readonly getWebLinkTemplate: {
      readonly name: "GetWebLinkTemplate",
      readonly I: typeof GetWebLinkTemplateRequest,
      readonly O: typeof GetWebLinkTemplateResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates the WebLinkTemplate with the given web_link_template_id.
     * Required Permissions:
     *  ORG_EDIT
     *
     * @generated from rpc api.v0alpha.Org.UpdateWebLinkTemplate
     */
    readonly updateWebLinkTemplate: {
      readonly name: "UpdateWebLinkTemplate",
      readonly I: typeof UpdateWebLinkTemplateRequest,
      readonly O: typeof UpdateWebLinkTemplateResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Deletes the WebLinkTemplate with the given web_link_template_id.
     * Required Permissions:
     *  ORG_EDIT
     *
     * @generated from rpc api.v0alpha.Org.DeleteWebLinkTemplate
     */
    readonly deleteWebLinkTemplate: {
      readonly name: "DeleteWebLinkTemplate",
      readonly I: typeof DeleteWebLinkTemplateRequest,
      readonly O: typeof DeleteWebLinkTemplateResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Creates a new AgentTriggerTemplate as defined by request message CreateAgentTriggerTemplateRequest.
     * The id field on the request message will be generated as part of
     * this method. If the id field is set it WILL be overwritten.
     * Required Permissions:
     *  ORG_EDIT
     *
     * @generated from rpc api.v0alpha.Org.CreateAgentTriggerTemplate
     */
    readonly createAgentTriggerTemplate: {
      readonly name: "CreateAgentTriggerTemplate",
      readonly I: typeof CreateAgentTriggerTemplateRequest,
      readonly O: typeof CreateAgentTriggerTemplateResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns a list of every AgentTriggerTemplate for the given
     * hunt_group_sid on the request.
     * Requiree Permissions:
     *  ORG_VIEW
     *
     * @generated from rpc api.v0alpha.Org.ListAgentTriggerTemplates
     */
    readonly listAgentTriggerTemplates: {
      readonly name: "ListAgentTriggerTemplates",
      readonly I: typeof ListAgentTriggerTemplatesRequest,
      readonly O: typeof ListAgentTriggerTemplatesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns one AgentTriggerTemplate with the id given on the request message.
     * Required Permissions:
     *  ORG_VIEW
     *
     * @generated from rpc api.v0alpha.Org.GetAgentTriggerTemplate
     */
    readonly getAgentTriggerTemplate: {
      readonly name: "GetAgentTriggerTemplate",
      readonly I: typeof GetAgentTriggerTemplateRequest,
      readonly O: typeof GetAgentTriggerTemplateResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates the AgentTriggerTemplate with the id given on the request message.
     * Required Permissions:
     *  ORG_EDIT
     *
     * @generated from rpc api.v0alpha.Org.UpdateAgentTriggerTemplate
     */
    readonly updateAgentTriggerTemplate: {
      readonly name: "UpdateAgentTriggerTemplate",
      readonly I: typeof UpdateAgentTriggerTemplateRequest,
      readonly O: typeof UpdateAgentTriggerTemplateResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Deletes the AgentTriggerTemplate with the id given on the request message.
     * Required Permissions:
     *  ORG_EDIT
     *
     * @generated from rpc api.v0alpha.Org.DeleteAgentTriggerTemplate
     */
    readonly deleteAgentTriggerTemplate: {
      readonly name: "DeleteAgentTriggerTemplate",
      readonly I: typeof DeleteAgentTriggerTemplateRequest,
      readonly O: typeof DeleteAgentTriggerTemplateResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Creates a new ClientInfoDisplayTemplate as defined by request
     * message CreateClientInfoDisplayRequest.
     * Required Permissions:
     *  ORG_EDIT
     *
     * @generated from rpc api.v0alpha.Org.CreateClientInfoDisplayTemplate
     */
    readonly createClientInfoDisplayTemplate: {
      readonly name: "CreateClientInfoDisplayTemplate",
      readonly I: typeof CreateClientInfoDisplayTemplateRequest,
      readonly O: typeof CreateClientInfoDisplayTemplateResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns a list of every ClientInfoDisplayTemplate.
     * Required Permissions:
     *  ORG_EDIT
     *
     * @generated from rpc api.v0alpha.Org.ListClientInfoDisplayTemplates
     */
    readonly listClientInfoDisplayTemplates: {
      readonly name: "ListClientInfoDisplayTemplates",
      readonly I: typeof ListClientInfoDisplayTemplatesRequest,
      readonly O: typeof ListClientInfoDisplayTemplatesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates the ClientInfoDisplayTemplate as defined by request
     * message UpdateClientIntoDisplayTemplateRequest.
     * Required Permissions:
     *  ORG_VIEW
     *
     * @generated from rpc api.v0alpha.Org.UpdateClientInfoDisplayTemplate
     */
    readonly updateClientInfoDisplayTemplate: {
      readonly name: "UpdateClientInfoDisplayTemplate",
      readonly I: typeof UpdateClientInfoDisplayTemplateRequest,
      readonly O: typeof UpdateClientInfoDisplayTemplateResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Deletes the ClientInfoDisplayTemplate with the id given on the request
     * message.
     * Required Permissions:
     *  ORG_EDIT
     *
     * @generated from rpc api.v0alpha.Org.DeleteClientInfoDisplayTemplate
     */
    readonly deleteClientInfoDisplayTemplate: {
      readonly name: "DeleteClientInfoDisplayTemplate",
      readonly I: typeof DeleteClientInfoDisplayTemplateRequest,
      readonly O: typeof DeleteClientInfoDisplayTemplateResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns one ClientInfoDisplayTemplate with the id given on the
     * request message.
     *  Required Permissions:
     *    ORG_VIEW
     *
     * @generated from rpc api.v0alpha.Org.GetClientInfoDisplayTemplate
     */
    readonly getClientInfoDisplayTemplate: {
      readonly name: "GetClientInfoDisplayTemplate",
      readonly I: typeof GetClientInfoDisplayTemplateRequest,
      readonly O: typeof GetClientInfoDisplayTemplateResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns a slice of agent pause codes.
     *
     * @generated from rpc api.v0alpha.Org.ListAgentPauseCodes
     */
    readonly listAgentPauseCodes: {
      readonly name: "ListAgentPauseCodes",
      readonly I: typeof ListAgentPauseCodesRequest,
      readonly O: typeof ListAgentPauseCodesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Creates a new Agent Pause Code as defined by the request message.
     * Errors:
     *    - grpc.InvalidArgument: The pause_code field was not set, or the the pause_code.codes field is an empty list.
     *    - grpc.Internal: an error occurred while marshalling the pause_code into an xml string.
     *
     * @generated from rpc api.v0alpha.Org.CreateAgentPauseCode
     */
    readonly createAgentPauseCode: {
      readonly name: "CreateAgentPauseCode",
      readonly I: typeof CreateAgentPauseCodeRequest,
      readonly O: typeof CreateAgentPauseCodeResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates an Agent Pause Code with the xml_client_property_sid given on
     * the pause_code in the request message as defined by the other fields
     * on the pause_code message.
     * Required Permissions:
     *    AGENT_MANAGEMENT
     *    Actual permission checked is ORG_EDIT??
     * Errors:
     *    - grpc.InvalidArgument: The pause_code field was not set or the pause_code.codes field was an empty list.
     *    - grpc.Internal: an error occurred while marshalling the pause_code into an xml string.
     *
     * @generated from rpc api.v0alpha.Org.UpdateAgentPauseCode
     */
    readonly updateAgentPauseCode: {
      readonly name: "UpdateAgentPauseCode",
      readonly I: typeof UpdateAgentPauseCodeRequest,
      readonly O: typeof UpdateAgentPauseCodeResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Deletes an Agent Pause Code with the sid given on the request message.
     * Errors:
     *    - grpc.InvalidArgument: The xml_client_property_sid field is invalid.
     *
     * @generated from rpc api.v0alpha.Org.DeleteAgentPauseCode
     */
    readonly deleteAgentPauseCode: {
      readonly name: "DeleteAgentPauseCode",
      readonly I: typeof DeleteAgentPauseCodeRequest,
      readonly O: typeof DeleteAgentPauseCodeResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns a slice of custom report filters belonging to client_sid.
     * Required Permissions:
     *    ORG_VIEW
     * Errors:
     *    - grpc.NotFound: There is no entry matching the requested client_sid.
     *
     * @generated from rpc api.v0alpha.Org.ListCustomReportFilters
     */
    readonly listCustomReportFilters: {
      readonly name: "ListCustomReportFilters",
      readonly I: typeof ListCustomReportFiltersRequest,
      readonly O: typeof ListCustomReportFiltersResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Creates a new custom report filter as defined by the request message.
     * Required Permissions:
     *    ORG_EDIT
     * Errors:
     *    - grpc.InvalidArgument: The custom report filter has an empty name or no filtering parameters.
     *    - grpc.Internal: An error occurred marshalling the custom report filter into an xml string.
     *
     * @generated from rpc api.v0alpha.Org.CreateCustomReportFilter
     */
    readonly createCustomReportFilter: {
      readonly name: "CreateCustomReportFilter",
      readonly I: typeof CreateCustomReportFilterRequest,
      readonly O: typeof CreateCustomReportFilterResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates a custom report filter with the requested xml_client_property_sid
     * with the report filter in the request message.
     * Required Permissions:
     *    ORG_EDIT
     * Errors:
     *    - grpc.InvalidArgument: The pause_code field was not set or the pause_code.codes field was an empty list.
     *    - grpc.Internal: an error occurred while marshalling the pause_code into an xml string.
     *
     * @generated from rpc api.v0alpha.Org.UpdateCustomReportFilter
     */
    readonly updateCustomReportFilter: {
      readonly name: "UpdateCustomReportFilter",
      readonly I: typeof UpdateCustomReportFilterRequest,
      readonly O: typeof UpdateCustomReportFilterResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Deletes a custom report filter with the sid given on the request message.
     * Required Permissions:
     *    ORG_EDIT
     * Errors:
     *    - grpc.InvalidArgument: The xml_client_property_sid field is invalid.
     *
     * @generated from rpc api.v0alpha.Org.DeleteCustomReportFilter
     */
    readonly deleteCustomReportFilter: {
      readonly name: "DeleteCustomReportFilter",
      readonly I: typeof DeleteCustomReportFilterRequest,
      readonly O: typeof DeleteCustomReportFilterResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns a slice of hunt group scripts belonging to the client_sid.
     * Required Permissions:
     *    ORG_VIEW
     * Errors:
     *    - grpc.NotFound: There is no entry matching the requested client_sid.
     *
     * @generated from rpc api.v0alpha.Org.ListAgentResponseGroups
     */
    readonly listAgentResponseGroups: {
      readonly name: "ListAgentResponseGroups",
      readonly I: typeof ListAgentResponseGroupsRequest,
      readonly O: typeof ListAgentResponseGroupsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns a slice of last template element scripts belonging to the client_sid.
     * Required Permissions:
     *    ORG_VIEW
     * Errors:
     *    - grpc.NotFound: There is no entry matching the requested client_sid.
     *
     * @generated from rpc api.v0alpha.Org.ListLastTemplateElements
     */
    readonly listLastTemplateElements: {
      readonly name: "ListLastTemplateElements",
      readonly I: typeof ListLastTemplateElementsRequest,
      readonly O: typeof ListLastTemplateElementsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Lists the names of the custom queue configs.
     * Errors:
     *   - grpc.Internal: An error occurred while getting the config names.
     *   - grpc.NotFound: The given @org_id was not found (if @org_id is NOT empty).
     *
     * @generated from rpc api.v0alpha.Org.ListQueueConfigs
     */
    readonly listQueueConfigs: {
      readonly name: "ListQueueConfigs",
      readonly I: typeof ListQueueConfigsReq,
      readonly O: typeof ListQueueConfigsRes,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Lists the names of the custom queue configs.
     * Errors:
     *   - grpc.Internal: An error occurred while getting the config names.
     *   - grpc.NotFound: The given @org_id was not found (if @org_id is NOT empty).
     *
     * @generated from rpc api.v0alpha.Org.ListQueueConfigsByOrgId
     */
    readonly listQueueConfigsByOrgId: {
      readonly name: "ListQueueConfigsByOrgId",
      readonly I: typeof ListQueueConfigsByOrgIdReq,
      readonly O: typeof ListQueueConfigsByOrgIdRes,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Deletes a queue config with the given @client_sid and @config_name.
     * Required Permissions:
     *    ORG_EDIT
     * Errors:
     *    - grpc.Internal: An unexpected error occurred while removing the config.
     *    - grpc.InvalidArgument: the config_name was invalid.
     *
     * @generated from rpc api.v0alpha.Org.DeleteQueueConfig
     */
    readonly deleteQueueConfig: {
      readonly name: "DeleteQueueConfig",
      readonly I: typeof DeleteQueueConfigReq,
      readonly O: typeof DeleteQueueConfigRes,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Gets the details for the queue config for the given @client_sid with
     * the given @name. If @merge is true, the config data will be merged
     * with the default config data.
     * Required Permissions:
     *    ORG_VIEW
     * Errors:
     *   - grpc.Internal: An unexpected error occurred getting the config data.
     *   - grpc.InvalidArgument: the given config name was invalid.
     *
     * @generated from rpc api.v0alpha.Org.GetQueueConfig
     */
    readonly getQueueConfig: {
      readonly name: "GetQueueConfig",
      readonly I: typeof GetQueueConfigReq,
      readonly O: typeof GetQueueConfigRes,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Creates a queue config as defined by the @config given
     * on the request message.
     * Required Permissions:
     *    ORG_EDIT
     * Errors:
     *    - grpc.Internal: An unexpected error occurred while saving the config.
     *    - grpc.InvalidArgument: the given config was invalid.
     *
     * @generated from rpc api.v0alpha.Org.CreateQueueConfig
     */
    readonly createQueueConfig: {
      readonly name: "CreateQueueConfig",
      readonly I: typeof CreateQueueConfigReq,
      readonly O: typeof CreateQueueConfigRes,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates a new queue config as defined by the @config given
     * on the request message.
     * Required Permissions:
     *    ORG_EDIT
     * Errors:
     *    - grpc.NotFound: The name of the given config could not be found.
     *    - grpc.Internal: An unexpected error occurred while saving the config.
     *    - grpc.InvalidArgument: the given config was invalid.
     *
     * @generated from rpc api.v0alpha.Org.UpdateQueueConfig
     */
    readonly updateQueueConfig: {
      readonly name: "UpdateQueueConfig",
      readonly I: typeof UpdateQueueConfigReq,
      readonly O: typeof UpdateQueueConfigRes,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Copies a queue config belonging to one organization to another.
     * The queue config with the @from_name will be copied from the
     * organization with the @from_org_id to the organization with the
     * @to_org_id under the new @to_name.
     * Required Permissions:
     *    CUSTOMER_SUPPORT
     * Errors:
     *    - grpc.Internal: An unexpected error occurred while copying the config.
     *    - grpc.InvalidArgument: A field on the request message was invalid.
     *    - grpc.NotFound: The @to_org_id, @from_org_id, or @from_name was not found.
     *    - grpc.AlreadyExists: The @to_name already exists for the @to_org_id.
     *
     * @generated from rpc api.v0alpha.Org.CopyQueueConfig
     */
    readonly copyQueueConfig: {
      readonly name: "CopyQueueConfig",
      readonly I: typeof CopyQueueConfigReq,
      readonly O: typeof CopyQueueConfigRes,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the url of a downloadable zip file containing every
     * sound for the given queue config.
     * Required Permissions:
     *    ORG_VIEW
     * Errors:
     *    - grpc.Internal: An unexpected error occurred while zipping the files.
     *    - grpc.NotFound: The given queue config was not found.
     *
     * @generated from rpc api.v0alpha.Org.GetAllQueueConfigSounds
     */
    readonly getAllQueueConfigSounds: {
      readonly name: "GetAllQueueConfigSounds",
      readonly I: typeof GetAllQueueConfigSoundsReq,
      readonly O: typeof GetAllQueueConfigSoundsRes,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the url of a downladable wav file for the given config's
     * sound matching the given sound enum. Leaving the config field empty
     * will look up the sound for the account default config.
     * Required Permissions:
     *  ORG_VIEW
     * Errors:
     *  - grpc.Internal: An unexpected error occurrec while getting the
     *    downloadable file url.
     *  - grpc.NotFound: The given queue config was not found or the sound
     *    was not found for the config.
     *
     * @generated from rpc api.v0alpha.Org.GetQueueConfigSound
     */
    readonly getQueueConfigSound: {
      readonly name: "GetQueueConfigSound",
      readonly I: typeof GetQueueConfigSoundReq,
      readonly O: typeof GetQueueConfigSoundRes,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Sets the given sound for the config to one of the uploaded
     * sound files in the clients upload folder matching the
     * given file_name on the request. Leaving the config field empty
     * will set the sound for the account default config.
     * Required Permissions:
     *    ORG_EDIT
     * Errors:
     *    - grpc.Internal: An unexpected error occurred while updating
     *      the configs sound.
     *    - gprc.NotFound: The given queue config was not found or the
     *      sound file was not found for the client.
     *    - grpc.InvalidArgument: The file_name on the request was invalid.
     *
     * @generated from rpc api.v0alpha.Org.SetQueueConfigSound
     */
    readonly setQueueConfigSound: {
      readonly name: "SetQueueConfigSound",
      readonly I: typeof SetQueueConfigSoundReq,
      readonly O: typeof SetQueueConfigSoundRes,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Sets every sound for a given config by copying them from
     * another config OR by copying them from a default sound set
     * identified by language and gender. Empty config names will be
     * treated as the account default config.
     * Required Permissions:
     *    ORG_EDIT
     * Errors
     *    - grpc.Internal: An unexpected error occurred while updating
     *      all sounds for the given to_config.
     *    - grpc.NotFound: The given to_config or from.config (if used)
     *      could not be found or the default sound set for the given
     *      gender/language identifier could not be found.
     *    - grpc.InvalidArgument: The to_config and from.config contained
     *      the same value. (If from.config was used)
     *
     * @generated from rpc api.v0alpha.Org.SetAllQueueConfigSoundsFromSource
     */
    readonly setAllQueueConfigSoundsFromSource: {
      readonly name: "SetAllQueueConfigSoundsFromSource",
      readonly I: typeof SetAllQueueConfigSoundsFromSourceReq,
      readonly O: typeof SetAllQueueConfigSoundsFromSourceRes,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Checks a user's blocked status.
     * Required Permissions:
     *    CUSTOMER_SUPPORT
     * Errors:
     *    - grpc.Internal: An unexpected error occurred while getting the user.
     *    - grpc.InvalidArgument: The user_id on the request was invalid.
     *
     * @generated from rpc api.v0alpha.Org.GetUserBlocked
     */
    readonly getUserBlocked: {
      readonly name: "GetUserBlocked",
      readonly I: typeof GetUserBlockedRequest,
      readonly O: typeof GetUserBlockedResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Unblocks the given user.
     * Required Permissions:
     *    CUSTOMER_SUPPORT
     * Errors:
     *    - grpc.Internal: An unexpected error occurred while unblocking the user.
     *    - grpc.InvalidArgument: The user_id on the request was invalid.
     *
     * @generated from rpc api.v0alpha.Org.UnblockUser
     */
    readonly unblockUser: {
      readonly name: "UnblockUser",
      readonly I: typeof UnblockUserRequest,
      readonly O: typeof UnblockUserResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * List all users who only exist in skunk and have not yet been migrated
     * Required Permissions:
     *  CUSTOMER_SUPPORT
     *
     * @generated from rpc api.v0alpha.Org.ListP3UnMigratedUsers
     */
    readonly listP3UnMigratedUsers: {
      readonly name: "ListP3UnMigratedUsers",
      readonly I: typeof ListP3UnMigratedUsersRequest,
      readonly O: typeof ListP3UnMigratedUsersResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Migrates a login or agent from backoffice to firestore
     * Required Permissions:
     *  CUSTOMER_SUPPORT
     *
     * @generated from rpc api.v0alpha.Org.MigrateP3User
     */
    readonly migrateP3User: {
      readonly name: "MigrateP3User",
      readonly I: typeof MigrateP3UserRequest,
      readonly O: typeof MigrateP3UserResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates the username in skunk only for a agent or login
     * Required Permissions:
     *  CUSTOMER_SUPPORT
     *
     * @generated from rpc api.v0alpha.Org.UpdateP3UserName
     */
    readonly updateP3UserName: {
      readonly name: "UpdateP3UserName",
      readonly I: typeof UpdateP3UserNameRequest,
      readonly O: typeof UpdateP3UserNameResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Gets all users under the p3 hierarchy
     * Required Permissions:
     *  OWNING_ORG_IMITATION
     *
     * @generated from rpc api.v0alpha.Org.ListOwnedUsers
     */
    readonly listOwnedUsers: {
      readonly name: "ListOwnedUsers",
      readonly I: typeof ListOwnedUsersRequest,
      readonly O: typeof ListOwnedUsersResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Gets all orgs under the p3 hierarchy
     *
     * @generated from rpc api.v0alpha.Org.ListOwnedOrgsByOrgId
     */
    readonly listOwnedOrgsByOrgId: {
      readonly name: "ListOwnedOrgsByOrgId",
      readonly I: typeof ListOwnedOrgsByOrgIdRequest,
      readonly O: typeof ListOwnedOrgsByOrgIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Gets all orgs under the p3 hierarchy
     *
     * @generated from rpc api.v0alpha.Org.ListOwnedOrgs
     */
    readonly listOwnedOrgs: {
      readonly name: "ListOwnedOrgs",
      readonly I: typeof ListOwnedOrgsRequest,
      readonly O: typeof ListOwnedOrgsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Removed login strike from list of given login_log_sids
     * Required Permissions:
     *  CUSTOMER_SUPPORT
     *
     * @generated from rpc api.v0alpha.Org.RemoveLoginStrikes
     */
    readonly removeLoginStrikes: {
      readonly name: "RemoveLoginStrikes",
      readonly I: typeof RemoveLoginStrikesRequest,
      readonly O: typeof RemoveLoginStrikesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Removed login strikes by user_id
     * Required Permissions:
     *  CUSTOMER_SUPPORT
     *
     * @generated from rpc api.v0alpha.Org.RemoveUserLoginStrikes
     */
    readonly removeUserLoginStrikes: {
      readonly name: "RemoveUserLoginStrikes",
      readonly I: typeof RemoveUserLoginStrikesRequest,
      readonly O: typeof RemoveUserLoginStrikesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Lists user login history by ip or user_id
     * Required Permissions:
     *  CUSTOMER_SUPPORT
     *
     * @generated from rpc api.v0alpha.Org.ListLoginHistory
     */
    readonly listLoginHistory: {
      readonly name: "ListLoginHistory",
      readonly I: typeof ListLoginHistoryRequest,
      readonly O: typeof ListLoginHistoryResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates a users agentsid and loginsid
     * Required Permissions:
     *  TCN_ADMIN_SETTINGS
     *
     * @generated from rpc api.v0alpha.Org.UpdateP3UserSids
     */
    readonly updateP3UserSids: {
      readonly name: "UpdateP3UserSids",
      readonly I: typeof UpdateP3UserSidsRequest,
      readonly O: typeof UpdateP3UserSidsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * CreateAuthConnection creates a new auth0 connection.
     *
     * @generated from rpc api.v0alpha.Org.CreateAuthConnection
     */
    readonly createAuthConnection: {
      readonly name: "CreateAuthConnection",
      readonly I: typeof CreateAuthConnectionRequest,
      readonly O: typeof CreateAuthConnectionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetAuthConnectionSettings gets auth0 connection settings.
     *
     * @generated from rpc api.v0alpha.Org.GetAuthConnectionSettings
     */
    readonly getAuthConnectionSettings: {
      readonly name: "GetAuthConnectionSettings",
      readonly I: typeof GetAuthConnectionSettingsRequest,
      readonly O: typeof GetAuthConnectionSettingsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateAuthConnectionSettings updates an existing auth0 connection settings.
     *
     * @generated from rpc api.v0alpha.Org.UpdateAuthConnectionSettings
     */
    readonly updateAuthConnectionSettings: {
      readonly name: "UpdateAuthConnectionSettings",
      readonly I: typeof UpdateAuthConnectionSettingsRequest,
      readonly O: typeof UpdateAuthConnectionSettingsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * DeleteAuthConnection removes the current orgs auth settings.
     *
     * @generated from rpc api.v0alpha.Org.DeleteAuthConnection
     */
    readonly deleteAuthConnection: {
      readonly name: "DeleteAuthConnection",
      readonly I: typeof DeleteAuthConnectionRequest,
      readonly O: typeof DeleteAuthConnectionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Gets a user subscription by id
     *
     * @generated from rpc api.v0alpha.Org.GetUserSubscription
     */
    readonly getUserSubscription: {
      readonly name: "GetUserSubscription",
      readonly I: typeof GetUserSubscriptionRequest,
      readonly O: typeof GetUserSubscriptionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Gets a user subscription by id
     *
     * @generated from rpc api.v0alpha.Org.GetMyUserSubscription
     */
    readonly getMyUserSubscription: {
      readonly name: "GetMyUserSubscription",
      readonly I: typeof GetMyUserSubscriptionRequest,
      readonly O: typeof GetMyUserSubscriptionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Adds a user subscription to user's list of subscriptions
     *
     * @generated from rpc api.v0alpha.Org.AddUserSubscription
     */
    readonly addUserSubscription: {
      readonly name: "AddUserSubscription",
      readonly I: typeof AddUserSubscriptionRequest,
      readonly O: typeof AddUserSubscriptionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Adds a user subscription to user's list of subscriptions
     *
     * @generated from rpc api.v0alpha.Org.AddMyUserSubscription
     */
    readonly addMyUserSubscription: {
      readonly name: "AddMyUserSubscription",
      readonly I: typeof AddMyUserSubscriptionRequest,
      readonly O: typeof AddMyUserSubscriptionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Removes a user subscription from a specified user's list of subscriptions
     *
     * @generated from rpc api.v0alpha.Org.RemoveUserSubscription
     */
    readonly removeUserSubscription: {
      readonly name: "RemoveUserSubscription",
      readonly I: typeof RemoveUserSubscriptionRequest,
      readonly O: typeof RemoveUserSubscriptionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Removes a user subscription from a user's list of subscriptions
     *
     * @generated from rpc api.v0alpha.Org.RemoveMyUserSubscription
     */
    readonly removeMyUserSubscription: {
      readonly name: "RemoveMyUserSubscription",
      readonly I: typeof RemoveMyUserSubscriptionRequest,
      readonly O: typeof RemoveMyUserSubscriptionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates a user subscription
     *
     * @generated from rpc api.v0alpha.Org.UpdateUserSubscription
     */
    readonly updateUserSubscription: {
      readonly name: "UpdateUserSubscription",
      readonly I: typeof UpdateUserSubscriptionRequest,
      readonly O: typeof UpdateUserSubscriptionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates a user subscription
     *
     * @generated from rpc api.v0alpha.Org.UpdateMyUserSubscription
     */
    readonly updateMyUserSubscription: {
      readonly name: "UpdateMyUserSubscription",
      readonly I: typeof UpdateMyUserSubscriptionRequest,
      readonly O: typeof UpdateMyUserSubscriptionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Lists all of a users subscriptions
     *
     * @generated from rpc api.v0alpha.Org.ListUserSubscriptions
     */
    readonly listUserSubscriptions: {
      readonly name: "ListUserSubscriptions",
      readonly I: typeof ListUserSubscriptionsRequest,
      readonly O: typeof ListUserSubscriptionsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Lists all of a users subscriptions
     *
     * @generated from rpc api.v0alpha.Org.ListMyUserSubscriptions
     */
    readonly listMyUserSubscriptions: {
      readonly name: "ListMyUserSubscriptions",
      readonly I: typeof ListMyUserSubscriptionsRequest,
      readonly O: typeof ListMyUserSubscriptionsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Lists multiple users subscriptions by org. Optionally filters by event type.
     * Required Permissions:
     *    ORG_VIEW
     *
     * @generated from rpc api.v0alpha.Org.ListOrgSubscriptions
     */
    readonly listOrgSubscriptions: {
      readonly name: "ListOrgSubscriptions",
      readonly I: typeof ListOrgSubscriptionsRequest,
      readonly O: typeof ListOrgSubscriptionsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the systems current environment details
     * Required Permissions:
     *    N/A
     *
     * @generated from rpc api.v0alpha.Org.GetSystemEnvironmentDetails
     */
    readonly getSystemEnvironmentDetails: {
      readonly name: "GetSystemEnvironmentDetails",
      readonly I: typeof GetSystemEnvironmentDetailsRequest,
      readonly O: typeof GetSystemEnvironmentDetailsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns a list of agent statistics templates belonging to client_sid.
     * Required Permissions:
     *    ORG_VIEW
     * Errors:
     *    - grpc.NotFound: There is no entry matching the requested client_sid.
     *
     * @generated from rpc api.v0alpha.Org.ListAgentStatisticsTemplates
     */
    readonly listAgentStatisticsTemplates: {
      readonly name: "ListAgentStatisticsTemplates",
      readonly I: typeof ListAgentStatisticsTemplatesRequest,
      readonly O: typeof ListAgentStatisticsTemplatesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Creates a new agent statistics template for the given client_sid.
     * Required Permissions:
     *    ORG_EDIT
     * Errors:
     *    - grpc.NotFound: The client_sid is not found.
     *
     * @generated from rpc api.v0alpha.Org.CreateAgentStatisticsTemplate
     */
    readonly createAgentStatisticsTemplate: {
      readonly name: "CreateAgentStatisticsTemplate",
      readonly I: typeof CreateAgentStatisticsTemplateRequest,
      readonly O: typeof CreateAgentStatisticsTemplateResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates an existing agent statistics template for the given client_sid.
     * Required Permissions:
     *    ORG_EDIT
     * Errors:
     *    - grpc.NotFound: The client_sid is not found.
     *
     * @generated from rpc api.v0alpha.Org.UpdateAgentStatisticsTemplate
     */
    readonly updateAgentStatisticsTemplate: {
      readonly name: "UpdateAgentStatisticsTemplate",
      readonly I: typeof UpdateAgentStatisticsTemplateRequest,
      readonly O: typeof UpdateAgentStatisticsTemplateResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Deletes an existing agent statistics template for the given client_sid.
     * Required Permissions:
     *    ORG_EDIT
     * Errors:
     *    - grpc.NotFound: The client_sid or agent statistics template is not found.
     *
     * @generated from rpc api.v0alpha.Org.DeleteAgentStatisticsTemplate
     */
    readonly deleteAgentStatisticsTemplate: {
      readonly name: "DeleteAgentStatisticsTemplate",
      readonly I: typeof DeleteAgentStatisticsTemplateRequest,
      readonly O: typeof DeleteAgentStatisticsTemplateResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};


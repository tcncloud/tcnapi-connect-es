// @generated by protoc-gen-es v1.7.0 with parameter "target=js+dts"
// @generated from file api/v1alpha1/integrations/service.proto (package api.v1alpha1.integrations, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { FieldMask, proto3, Timestamp } from "@bufbuild/protobuf";
import { CompareOperation, FieldSource, IntegrationType as IntegrationType$1, InvoiceFlow, PaymentFlow, RequestMethod as RequestMethod$1, RequestSource as RequestSource$1, TransactionResult as TransactionResult$1, TransactionType as TransactionType$1, Validation as Validation$1, ValueType, VerificationFlow } from "../../commons/integrations/integrations_pb.js";

/**
 * @generated from message api.v1alpha1.integrations.ListJourneyConfigsReq
 */
export const ListJourneyConfigsReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.ListJourneyConfigsReq",
  [],
);

/**
 * @generated from message api.v1alpha1.integrations.ListNonJourneyConfigsReq
 */
export const ListNonJourneyConfigsReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.ListNonJourneyConfigsReq",
  [],
);

/**
 * @generated from message api.v1alpha1.integrations.IntegrationConfigs
 */
export const IntegrationConfigs = proto3.makeMessageType(
  "api.v1alpha1.integrations.IntegrationConfigs",
  () => [
    { no: 1, name: "values", kind: "message", T: IntegrationConfig, repeated: true },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.GetIntegrationConfigReq
 */
export const GetIntegrationConfigReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.GetIntegrationConfigReq",
  () => [
    { no: 3, name: "integration_id", kind: "enum", T: proto3.getEnumType(IntegrationType$1) },
    { no: 4, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.UpdateIntegrationConfigReq
 */
export const UpdateIntegrationConfigReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.UpdateIntegrationConfigReq",
  () => [
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "integration_id", kind: "enum", T: proto3.getEnumType(IntegrationType$1) },
    { no: 5, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "params", kind: "message", T: Values },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.DeleteIntegrationConfigReq
 */
export const DeleteIntegrationConfigReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.DeleteIntegrationConfigReq",
  () => [
    { no: 4, name: "integration_id", kind: "enum", T: proto3.getEnumType(IntegrationType$1) },
    { no: 5, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.ProcessReq
 */
export const ProcessReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.ProcessReq",
  () => [
    { no: 8, name: "request_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "integration_id", kind: "enum", T: proto3.getEnumType(IntegrationType$1) },
    { no: 4, name: "method_id", kind: "enum", T: proto3.getEnumType(RequestMethod$1) },
    { no: 5, name: "config_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "config_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "params", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Value} },
    { no: 7, name: "conds", kind: "message", T: Condition, repeated: true },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.ProcessRes
 */
export const ProcessRes = proto3.makeMessageType(
  "api.v1alpha1.integrations.ProcessRes",
  () => [
    { no: 1, name: "result", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "data", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Value} },
    { no: 3, name: "integration", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "method", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "transaction_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.SearchPastTransactionsRequest
 */
export const SearchPastTransactionsRequest = proto3.makeMessageType(
  "api.v1alpha1.integrations.SearchPastTransactionsRequest",
  () => [
    { no: 1, name: "plugin_instance_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "int_id", kind: "enum", T: proto3.getEnumType(IntegrationType$1) },
    { no: 3, name: "method_id", kind: "enum", T: proto3.getEnumType(RequestMethod$1) },
    { no: 4, name: "match_fields", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 5, name: "limit", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 6, name: "search_before", kind: "message", T: Timestamp },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.SearchPastTransactionsResponse
 */
export const SearchPastTransactionsResponse = proto3.makeMessageType(
  "api.v1alpha1.integrations.SearchPastTransactionsResponse",
  () => [
    { no: 1, name: "values", kind: "message", T: PastTxEntity, repeated: true },
  ],
);

/**
 * simplified view of a IntegrationTransaction
 * all values converted to string.
 * only shows the request/resposne data, and timestamp it was created on
 *
 * @generated from message api.v1alpha1.integrations.PastTxEntity
 */
export const PastTxEntity = proto3.makeMessageType(
  "api.v1alpha1.integrations.PastTxEntity",
  () => [
    { no: 1, name: "req", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 2, name: "res", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 3, name: "created_on", kind: "message", T: Timestamp },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.ListIntegrationsForOrgReq
 */
export const ListIntegrationsForOrgReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.ListIntegrationsForOrgReq",
  [],
);

/**
 * @generated from message api.v1alpha1.integrations.IntegrationInfos
 */
export const IntegrationInfos = proto3.makeMessageType(
  "api.v1alpha1.integrations.IntegrationInfos",
  () => [
    { no: 1, name: "values", kind: "message", T: IntegrationInfo, repeated: true },
  ],
);

/**
 * IntegrationInfo describes one of our payment sub-services
 * it is used in static structures in integrations/adapters/integrations go packages
 *
 * @generated from message api.v1alpha1.integrations.IntegrationInfo
 */
export const IntegrationInfo = proto3.makeMessageType(
  "api.v1alpha1.integrations.IntegrationInfo",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "integration_id", kind: "enum", T: proto3.getEnumType(IntegrationType$1) },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "methods", kind: "message", T: MethodInfo, repeated: true },
    { no: 5, name: "group_params", kind: "map", K: 5 /* ScalarType.INT32 */, V: {kind: "message", T: Parameter} },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.MethodInfo
 */
export const MethodInfo = proto3.makeMessageType(
  "api.v1alpha1.integrations.MethodInfo",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "method_id", kind: "enum", T: proto3.getEnumType(RequestMethod$1) },
    { no: 3, name: "tx_type", kind: "enum", T: proto3.getEnumType(TransactionType$1) },
    { no: 4, name: "params", kind: "message", T: Parameter, repeated: true },
    { no: 5, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "response", kind: "message", T: Parameter, repeated: true },
    { no: 7, name: "runtime_params", kind: "map", K: 5 /* ScalarType.INT32 */, V: {kind: "message", T: Parameter} },
  ],
);

/**
 * Parameter is describes a key/value pair that needs to be on the requeset object
 * it is used in static structures in integrations/adapters/integrations go packages
 *
 * @generated from message api.v1alpha1.integrations.Parameter
 */
export const Parameter = proto3.makeMessageType(
  "api.v1alpha1.integrations.Parameter",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "param_type", kind: "enum", T: proto3.getEnumType(ValueType) },
    { no: 3, name: "required", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "default_value", kind: "message", T: Value },
    { no: 5, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "sensitive", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "runtime_param", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "helper_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "template_locked", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 10, name: "validation", kind: "enum", T: proto3.getEnumType(Validation$1) },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.Empty
 */
export const Empty = proto3.makeMessageType(
  "api.v1alpha1.integrations.Empty",
  [],
);

/**
 * @generated from message api.v1alpha1.integrations.GetIntegrationTransactionReq
 */
export const GetIntegrationTransactionReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.GetIntegrationTransactionReq",
  () => [
    { no: 1, name: "integration_transaction_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * get a summary of all the aggregated data between two dates
 *
 * @generated from message api.v1alpha1.integrations.GetAggregatedMetadataReq
 */
export const GetAggregatedMetadataReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.GetAggregatedMetadataReq",
  () => [
    { no: 3, name: "start", kind: "message", T: Timestamp },
    { no: 4, name: "end", kind: "message", T: Timestamp },
    { no: 5, name: "method_id", kind: "enum", T: proto3.getEnumType(RequestMethod$1) },
  ],
);

/**
 * the metadata values. All values should be numbers or dates
 *
 * @generated from message api.v1alpha1.integrations.GetAggregatedMetadataRes
 */
export const GetAggregatedMetadataRes = proto3.makeMessageType(
  "api.v1alpha1.integrations.GetAggregatedMetadataRes",
  () => [
    { no: 1, name: "views", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "verify_attempts", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "verify_successes", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "payment_attempts", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "payment_successes", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "payment_amount", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 7, name: "fields", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * GetIntegrationTransactionReportReq gives summarizes the IntegrationTrasactions between two dates
 *
 * @generated from message api.v1alpha1.integrations.GetIntegrationTransactionReportReq
 */
export const GetIntegrationTransactionReportReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.GetIntegrationTransactionReportReq",
  () => [
    { no: 3, name: "start", kind: "message", T: Timestamp },
    { no: 4, name: "end", kind: "message", T: Timestamp },
    { no: 5, name: "group_by", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.IntegrationTransactionReportRow
 */
export const IntegrationTransactionReportRow = proto3.makeMessageType(
  "api.v1alpha1.integrations.IntegrationTransactionReportRow",
  () => [
    { no: 5, name: "integration_id", kind: "enum", T: proto3.getEnumType(IntegrationType$1) },
    { no: 17, name: "integration_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "method_id", kind: "enum", T: proto3.getEnumType(RequestMethod$1) },
    { no: 18, name: "method_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "transaction_type", kind: "enum", T: proto3.getEnumType(TransactionType$1) },
    { no: 8, name: "request_source", kind: "enum", T: proto3.getEnumType(RequestSource$1) },
    { no: 20, name: "flow_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "campaign_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "group_by_values", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 10, name: "revenue", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 19, name: "revenue_subtotals", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 1 /* ScalarType.DOUBLE */} },
    { no: 11, name: "success_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 12, name: "failure_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 13, name: "total_count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 15, name: "highest_traffic_date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "lowest_traffic_date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 24, name: "count_metrics", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 3 /* ScalarType.INT64 */} },
    { no: 25, name: "fields", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.GetIntegrationTransactionReportRes
 */
export const GetIntegrationTransactionReportRes = proto3.makeMessageType(
  "api.v1alpha1.integrations.GetIntegrationTransactionReportRes",
  () => [
    { no: 1, name: "values", kind: "message", T: IntegrationTransactionReportRow, repeated: true },
  ],
);

/**
 * Lists the integration transactions that match a flow and campaign
 *
 * @generated from message api.v1alpha1.integrations.GetIntegrationTransactionReportDataReq
 */
export const GetIntegrationTransactionReportDataReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.GetIntegrationTransactionReportDataReq",
  () => [
    { no: 3, name: "start", kind: "message", T: Timestamp },
    { no: 4, name: "end", kind: "message", T: Timestamp },
    { no: 5, name: "group_by", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 7, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "page_num", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "integration_id", kind: "enum", T: proto3.getEnumType(IntegrationType$1) },
    { no: 10, name: "search_after_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.GetIntegrationTransactionReportDataRow
 */
export const GetIntegrationTransactionReportDataRow = proto3.makeMessageType(
  "api.v1alpha1.integrations.GetIntegrationTransactionReportDataRow",
  () => [
    { no: 1, name: "count_metrics", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 3 /* ScalarType.INT64 */} },
    { no: 2, name: "link_data", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 3, name: "date", kind: "message", T: Timestamp },
    { no: 4, name: "payment_amount", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.GetIntegrationTransactionReportDataRes
 */
export const GetIntegrationTransactionReportDataRes = proto3.makeMessageType(
  "api.v1alpha1.integrations.GetIntegrationTransactionReportDataRes",
  () => [
    { no: 1, name: "entities", kind: "message", T: GetIntegrationTransactionReportDataRow, repeated: true },
    { no: 2, name: "last_transaction_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.SearchIntegrationTransactionsReq
 */
export const SearchIntegrationTransactionsReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.SearchIntegrationTransactionsReq",
  () => [
    { no: 8, name: "start_date", kind: "message", T: Timestamp },
    { no: 9, name: "end_date", kind: "message", T: Timestamp },
    { no: 10, name: "integration_type", kind: "message", T: IntegrationType },
    { no: 11, name: "request_method", kind: "message", T: RequestMethod },
    { no: 12, name: "transaction_type", kind: "message", T: TransactionType },
    { no: 13, name: "request_source", kind: "message", T: RequestSource },
    { no: 14, name: "result", kind: "message", T: TransactionResult },
    { no: 15, name: "task_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.SearchIntegrationTransactionsRes
 */
export const SearchIntegrationTransactionsRes = proto3.makeMessageType(
  "api.v1alpha1.integrations.SearchIntegrationTransactionsRes",
  () => [
    { no: 1, name: "transactions", kind: "message", T: IntegrationTransaction, repeated: true },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.IntegrationType
 */
export const IntegrationType = proto3.makeMessageType(
  "api.v1alpha1.integrations.IntegrationType",
  () => [
    { no: 1, name: "integration_id", kind: "enum", T: proto3.getEnumType(IntegrationType$1) },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.RequestMethod
 */
export const RequestMethod = proto3.makeMessageType(
  "api.v1alpha1.integrations.RequestMethod",
  () => [
    { no: 1, name: "method_id", kind: "enum", T: proto3.getEnumType(RequestMethod$1) },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.TransactionType
 */
export const TransactionType = proto3.makeMessageType(
  "api.v1alpha1.integrations.TransactionType",
  () => [
    { no: 1, name: "transaction_type", kind: "enum", T: proto3.getEnumType(TransactionType$1) },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.RequestSource
 */
export const RequestSource = proto3.makeMessageType(
  "api.v1alpha1.integrations.RequestSource",
  () => [
    { no: 1, name: "request_source", kind: "enum", T: proto3.getEnumType(RequestSource$1) },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.TransactionResult
 */
export const TransactionResult = proto3.makeMessageType(
  "api.v1alpha1.integrations.TransactionResult",
  () => [
    { no: 1, name: "result", kind: "enum", T: proto3.getEnumType(TransactionResult$1) },
  ],
);

/**
 * used to list all the config names that we have for an integration handler
 *
 * @generated from message api.v1alpha1.integrations.ListIntegrationConfigNamesReq
 */
export const ListIntegrationConfigNamesReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.ListIntegrationConfigNamesReq",
  () => [
    { no: 4, name: "integration_id", kind: "enum", T: proto3.getEnumType(IntegrationType$1) },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.ListIntegrationConfigNamesRes
 */
export const ListIntegrationConfigNamesRes = proto3.makeMessageType(
  "api.v1alpha1.integrations.ListIntegrationConfigNamesRes",
  () => [
    { no: 3, name: "integration_id", kind: "enum", T: proto3.getEnumType(IntegrationType$1) },
    { no: 4, name: "names", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.GetPaymentLinkConfigReq
 */
export const GetPaymentLinkConfigReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.GetPaymentLinkConfigReq",
  () => [
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * is just the primary key of the config
 *
 * @generated from message api.v1alpha1.integrations.DeletePaymentLinkConfigReq
 */
export const DeletePaymentLinkConfigReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.DeletePaymentLinkConfigReq",
  () => [
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * wrapper message so it can be stored in database correctly
 *
 * @generated from message api.v1alpha1.integrations.Logo
 */
export const Logo = proto3.makeMessageType(
  "api.v1alpha1.integrations.Logo",
  () => [
    { no: 1, name: "value", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
);

/**
 * LETS MOVE THIS TO portals.proto WHERE IT BELONGS
 *
 * @generated from message api.v1alpha1.integrations.ListPortalConfigsReq
 */
export const ListPortalConfigsReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.ListPortalConfigsReq",
  () => [
    { no: 1, name: "entity", kind: "message", T: PortalConfigId },
    { no: 2, name: "mask", kind: "message", T: FieldMask },
    { no: 3, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "page", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * LETS MOVE THIS TO portals.proto WHERE IT BELONGS
 *
 * @generated from message api.v1alpha1.integrations.GetPortalConfigReq
 */
export const GetPortalConfigReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.GetPortalConfigReq",
  () => [
    { no: 1, name: "entity", kind: "message", T: PortalConfigId },
    { no: 2, name: "mask", kind: "message", T: FieldMask },
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * LETS MOVE THIS TO portals.proto WHERE IT BELONGS
 *
 * @generated from message api.v1alpha1.integrations.DeletePortalConfigReq
 */
export const DeletePortalConfigReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.DeletePortalConfigReq",
  () => [
    { no: 1, name: "entity", kind: "message", T: PortalConfigId },
    { no: 2, name: "mask", kind: "message", T: FieldMask },
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.UpdatePortalLogoReq
 */
export const UpdatePortalLogoReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.UpdatePortalLogoReq",
  () => [
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "logo", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.GetPortalLogoReq
 */
export const GetPortalLogoReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.GetPortalLogoReq",
  () => [
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.RefreshLinkReq
 */
export const RefreshLinkReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.RefreshLinkReq",
  () => [
    { no: 3, name: "link_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.RefreshLinkRes
 */
export const RefreshLinkRes = proto3.makeMessageType(
  "api.v1alpha1.integrations.RefreshLinkRes",
  () => [
    { no: 1, name: "new_expiry", kind: "message", T: Timestamp },
  ],
);

/**
 * same as PaymentPortalLinkConfigDB, but with nicer field types
 *
 * @generated from message api.v1alpha1.integrations.PaymentLinkConfig
 */
export const PaymentLinkConfig = proto3.makeMessageType(
  "api.v1alpha1.integrations.PaymentLinkConfig",
  () => [
    { no: 19, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "collection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "integration_id", kind: "enum", T: proto3.getEnumType(IntegrationType$1) },
    { no: 7, name: "verification_method_id", kind: "enum", T: proto3.getEnumType(RequestMethod$1) },
    { no: 8, name: "invoice_method_id", kind: "enum", T: proto3.getEnumType(RequestMethod$1) },
    { no: 9, name: "payment_method_id", kind: "enum", T: proto3.getEnumType(RequestMethod$1) },
    { no: 10, name: "name_mapping", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 11, name: "verification_fields", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 12, name: "payment_portal_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "created_on", kind: "message", T: Timestamp },
    { no: 15, name: "expiry_days", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 16, name: "links_refreshable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 17, name: "refresh_link_valid_hours", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 18, name: "max_refresh_times", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 20, name: "verification_request", kind: "message", T: VerificationRequest },
    { no: 21, name: "invoice_request", kind: "message", T: InvoiceRequest },
    { no: 22, name: "payment_requests", kind: "message", T: PaymentRequest, repeated: true },
    { no: 23, name: "base_data", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Value} },
    { no: 24, name: "templates", kind: "message", T: PaymentLinkConfigTemplates },
    { no: 25, name: "payment_profile_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.PaymentLinkConfigTemplates
 */
export const PaymentLinkConfigTemplates = proto3.makeMessageType(
  "api.v1alpha1.integrations.PaymentLinkConfigTemplates",
  () => [
    { no: 1, name: "receipt_sms_template", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "receipt_sms_source_phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "receipt_email_template", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "receipt_email_from_addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "receipt_template", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "invoice_template", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * VerificationRequest processes verifies
 * the 'verification_fields' match in both an input payload, and the response
 *
 * @generated from message api.v1alpha1.integrations.VerificationRequest
 */
export const VerificationRequest = proto3.makeMessageType(
  "api.v1alpha1.integrations.VerificationRequest",
  () => [
    { no: 1, name: "verification_requests", kind: "message", T: Request, repeated: true },
    { no: 2, name: "verification_fields", kind: "message", T: Parameter, repeated: true },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.PaymentRequest
 */
export const PaymentRequest = proto3.makeMessageType(
  "api.v1alpha1.integrations.PaymentRequest",
  () => [
    { no: 5, name: "payment_fields", kind: "message", T: Parameter, repeated: true },
    { no: 1, name: "payment_request_payload", kind: "message", T: Request, repeated: true },
    { no: 2, name: "payment_request", kind: "message", T: Request },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.InvoiceRequest
 */
export const InvoiceRequest = proto3.makeMessageType(
  "api.v1alpha1.integrations.InvoiceRequest",
  () => [
    { no: 2, name: "invoice_request_payload", kind: "message", T: Request, repeated: true },
    { no: 3, name: "invoice_request", kind: "message", T: Request },
    { no: 4, name: "filter_response_keys", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.Request
 */
export const Request = proto3.makeMessageType(
  "api.v1alpha1.integrations.Request",
  () => [
    { no: 3, name: "journey_collection_id", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "val" },
    { no: 4, name: "method_call", kind: "message", T: MethodCall, oneof: "val" },
    { no: 5, name: "config_id", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "val" },
    { no: 6, name: "static_data", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Value} },
    { no: 7, name: "rename_response_keys", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 8, name: "reassign_validations", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Validation} },
  ],
);

/**
 * This type only exists because typescript can't handle
 * a map with an enum as a value from another packages
 * map<string, api.commons.integrations.Validation>
 *
 * @generated from message api.v1alpha1.integrations.Validation
 */
export const Validation = proto3.makeMessageType(
  "api.v1alpha1.integrations.Validation",
  () => [
    { no: 1, name: "enum", kind: "enum", T: proto3.getEnumType(Validation$1) },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.MethodCall
 */
export const MethodCall = proto3.makeMessageType(
  "api.v1alpha1.integrations.MethodCall",
  () => [
    { no: 1, name: "integration_id", kind: "enum", T: proto3.getEnumType(IntegrationType$1) },
    { no: 2, name: "method_id", kind: "enum", T: proto3.getEnumType(RequestMethod$1) },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.PortalConfigs
 */
export const PortalConfigs = proto3.makeMessageType(
  "api.v1alpha1.integrations.PortalConfigs",
  () => [
    { no: 1, name: "values", kind: "message", T: PortalConfig, repeated: true },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.ListPaymentLinkConfigsReq
 */
export const ListPaymentLinkConfigsReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.ListPaymentLinkConfigsReq",
  [],
);

/**
 * @generated from message api.v1alpha1.integrations.PaymentLinkConfigs
 */
export const PaymentLinkConfigs = proto3.makeMessageType(
  "api.v1alpha1.integrations.PaymentLinkConfigs",
  () => [
    { no: 1, name: "values", kind: "message", T: PaymentLinkConfig, repeated: true },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.ListLinksReq
 */
export const ListLinksReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.ListLinksReq",
  [],
);

/**
 * @generated from message api.v1alpha1.integrations.CreatePaymentPortalLinksReq
 */
export const CreatePaymentPortalLinksReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.CreatePaymentPortalLinksReq",
  () => [
    { no: 3, name: "link_config_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "expiry", kind: "message", T: Timestamp },
    { no: 5, name: "user_data", kind: "message", T: Task, repeated: true },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.CreatePaymentPortalLinksRes
 */
export const CreatePaymentPortalLinksRes = proto3.makeMessageType(
  "api.v1alpha1.integrations.CreatePaymentPortalLinksRes",
  () => [
    { no: 1, name: "urls", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.SummaryReq
 */
export const SummaryReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.SummaryReq",
  () => [
    { no: 3, name: "year", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.SummaryRes
 */
export const SummaryRes = proto3.makeMessageType(
  "api.v1alpha1.integrations.SummaryRes",
  () => [
    { no: 1, name: "year_summary", kind: "message", T: CalendarSummary },
    { no: 2, name: "month_summaries", kind: "message", T: CalendarSummary, repeated: true },
    { no: 3, name: "week_summaries", kind: "message", T: CalendarSummary, repeated: true },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.CalendarSummary
 */
export const CalendarSummary = proto3.makeMessageType(
  "api.v1alpha1.integrations.CalendarSummary",
  () => [
    { no: 1, name: "calendar_num", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "summary", kind: "message", T: TransactionSummary },
    { no: 3, name: "type_summaries", kind: "message", T: IntegrationTypeSummary, repeated: true },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.IntegrationTypeSummary
 */
export const IntegrationTypeSummary = proto3.makeMessageType(
  "api.v1alpha1.integrations.IntegrationTypeSummary",
  () => [
    { no: 1, name: "integration_type", kind: "enum", T: proto3.getEnumType(IntegrationType$1) },
    { no: 2, name: "integration_summary", kind: "message", T: TransactionSummary },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.TransactionSummary
 */
export const TransactionSummary = proto3.makeMessageType(
  "api.v1alpha1.integrations.TransactionSummary",
  () => [
    { no: 1, name: "total_transactions_attempted", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "total_transactions_completed", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "total_transactions_failed", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "total_amount_collected", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 5, name: "avg_amount_collected", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.ListIntegrationTemplatesByConfigReq
 */
export const ListIntegrationTemplatesByConfigReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.ListIntegrationTemplatesByConfigReq",
  () => [
    { no: 2, name: "integration_config_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.ListIntegrationTemplatesByConfigRes
 */
export const ListIntegrationTemplatesByConfigRes = proto3.makeMessageType(
  "api.v1alpha1.integrations.ListIntegrationTemplatesByConfigRes",
  () => [
    { no: 1, name: "integration_templates", kind: "message", T: IntegrationTemplateInfo, repeated: true },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.IntegrationTemplateInfo
 */
export const IntegrationTemplateInfo = proto3.makeMessageType(
  "api.v1alpha1.integrations.IntegrationTemplateInfo",
  () => [
    { no: 1, name: "broadcast_template_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "template_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * DEPRECATED
 *
 * @generated from message api.v1alpha1.integrations.CopyPaymentLinkConfigReq
 */
export const CopyPaymentLinkConfigReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.CopyPaymentLinkConfigReq",
  () => [
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * DEPRECATED
 *
 * @generated from message api.v1alpha1.integrations.CopyPaymentLinkConfigRes
 */
export const CopyPaymentLinkConfigRes = proto3.makeMessageType(
  "api.v1alpha1.integrations.CopyPaymentLinkConfigRes",
  () => [
    { no: 1, name: "new_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * DEPRECATED
 *
 * @generated from message api.v1alpha1.integrations.ProfileName
 */
export const ProfileName = proto3.makeMessageType(
  "api.v1alpha1.integrations.ProfileName",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * DEPRECATED
 *
 * @generated from message api.v1alpha1.integrations.PaymentProfiles
 */
export const PaymentProfiles = proto3.makeMessageType(
  "api.v1alpha1.integrations.PaymentProfiles",
  () => [
    { no: 1, name: "values", kind: "message", T: PaymentProfile, repeated: true },
  ],
);

/**
 * DEPRECATED
 *
 * @generated from message api.v1alpha1.integrations.PaymentProfile
 */
export const PaymentProfile = proto3.makeMessageType(
  "api.v1alpha1.integrations.PaymentProfile",
  () => [
    { no: 8, name: "verification", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "invoice", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "payments", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * DEPRECATED
 *
 * @generated from message api.v1alpha1.integrations.UnknownField
 */
export const UnknownField = proto3.makeMessageType(
  "api.v1alpha1.integrations.UnknownField",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "reason_needed", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "potential_sources", kind: "enum", T: proto3.getEnumType(FieldSource), repeated: true },
    { no: 4, name: "suggested_fields", kind: "message", T: ProvidedField, repeated: true },
  ],
);

/**
 * DEPRECATED
 *
 * @generated from message api.v1alpha1.integrations.ProvidedField
 */
export const ProvidedField = proto3.makeMessageType(
  "api.v1alpha1.integrations.ProvidedField",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "alt_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "provided_by", kind: "enum", T: proto3.getEnumType(FieldSource) },
    { no: 4, name: "provided_by_details_num", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "provided_by_details_str", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.Values
 */
export const Values = proto3.makeMessageType(
  "api.v1alpha1.integrations.Values",
  () => [
    { no: 1, name: "values", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Value} },
  ],
);

/**
 * kind of like a json value, but we don't support circular references
 *
 * @generated from message api.v1alpha1.integrations.Value
 */
export const Value = proto3.makeMessageType(
  "api.v1alpha1.integrations.Value",
  () => [
    { no: 1, name: "str_val", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "val" },
    { no: 2, name: "num_val", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, oneof: "val" },
    { no: 3, name: "bool_val", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "val" },
    { no: 4, name: "time_val", kind: "message", T: Timestamp, oneof: "val" },
    { no: 6, name: "comp_val", kind: "message", T: CompositeVal, oneof: "val" },
    { no: 7, name: "int_val", kind: "scalar", T: 3 /* ScalarType.INT64 */, oneof: "val" },
    { no: 5, name: "sensitive", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "validation", kind: "enum", T: proto3.getEnumType(Validation$1) },
  ],
);

/**
 * represents either a field name whose value needs to be looked up in the payload
 * or a static string value
 *
 * @generated from message api.v1alpha1.integrations.FieldOrStr
 */
export const FieldOrStr = proto3.makeMessageType(
  "api.v1alpha1.integrations.FieldOrStr",
  () => [
    { no: 1, name: "field", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "val" },
    { no: 2, name: "str_val", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "val" },
  ],
);

/**
 * represents the individual parts of a string, where some of the parts are
 * fields in the payload, and other parts are static strings
 * CompositeVal cannot handle circular references. Meaning you cannot have two
 * values that contain fields of each other in the same payload.
 * Fields that are not found when built into a string will throw an error
 *
 * @generated from message api.v1alpha1.integrations.CompositeVal
 */
export const CompositeVal = proto3.makeMessageType(
  "api.v1alpha1.integrations.CompositeVal",
  () => [
    { no: 1, name: "parts", kind: "message", T: FieldOrStr, repeated: true },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.Condition
 */
export const Condition = proto3.makeMessageType(
  "api.v1alpha1.integrations.Condition",
  () => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "op", kind: "enum", T: proto3.getEnumType(CompareOperation) },
    { no: 3, name: "value", kind: "message", T: Value },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.IntegrationConfig
 */
export const IntegrationConfig = proto3.makeMessageType(
  "api.v1alpha1.integrations.IntegrationConfig",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "integration_id", kind: "enum", T: proto3.getEnumType(IntegrationType$1) },
    { no: 6, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "params", kind: "message", T: Values },
    { no: 10, name: "deleted", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 11, name: "created_on", kind: "message", T: Timestamp },
    { no: 13, name: "alias", kind: "message", T: MapString },
    { no: 14, name: "conds", kind: "message", T: Conditions },
    { no: 15, name: "method_id", kind: "enum", T: proto3.getEnumType(RequestMethod$1) },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.IntegrationTransaction
 */
export const IntegrationTransaction = proto3.makeMessageType(
  "api.v1alpha1.integrations.IntegrationTransaction",
  () => [
    { no: 1, name: "integration_transaction_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "task_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "integration_id", kind: "enum", T: proto3.getEnumType(IntegrationType$1) },
    { no: 6, name: "method_id", kind: "enum", T: proto3.getEnumType(RequestMethod$1) },
    { no: 7, name: "transaction_type", kind: "enum", T: proto3.getEnumType(TransactionType$1) },
    { no: 8, name: "request_source", kind: "enum", T: proto3.getEnumType(RequestSource$1) },
    { no: 9, name: "result", kind: "enum", T: proto3.getEnumType(TransactionResult$1) },
    { no: 10, name: "amount_collected", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 11, name: "request_data", kind: "message", T: Values },
    { no: 12, name: "response_data", kind: "message", T: Values },
    { no: 13, name: "created_on", kind: "message", T: Timestamp },
    { no: 14, name: "config_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "conds", kind: "message", T: Conditions },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.MapString
 */
export const MapString = proto3.makeMessageType(
  "api.v1alpha1.integrations.MapString",
  () => [
    { no: 1, name: "values", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.Conditions
 */
export const Conditions = proto3.makeMessageType(
  "api.v1alpha1.integrations.Conditions",
  () => [
    { no: 1, name: "values", kind: "message", T: Condition, repeated: true },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.Task
 */
export const Task = proto3.makeMessageType(
  "api.v1alpha1.integrations.Task",
  () => [
    { no: 1, name: "values", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Value} },
    { no: 2, name: "task_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "src", kind: "enum", T: proto3.getEnumType(RequestSource$1) },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.PortalConfigId
 */
export const PortalConfigId = proto3.makeMessageType(
  "api.v1alpha1.integrations.PortalConfigId",
  () => [
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * all these things will show up on the portal screen to the receiver of
 * the link contact info should look like the company who is using the portal
 * (not tcn)
 *
 * @generated from message api.v1alpha1.integrations.PortalConfig
 */
export const PortalConfig = proto3.makeMessageType(
  "api.v1alpha1.integrations.PortalConfig",
  () => [
    { no: 21, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "chat_client_link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "contact_email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "contact_phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "postal_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "city", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "state", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "company_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "logo", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 14, name: "primary_color", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "secondary_color", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "street_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.PortalLinkId
 */
export const PortalLinkId = proto3.makeMessageType(
  "api.v1alpha1.integrations.PortalLinkId",
  () => [
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.PortalLink
 */
export const PortalLink = proto3.makeMessageType(
  "api.v1alpha1.integrations.PortalLink",
  () => [
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "portal_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "plugin_instance_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "portal_config_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "task_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "data", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Value} },
    { no: 9, name: "metadata", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Value} },
    { no: 10, name: "last_edited", kind: "message", T: Timestamp },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.PortalId
 */
export const PortalId = proto3.makeMessageType(
  "api.v1alpha1.integrations.PortalId",
  () => [
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.Portal
 */
export const Portal = proto3.makeMessageType(
  "api.v1alpha1.integrations.Portal",
  () => [
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "portal_config_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "plugin_inst_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 8, name: "ptype", kind: "message", T: PortalType },
    { no: 9, name: "last_edited", kind: "message", T: Timestamp },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.PortalText
 */
export const PortalText = proto3.makeMessageType(
  "api.v1alpha1.integrations.PortalText",
  () => [
    { no: 1, name: "verification_header", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "verification_footer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "payment_header", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "payment_footer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "receipt_header", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "receipt_footer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "invoice_header", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "invoice_footer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.PortalType
 */
export const PortalType = proto3.makeMessageType(
  "api.v1alpha1.integrations.PortalType",
  () => [
    { no: 1, name: "payment_portal", kind: "message", T: PaymentPortal, oneof: "data" },
    { no: 2, name: "ivr_portal", kind: "message", T: IVRPortal, oneof: "data" },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.PaymentPortal
 */
export const PaymentPortal = proto3.makeMessageType(
  "api.v1alpha1.integrations.PaymentPortal",
  () => [
    { no: 8, name: "verification", kind: "message", T: VerificationFlow },
    { no: 9, name: "invoice", kind: "message", T: InvoiceFlow },
    { no: 10, name: "payments", kind: "message", T: PaymentFlow, repeated: true },
    { no: 20, name: "portal_text", kind: "message", T: PortalText },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.IVRPortal
 */
export const IVRPortal = proto3.makeMessageType(
  "api.v1alpha1.integrations.IVRPortal",
  [],
);

/**
 * @generated from message api.v1alpha1.integrations.PluginInstanceId
 */
export const PluginInstanceId = proto3.makeMessageType(
  "api.v1alpha1.integrations.PluginInstanceId",
  () => [
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.PluginInstance
 */
export const PluginInstance = proto3.makeMessageType(
  "api.v1alpha1.integrations.PluginInstance",
  () => [
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "plugin_definition", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "data", kind: "message", T: Values },
    { no: 10, name: "metadata", kind: "message", T: Values },
    { no: 9, name: "last_edited", kind: "message", T: Timestamp },
    { no: 12, name: "method_id", kind: "enum", T: proto3.getEnumType(RequestMethod$1) },
    { no: 13, name: "display_methods", kind: "enum", T: proto3.getEnumType(RequestMethod$1), repeated: true },
  ],
);

/**
 * PortalLinkTransactionRow is all the metrics about a portal link,
 * and how it was used in any integration transactions.
 *
 * @generated from message api.v1alpha1.integrations.PortalLinkTransactionRow
 */
export const PortalLinkTransactionRow = proto3.makeMessageType(
  "api.v1alpha1.integrations.PortalLinkTransactionRow",
  () => [
    { no: 1, name: "views", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "verify_attempts", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "verify_successes", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "payment_attempts", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "payment_successes", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "payment_amount", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 7, name: "date", kind: "message", T: Timestamp },
    { no: 8, name: "link_data", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Value} },
  ],
);

/**
 * GetPortalLinksByDateRangeReq gives a paginated view of portal links
 *
 * @generated from message api.v1alpha1.integrations.GetPortalLinksByDateRangeReq
 */
export const GetPortalLinksByDateRangeReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.GetPortalLinksByDateRangeReq",
  () => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "region_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "start", kind: "message", T: Timestamp },
    { no: 4, name: "end", kind: "message", T: Timestamp },
    { no: 5, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "page_num", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "method_id", kind: "enum", T: proto3.getEnumType(RequestMethod$1) },
  ],
);

/**
 * GetPortalLinksByDateRangeRes returns a page of data
 *
 * @generated from message api.v1alpha1.integrations.GetPortalLinksByDateRangeRes
 */
export const GetPortalLinksByDateRangeRes = proto3.makeMessageType(
  "api.v1alpha1.integrations.GetPortalLinksByDateRangeRes",
  () => [
    { no: 2, name: "rows", kind: "message", T: PortalLinkTransactionRow, repeated: true },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.CallEpicPatientReq
 */
export const CallEpicPatientReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.CallEpicPatientReq",
  () => [
    { no: 1, name: "PhoneAgentID", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "OriginPhoneExtension", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "PhoneNumber", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "EpicCallID", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.CallEpicPatientRes
 */
export const CallEpicPatientRes = proto3.makeMessageType(
  "api.v1alpha1.integrations.CallEpicPatientRes",
  () => [
    { no: 1, name: "PhoneSystemCallID", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v1alpha1.integrations.HangUpEpicPatientCallReq
 */
export const HangUpEpicPatientCallReq = proto3.makeMessageType(
  "api.v1alpha1.integrations.HangUpEpicPatientCallReq",
  () => [
    { no: 1, name: "PhoneAgentID", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "OriginPhoneExtension", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "EpicCallID", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);


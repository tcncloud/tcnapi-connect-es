// @generated by protoc-gen-connect-es v0.13.0
// @generated from file api/v1alpha1/integrations/service.proto (package api.v1alpha1.integrations, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreatePaymentPortalLinksReq, CreatePaymentPortalLinksRes, DeleteIntegrationConfigReq, DeletePortalConfigReq, Empty, GetAggregatedMetadataReq, GetAggregatedMetadataRes, GetIntegrationConfigReq, GetIntegrationTransactionReportDataReq, GetIntegrationTransactionReportDataRes, GetIntegrationTransactionReportReq, GetIntegrationTransactionReportRes, GetIntegrationTransactionReq, GetPortalConfigReq, GetPortalLinksByDateRangeReq, GetPortalLinksByDateRangeRes, GetPortalLogoReq, IntegrationConfig, IntegrationConfigs, IntegrationInfos, IntegrationTransaction, ListIntegrationConfigNamesReq, ListIntegrationConfigNamesRes, ListIntegrationTemplatesByConfigReq, ListIntegrationTemplatesByConfigRes, ListJourneyConfigsReq, ListNonJourneyConfigsReq, ListPortalConfigsReq, Logo, PortalConfig, PortalConfigs, ProcessReq, ProcessRes, SummaryReq, SummaryRes, UpdateIntegrationConfigReq, UpdatePortalLogoReq } from "./service_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service api.v1alpha1.integrations.Integrations
 */
export declare const Integrations: {
  readonly typeName: "api.v1alpha1.integrations.Integrations",
  readonly methods: {
    /**
     * combine rquest parameters with the config parameters and run the integration method
     *
     * @generated from rpc api.v1alpha1.integrations.Integrations.Process
     */
    readonly process: {
      readonly name: "Process",
      readonly I: typeof ProcessReq,
      readonly O: typeof ProcessRes,
      readonly kind: MethodKind.Unary,
    },
    /**
     * get an integration transaction
     *
     * @generated from rpc api.v1alpha1.integrations.Integrations.GetIntegrationTransaction
     */
    readonly getIntegrationTransaction: {
      readonly name: "GetIntegrationTransaction",
      readonly I: typeof GetIntegrationTransactionReq,
      readonly O: typeof IntegrationTransaction,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v1alpha1.integrations.Integrations.GetIntegrationTransactionReport
     */
    readonly getIntegrationTransactionReport: {
      readonly name: "GetIntegrationTransactionReport",
      readonly I: typeof GetIntegrationTransactionReportReq,
      readonly O: typeof GetIntegrationTransactionReportRes,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v1alpha1.integrations.Integrations.GetIntegrationTransactionReportData
     */
    readonly getIntegrationTransactionReportData: {
      readonly name: "GetIntegrationTransactionReportData",
      readonly I: typeof GetIntegrationTransactionReportDataReq,
      readonly O: typeof GetIntegrationTransactionReportDataRes,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetAggregatedMetadata returns the aggregated metrics about the portal links for a specified date range
     *
     * @generated from rpc api.v1alpha1.integrations.Integrations.GetAggregatedMetadata
     */
    readonly getAggregatedMetadata: {
      readonly name: "GetAggregatedMetadata",
      readonly I: typeof GetAggregatedMetadataReq,
      readonly O: typeof GetAggregatedMetadataRes,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetPortalLinksByDateRange returns portal link metrics and portal linnk data for specific range
     *
     * @generated from rpc api.v1alpha1.integrations.Integrations.GetPortalLinksByDateRange
     */
    readonly getPortalLinksByDateRange: {
      readonly name: "GetPortalLinksByDateRange",
      readonly I: typeof GetPortalLinksByDateRangeReq,
      readonly O: typeof GetPortalLinksByDateRangeRes,
      readonly kind: MethodKind.Unary,
    },
    /**
     * create a integration config
     *
     * @generated from rpc api.v1alpha1.integrations.Integrations.CreateIntegrationConfig
     */
    readonly createIntegrationConfig: {
      readonly name: "CreateIntegrationConfig",
      readonly I: typeof IntegrationConfig,
      readonly O: typeof Empty,
      readonly kind: MethodKind.Unary,
    },
    /**
     * get an integration config
     *
     * @generated from rpc api.v1alpha1.integrations.Integrations.GetIntegrationConfig
     */
    readonly getIntegrationConfig: {
      readonly name: "GetIntegrationConfig",
      readonly I: typeof GetIntegrationConfigReq,
      readonly O: typeof IntegrationConfig,
      readonly kind: MethodKind.Unary,
    },
    /**
     * update an integration config
     *
     * @generated from rpc api.v1alpha1.integrations.Integrations.UpdateIntegrationConfig
     */
    readonly updateIntegrationConfig: {
      readonly name: "UpdateIntegrationConfig",
      readonly I: typeof UpdateIntegrationConfigReq,
      readonly O: typeof Empty,
      readonly kind: MethodKind.Unary,
    },
    /**
     * delete an integration config
     *
     * @generated from rpc api.v1alpha1.integrations.Integrations.DeleteIntegrationConfig
     */
    readonly deleteIntegrationConfig: {
      readonly name: "DeleteIntegrationConfig",
      readonly I: typeof DeleteIntegrationConfigReq,
      readonly O: typeof Empty,
      readonly kind: MethodKind.Unary,
    },
    /**
     * list all supported integrations
     *
     * @generated from rpc api.v1alpha1.integrations.Integrations.ListIntegrations
     */
    readonly listIntegrations: {
      readonly name: "ListIntegrations",
      readonly I: typeof Empty,
      readonly O: typeof IntegrationInfos,
      readonly kind: MethodKind.Unary,
    },
    /**
     * lists all the names of the configs for an org's integration type
     *
     * @generated from rpc api.v1alpha1.integrations.Integrations.ListIntegrationConfigNames
     */
    readonly listIntegrationConfigNames: {
      readonly name: "ListIntegrationConfigNames",
      readonly I: typeof ListIntegrationConfigNamesReq,
      readonly O: typeof ListIntegrationConfigNamesRes,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v1alpha1.integrations.Integrations.ListJourneyConfigs
     */
    readonly listJourneyConfigs: {
      readonly name: "ListJourneyConfigs",
      readonly I: typeof ListJourneyConfigsReq,
      readonly O: typeof IntegrationConfigs,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v1alpha1.integrations.Integrations.ListNonJourneyConfigs
     */
    readonly listNonJourneyConfigs: {
      readonly name: "ListNonJourneyConfigs",
      readonly I: typeof ListNonJourneyConfigsReq,
      readonly O: typeof IntegrationConfigs,
      readonly kind: MethodKind.Unary,
    },
    /**
     * TODO all services looking for payment portal configs should be using the
     * PortalManagerApi service in this same packages
     * CLUDG for the payment portal configs
     *
     * @generated from rpc api.v1alpha1.integrations.Integrations.CreatePortalConfig
     */
    readonly createPortalConfig: {
      readonly name: "CreatePortalConfig",
      readonly I: typeof PortalConfig,
      readonly O: typeof Empty,
      readonly kind: MethodKind.Unary,
    },
    /**
     * TODO better signature
     * rpc ListPortalConfigs(ListPortalConfigsReq) returns (ListPortalConfigsRes);
     *
     * @generated from rpc api.v1alpha1.integrations.Integrations.ListPortalConfigs
     */
    readonly listPortalConfigs: {
      readonly name: "ListPortalConfigs",
      readonly I: typeof ListPortalConfigsReq,
      readonly O: typeof PortalConfigs,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc api.v1alpha1.integrations.Integrations.UpdatePortalConfig
     */
    readonly updatePortalConfig: {
      readonly name: "UpdatePortalConfig",
      readonly I: typeof PortalConfig,
      readonly O: typeof Empty,
      readonly kind: MethodKind.Unary,
    },
    /**
     * TODO better signature
     * rpc GetPortalConfig(GetPortalConfigReq) returns (GetPortalConfigRes);
     *
     * @generated from rpc api.v1alpha1.integrations.Integrations.GetPortalConfig
     */
    readonly getPortalConfig: {
      readonly name: "GetPortalConfig",
      readonly I: typeof GetPortalConfigReq,
      readonly O: typeof PortalConfig,
      readonly kind: MethodKind.Unary,
    },
    /**
     * TODO better signature
     * rpc DeletePortalConfig(DeletePortalConfigReq) returns (DeletePortalConfigRes);
     *
     * @generated from rpc api.v1alpha1.integrations.Integrations.DeletePortalConfig
     */
    readonly deletePortalConfig: {
      readonly name: "DeletePortalConfig",
      readonly I: typeof DeletePortalConfigReq,
      readonly O: typeof Empty,
      readonly kind: MethodKind.Unary,
    },
    /**
     * TODO deprecate
     *
     * @generated from rpc api.v1alpha1.integrations.Integrations.UpdatePortalLogo
     */
    readonly updatePortalLogo: {
      readonly name: "UpdatePortalLogo",
      readonly I: typeof UpdatePortalLogoReq,
      readonly O: typeof Empty,
      readonly kind: MethodKind.Unary,
    },
    /**
     * TODO deprecate
     *
     * @generated from rpc api.v1alpha1.integrations.Integrations.GetPortalLogo
     */
    readonly getPortalLogo: {
      readonly name: "GetPortalLogo",
      readonly I: typeof GetPortalLogoReq,
      readonly O: typeof Logo,
      readonly kind: MethodKind.Unary,
    },
    /**
     * TODO deprecate. use CreatePortalLinks on the PortalManagerApi
     * pulls the payment_link_config
     * creates an integration config for each set of data, and generates a url for the specific user
     *
     * @generated from rpc api.v1alpha1.integrations.Integrations.CreatePaymentPortalLinks
     */
    readonly createPaymentPortalLinks: {
      readonly name: "CreatePaymentPortalLinks",
      readonly I: typeof CreatePaymentPortalLinksReq,
      readonly O: typeof CreatePaymentPortalLinksRes,
      readonly kind: MethodKind.Unary,
    },
    /**
     * takes a year in YYYY format and returns the summary of transaction for that year
     *
     * @generated from rpc api.v1alpha1.integrations.Integrations.Summary
     */
    readonly summary: {
      readonly name: "Summary",
      readonly I: typeof SummaryReq,
      readonly O: typeof SummaryRes,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Lists integration templates that use the passed in integration config
     *
     * @generated from rpc api.v1alpha1.integrations.Integrations.ListIntegrationTemplatesByConfig
     */
    readonly listIntegrationTemplatesByConfig: {
      readonly name: "ListIntegrationTemplatesByConfig",
      readonly I: typeof ListIntegrationTemplatesByConfigReq,
      readonly O: typeof ListIntegrationTemplatesByConfigRes,
      readonly kind: MethodKind.Unary,
    },
  }
};


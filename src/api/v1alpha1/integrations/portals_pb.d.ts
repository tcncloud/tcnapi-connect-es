// @generated by protoc-gen-es v1.9.0 with parameter "target=js+dts"
// @generated from file api/v1alpha1/integrations/portals.proto (package api.v1alpha1.integrations, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, FieldMask, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { PluginInstance, PluginInstanceId, Portal, PortalConfig, PortalConfigId, PortalId, PortalLink, PortalLinkId, PortalType, Task, Template } from "./service_pb.js";
import type { FieldDefinition, Flow, FlowFieldLoc, FlowType, PaymentFlow, RequestMethod, VerificationFlow } from "../../commons/integrations/integrations_pb.js";

/**
 * @generated from message api.v1alpha1.integrations.UpsertPortalConfigReq
 */
export declare class UpsertPortalConfigReq extends Message<UpsertPortalConfigReq> {
  /**
   * @generated from field: api.v1alpha1.integrations.PortalConfig entity = 1;
   */
  entity?: PortalConfig;

  /**
   * @generated from field: google.protobuf.FieldMask mask = 2;
   */
  mask?: FieldMask;

  constructor(data?: PartialMessage<UpsertPortalConfigReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.UpsertPortalConfigReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpsertPortalConfigReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpsertPortalConfigReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpsertPortalConfigReq;

  static equals(a: UpsertPortalConfigReq | PlainMessage<UpsertPortalConfigReq> | undefined, b: UpsertPortalConfigReq | PlainMessage<UpsertPortalConfigReq> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.UpsertPortalConfigRes
 */
export declare class UpsertPortalConfigRes extends Message<UpsertPortalConfigRes> {
  /**
   * @generated from field: api.v1alpha1.integrations.PortalConfigId entity = 1;
   */
  entity?: PortalConfigId;

  constructor(data?: PartialMessage<UpsertPortalConfigRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.UpsertPortalConfigRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpsertPortalConfigRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpsertPortalConfigRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpsertPortalConfigRes;

  static equals(a: UpsertPortalConfigRes | PlainMessage<UpsertPortalConfigRes> | undefined, b: UpsertPortalConfigRes | PlainMessage<UpsertPortalConfigRes> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.GetPortalConfigRes
 */
export declare class GetPortalConfigRes extends Message<GetPortalConfigRes> {
  /**
   * @generated from field: api.v1alpha1.integrations.PortalConfig entity = 1;
   */
  entity?: PortalConfig;

  constructor(data?: PartialMessage<GetPortalConfigRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.GetPortalConfigRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPortalConfigRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPortalConfigRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPortalConfigRes;

  static equals(a: GetPortalConfigRes | PlainMessage<GetPortalConfigRes> | undefined, b: GetPortalConfigRes | PlainMessage<GetPortalConfigRes> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.DeletePortalConfigRes
 */
export declare class DeletePortalConfigRes extends Message<DeletePortalConfigRes> {
  constructor(data?: PartialMessage<DeletePortalConfigRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.DeletePortalConfigRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeletePortalConfigRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeletePortalConfigRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeletePortalConfigRes;

  static equals(a: DeletePortalConfigRes | PlainMessage<DeletePortalConfigRes> | undefined, b: DeletePortalConfigRes | PlainMessage<DeletePortalConfigRes> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.ListPortalConfigsRes
 */
export declare class ListPortalConfigsRes extends Message<ListPortalConfigsRes> {
  /**
   * @generated from field: repeated api.v1alpha1.integrations.PortalConfig entities = 1;
   */
  entities: PortalConfig[];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  constructor(data?: PartialMessage<ListPortalConfigsRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.ListPortalConfigsRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPortalConfigsRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPortalConfigsRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPortalConfigsRes;

  static equals(a: ListPortalConfigsRes | PlainMessage<ListPortalConfigsRes> | undefined, b: ListPortalConfigsRes | PlainMessage<ListPortalConfigsRes> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.UpdatePortalConfigLogoReq
 */
export declare class UpdatePortalConfigLogoReq extends Message<UpdatePortalConfigLogoReq> {
  /**
   * @generated from field: api.v1alpha1.integrations.PortalConfig entity = 1;
   */
  entity?: PortalConfig;

  constructor(data?: PartialMessage<UpdatePortalConfigLogoReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.UpdatePortalConfigLogoReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePortalConfigLogoReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePortalConfigLogoReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePortalConfigLogoReq;

  static equals(a: UpdatePortalConfigLogoReq | PlainMessage<UpdatePortalConfigLogoReq> | undefined, b: UpdatePortalConfigLogoReq | PlainMessage<UpdatePortalConfigLogoReq> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.UpdatePortalConfigLogoRes
 */
export declare class UpdatePortalConfigLogoRes extends Message<UpdatePortalConfigLogoRes> {
  constructor(data?: PartialMessage<UpdatePortalConfigLogoRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.UpdatePortalConfigLogoRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePortalConfigLogoRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePortalConfigLogoRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePortalConfigLogoRes;

  static equals(a: UpdatePortalConfigLogoRes | PlainMessage<UpdatePortalConfigLogoRes> | undefined, b: UpdatePortalConfigLogoRes | PlainMessage<UpdatePortalConfigLogoRes> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.GetPortalConfigLogoReq
 */
export declare class GetPortalConfigLogoReq extends Message<GetPortalConfigLogoReq> {
  /**
   * @generated from field: api.v1alpha1.integrations.PortalConfigId entity = 1;
   */
  entity?: PortalConfigId;

  constructor(data?: PartialMessage<GetPortalConfigLogoReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.GetPortalConfigLogoReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPortalConfigLogoReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPortalConfigLogoReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPortalConfigLogoReq;

  static equals(a: GetPortalConfigLogoReq | PlainMessage<GetPortalConfigLogoReq> | undefined, b: GetPortalConfigLogoReq | PlainMessage<GetPortalConfigLogoReq> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.GetPortalConfigLogoRes
 */
export declare class GetPortalConfigLogoRes extends Message<GetPortalConfigLogoRes> {
  /**
   * @generated from field: bytes entity = 1;
   */
  entity: Uint8Array;

  constructor(data?: PartialMessage<GetPortalConfigLogoRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.GetPortalConfigLogoRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPortalConfigLogoRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPortalConfigLogoRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPortalConfigLogoRes;

  static equals(a: GetPortalConfigLogoRes | PlainMessage<GetPortalConfigLogoRes> | undefined, b: GetPortalConfigLogoRes | PlainMessage<GetPortalConfigLogoRes> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.UpsertPortalReq
 */
export declare class UpsertPortalReq extends Message<UpsertPortalReq> {
  /**
   * @generated from field: api.v1alpha1.integrations.Portal entity = 1;
   */
  entity?: Portal;

  /**
   * @generated from field: google.protobuf.FieldMask mask = 2;
   */
  mask?: FieldMask;

  constructor(data?: PartialMessage<UpsertPortalReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.UpsertPortalReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpsertPortalReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpsertPortalReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpsertPortalReq;

  static equals(a: UpsertPortalReq | PlainMessage<UpsertPortalReq> | undefined, b: UpsertPortalReq | PlainMessage<UpsertPortalReq> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.UpsertPortalRes
 */
export declare class UpsertPortalRes extends Message<UpsertPortalRes> {
  /**
   * @generated from field: api.v1alpha1.integrations.PortalId entity = 1;
   */
  entity?: PortalId;

  constructor(data?: PartialMessage<UpsertPortalRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.UpsertPortalRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpsertPortalRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpsertPortalRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpsertPortalRes;

  static equals(a: UpsertPortalRes | PlainMessage<UpsertPortalRes> | undefined, b: UpsertPortalRes | PlainMessage<UpsertPortalRes> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.GetPortalReq
 */
export declare class GetPortalReq extends Message<GetPortalReq> {
  /**
   * @generated from field: api.v1alpha1.integrations.PortalId entity = 1;
   */
  entity?: PortalId;

  /**
   * @generated from field: google.protobuf.FieldMask mask = 2;
   */
  mask?: FieldMask;

  constructor(data?: PartialMessage<GetPortalReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.GetPortalReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPortalReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPortalReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPortalReq;

  static equals(a: GetPortalReq | PlainMessage<GetPortalReq> | undefined, b: GetPortalReq | PlainMessage<GetPortalReq> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.GetPortalRes
 */
export declare class GetPortalRes extends Message<GetPortalRes> {
  /**
   * @generated from field: api.v1alpha1.integrations.Portal entity = 1;
   */
  entity?: Portal;

  constructor(data?: PartialMessage<GetPortalRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.GetPortalRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPortalRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPortalRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPortalRes;

  static equals(a: GetPortalRes | PlainMessage<GetPortalRes> | undefined, b: GetPortalRes | PlainMessage<GetPortalRes> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.DeletePortalReq
 */
export declare class DeletePortalReq extends Message<DeletePortalReq> {
  /**
   * @generated from field: api.v1alpha1.integrations.PortalId entity = 1;
   */
  entity?: PortalId;

  constructor(data?: PartialMessage<DeletePortalReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.DeletePortalReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeletePortalReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeletePortalReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeletePortalReq;

  static equals(a: DeletePortalReq | PlainMessage<DeletePortalReq> | undefined, b: DeletePortalReq | PlainMessage<DeletePortalReq> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.DeletePortalRes
 */
export declare class DeletePortalRes extends Message<DeletePortalRes> {
  constructor(data?: PartialMessage<DeletePortalRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.DeletePortalRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeletePortalRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeletePortalRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeletePortalRes;

  static equals(a: DeletePortalRes | PlainMessage<DeletePortalRes> | undefined, b: DeletePortalRes | PlainMessage<DeletePortalRes> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.ListPortalsReq
 */
export declare class ListPortalsReq extends Message<ListPortalsReq> {
  /**
   * @generated from field: api.v1alpha1.integrations.PortalId entity = 1;
   */
  entity?: PortalId;

  /**
   * @generated from field: google.protobuf.FieldMask mask = 2;
   */
  mask?: FieldMask;

  /**
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * @generated from field: int32 page = 4;
   */
  page: number;

  /**
   * @generated from field: repeated api.v1alpha1.integrations.PortalType ptypes = 5;
   */
  ptypes: PortalType[];

  constructor(data?: PartialMessage<ListPortalsReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.ListPortalsReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPortalsReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPortalsReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPortalsReq;

  static equals(a: ListPortalsReq | PlainMessage<ListPortalsReq> | undefined, b: ListPortalsReq | PlainMessage<ListPortalsReq> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.ListPortalsRes
 */
export declare class ListPortalsRes extends Message<ListPortalsRes> {
  /**
   * @generated from field: repeated api.v1alpha1.integrations.Portal entities = 1;
   */
  entities: Portal[];

  constructor(data?: PartialMessage<ListPortalsRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.ListPortalsRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPortalsRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPortalsRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPortalsRes;

  static equals(a: ListPortalsRes | PlainMessage<ListPortalsRes> | undefined, b: ListPortalsRes | PlainMessage<ListPortalsRes> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.ListDetailedPortalsReq
 */
export declare class ListDetailedPortalsReq extends Message<ListDetailedPortalsReq> {
  /**
   * @generated from field: api.v1alpha1.integrations.PortalId entity = 1;
   */
  entity?: PortalId;

  /**
   * @generated from field: google.protobuf.FieldMask portal_mask = 2;
   */
  portalMask?: FieldMask;

  /**
   * controls which fields are sent back on entity related to the portal's portal_config.
   * If left empty, only the portal_config.name, and portal_config.id fields will be set.
   *
   * @generated from field: google.protobuf.FieldMask portal_config_mask = 3;
   */
  portalConfigMask?: FieldMask;

  /**
   * controls which fields are sent back on entity related to the portal's plugin_instances.
   * If left empty, only each plugin_instance.name, and plugin_instance.id fields will be set.
   *
   * @generated from field: google.protobuf.FieldMask plugin_instance_mask = 4;
   */
  pluginInstanceMask?: FieldMask;

  /**
   * @generated from field: int32 page_size = 5;
   */
  pageSize: number;

  /**
   * @generated from field: int32 page = 6;
   */
  page: number;

  /**
   * @generated from field: repeated api.v1alpha1.integrations.PortalType ptypes = 7;
   */
  ptypes: PortalType[];

  constructor(data?: PartialMessage<ListDetailedPortalsReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.ListDetailedPortalsReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListDetailedPortalsReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListDetailedPortalsReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListDetailedPortalsReq;

  static equals(a: ListDetailedPortalsReq | PlainMessage<ListDetailedPortalsReq> | undefined, b: ListDetailedPortalsReq | PlainMessage<ListDetailedPortalsReq> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.ListDetailedPortalsRes
 */
export declare class ListDetailedPortalsRes extends Message<ListDetailedPortalsRes> {
  /**
   * @generated from field: repeated api.v1alpha1.integrations.ListDetailedPortalsRes.Entity entities = 4;
   */
  entities: ListDetailedPortalsRes_Entity[];

  constructor(data?: PartialMessage<ListDetailedPortalsRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.ListDetailedPortalsRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListDetailedPortalsRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListDetailedPortalsRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListDetailedPortalsRes;

  static equals(a: ListDetailedPortalsRes | PlainMessage<ListDetailedPortalsRes> | undefined, b: ListDetailedPortalsRes | PlainMessage<ListDetailedPortalsRes> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.ListDetailedPortalsRes.Entity
 */
export declare class ListDetailedPortalsRes_Entity extends Message<ListDetailedPortalsRes_Entity> {
  /**
   * @generated from field: api.v1alpha1.integrations.Portal portal = 1;
   */
  portal?: Portal;

  /**
   * @generated from field: api.v1alpha1.integrations.PortalConfig portal_config = 2;
   */
  portalConfig?: PortalConfig;

  /**
   * @generated from field: repeated api.v1alpha1.integrations.PluginInstance plugin_instances = 3;
   */
  pluginInstances: PluginInstance[];

  constructor(data?: PartialMessage<ListDetailedPortalsRes_Entity>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.ListDetailedPortalsRes.Entity";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListDetailedPortalsRes_Entity;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListDetailedPortalsRes_Entity;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListDetailedPortalsRes_Entity;

  static equals(a: ListDetailedPortalsRes_Entity | PlainMessage<ListDetailedPortalsRes_Entity> | undefined, b: ListDetailedPortalsRes_Entity | PlainMessage<ListDetailedPortalsRes_Entity> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.GetDetailedPortalReq
 */
export declare class GetDetailedPortalReq extends Message<GetDetailedPortalReq> {
  /**
   * @generated from field: api.v1alpha1.integrations.PortalId entity = 1;
   */
  entity?: PortalId;

  /**
   * @generated from field: google.protobuf.FieldMask portal_mask = 2;
   */
  portalMask?: FieldMask;

  /**
   * controls which fields are sent back on entity related to the portal's portal_config.
   * If left empty, only the portal_config.name, and portal_config.id fields will be set.
   *
   * @generated from field: google.protobuf.FieldMask portal_config_mask = 3;
   */
  portalConfigMask?: FieldMask;

  /**
   * controls which fields are sent back on entity related to the portal's plugin_instances.
   * If left empty, only each plugin_instance.name, and plugin_instance.id fields will be set.
   *
   * @generated from field: google.protobuf.FieldMask plugin_instance_mask = 4;
   */
  pluginInstanceMask?: FieldMask;

  constructor(data?: PartialMessage<GetDetailedPortalReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.GetDetailedPortalReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDetailedPortalReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDetailedPortalReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDetailedPortalReq;

  static equals(a: GetDetailedPortalReq | PlainMessage<GetDetailedPortalReq> | undefined, b: GetDetailedPortalReq | PlainMessage<GetDetailedPortalReq> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.GetDetailedPortalRes
 */
export declare class GetDetailedPortalRes extends Message<GetDetailedPortalRes> {
  /**
   * @generated from field: api.v1alpha1.integrations.GetDetailedPortalRes.Entity entity = 4;
   */
  entity?: GetDetailedPortalRes_Entity;

  constructor(data?: PartialMessage<GetDetailedPortalRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.GetDetailedPortalRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDetailedPortalRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDetailedPortalRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDetailedPortalRes;

  static equals(a: GetDetailedPortalRes | PlainMessage<GetDetailedPortalRes> | undefined, b: GetDetailedPortalRes | PlainMessage<GetDetailedPortalRes> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.GetDetailedPortalRes.Entity
 */
export declare class GetDetailedPortalRes_Entity extends Message<GetDetailedPortalRes_Entity> {
  /**
   * @generated from field: api.v1alpha1.integrations.Portal portal = 1;
   */
  portal?: Portal;

  /**
   * @generated from field: api.v1alpha1.integrations.PortalConfig portal_config = 2;
   */
  portalConfig?: PortalConfig;

  /**
   * @generated from field: repeated api.v1alpha1.integrations.PluginInstance plugin_instances = 3;
   */
  pluginInstances: PluginInstance[];

  constructor(data?: PartialMessage<GetDetailedPortalRes_Entity>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.GetDetailedPortalRes.Entity";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDetailedPortalRes_Entity;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDetailedPortalRes_Entity;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDetailedPortalRes_Entity;

  static equals(a: GetDetailedPortalRes_Entity | PlainMessage<GetDetailedPortalRes_Entity> | undefined, b: GetDetailedPortalRes_Entity | PlainMessage<GetDetailedPortalRes_Entity> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.UpsertPluginInstanceReq
 */
export declare class UpsertPluginInstanceReq extends Message<UpsertPluginInstanceReq> {
  /**
   * @generated from field: api.v1alpha1.integrations.PluginInstance entity = 1;
   */
  entity?: PluginInstance;

  /**
   * @generated from field: google.protobuf.FieldMask mask = 2;
   */
  mask?: FieldMask;

  constructor(data?: PartialMessage<UpsertPluginInstanceReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.UpsertPluginInstanceReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpsertPluginInstanceReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpsertPluginInstanceReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpsertPluginInstanceReq;

  static equals(a: UpsertPluginInstanceReq | PlainMessage<UpsertPluginInstanceReq> | undefined, b: UpsertPluginInstanceReq | PlainMessage<UpsertPluginInstanceReq> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.UpsertPluginInstanceRes
 */
export declare class UpsertPluginInstanceRes extends Message<UpsertPluginInstanceRes> {
  /**
   * @generated from field: api.v1alpha1.integrations.PluginInstanceId entity = 1;
   */
  entity?: PluginInstanceId;

  constructor(data?: PartialMessage<UpsertPluginInstanceRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.UpsertPluginInstanceRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpsertPluginInstanceRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpsertPluginInstanceRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpsertPluginInstanceRes;

  static equals(a: UpsertPluginInstanceRes | PlainMessage<UpsertPluginInstanceRes> | undefined, b: UpsertPluginInstanceRes | PlainMessage<UpsertPluginInstanceRes> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.GetPluginInstanceReq
 */
export declare class GetPluginInstanceReq extends Message<GetPluginInstanceReq> {
  /**
   * @generated from field: api.v1alpha1.integrations.PluginInstanceId entity = 1;
   */
  entity?: PluginInstanceId;

  /**
   * @generated from field: google.protobuf.FieldMask mask = 2;
   */
  mask?: FieldMask;

  constructor(data?: PartialMessage<GetPluginInstanceReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.GetPluginInstanceReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPluginInstanceReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPluginInstanceReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPluginInstanceReq;

  static equals(a: GetPluginInstanceReq | PlainMessage<GetPluginInstanceReq> | undefined, b: GetPluginInstanceReq | PlainMessage<GetPluginInstanceReq> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.GetPluginInstanceRes
 */
export declare class GetPluginInstanceRes extends Message<GetPluginInstanceRes> {
  /**
   * @generated from field: api.v1alpha1.integrations.PluginInstance entity = 1;
   */
  entity?: PluginInstance;

  constructor(data?: PartialMessage<GetPluginInstanceRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.GetPluginInstanceRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPluginInstanceRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPluginInstanceRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPluginInstanceRes;

  static equals(a: GetPluginInstanceRes | PlainMessage<GetPluginInstanceRes> | undefined, b: GetPluginInstanceRes | PlainMessage<GetPluginInstanceRes> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.DeletePluginInstanceReq
 */
export declare class DeletePluginInstanceReq extends Message<DeletePluginInstanceReq> {
  /**
   * @generated from field: api.v1alpha1.integrations.PluginInstanceId entity = 1;
   */
  entity?: PluginInstanceId;

  constructor(data?: PartialMessage<DeletePluginInstanceReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.DeletePluginInstanceReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeletePluginInstanceReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeletePluginInstanceReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeletePluginInstanceReq;

  static equals(a: DeletePluginInstanceReq | PlainMessage<DeletePluginInstanceReq> | undefined, b: DeletePluginInstanceReq | PlainMessage<DeletePluginInstanceReq> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.DeletePluginInstanceRes
 */
export declare class DeletePluginInstanceRes extends Message<DeletePluginInstanceRes> {
  constructor(data?: PartialMessage<DeletePluginInstanceRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.DeletePluginInstanceRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeletePluginInstanceRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeletePluginInstanceRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeletePluginInstanceRes;

  static equals(a: DeletePluginInstanceRes | PlainMessage<DeletePluginInstanceRes> | undefined, b: DeletePluginInstanceRes | PlainMessage<DeletePluginInstanceRes> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.ListPluginInstanceReq
 */
export declare class ListPluginInstanceReq extends Message<ListPluginInstanceReq> {
  /**
   * @generated from field: api.v1alpha1.integrations.PluginInstance entity = 1;
   */
  entity?: PluginInstance;

  /**
   * @generated from field: google.protobuf.FieldMask mask = 2;
   */
  mask?: FieldMask;

  /**
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * @generated from field: int32 page = 4;
   */
  page: number;

  constructor(data?: PartialMessage<ListPluginInstanceReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.ListPluginInstanceReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPluginInstanceReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPluginInstanceReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPluginInstanceReq;

  static equals(a: ListPluginInstanceReq | PlainMessage<ListPluginInstanceReq> | undefined, b: ListPluginInstanceReq | PlainMessage<ListPluginInstanceReq> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.ListPluginInstanceRes
 */
export declare class ListPluginInstanceRes extends Message<ListPluginInstanceRes> {
  /**
   * @generated from field: repeated api.v1alpha1.integrations.PluginInstance entities = 1;
   */
  entities: PluginInstance[];

  constructor(data?: PartialMessage<ListPluginInstanceRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.ListPluginInstanceRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPluginInstanceRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPluginInstanceRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPluginInstanceRes;

  static equals(a: ListPluginInstanceRes | PlainMessage<ListPluginInstanceRes> | undefined, b: ListPluginInstanceRes | PlainMessage<ListPluginInstanceRes> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.ListPluginsReq
 */
export declare class ListPluginsReq extends Message<ListPluginsReq> {
  constructor(data?: PartialMessage<ListPluginsReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.ListPluginsReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPluginsReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPluginsReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPluginsReq;

  static equals(a: ListPluginsReq | PlainMessage<ListPluginsReq> | undefined, b: ListPluginsReq | PlainMessage<ListPluginsReq> | undefined): boolean;
}

/**
 * TODO DISCUSS
 *
 * @generated from message api.v1alpha1.integrations.ListPluginsRes
 */
export declare class ListPluginsRes extends Message<ListPluginsRes> {
  constructor(data?: PartialMessage<ListPluginsRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.ListPluginsRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPluginsRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPluginsRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPluginsRes;

  static equals(a: ListPluginsRes | PlainMessage<ListPluginsRes> | undefined, b: ListPluginsRes | PlainMessage<ListPluginsRes> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.ListPortalLinksReq
 */
export declare class ListPortalLinksReq extends Message<ListPortalLinksReq> {
  /**
   * @generated from field: api.v1alpha1.integrations.PortalLinkId entity = 1;
   */
  entity?: PortalLinkId;

  /**
   * @generated from field: google.protobuf.FieldMask mask = 2;
   */
  mask?: FieldMask;

  /**
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * @generated from field: int32 page = 4;
   */
  page: number;

  constructor(data?: PartialMessage<ListPortalLinksReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.ListPortalLinksReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPortalLinksReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPortalLinksReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPortalLinksReq;

  static equals(a: ListPortalLinksReq | PlainMessage<ListPortalLinksReq> | undefined, b: ListPortalLinksReq | PlainMessage<ListPortalLinksReq> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.ListPortalLinksRes
 */
export declare class ListPortalLinksRes extends Message<ListPortalLinksRes> {
  /**
   * @generated from field: repeated api.v1alpha1.integrations.PortalLink entities = 1;
   */
  entities: PortalLink[];

  constructor(data?: PartialMessage<ListPortalLinksRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.ListPortalLinksRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPortalLinksRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPortalLinksRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPortalLinksRes;

  static equals(a: ListPortalLinksRes | PlainMessage<ListPortalLinksRes> | undefined, b: ListPortalLinksRes | PlainMessage<ListPortalLinksRes> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.GetPortalLinkReq
 */
export declare class GetPortalLinkReq extends Message<GetPortalLinkReq> {
  /**
   * @generated from field: api.v1alpha1.integrations.PortalLinkId entity = 1;
   */
  entity?: PortalLinkId;

  /**
   * @generated from field: google.protobuf.FieldMask mask = 2;
   */
  mask?: FieldMask;

  constructor(data?: PartialMessage<GetPortalLinkReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.GetPortalLinkReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPortalLinkReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPortalLinkReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPortalLinkReq;

  static equals(a: GetPortalLinkReq | PlainMessage<GetPortalLinkReq> | undefined, b: GetPortalLinkReq | PlainMessage<GetPortalLinkReq> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.GetPortalLinkRes
 */
export declare class GetPortalLinkRes extends Message<GetPortalLinkRes> {
  /**
   * @generated from field: api.v1alpha1.integrations.PortalLink entity = 1;
   */
  entity?: PortalLink;

  constructor(data?: PartialMessage<GetPortalLinkRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.GetPortalLinkRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPortalLinkRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPortalLinkRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPortalLinkRes;

  static equals(a: GetPortalLinkRes | PlainMessage<GetPortalLinkRes> | undefined, b: GetPortalLinkRes | PlainMessage<GetPortalLinkRes> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.DeletePortalLinkReq
 */
export declare class DeletePortalLinkReq extends Message<DeletePortalLinkReq> {
  /**
   * @generated from field: api.v1alpha1.integrations.PortalLinkId entity = 1;
   */
  entity?: PortalLinkId;

  constructor(data?: PartialMessage<DeletePortalLinkReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.DeletePortalLinkReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeletePortalLinkReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeletePortalLinkReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeletePortalLinkReq;

  static equals(a: DeletePortalLinkReq | PlainMessage<DeletePortalLinkReq> | undefined, b: DeletePortalLinkReq | PlainMessage<DeletePortalLinkReq> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.DeletePortalLinkRes
 */
export declare class DeletePortalLinkRes extends Message<DeletePortalLinkRes> {
  constructor(data?: PartialMessage<DeletePortalLinkRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.DeletePortalLinkRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeletePortalLinkRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeletePortalLinkRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeletePortalLinkRes;

  static equals(a: DeletePortalLinkRes | PlainMessage<DeletePortalLinkRes> | undefined, b: DeletePortalLinkRes | PlainMessage<DeletePortalLinkRes> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.CreatePortalLinksReq
 */
export declare class CreatePortalLinksReq extends Message<CreatePortalLinksReq> {
  /**
   * the portal's pk the link is for
   *
   * @generated from field: api.v1alpha1.integrations.PortalId entity = 1;
   */
  entity?: PortalId;

  /**
   * each task will have a url created for it
   * and all info for it can be located by Task.task_id
   *
   * @generated from field: repeated api.v1alpha1.integrations.Task link_datas = 2;
   */
  linkDatas: Task[];

  constructor(data?: PartialMessage<CreatePortalLinksReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.CreatePortalLinksReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreatePortalLinksReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreatePortalLinksReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreatePortalLinksReq;

  static equals(a: CreatePortalLinksReq | PlainMessage<CreatePortalLinksReq> | undefined, b: CreatePortalLinksReq | PlainMessage<CreatePortalLinksReq> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.CreatePortalLinksRes
 */
export declare class CreatePortalLinksRes extends Message<CreatePortalLinksRes> {
  /**
   * each url will be returned in order of the CreatePortalLinks.link_datas sent them in
   *
   * @generated from field: repeated string urls = 1;
   */
  urls: string[];

  constructor(data?: PartialMessage<CreatePortalLinksRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.CreatePortalLinksRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreatePortalLinksRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreatePortalLinksRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreatePortalLinksRes;

  static equals(a: CreatePortalLinksRes | PlainMessage<CreatePortalLinksRes> | undefined, b: CreatePortalLinksRes | PlainMessage<CreatePortalLinksRes> | undefined): boolean;
}

/**
 * used to check what field names are expected by a flow
 * does not return any other information about the fields,
 * and the user backend still allows any data to be submitted.
 *
 * @generated from message api.v1alpha1.integrations.ListFlowFieldNamesReq
 */
export declare class ListFlowFieldNamesReq extends Message<ListFlowFieldNamesReq> {
  /**
   * @generated from field: api.v1alpha1.integrations.ListFlowFieldNamesReq.Entity entity = 5;
   */
  entity?: ListFlowFieldNamesReq_Entity;

  constructor(data?: PartialMessage<ListFlowFieldNamesReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.ListFlowFieldNamesReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListFlowFieldNamesReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListFlowFieldNamesReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListFlowFieldNamesReq;

  static equals(a: ListFlowFieldNamesReq | PlainMessage<ListFlowFieldNamesReq> | undefined, b: ListFlowFieldNamesReq | PlainMessage<ListFlowFieldNamesReq> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.ListFlowFieldNamesReq.Entity
 */
export declare class ListFlowFieldNamesReq_Entity extends Message<ListFlowFieldNamesReq_Entity> {
  /**
   * the single flow we are interested in checking
   *
   * @generated from field: api.commons.integrations.Flow flow = 3;
   */
  flow?: Flow;

  /**
   * the location the flow will check for fields
   *
   * @generated from field: api.commons.integrations.FlowFieldLoc loc = 4;
   */
  loc: FlowFieldLoc;

  constructor(data?: PartialMessage<ListFlowFieldNamesReq_Entity>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.ListFlowFieldNamesReq.Entity";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListFlowFieldNamesReq_Entity;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListFlowFieldNamesReq_Entity;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListFlowFieldNamesReq_Entity;

  static equals(a: ListFlowFieldNamesReq_Entity | PlainMessage<ListFlowFieldNamesReq_Entity> | undefined, b: ListFlowFieldNamesReq_Entity | PlainMessage<ListFlowFieldNamesReq_Entity> | undefined): boolean;
}

/**
 * the field names the flow will look for at the request's specified location
 *
 * @generated from message api.v1alpha1.integrations.ListFlowFieldNamesRes
 */
export declare class ListFlowFieldNamesRes extends Message<ListFlowFieldNamesRes> {
  /**
   * @generated from field: repeated string field_names = 1;
   */
  fieldNames: string[];

  constructor(data?: PartialMessage<ListFlowFieldNamesRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.ListFlowFieldNamesRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListFlowFieldNamesRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListFlowFieldNamesRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListFlowFieldNamesRes;

  static equals(a: ListFlowFieldNamesRes | PlainMessage<ListFlowFieldNamesRes> | undefined, b: ListFlowFieldNamesRes | PlainMessage<ListFlowFieldNamesRes> | undefined): boolean;
}

/**
 * for listing fields on the given verification flow
 *
 * @generated from message api.v1alpha1.integrations.ListAvailableVerificationFieldsReq
 */
export declare class ListAvailableVerificationFieldsReq extends Message<ListAvailableVerificationFieldsReq> {
  /**
   * @generated from field: api.commons.integrations.VerificationFlow verification = 1;
   */
  verification?: VerificationFlow;

  constructor(data?: PartialMessage<ListAvailableVerificationFieldsReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.ListAvailableVerificationFieldsReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAvailableVerificationFieldsReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAvailableVerificationFieldsReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAvailableVerificationFieldsReq;

  static equals(a: ListAvailableVerificationFieldsReq | PlainMessage<ListAvailableVerificationFieldsReq> | undefined, b: ListAvailableVerificationFieldsReq | PlainMessage<ListAvailableVerificationFieldsReq> | undefined): boolean;
}

/**
 * the available fields for the verification flow
 *
 * @generated from message api.v1alpha1.integrations.ListAvailableVerificationFieldsRes
 */
export declare class ListAvailableVerificationFieldsRes extends Message<ListAvailableVerificationFieldsRes> {
  /**
   * @generated from field: repeated api.commons.integrations.FieldDefinition verification_fields = 2;
   */
  verificationFields: FieldDefinition[];

  constructor(data?: PartialMessage<ListAvailableVerificationFieldsRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.ListAvailableVerificationFieldsRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAvailableVerificationFieldsRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAvailableVerificationFieldsRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAvailableVerificationFieldsRes;

  static equals(a: ListAvailableVerificationFieldsRes | PlainMessage<ListAvailableVerificationFieldsRes> | undefined, b: ListAvailableVerificationFieldsRes | PlainMessage<ListAvailableVerificationFieldsRes> | undefined): boolean;
}

/**
 * for listing fields on the given payment flow
 *
 * @generated from message api.v1alpha1.integrations.ListAvailablePaymentFieldsReq
 */
export declare class ListAvailablePaymentFieldsReq extends Message<ListAvailablePaymentFieldsReq> {
  /**
   * @generated from field: api.commons.integrations.PaymentFlow payment = 1;
   */
  payment?: PaymentFlow;

  constructor(data?: PartialMessage<ListAvailablePaymentFieldsReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.ListAvailablePaymentFieldsReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAvailablePaymentFieldsReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAvailablePaymentFieldsReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAvailablePaymentFieldsReq;

  static equals(a: ListAvailablePaymentFieldsReq | PlainMessage<ListAvailablePaymentFieldsReq> | undefined, b: ListAvailablePaymentFieldsReq | PlainMessage<ListAvailablePaymentFieldsReq> | undefined): boolean;
}

/**
 * the available fields for the payment flow
 *
 * @generated from message api.v1alpha1.integrations.ListAvailablePaymentFieldsRes
 */
export declare class ListAvailablePaymentFieldsRes extends Message<ListAvailablePaymentFieldsRes> {
  /**
   * @generated from field: repeated api.commons.integrations.FieldDefinition payment_fields = 2;
   */
  paymentFields: FieldDefinition[];

  constructor(data?: PartialMessage<ListAvailablePaymentFieldsRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.ListAvailablePaymentFieldsRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAvailablePaymentFieldsRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAvailablePaymentFieldsRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAvailablePaymentFieldsRes;

  static equals(a: ListAvailablePaymentFieldsRes | PlainMessage<ListAvailablePaymentFieldsRes> | undefined, b: ListAvailablePaymentFieldsRes | PlainMessage<ListAvailablePaymentFieldsRes> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.ListPortalTypesReq
 */
export declare class ListPortalTypesReq extends Message<ListPortalTypesReq> {
  constructor(data?: PartialMessage<ListPortalTypesReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.ListPortalTypesReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPortalTypesReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPortalTypesReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPortalTypesReq;

  static equals(a: ListPortalTypesReq | PlainMessage<ListPortalTypesReq> | undefined, b: ListPortalTypesReq | PlainMessage<ListPortalTypesReq> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.ListPortalTypesResponse
 */
export declare class ListPortalTypesResponse extends Message<ListPortalTypesResponse> {
  /**
   * @generated from field: repeated api.v1alpha1.integrations.PortalDefinition values = 1;
   */
  values: PortalDefinition[];

  constructor(data?: PartialMessage<ListPortalTypesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.ListPortalTypesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPortalTypesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPortalTypesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPortalTypesResponse;

  static equals(a: ListPortalTypesResponse | PlainMessage<ListPortalTypesResponse> | undefined, b: ListPortalTypesResponse | PlainMessage<ListPortalTypesResponse> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.ListPortalWorkflowsReq
 */
export declare class ListPortalWorkflowsReq extends Message<ListPortalWorkflowsReq> {
  constructor(data?: PartialMessage<ListPortalWorkflowsReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.ListPortalWorkflowsReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPortalWorkflowsReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPortalWorkflowsReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPortalWorkflowsReq;

  static equals(a: ListPortalWorkflowsReq | PlainMessage<ListPortalWorkflowsReq> | undefined, b: ListPortalWorkflowsReq | PlainMessage<ListPortalWorkflowsReq> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.ListPortalWorkflowsResponse
 */
export declare class ListPortalWorkflowsResponse extends Message<ListPortalWorkflowsResponse> {
  /**
   * @generated from field: repeated api.v1alpha1.integrations.WorkflowDefinition values = 1;
   */
  values: WorkflowDefinition[];

  constructor(data?: PartialMessage<ListPortalWorkflowsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.ListPortalWorkflowsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPortalWorkflowsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPortalWorkflowsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPortalWorkflowsResponse;

  static equals(a: ListPortalWorkflowsResponse | PlainMessage<ListPortalWorkflowsResponse> | undefined, b: ListPortalWorkflowsResponse | PlainMessage<ListPortalWorkflowsResponse> | undefined): boolean;
}

/**
 * this describes a portal type. any created portals must conform to a
 * portal definition.
 *
 * @generated from message api.v1alpha1.integrations.PortalDefinition
 */
export declare class PortalDefinition extends Message<PortalDefinition> {
  /**
   * the name of this type of portal
   *
   * @generated from field: string definition_name = 2;
   */
  definitionName: string;

  /**
   * each FlowRequirement below represents a screen that must be presented
   * to the user in order. All flows in the workflow_requirements must be completed in order.
   * Payment portal would have 3 workflow_requirements:
   * workflow_requirements: [
   *   FlowRequirement{max_choices: 1, flow_type: VERIFICATION},
   *   FlowRequirement{max_choices: 1, flow_type: INVOICE},
   *   FlowRequirement{max_choices: 0, flow_type: PAYMENT},
   * ]
   *
   * @generated from field: repeated api.v1alpha1.integrations.WorkflowRequirement workflow_requirements = 3;
   */
  workflowRequirements: WorkflowRequirement[];

  constructor(data?: PartialMessage<PortalDefinition>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.PortalDefinition";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PortalDefinition;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PortalDefinition;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PortalDefinition;

  static equals(a: PortalDefinition | PlainMessage<PortalDefinition> | undefined, b: PortalDefinition | PlainMessage<PortalDefinition> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.integrations.WorkflowRequirement
 */
export declare class WorkflowRequirement extends Message<WorkflowRequirement> {
  /**
   * how many different flows the user can choose from on this step.
   * 0 and below is interpreted as unlimited flows.
   * example:
   * PaymentPortal would have this set to 1 for verification flow and invoice flows
   * and set to 0 for payment flows. This forces the user to verify exactly 1 way
   * see exactly 1 invoice, and choose credit card, ach paypal, etc to pay.
   *
   * @generated from field: int32 max_choices = 1;
   */
  maxChoices: number;

  /**
   * the flows for this step must be of this type
   * FLOW_TYPE_UNKNOWN is interpreted as any flow type is acceptable
   *
   * @generated from field: api.commons.integrations.FlowType flow_type = 2;
   */
  flowType: FlowType;

  constructor(data?: PartialMessage<WorkflowRequirement>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.WorkflowRequirement";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WorkflowRequirement;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WorkflowRequirement;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WorkflowRequirement;

  static equals(a: WorkflowRequirement | PlainMessage<WorkflowRequirement> | undefined, b: WorkflowRequirement | PlainMessage<WorkflowRequirement> | undefined): boolean;
}

/**
 * this describes the requirements to build a Flow entity
 * that matches this description.  All created flows must
 * conform to a FlowDefinition.
 *
 * @generated from message api.v1alpha1.integrations.WorkflowDefinition
 */
export declare class WorkflowDefinition extends Message<WorkflowDefinition> {
  /**
   * the type of flow
   *
   * @generated from field: api.commons.integrations.FlowType flow_type = 1;
   */
  flowType: FlowType;

  /**
   * the name of this flow definition
   *
   * @generated from field: string definition_name = 2;
   */
  definitionName: string;

  /**
   * the api method performed for this flow.
   *
   * @generated from field: api.commons.integrations.RequestMethod method = 3;
   */
  method: RequestMethod;

  /**
   * the fields required to complete this flow
   *
   * @generated from field: repeated api.commons.integrations.FieldDefinition req_fields = 4;
   */
  reqFields: FieldDefinition[];

  /**
   * the fields returned from this flows execution
   *
   * @generated from field: repeated api.commons.integrations.FieldDefinition res_fields = 5;
   */
  resFields: FieldDefinition[];

  /**
   * a subset of req_fields we suggest go in the plugin instance.
   *
   * @generated from field: repeated api.commons.integrations.FieldDefinition plugin_fields = 6;
   */
  pluginFields: FieldDefinition[];

  /**
   * a subset of req_fields we suggest go in the portal link
   *
   * @generated from field: repeated api.commons.integrations.FieldDefinition link_fields = 7;
   */
  linkFields: FieldDefinition[];

  /**
   * a subset of req_fields we suggest come from some previously called flow.
   * this is usually empty. Experian Payment flows do have this populated with
   * data that comes from the experian query balance flow.
   *
   * @generated from field: repeated api.commons.integrations.FieldDefinition prev_fields = 8;
   */
  prevFields: FieldDefinition[];

  /**
   * a subset of either req_fields OR res_fields that is suggested comes from the user.
   * Example:
   * verification flows would have a subset of the res_fields here, because
   * we want to verify the user provided data against the api call's result.
   * but
   * payment flows would have a subset of req_fields here, because
   * we want to take the payment fields from the user to make the api call.
   * Some flows have no form fields. Invoice Flows and Execute Flows don't need
   * a user form, so this is empty on those flows.
   *
   * @generated from field: repeated api.commons.integrations.FieldDefinition form_fields = 9;
   */
  formFields: FieldDefinition[];

  /**
   * The default template that can be used with the result data to make it pretty
   * and grouped. Right now this is only used for invoices.
   *
   * @generated from field: api.v1alpha1.integrations.Template template = 10;
   */
  template?: Template;

  /**
   * Optional data that can be defined on Flow creation tine to affect the execution
   * of the flow entity.
   * Example:
   * Experian flows have a 'use_invoice_account_number' field that is a boolean.
   * if checked, we change the account number used for payment, rather than use the
   * one provided in the portal link.
   *
   * @generated from field: repeated api.commons.integrations.FieldDefinition opts = 11;
   */
  opts: FieldDefinition[];

  constructor(data?: PartialMessage<WorkflowDefinition>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.integrations.WorkflowDefinition";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WorkflowDefinition;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WorkflowDefinition;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WorkflowDefinition;

  static equals(a: WorkflowDefinition | PlainMessage<WorkflowDefinition> | undefined, b: WorkflowDefinition | PlainMessage<WorkflowDefinition> | undefined): boolean;
}


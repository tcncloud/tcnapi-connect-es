// @generated by protoc-gen-es v1.7.0 with parameter "target=js+dts"
// @generated from file api/v1alpha1/org/user.proto (package api.v1alpha1.org, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { OperatorApplications, TimeZoneWrapper } from "../../commons/org_pb.js";
import type { Label } from "../../commons/org/labels_pb.js";
import type { Skill } from "../../commons/org/user_pb.js";
import type { P3PermissionGroup, PermissionGroup } from "../../commons/org/permissions_pb.js";
import type { Trust } from "../../commons/org/trusts_pb.js";
import type { UserArchivedStateFilter } from "../../commons/user_pb.js";
import type { Permission } from "../../commons/perms_pb.js";

/**
 * Request message for the CreateUser rpc.
 *
 * @generated from message api.v1alpha1.org.CreateUserRequest
 */
export declare class CreateUserRequest extends Message<CreateUserRequest> {
  /**
   * if org_id is set the user will be created for
   * the given org_id. This requires the CUSTOMER_SUPPORT permission.
   * if this field is not set it will get the org_id
   * from the token. This only requires the USER_CREATE permission.
   *
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * The first name for the new user.
   *
   * @generated from field: string first_name = 2;
   */
  firstName: string;

  /**
   * The last name for the new user.
   *
   * @generated from field: string last_name = 3;
   */
  lastName: string;

  /**
   * The email for the new user.
   *
   * @generated from field: string email = 4;
   */
  email: string;

  /**
   * The user name of the new user.
   *
   * @generated from field: string user_name = 5;
   */
  userName: string;

  /**
   * The password of the new user.
   *
   * @generated from field: string password = 6;
   */
  password: string;

  /**
   * The ids of the permission groups that the new user will have.
   *
   * @generated from field: repeated string permission_group_ids = 7;
   */
  permissionGroupIds: string[];

  /**
   * The partner agent id of the new user.
   *
   * @generated from field: string partner_agent_id = 9;
   */
  partnerAgentId: string;

  /**
   * The id of the p3 permission group that the new user will have.
   *
   * @generated from field: string p3_permission_group_id = 10;
   */
  p3PermissionGroupId: string;

  /**
   * The linkback numbers the new user will have.
   *
   * @generated from field: repeated string linkback_numbers = 11;
   */
  linkbackNumbers: string[];

  /**
   * The caller ids the new user will have.
   *
   * @generated from field: repeated string caller_ids = 12;
   */
  callerIds: string[];

  /**
   * Default app the user starts on
   *
   * @generated from field: api.commons.OperatorApplications default_app = 13;
   */
  defaultApp: OperatorApplications;

  /**
   * The caller id for the user.
   *
   * @generated from field: string user_caller_id = 14;
   */
  userCallerId: string;

  /**
   * The id of the agent profile group the user will belong to.
   *
   * @generated from field: string agent_profile_group_id = 15;
   */
  agentProfileGroupId: string;

  /**
   * A list of labels to assign to the user
   *
   * @generated from field: repeated string label_ids = 16;
   */
  labelIds: string[];

  /**
   * User TimeZone with wrapper for nullable timezone
   *
   * @generated from field: api.commons.TimeZoneWrapper time_zone_override = 17;
   */
  timeZoneOverride?: TimeZoneWrapper;

  /**
   * The hunt group that the created user will belong to.
   *
   * @generated from field: int64 hunt_group_sid = 18;
   */
  huntGroupSid: bigint;

  constructor(data?: PartialMessage<CreateUserRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.CreateUserRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateUserRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateUserRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateUserRequest;

  static equals(a: CreateUserRequest | PlainMessage<CreateUserRequest> | undefined, b: CreateUserRequest | PlainMessage<CreateUserRequest> | undefined): boolean;
}

/**
 * Response message for the CreateUser rpc.
 *
 * @generated from message api.v1alpha1.org.CreateUserResponse
 */
export declare class CreateUserResponse extends Message<CreateUserResponse> {
  /**
   * The id of the created user.
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  constructor(data?: PartialMessage<CreateUserResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.CreateUserResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateUserResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateUserResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateUserResponse;

  static equals(a: CreateUserResponse | PlainMessage<CreateUserResponse> | undefined, b: CreateUserResponse | PlainMessage<CreateUserResponse> | undefined): boolean;
}

/**
 * Request message for the CreateDelegatedUser rpc.
 *
 * @generated from message api.v1alpha1.org.CreateDelegatedUserRequest
 */
export declare class CreateDelegatedUserRequest extends Message<CreateDelegatedUserRequest> {
  /**
   * the user id provided by the auth (idp) connection.
   *
   * @generated from field: string auth_user_id = 1;
   */
  authUserId: string;

  /**
   * org_id for which the user will be created for.
   * generally when org_id is passed, it requires
   * customer support permission, but this is an
   * un-authenticated request so it is an exception
   * which is handled by envoy.
   *
   * @generated from field: string org_id = 2;
   */
  orgId: string;

  /**
   * the user's email provided by the auth connection.
   *
   * @generated from field: string email = 3;
   */
  email: string;

  /**
   * the username provided by the auth connection.
   *
   * @generated from field: string username = 4;
   */
  username: string;

  /**
   * the user's first name.
   *
   * @generated from field: string first_name = 5;
   */
  firstName: string;

  /**
   * the user's last name.
   *
   * @generated from field: string last_name = 6;
   */
  lastName: string;

  /**
   * the user's groups provided by the auth connection.
   *
   * @generated from field: repeated string groups = 7;
   */
  groups: string[];

  /**
   * the id of the auth connection the user is coming from.
   *
   * @generated from field: string connection_id = 8;
   */
  connectionId: string;

  constructor(data?: PartialMessage<CreateDelegatedUserRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.CreateDelegatedUserRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateDelegatedUserRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateDelegatedUserRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateDelegatedUserRequest;

  static equals(a: CreateDelegatedUserRequest | PlainMessage<CreateDelegatedUserRequest> | undefined, b: CreateDelegatedUserRequest | PlainMessage<CreateDelegatedUserRequest> | undefined): boolean;
}

/**
 * Response message for the CreateDelegatedUser rpc.
 *
 * @generated from message api.v1alpha1.org.CreateDelegatedUserResponse
 */
export declare class CreateDelegatedUserResponse extends Message<CreateDelegatedUserResponse> {
  /**
   * The id of the created user.
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  constructor(data?: PartialMessage<CreateDelegatedUserResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.CreateDelegatedUserResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateDelegatedUserResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateDelegatedUserResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateDelegatedUserResponse;

  static equals(a: CreateDelegatedUserResponse | PlainMessage<CreateDelegatedUserResponse> | undefined, b: CreateDelegatedUserResponse | PlainMessage<CreateDelegatedUserResponse> | undefined): boolean;
}

/**
 * Request message for GetMyUser.
 *
 * @generated from message api.v1alpha1.org.GetMyUserRequest
 */
export declare class GetMyUserRequest extends Message<GetMyUserRequest> {
  constructor(data?: PartialMessage<GetMyUserRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetMyUserRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyUserRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyUserRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyUserRequest;

  static equals(a: GetMyUserRequest | PlainMessage<GetMyUserRequest> | undefined, b: GetMyUserRequest | PlainMessage<GetMyUserRequest> | undefined): boolean;
}

/**
 * Response message for GetMyUser.
 *
 * @generated from message api.v1alpha1.org.GetMyUserResponse
 */
export declare class GetMyUserResponse extends Message<GetMyUserResponse> {
  /**
   * The user ID of the user
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * The ID of the user's organization
   *
   * @generated from field: string org_id = 2;
   */
  orgId: string;

  /**
   * The agents's username
   *
   * @generated from field: string username = 13;
   */
  username: string;

  /**
   * Whether the user is delegated (sso related)
   *
   * @generated from field: bool delegated = 3;
   */
  delegated: boolean;

  /**
   * The name of the user's organization
   *
   * @generated from field: string org_name = 4;
   */
  orgName: string;

  /**
   * An object with the hunt group fields required for the call
   *
   * @generated from field: api.v1alpha1.org.GetMyUserResponse.HuntGroup hunt_group = 5;
   */
  huntGroup?: GetMyUserResponse_HuntGroup;

  /**
   * A list of the labels associated with the user
   *
   * @generated from field: repeated api.commons.org.Label labels = 6;
   */
  labels: Label[];

  /**
   * A list of the skills associated with the user
   *
   * @generated from field: repeated api.commons.org.Skill skills = 7;
   */
  skills: Skill[];

  /**
   * A list of the permission groups the user belongs to
   *
   * @generated from field: repeated api.commons.org.PermissionGroup permission_groups = 8;
   */
  permissionGroups: PermissionGroup[];

  /**
   * The user's p3 permission group
   *
   * @generated from field: api.commons.org.P3PermissionGroup p3_permission_group = 9;
   */
  p3PermissionGroup?: P3PermissionGroup;

  /**
   * An object with the agent profile group fields required for the call
   *
   * @generated from field: api.v1alpha1.org.GetMyUserResponse.AgentProfileGroup agent_profile_group = 10;
   */
  agentProfileGroup?: GetMyUserResponse_AgentProfileGroup;

  /**
   * A list of the trusts assigned to the user.
   *
   * @generated from field: repeated api.commons.org.Trust trusts = 11;
   */
  trusts: Trust[];

  /**
   * Whether the user is an account owner
   *
   * @generated from field: bool account_owner = 12;
   */
  accountOwner: boolean;

  constructor(data?: PartialMessage<GetMyUserResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetMyUserResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyUserResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyUserResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyUserResponse;

  static equals(a: GetMyUserResponse | PlainMessage<GetMyUserResponse> | undefined, b: GetMyUserResponse | PlainMessage<GetMyUserResponse> | undefined): boolean;
}

/**
 * Object to contain the hunt group fields
 *
 * @generated from message api.v1alpha1.org.GetMyUserResponse.HuntGroup
 */
export declare class GetMyUserResponse_HuntGroup extends Message<GetMyUserResponse_HuntGroup> {
  /**
   * The sid of the hunt group the agent is assigned to
   *
   * @generated from field: int64 hunt_group_sid = 1;
   */
  huntGroupSid: bigint;

  /**
   * The name of the hunt group the agent is assigned to
   *
   * @generated from field: string hunt_group_name = 2;
   */
  huntGroupName: string;

  constructor(data?: PartialMessage<GetMyUserResponse_HuntGroup>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetMyUserResponse.HuntGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyUserResponse_HuntGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyUserResponse_HuntGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyUserResponse_HuntGroup;

  static equals(a: GetMyUserResponse_HuntGroup | PlainMessage<GetMyUserResponse_HuntGroup> | undefined, b: GetMyUserResponse_HuntGroup | PlainMessage<GetMyUserResponse_HuntGroup> | undefined): boolean;
}

/**
 * Object to contain the agent profile group fields
 *
 * @generated from message api.v1alpha1.org.GetMyUserResponse.AgentProfileGroup
 */
export declare class GetMyUserResponse_AgentProfileGroup extends Message<GetMyUserResponse_AgentProfileGroup> {
  /**
   * The id of the user's agent profile group
   *
   * @generated from field: string agent_profile_group_id = 1;
   */
  agentProfileGroupId: string;

  /**
   * The name of the user's agent profile group
   *
   * @generated from field: string agent_profile_group_name = 2;
   */
  agentProfileGroupName: string;

  constructor(data?: PartialMessage<GetMyUserResponse_AgentProfileGroup>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetMyUserResponse.AgentProfileGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyUserResponse_AgentProfileGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyUserResponse_AgentProfileGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyUserResponse_AgentProfileGroup;

  static equals(a: GetMyUserResponse_AgentProfileGroup | PlainMessage<GetMyUserResponse_AgentProfileGroup> | undefined, b: GetMyUserResponse_AgentProfileGroup | PlainMessage<GetMyUserResponse_AgentProfileGroup> | undefined): boolean;
}

/**
 * Request message for GetUser.
 *
 * @generated from message api.v1alpha1.org.GetUserRequest
 */
export declare class GetUserRequest extends Message<GetUserRequest> {
  /**
   * Get by UserId.
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  constructor(data?: PartialMessage<GetUserRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetUserRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserRequest;

  static equals(a: GetUserRequest | PlainMessage<GetUserRequest> | undefined, b: GetUserRequest | PlainMessage<GetUserRequest> | undefined): boolean;
}

/**
 * Response message for GetUser.
 *
 * @generated from message api.v1alpha1.org.GetUserResponse
 */
export declare class GetUserResponse extends Message<GetUserResponse> {
  /**
   * The user ID of the user
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * The ID of the user's organization
   *
   * @generated from field: string org_id = 2;
   */
  orgId: string;

  /**
   * Whether the user is delegated (sso related)
   *
   * The name of the user's organization
   *
   * @generated from field: bool delegated = 3;
   */
  delegated: boolean;

  /**
   * User TimeZone with wrapper for nullable timezone.
   *
   * @generated from field: api.commons.TimeZoneWrapper time_zone_override = 4;
   */
  timeZoneOverride?: TimeZoneWrapper;

  /**
   * An object with the hunt group fields required for the call
   *
   * @generated from field: api.v1alpha1.org.GetUserResponse.HuntGroup hunt_group = 5;
   */
  huntGroup?: GetUserResponse_HuntGroup;

  /**
   * A list of the labels associated with the user
   *
   * @generated from field: repeated api.commons.org.Label labels = 6;
   */
  labels: Label[];

  /**
   * A list of the skills associated with the user
   *
   * @generated from field: repeated api.commons.org.Skill skills = 7;
   */
  skills: Skill[];

  /**
   * A list of the permission groups the user belongs to
   *
   * @generated from field: repeated api.commons.org.PermissionGroup permission_groups = 8;
   */
  permissionGroups: PermissionGroup[];

  /**
   * The user's p3 permission group
   *
   * @generated from field: api.commons.org.P3PermissionGroup p3_permission_group = 9;
   */
  p3PermissionGroup?: P3PermissionGroup;

  /**
   * An object with the agent profile group fields required for the call
   *
   * @generated from field: api.v1alpha1.org.GetUserResponse.AgentProfileGroup agent_profile_group = 10;
   */
  agentProfileGroup?: GetUserResponse_AgentProfileGroup;

  /**
   * name of users organization
   *
   * @generated from field: string org_name = 11;
   */
  orgName: string;

  /**
   * users first name
   *
   * @generated from field: string first_name = 12;
   */
  firstName: string;

  /**
   * The agents's username
   *
   * @generated from field: string username = 13;
   */
  username: string;

  /**
   * users last name
   *
   * @generated from field: string last_name = 14;
   */
  lastName: string;

  /**
   * if the user is disabled from logging in
   *
   * @generated from field: bool login_disabled = 15;
   */
  loginDisabled: boolean;

  /**
   * users partner agent sid
   *
   * @generated from field: string partner_agent_id = 16;
   */
  partnerAgentId: string;

  /**
   * users caller id
   *
   * @generated from field: string user_caller_id = 17;
   */
  userCallerId: string;

  /**
   * a users array of linkback numbers
   *
   * @generated from field: repeated string linkback_numbers = 18;
   */
  linkbackNumbers: string[];

  /**
   * a users array of caller ids
   *
   * @generated from field: repeated string caller_ids = 19;
   */
  callerIds: string[];

  /**
   * default application that is selected when signed in
   *
   * @generated from field: api.commons.OperatorApplications default_app = 20;
   */
  defaultApp: OperatorApplications;

  /**
   * Login Sid of the user
   *
   * @generated from field: int64 login_sid = 21;
   */
  loginSid: bigint;

  /**
   * Agent Sid
   *
   * @generated from field: int64 agent_sid = 22;
   */
  agentSid: bigint;

  /**
   * A list of trusts the user has been assigned.
   *
   * @generated from field: repeated api.commons.org.Trust trusts = 23;
   */
  trusts: Trust[];

  /**
   * user's email
   *
   * @generated from field: string email = 24;
   */
  email: string;

  /**
   * user's default region
   *
   * @generated from field: string default_region = 25;
   */
  defaultRegion: string;

  /**
   * user's created date
   *
   * @generated from field: google.protobuf.Timestamp created_at = 26;
   */
  createdAt?: Timestamp;

  /**
   * user's last updated date
   *
   * @generated from field: google.protobuf.Timestamp last_updated = 27;
   */
  lastUpdated?: Timestamp;

  /**
   * user's password reset required
   *
   * @generated from field: bool password_reset_required = 28;
   */
  passwordResetRequired: boolean;

  /**
   * Whether the user is an account owner
   *
   * @generated from field: bool account_owner = 29;
   */
  accountOwner: boolean;

  constructor(data?: PartialMessage<GetUserResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetUserResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserResponse;

  static equals(a: GetUserResponse | PlainMessage<GetUserResponse> | undefined, b: GetUserResponse | PlainMessage<GetUserResponse> | undefined): boolean;
}

/**
 * Object to contain the hunt group fields
 *
 * @generated from message api.v1alpha1.org.GetUserResponse.HuntGroup
 */
export declare class GetUserResponse_HuntGroup extends Message<GetUserResponse_HuntGroup> {
  /**
   * The sid of the hunt group the agent is assigned to
   *
   * @generated from field: int64 hunt_group_sid = 1;
   */
  huntGroupSid: bigint;

  /**
   * The name of the hunt group the agent is assigned to
   *
   * @generated from field: string hunt_group_name = 2;
   */
  huntGroupName: string;

  constructor(data?: PartialMessage<GetUserResponse_HuntGroup>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetUserResponse.HuntGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserResponse_HuntGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserResponse_HuntGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserResponse_HuntGroup;

  static equals(a: GetUserResponse_HuntGroup | PlainMessage<GetUserResponse_HuntGroup> | undefined, b: GetUserResponse_HuntGroup | PlainMessage<GetUserResponse_HuntGroup> | undefined): boolean;
}

/**
 * Object to contain the agent profile group fields
 *
 * @generated from message api.v1alpha1.org.GetUserResponse.AgentProfileGroup
 */
export declare class GetUserResponse_AgentProfileGroup extends Message<GetUserResponse_AgentProfileGroup> {
  /**
   * The id of the user's agent profile group
   *
   * @generated from field: string agent_profile_group_id = 1;
   */
  agentProfileGroupId: string;

  /**
   * The name of the user's agent profile group
   *
   * @generated from field: string agent_profile_group_name = 2;
   */
  agentProfileGroupName: string;

  constructor(data?: PartialMessage<GetUserResponse_AgentProfileGroup>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetUserResponse.AgentProfileGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserResponse_AgentProfileGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserResponse_AgentProfileGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserResponse_AgentProfileGroup;

  static equals(a: GetUserResponse_AgentProfileGroup | PlainMessage<GetUserResponse_AgentProfileGroup> | undefined, b: GetUserResponse_AgentProfileGroup | PlainMessage<GetUserResponse_AgentProfileGroup> | undefined): boolean;
}

/**
 * Request message for GetUserByOrgId.
 *
 * @generated from message api.v1alpha1.org.GetUserByOrgIdRequest
 */
export declare class GetUserByOrgIdRequest extends Message<GetUserByOrgIdRequest> {
  /**
   * Get by UserId.
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * OrgId of the user being requested.
   *
   * @generated from field: string org_id = 2;
   */
  orgId: string;

  constructor(data?: PartialMessage<GetUserByOrgIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetUserByOrgIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserByOrgIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserByOrgIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserByOrgIdRequest;

  static equals(a: GetUserByOrgIdRequest | PlainMessage<GetUserByOrgIdRequest> | undefined, b: GetUserByOrgIdRequest | PlainMessage<GetUserByOrgIdRequest> | undefined): boolean;
}

/**
 * Response message for GetUserByOrgId.
 *
 * @generated from message api.v1alpha1.org.GetUserByOrgIdResponse
 */
export declare class GetUserByOrgIdResponse extends Message<GetUserByOrgIdResponse> {
  /**
   * The user ID of the user
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * The ID of the user's organization
   *
   * @generated from field: string org_id = 2;
   */
  orgId: string;

  /**
   * The agents's username
   *
   * @generated from field: string username = 13;
   */
  username: string;

  /**
   * Whether the user is delegated (sso related)
   *
   * @generated from field: bool delegated = 3;
   */
  delegated: boolean;

  /**
   * The name of the user's organization
   *
   * @generated from field: string org_name = 4;
   */
  orgName: string;

  /**
   * An object with the hunt group fields required for the call
   *
   * @generated from field: api.v1alpha1.org.GetUserByOrgIdResponse.HuntGroup hunt_group = 5;
   */
  huntGroup?: GetUserByOrgIdResponse_HuntGroup;

  /**
   * A list of the labels associated with the user
   *
   * @generated from field: repeated api.commons.org.Label labels = 6;
   */
  labels: Label[];

  /**
   * A list of the skills associated with the user
   *
   * @generated from field: repeated api.commons.org.Skill skills = 7;
   */
  skills: Skill[];

  /**
   * A list of the permission groups the user belongs to
   *
   * @generated from field: repeated api.commons.org.PermissionGroup permission_groups = 8;
   */
  permissionGroups: PermissionGroup[];

  /**
   * The user's p3 permission group
   *
   * @generated from field: api.commons.org.P3PermissionGroup p3_permission_group = 9;
   */
  p3PermissionGroup?: P3PermissionGroup;

  /**
   * An object with the agent profile group fields required for the call
   *
   * @generated from field: api.v1alpha1.org.GetUserByOrgIdResponse.AgentProfileGroup agent_profile_group = 10;
   */
  agentProfileGroup?: GetUserByOrgIdResponse_AgentProfileGroup;

  /**
   * A list of trusts the user has been assigned.
   *
   * @generated from field: repeated api.commons.org.Trust trusts = 21;
   */
  trusts: Trust[];

  /**
   * Whether the user is an account owner
   *
   * @generated from field: bool account_owner = 22;
   */
  accountOwner: boolean;

  constructor(data?: PartialMessage<GetUserByOrgIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetUserByOrgIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserByOrgIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserByOrgIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserByOrgIdResponse;

  static equals(a: GetUserByOrgIdResponse | PlainMessage<GetUserByOrgIdResponse> | undefined, b: GetUserByOrgIdResponse | PlainMessage<GetUserByOrgIdResponse> | undefined): boolean;
}

/**
 * Object to contain the hunt group fields
 *
 * @generated from message api.v1alpha1.org.GetUserByOrgIdResponse.HuntGroup
 */
export declare class GetUserByOrgIdResponse_HuntGroup extends Message<GetUserByOrgIdResponse_HuntGroup> {
  /**
   * The sid of the hunt group the agent is assigned to
   *
   * @generated from field: int64 hunt_group_sid = 1;
   */
  huntGroupSid: bigint;

  /**
   * The name of the hunt group the agent is assigned to
   *
   * @generated from field: string hunt_group_name = 2;
   */
  huntGroupName: string;

  constructor(data?: PartialMessage<GetUserByOrgIdResponse_HuntGroup>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetUserByOrgIdResponse.HuntGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserByOrgIdResponse_HuntGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserByOrgIdResponse_HuntGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserByOrgIdResponse_HuntGroup;

  static equals(a: GetUserByOrgIdResponse_HuntGroup | PlainMessage<GetUserByOrgIdResponse_HuntGroup> | undefined, b: GetUserByOrgIdResponse_HuntGroup | PlainMessage<GetUserByOrgIdResponse_HuntGroup> | undefined): boolean;
}

/**
 * Object to contain the agent profile group fields
 *
 * @generated from message api.v1alpha1.org.GetUserByOrgIdResponse.AgentProfileGroup
 */
export declare class GetUserByOrgIdResponse_AgentProfileGroup extends Message<GetUserByOrgIdResponse_AgentProfileGroup> {
  /**
   * The id of the user's agent profile group
   *
   * @generated from field: string agent_profile_group_id = 1;
   */
  agentProfileGroupId: string;

  /**
   * The name of the user's agent profile group
   *
   * @generated from field: string agent_profile_group_name = 2;
   */
  agentProfileGroupName: string;

  constructor(data?: PartialMessage<GetUserByOrgIdResponse_AgentProfileGroup>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetUserByOrgIdResponse.AgentProfileGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserByOrgIdResponse_AgentProfileGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserByOrgIdResponse_AgentProfileGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserByOrgIdResponse_AgentProfileGroup;

  static equals(a: GetUserByOrgIdResponse_AgentProfileGroup | PlainMessage<GetUserByOrgIdResponse_AgentProfileGroup> | undefined, b: GetUserByOrgIdResponse_AgentProfileGroup | PlainMessage<GetUserByOrgIdResponse_AgentProfileGroup> | undefined): boolean;
}

/**
 * Request message for listAgents rpc.
 *
 * @generated from message api.v1alpha1.org.ListAgentsRequest
 */
export declare class ListAgentsRequest extends Message<ListAgentsRequest> {
  constructor(data?: PartialMessage<ListAgentsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.ListAgentsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAgentsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAgentsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAgentsRequest;

  static equals(a: ListAgentsRequest | PlainMessage<ListAgentsRequest> | undefined, b: ListAgentsRequest | PlainMessage<ListAgentsRequest> | undefined): boolean;
}

/**
 * Response message for listAgents rpc.
 *
 * @generated from message api.v1alpha1.org.ListAgentsResponse
 */
export declare class ListAgentsResponse extends Message<ListAgentsResponse> {
  /**
   * List of returned agents with masked data.
   *
   * @generated from field: repeated api.v1alpha1.org.ListAgentsResponse.AgentDetails agents = 1;
   */
  agents: ListAgentsResponse_AgentDetails[];

  constructor(data?: PartialMessage<ListAgentsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.ListAgentsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAgentsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAgentsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAgentsResponse;

  static equals(a: ListAgentsResponse | PlainMessage<ListAgentsResponse> | undefined, b: ListAgentsResponse | PlainMessage<ListAgentsResponse> | undefined): boolean;
}

/**
 * Object for ListAgents to return a list of.
 *
 * @generated from message api.v1alpha1.org.ListAgentsResponse.AgentDetails
 */
export declare class ListAgentsResponse_AgentDetails extends Message<ListAgentsResponse_AgentDetails> {
  /**
   * The user ID of the agent
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * The ID of the agent's organization
   *
   * @generated from field: string org_id = 2;
   */
  orgId: string;

  /**
   * The agent's first name
   *
   * @generated from field: string first_name = 3;
   */
  firstName: string;

  /**
   * The agent's last name
   *
   * @generated from field: string last_name = 4;
   */
  lastName: string;

  /**
   * The agents's username
   *
   * @generated from field: string username = 5;
   */
  username: string;

  /**
   * A list of the skills associated with the agent
   *
   * @generated from field: repeated api.commons.org.Skill skills = 6;
   */
  skills: Skill[];

  /**
   * Whether or not the agent is disabled.
   *
   * @generated from field: bool login_disabled = 7;
   */
  loginDisabled: boolean;

  /**
   * An object with the hunt group fields required for the call
   *
   * @generated from field: api.v1alpha1.org.ListAgentsResponse.AgentDetails.HuntGroup hunt_group = 8;
   */
  huntGroup?: ListAgentsResponse_AgentDetails_HuntGroup;

  /**
   * A list of the labels associated with the agent
   *
   * @generated from field: repeated api.commons.org.Label labels = 9;
   */
  labels: Label[];

  /**
   * Whether the agent is delegated (sso related)
   *
   * @generated from field: bool delegated = 10;
   */
  delegated: boolean;

  /**
   * A list of the trust ids the user has been assigned.
   *
   * @generated from field: repeated string trust_ids = 11;
   */
  trustIds: string[];

  /**
   * A list of the (neo)permission groups the user belongs to
   *
   * @generated from field: repeated api.commons.org.PermissionGroup permission_groups = 12;
   */
  permissionGroups: PermissionGroup[];

  /**
   * The agent's agent sid
   *
   * @generated from field: int64 agent_sid = 13;
   */
  agentSid: bigint;

  /**
   * The agent's full name
   *
   * @generated from field: string name = 14;
   */
  name: string;

  /**
   * The User's partner agent id.
   *
   * @generated from field: string partner_agent_id = 15;
   */
  partnerAgentId: string;

  /**
   * User caller id
   *
   * @generated from field: string user_caller_id = 16;
   */
  userCallerId: string;

  /**
   * The date/time the user was created.
   *
   * @generated from field: google.protobuf.Timestamp created = 17;
   */
  created?: Timestamp;

  /**
   * The date/time the user was last updated.
   *
   * @generated from field: google.protobuf.Timestamp last_updated = 18;
   */
  lastUpdated?: Timestamp;

  /**
   * An object with the agent profile group fields required for the call
   *
   * @generated from field: api.v1alpha1.org.ListAgentsResponse.AgentDetails.AgentProfileGroup agent_profile_group = 19;
   */
  agentProfileGroup?: ListAgentsResponse_AgentDetails_AgentProfileGroup;

  /**
   * a bool signalling whether or not the user is also an agent
   *
   * @generated from field: bool agent = 20;
   */
  agent: boolean;

  /**
   * User TimeZone with wrapper for nullable timezone
   *
   * @generated from field: api.commons.TimeZoneWrapper time_zone_override = 21;
   */
  timeZoneOverride?: TimeZoneWrapper;

  /**
   * The email of the agent. Empty if none set.
   *
   * @generated from field: string email = 22;
   */
  email: string;

  constructor(data?: PartialMessage<ListAgentsResponse_AgentDetails>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.ListAgentsResponse.AgentDetails";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAgentsResponse_AgentDetails;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAgentsResponse_AgentDetails;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAgentsResponse_AgentDetails;

  static equals(a: ListAgentsResponse_AgentDetails | PlainMessage<ListAgentsResponse_AgentDetails> | undefined, b: ListAgentsResponse_AgentDetails | PlainMessage<ListAgentsResponse_AgentDetails> | undefined): boolean;
}

/**
 * Object to contain the hunt group fields
 *
 * @generated from message api.v1alpha1.org.ListAgentsResponse.AgentDetails.HuntGroup
 */
export declare class ListAgentsResponse_AgentDetails_HuntGroup extends Message<ListAgentsResponse_AgentDetails_HuntGroup> {
  /**
   * The sid of the hunt group the agent is assigned to
   *
   * @generated from field: int64 hunt_group_sid = 1;
   */
  huntGroupSid: bigint;

  /**
   * The name of the hunt group the agent is assigned to
   *
   * @generated from field: string hunt_group_name = 2;
   */
  huntGroupName: string;

  constructor(data?: PartialMessage<ListAgentsResponse_AgentDetails_HuntGroup>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.ListAgentsResponse.AgentDetails.HuntGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAgentsResponse_AgentDetails_HuntGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAgentsResponse_AgentDetails_HuntGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAgentsResponse_AgentDetails_HuntGroup;

  static equals(a: ListAgentsResponse_AgentDetails_HuntGroup | PlainMessage<ListAgentsResponse_AgentDetails_HuntGroup> | undefined, b: ListAgentsResponse_AgentDetails_HuntGroup | PlainMessage<ListAgentsResponse_AgentDetails_HuntGroup> | undefined): boolean;
}

/**
 * Object to contain the agent profile group fields
 *
 * @generated from message api.v1alpha1.org.ListAgentsResponse.AgentDetails.AgentProfileGroup
 */
export declare class ListAgentsResponse_AgentDetails_AgentProfileGroup extends Message<ListAgentsResponse_AgentDetails_AgentProfileGroup> {
  /**
   * The id of the user's agent profile group
   *
   * @generated from field: string agent_profile_group_id = 1;
   */
  agentProfileGroupId: string;

  /**
   * The name of the user's agent profile group
   *
   * @generated from field: string agent_profile_group_name = 2;
   */
  agentProfileGroupName: string;

  constructor(data?: PartialMessage<ListAgentsResponse_AgentDetails_AgentProfileGroup>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.ListAgentsResponse.AgentDetails.AgentProfileGroup";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAgentsResponse_AgentDetails_AgentProfileGroup;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAgentsResponse_AgentDetails_AgentProfileGroup;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAgentsResponse_AgentDetails_AgentProfileGroup;

  static equals(a: ListAgentsResponse_AgentDetails_AgentProfileGroup | PlainMessage<ListAgentsResponse_AgentDetails_AgentProfileGroup> | undefined, b: ListAgentsResponse_AgentDetails_AgentProfileGroup | PlainMessage<ListAgentsResponse_AgentDetails_AgentProfileGroup> | undefined): boolean;
}

/**
 * Request message for ListPublicUsers rpc.
 *
 * @generated from message api.v1alpha1.org.ListPublicUsersRequest
 */
export declare class ListPublicUsersRequest extends Message<ListPublicUsersRequest> {
  /**
   * Return a list of only user agents. When this is false all users are returned.
   *
   * @generated from field: bool agent_filter = 1;
   */
  agentFilter: boolean;

  /**
   * Filter by the user's archived status.
   *
   * @generated from field: api.commons.UserArchivedStateFilter archived_filter = 2;
   */
  archivedFilter: UserArchivedStateFilter;

  constructor(data?: PartialMessage<ListPublicUsersRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.ListPublicUsersRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPublicUsersRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPublicUsersRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPublicUsersRequest;

  static equals(a: ListPublicUsersRequest | PlainMessage<ListPublicUsersRequest> | undefined, b: ListPublicUsersRequest | PlainMessage<ListPublicUsersRequest> | undefined): boolean;
}

/**
 * Response message for ListPublicUsers rpc.
 *
 * @generated from message api.v1alpha1.org.ListPublicUsersResponse
 */
export declare class ListPublicUsersResponse extends Message<ListPublicUsersResponse> {
  /**
   * The user ID of the user
   *
   * @generated from field: string user_id = 1 [deprecated = true];
   * @deprecated
   */
  userId: string;

  /**
   * The user's first name
   *
   * @generated from field: string first_name = 2 [deprecated = true];
   * @deprecated
   */
  firstName: string;

  /**
   * The user's last name
   *
   * @generated from field: string last_name = 3 [deprecated = true];
   * @deprecated
   */
  lastName: string;

  /**
   * The user's username
   *
   * @generated from field: string username = 4 [deprecated = true];
   * @deprecated
   */
  username: string;

  /**
   * @generated from field: repeated api.v1alpha1.org.ListPublicUsersResponse.User users = 5;
   */
  users: ListPublicUsersResponse_User[];

  constructor(data?: PartialMessage<ListPublicUsersResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.ListPublicUsersResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPublicUsersResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPublicUsersResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPublicUsersResponse;

  static equals(a: ListPublicUsersResponse | PlainMessage<ListPublicUsersResponse> | undefined, b: ListPublicUsersResponse | PlainMessage<ListPublicUsersResponse> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.org.ListPublicUsersResponse.User
 */
export declare class ListPublicUsersResponse_User extends Message<ListPublicUsersResponse_User> {
  /**
   * The user ID of the user
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * The user's first name
   *
   * @generated from field: string first_name = 2;
   */
  firstName: string;

  /**
   * The user's last name
   *
   * @generated from field: string last_name = 3;
   */
  lastName: string;

  /**
   * The user's username
   *
   * @generated from field: string username = 4;
   */
  username: string;

  constructor(data?: PartialMessage<ListPublicUsersResponse_User>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.ListPublicUsersResponse.User";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPublicUsersResponse_User;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPublicUsersResponse_User;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPublicUsersResponse_User;

  static equals(a: ListPublicUsersResponse_User | PlainMessage<ListPublicUsersResponse_User> | undefined, b: ListPublicUsersResponse_User | PlainMessage<ListPublicUsersResponse_User> | undefined): boolean;
}

/**
 * Request message for listUsers rpc.
 *
 * @generated from message api.v1alpha1.org.ListUsersRequest
 */
export declare class ListUsersRequest extends Message<ListUsersRequest> {
  constructor(data?: PartialMessage<ListUsersRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.ListUsersRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUsersRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUsersRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUsersRequest;

  static equals(a: ListUsersRequest | PlainMessage<ListUsersRequest> | undefined, b: ListUsersRequest | PlainMessage<ListUsersRequest> | undefined): boolean;
}

/**
 * Response message for listUsers rpc.
 *
 * @generated from message api.v1alpha1.org.ListUsersResponse
 */
export declare class ListUsersResponse extends Message<ListUsersResponse> {
  /**
   * List of returned users with masked data.
   *
   * @generated from field: repeated api.v1alpha1.org.ListUsersResponse.UserDetails users = 1;
   */
  users: ListUsersResponse_UserDetails[];

  constructor(data?: PartialMessage<ListUsersResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.ListUsersResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUsersResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUsersResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUsersResponse;

  static equals(a: ListUsersResponse | PlainMessage<ListUsersResponse> | undefined, b: ListUsersResponse | PlainMessage<ListUsersResponse> | undefined): boolean;
}

/**
 * Object for ListUsers to return a list of.
 *
 * @generated from message api.v1alpha1.org.ListUsersResponse.UserDetails
 */
export declare class ListUsersResponse_UserDetails extends Message<ListUsersResponse_UserDetails> {
  /**
   * The user ID of the user
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * The ID of the user's organization
   *
   * @generated from field: string org_id = 2;
   */
  orgId: string;

  /**
   * The user's first name
   *
   * @generated from field: string first_name = 3;
   */
  firstName: string;

  /**
   * The user's last name
   *
   * @generated from field: string last_name = 4;
   */
  lastName: string;

  /**
   * The user's username
   *
   * @generated from field: string username = 5;
   */
  username: string;

  /**
   * Whether or not the user is disabled.
   *
   * @generated from field: bool login_disabled = 7;
   */
  loginDisabled: boolean;

  /**
   * A list of the (neo)permission group Ids the agent belongs to
   *
   * @generated from field: repeated string permission_group_ids = 9;
   */
  permissionGroupIds: string[];

  /**
   * A list of the labels associated with the user
   *
   * @generated from field: repeated api.commons.org.Label labels = 10;
   */
  labels: Label[];

  /**
   * Whether the user is an account owner
   *
   * @generated from field: bool account_owner = 11;
   */
  accountOwner: boolean;

  /**
   * Whether the user is also an agent
   *
   * @generated from field: bool agent = 12;
   */
  agent: boolean;

  /**
   * A list of the trust ids the user has been assigned.
   *
   * @generated from field: repeated string trust_ids = 13;
   */
  trustIds: string[];

  constructor(data?: PartialMessage<ListUsersResponse_UserDetails>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.ListUsersResponse.UserDetails";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUsersResponse_UserDetails;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUsersResponse_UserDetails;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUsersResponse_UserDetails;

  static equals(a: ListUsersResponse_UserDetails | PlainMessage<ListUsersResponse_UserDetails> | undefined, b: ListUsersResponse_UserDetails | PlainMessage<ListUsersResponse_UserDetails> | undefined): boolean;
}

/**
 * Request message for the ListUsersByOrgId rpc.
 *
 * @generated from message api.v1alpha1.org.ListUsersByOrgIdRequest
 */
export declare class ListUsersByOrgIdRequest extends Message<ListUsersByOrgIdRequest> {
  /**
   * Filter by org ID.
   *
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * Filter by the user's archived status.
   *
   * @generated from field: api.commons.UserArchivedStateFilter archived_filter = 2;
   */
  archivedFilter: UserArchivedStateFilter;

  constructor(data?: PartialMessage<ListUsersByOrgIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.ListUsersByOrgIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUsersByOrgIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUsersByOrgIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUsersByOrgIdRequest;

  static equals(a: ListUsersByOrgIdRequest | PlainMessage<ListUsersByOrgIdRequest> | undefined, b: ListUsersByOrgIdRequest | PlainMessage<ListUsersByOrgIdRequest> | undefined): boolean;
}

/**
 * Response message for the ListsUsersByOrgId rpc.
 *
 * @generated from message api.v1alpha1.org.ListUsersByOrgIdResponse
 */
export declare class ListUsersByOrgIdResponse extends Message<ListUsersByOrgIdResponse> {
  /**
   * List of returned users with masked data.
   *
   * @generated from field: repeated api.v1alpha1.org.ListUsersByOrgIdResponse.UserDetails users = 1;
   */
  users: ListUsersByOrgIdResponse_UserDetails[];

  constructor(data?: PartialMessage<ListUsersByOrgIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.ListUsersByOrgIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUsersByOrgIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUsersByOrgIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUsersByOrgIdResponse;

  static equals(a: ListUsersByOrgIdResponse | PlainMessage<ListUsersByOrgIdResponse> | undefined, b: ListUsersByOrgIdResponse | PlainMessage<ListUsersByOrgIdResponse> | undefined): boolean;
}

/**
 * Object for ListUsersByOrgId to return a list of.
 *
 * @generated from message api.v1alpha1.org.ListUsersByOrgIdResponse.UserDetails
 */
export declare class ListUsersByOrgIdResponse_UserDetails extends Message<ListUsersByOrgIdResponse_UserDetails> {
  /**
   * The user ID of the user
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * The ID of the user's organization
   *
   * @generated from field: string org_id = 2;
   */
  orgId: string;

  /**
   * The name of the user's organization
   *
   * @generated from field: string org_name = 3;
   */
  orgName: string;

  /**
   * The user's first name
   *
   * @generated from field: string first_name = 4;
   */
  firstName: string;

  /**
   * The user's last name
   *
   * @generated from field: string last_name = 5;
   */
  lastName: string;

  /**
   * The user's username
   *
   * @generated from field: string username = 6;
   */
  username: string;

  /**
   * Whether or not the user is disabled.
   *
   * @generated from field: bool login_disabled = 7;
   */
  loginDisabled: boolean;

  /**
   * A list of the (neo)permission group Ids the agent belongs to
   *
   * @generated from field: repeated string permission_group_ids = 8;
   */
  permissionGroupIds: string[];

  /**
   * A list of the labels associated with the user
   *
   * @generated from field: repeated api.commons.org.Label labels = 9;
   */
  labels: Label[];

  /**
   * Whether the user is an account owner
   *
   * @generated from field: bool account_owner = 10;
   */
  accountOwner: boolean;

  /**
   * Whether the user is also an agent
   *
   * @generated from field: bool agent = 11;
   */
  agent: boolean;

  /**
   * A list of the trust ids the user has been assigned.
   *
   * @generated from field: repeated string trust_ids = 12;
   */
  trustIds: string[];

  constructor(data?: PartialMessage<ListUsersByOrgIdResponse_UserDetails>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.ListUsersByOrgIdResponse.UserDetails";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUsersByOrgIdResponse_UserDetails;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUsersByOrgIdResponse_UserDetails;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUsersByOrgIdResponse_UserDetails;

  static equals(a: ListUsersByOrgIdResponse_UserDetails | PlainMessage<ListUsersByOrgIdResponse_UserDetails> | undefined, b: ListUsersByOrgIdResponse_UserDetails | PlainMessage<ListUsersByOrgIdResponse_UserDetails> | undefined): boolean;
}

/**
 * Request message for the ListUsersByRegion rpc.
 *
 * @generated from message api.v1alpha1.org.ListUsersByRegionRequest
 */
export declare class ListUsersByRegionRequest extends Message<ListUsersByRegionRequest> {
  /**
   * Filter by region.
   *
   * @generated from field: string region_id = 1;
   */
  regionId: string;

  /**
   * Return a list of only user agents (users whose default app is agent). When this is false all users are returned.
   *
   * @generated from field: bool agent = 2;
   */
  agent: boolean;

  /**
   * Filter by the user's archived status.
   *
   * @generated from field: api.commons.UserArchivedStateFilter archived_filter = 3;
   */
  archivedFilter: UserArchivedStateFilter;

  constructor(data?: PartialMessage<ListUsersByRegionRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.ListUsersByRegionRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUsersByRegionRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUsersByRegionRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUsersByRegionRequest;

  static equals(a: ListUsersByRegionRequest | PlainMessage<ListUsersByRegionRequest> | undefined, b: ListUsersByRegionRequest | PlainMessage<ListUsersByRegionRequest> | undefined): boolean;
}

/**
 * Response message for the ListsUserByRegion rpc.
 *
 * @generated from message api.v1alpha1.org.ListUsersByRegionResponse
 */
export declare class ListUsersByRegionResponse extends Message<ListUsersByRegionResponse> {
  /**
   * List of returned users with masked data.
   *
   * @generated from field: repeated api.v1alpha1.org.ListUsersByRegionResponse.UserDetails users = 1;
   */
  users: ListUsersByRegionResponse_UserDetails[];

  constructor(data?: PartialMessage<ListUsersByRegionResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.ListUsersByRegionResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUsersByRegionResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUsersByRegionResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUsersByRegionResponse;

  static equals(a: ListUsersByRegionResponse | PlainMessage<ListUsersByRegionResponse> | undefined, b: ListUsersByRegionResponse | PlainMessage<ListUsersByRegionResponse> | undefined): boolean;
}

/**
 * Object for ListUsersByRegion to return a list of.
 *
 * @generated from message api.v1alpha1.org.ListUsersByRegionResponse.UserDetails
 */
export declare class ListUsersByRegionResponse_UserDetails extends Message<ListUsersByRegionResponse_UserDetails> {
  /**
   * The user ID of the user
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * The ID of the user's organization
   *
   * @generated from field: string org_id = 2;
   */
  orgId: string;

  /**
   * The user's first name
   *
   * @generated from field: string first_name = 3;
   */
  firstName: string;

  /**
   * The user's last name
   *
   * @generated from field: string last_name = 4;
   */
  lastName: string;

  /**
   * The user's username
   *
   * @generated from field: string username = 5;
   */
  username: string;

  /**
   * Whether or not the user is disabled.
   *
   * @generated from field: bool login_disabled = 7;
   */
  loginDisabled: boolean;

  /**
   * A list of the (neo)permission group Ids the agent belongs to
   *
   * @generated from field: repeated string permission_group_ids = 9;
   */
  permissionGroupIds: string[];

  /**
   * A list of the labels associated with the user
   *
   * @generated from field: repeated api.commons.org.Label labels = 10;
   */
  labels: Label[];

  /**
   * Whether the user is an account owner
   *
   * @generated from field: bool account_owner = 11;
   */
  accountOwner: boolean;

  /**
   * Whether the user is also an agent
   *
   * @generated from field: bool agent = 12;
   */
  agent: boolean;

  /**
   * A list of the trust ids the user has been assigned.
   *
   * @generated from field: repeated string trust_ids = 13;
   */
  trustIds: string[];

  constructor(data?: PartialMessage<ListUsersByRegionResponse_UserDetails>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.ListUsersByRegionResponse.UserDetails";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUsersByRegionResponse_UserDetails;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUsersByRegionResponse_UserDetails;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUsersByRegionResponse_UserDetails;

  static equals(a: ListUsersByRegionResponse_UserDetails | PlainMessage<ListUsersByRegionResponse_UserDetails> | undefined, b: ListUsersByRegionResponse_UserDetails | PlainMessage<ListUsersByRegionResponse_UserDetails> | undefined): boolean;
}

/**
 * Request message for the UpdateMyUser rpc.
 *
 * @generated from message api.v1alpha1.org.UpdateMyUserRequest
 */
export declare class UpdateMyUserRequest extends Message<UpdateMyUserRequest> {
  /**
   * The linkback numbers the updated user will have.
   *
   * @generated from field: repeated string linkback_numbers = 1;
   */
  linkbackNumbers: string[];

  /**
   * The caller ids the updated user will have.
   *
   * @generated from field: repeated string caller_ids = 2;
   */
  callerIds: string[];

  /**
   * User TimeZone with wrapper for nullable timezone.
   *
   * @generated from field: api.commons.TimeZoneWrapper time_zone_override = 3;
   */
  timeZoneOverride?: TimeZoneWrapper;

  /**
   * Default app the user starts on
   *
   * @generated from field: api.commons.OperatorApplications default_app = 4;
   */
  defaultApp: OperatorApplications;

  /**
   * Mask to filter fields on organization entities in response.
   *
   * @generated from field: repeated string field_mask = 10;
   */
  fieldMask: string[];

  constructor(data?: PartialMessage<UpdateMyUserRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.UpdateMyUserRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateMyUserRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateMyUserRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateMyUserRequest;

  static equals(a: UpdateMyUserRequest | PlainMessage<UpdateMyUserRequest> | undefined, b: UpdateMyUserRequest | PlainMessage<UpdateMyUserRequest> | undefined): boolean;
}

/**
 * Response message for the UpdateMyUser rpc.
 *
 * @generated from message api.v1alpha1.org.UpdateMyUserResponse
 */
export declare class UpdateMyUserResponse extends Message<UpdateMyUserResponse> {
  constructor(data?: PartialMessage<UpdateMyUserResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.UpdateMyUserResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateMyUserResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateMyUserResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateMyUserResponse;

  static equals(a: UpdateMyUserResponse | PlainMessage<UpdateMyUserResponse> | undefined, b: UpdateMyUserResponse | PlainMessage<UpdateMyUserResponse> | undefined): boolean;
}

/**
 * Request message for the UpdateUser rpc.
 *
 * @generated from message api.v1alpha1.org.UpdateUserRequest
 */
export declare class UpdateUserRequest extends Message<UpdateUserRequest> {
  /**
   * The user id of the user to be updated
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * The first name the updated user will have.
   *
   * @generated from field: string first_name = 2;
   */
  firstName: string;

  /**
   * The last name the updated user will have.
   *
   * @generated from field: string last_name = 3;
   */
  lastName: string;

  /**
   * The partner agent id the updated user will have.
   *
   * @generated from field: string partner_agent_id = 4;
   */
  partnerAgentId: string;

  /**
   * User TimeZone with wrapper for nullable timezone.
   *
   * @generated from field: api.commons.TimeZoneWrapper time_zone_override = 5;
   */
  timeZoneOverride?: TimeZoneWrapper;

  /**
   * The linkback numbers the updated user will have.
   *
   * @generated from field: repeated string linkback_numbers = 6;
   */
  linkbackNumbers: string[];

  /**
   * The caller ids the updated user will have.
   *
   * @generated from field: repeated string caller_ids = 7;
   */
  callerIds: string[];

  /**
   * Default app the user starts on
   *
   * @generated from field: api.commons.OperatorApplications default_app = 8;
   */
  defaultApp: OperatorApplications;

  /**
   * Whether the updated user will require a password reset.
   *
   * @generated from field: bool password_reset_required = 9;
   */
  passwordResetRequired: boolean;

  /**
   * The agent profile group id the updated user will have.
   *
   * @generated from field: string agent_profile_group_id = 10;
   */
  agentProfileGroupId: string;

  /**
   * The username the updated user will have.
   *
   * @generated from field: string username = 11;
   */
  username: string;

  /**
   * The email the updated user will have.
   *
   * @generated from field: string email = 12;
   */
  email: string;

  /**
   * The Agent Caller Id of the user
   *
   * @generated from field: string user_caller_id = 13;
   */
  userCallerId: string;

  /**
   * A list of labels to assign to the user
   *
   * @generated from field: repeated string label_ids = 14;
   */
  labelIds: string[];

  /**
   * Mask to filter fields on organization entities in response.
   *
   * @generated from field: repeated string field_mask = 20;
   */
  fieldMask: string[];

  constructor(data?: PartialMessage<UpdateUserRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.UpdateUserRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserRequest;

  static equals(a: UpdateUserRequest | PlainMessage<UpdateUserRequest> | undefined, b: UpdateUserRequest | PlainMessage<UpdateUserRequest> | undefined): boolean;
}

/**
 * Response message for the UpdateUser rpc.
 *
 * @generated from message api.v1alpha1.org.UpdateUserResponse
 */
export declare class UpdateUserResponse extends Message<UpdateUserResponse> {
  constructor(data?: PartialMessage<UpdateUserResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.UpdateUserResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserResponse;

  static equals(a: UpdateUserResponse | PlainMessage<UpdateUserResponse> | undefined, b: UpdateUserResponse | PlainMessage<UpdateUserResponse> | undefined): boolean;
}

/**
 * Request message for the UpdateUserLabels rpc.
 *
 * @generated from message api.v1alpha1.org.UpdateUserLabelsRequest
 */
export declare class UpdateUserLabelsRequest extends Message<UpdateUserLabelsRequest> {
  /**
   * The ID of the user whose labels will be updated.
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * The organization ID of the user
   *
   * @generated from field: string org_id = 2;
   */
  orgId: string;

  /**
   * Labels to update user to
   *
   * @generated from field: repeated string label_ids = 3;
   */
  labelIds: string[];

  constructor(data?: PartialMessage<UpdateUserLabelsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.UpdateUserLabelsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserLabelsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserLabelsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserLabelsRequest;

  static equals(a: UpdateUserLabelsRequest | PlainMessage<UpdateUserLabelsRequest> | undefined, b: UpdateUserLabelsRequest | PlainMessage<UpdateUserLabelsRequest> | undefined): boolean;
}

/**
 * Response message for the UpdateUserLabels rpc.
 *
 * @generated from message api.v1alpha1.org.UpdateUserLabelsResponse
 */
export declare class UpdateUserLabelsResponse extends Message<UpdateUserLabelsResponse> {
  constructor(data?: PartialMessage<UpdateUserLabelsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.UpdateUserLabelsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserLabelsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserLabelsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserLabelsResponse;

  static equals(a: UpdateUserLabelsResponse | PlainMessage<UpdateUserLabelsResponse> | undefined, b: UpdateUserLabelsResponse | PlainMessage<UpdateUserLabelsResponse> | undefined): boolean;
}

/**
 * Request message for the UpdateUserCallerId rpc.
 *
 * @generated from message api.v1alpha1.org.UpdateUserCallerIdRequest
 */
export declare class UpdateUserCallerIdRequest extends Message<UpdateUserCallerIdRequest> {
  /**
   * The user id of the user to be updated
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * The caller id for the updated user
   *
   * @generated from field: string user_caller_id = 2;
   */
  userCallerId: string;

  constructor(data?: PartialMessage<UpdateUserCallerIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.UpdateUserCallerIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserCallerIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserCallerIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserCallerIdRequest;

  static equals(a: UpdateUserCallerIdRequest | PlainMessage<UpdateUserCallerIdRequest> | undefined, b: UpdateUserCallerIdRequest | PlainMessage<UpdateUserCallerIdRequest> | undefined): boolean;
}

/**
 * Response message for the UpdateUserCallerId rpc.
 *
 * @generated from message api.v1alpha1.org.UpdateUserCallerIdResponse
 */
export declare class UpdateUserCallerIdResponse extends Message<UpdateUserCallerIdResponse> {
  constructor(data?: PartialMessage<UpdateUserCallerIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.UpdateUserCallerIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserCallerIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserCallerIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserCallerIdResponse;

  static equals(a: UpdateUserCallerIdResponse | PlainMessage<UpdateUserCallerIdResponse> | undefined, b: UpdateUserCallerIdResponse | PlainMessage<UpdateUserCallerIdResponse> | undefined): boolean;
}

/**
 * Request message for the UpdateUserDisabled rpc.
 *
 * @generated from message api.v1alpha1.org.UpdateUserDisabledRequest
 */
export declare class UpdateUserDisabledRequest extends Message<UpdateUserDisabledRequest> {
  /**
   * The user id of the user to be updated
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * Whether the user is able to login
   *
   * @generated from field: bool login_disabled = 2;
   */
  loginDisabled: boolean;

  constructor(data?: PartialMessage<UpdateUserDisabledRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.UpdateUserDisabledRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserDisabledRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserDisabledRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserDisabledRequest;

  static equals(a: UpdateUserDisabledRequest | PlainMessage<UpdateUserDisabledRequest> | undefined, b: UpdateUserDisabledRequest | PlainMessage<UpdateUserDisabledRequest> | undefined): boolean;
}

/**
 * Response message for the UpdateUserDisabled rpc.
 *
 * @generated from message api.v1alpha1.org.UpdateUserDisabledResponse
 */
export declare class UpdateUserDisabledResponse extends Message<UpdateUserDisabledResponse> {
  constructor(data?: PartialMessage<UpdateUserDisabledResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.UpdateUserDisabledResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserDisabledResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserDisabledResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserDisabledResponse;

  static equals(a: UpdateUserDisabledResponse | PlainMessage<UpdateUserDisabledResponse> | undefined, b: UpdateUserDisabledResponse | PlainMessage<UpdateUserDisabledResponse> | undefined): boolean;
}

/**
 * Request message for the UpdateUserDisabledByOrgId rpc.
 *
 * @generated from message api.v1alpha1.org.UpdateUserDisabledByOrgIdRequest
 */
export declare class UpdateUserDisabledByOrgIdRequest extends Message<UpdateUserDisabledByOrgIdRequest> {
  /**
   * The user id of the user to be updated
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * The organization id of the user to be updated
   *
   * @generated from field: string org_id = 2;
   */
  orgId: string;

  /**
   * Whether the user is able to login
   *
   * @generated from field: bool login_disabled = 3;
   */
  loginDisabled: boolean;

  constructor(data?: PartialMessage<UpdateUserDisabledByOrgIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.UpdateUserDisabledByOrgIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserDisabledByOrgIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserDisabledByOrgIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserDisabledByOrgIdRequest;

  static equals(a: UpdateUserDisabledByOrgIdRequest | PlainMessage<UpdateUserDisabledByOrgIdRequest> | undefined, b: UpdateUserDisabledByOrgIdRequest | PlainMessage<UpdateUserDisabledByOrgIdRequest> | undefined): boolean;
}

/**
 * Response message for the UpdateUserDisabledByOrgId rpc.
 *
 * @generated from message api.v1alpha1.org.UpdateUserDisabledByOrgIdResponse
 */
export declare class UpdateUserDisabledByOrgIdResponse extends Message<UpdateUserDisabledByOrgIdResponse> {
  constructor(data?: PartialMessage<UpdateUserDisabledByOrgIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.UpdateUserDisabledByOrgIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserDisabledByOrgIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserDisabledByOrgIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserDisabledByOrgIdResponse;

  static equals(a: UpdateUserDisabledByOrgIdResponse | PlainMessage<UpdateUserDisabledByOrgIdResponse> | undefined, b: UpdateUserDisabledByOrgIdResponse | PlainMessage<UpdateUserDisabledByOrgIdResponse> | undefined): boolean;
}

/**
 * Request message for the GetMyUserPasswordResetLink rpc.
 *
 * @generated from message api.v1alpha1.org.GetMyUserPasswordResetLinkRequest
 */
export declare class GetMyUserPasswordResetLinkRequest extends Message<GetMyUserPasswordResetLinkRequest> {
  /**
   * The time to live (in seconds) of the generated link, defaults to 180 if unset.
   *
   * @generated from field: int64 ttl = 1;
   */
  ttl: bigint;

  constructor(data?: PartialMessage<GetMyUserPasswordResetLinkRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetMyUserPasswordResetLinkRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyUserPasswordResetLinkRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyUserPasswordResetLinkRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyUserPasswordResetLinkRequest;

  static equals(a: GetMyUserPasswordResetLinkRequest | PlainMessage<GetMyUserPasswordResetLinkRequest> | undefined, b: GetMyUserPasswordResetLinkRequest | PlainMessage<GetMyUserPasswordResetLinkRequest> | undefined): boolean;
}

/**
 * Response message for the GetMyUserPasswordResetLink rpc.
 *
 * @generated from message api.v1alpha1.org.GetMyUserPasswordResetLinkResponse
 */
export declare class GetMyUserPasswordResetLinkResponse extends Message<GetMyUserPasswordResetLinkResponse> {
  /**
   * The generated password reset link URL.
   *
   * @generated from field: string url = 1;
   */
  url: string;

  constructor(data?: PartialMessage<GetMyUserPasswordResetLinkResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetMyUserPasswordResetLinkResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMyUserPasswordResetLinkResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMyUserPasswordResetLinkResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMyUserPasswordResetLinkResponse;

  static equals(a: GetMyUserPasswordResetLinkResponse | PlainMessage<GetMyUserPasswordResetLinkResponse> | undefined, b: GetMyUserPasswordResetLinkResponse | PlainMessage<GetMyUserPasswordResetLinkResponse> | undefined): boolean;
}

/**
 * Request message for the GetUserPasswordResetLink rpc.
 *
 * @generated from message api.v1alpha1.org.GetUserPasswordResetLinkRequest
 */
export declare class GetUserPasswordResetLinkRequest extends Message<GetUserPasswordResetLinkRequest> {
  /**
   * The ID of the user whose password will be updated.
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * The time to live (in seconds) of the generated link, defaults to 180 if unset.
   *
   * @generated from field: int64 ttl = 2;
   */
  ttl: bigint;

  constructor(data?: PartialMessage<GetUserPasswordResetLinkRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetUserPasswordResetLinkRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserPasswordResetLinkRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserPasswordResetLinkRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserPasswordResetLinkRequest;

  static equals(a: GetUserPasswordResetLinkRequest | PlainMessage<GetUserPasswordResetLinkRequest> | undefined, b: GetUserPasswordResetLinkRequest | PlainMessage<GetUserPasswordResetLinkRequest> | undefined): boolean;
}

/**
 * Response message for the GetUserPasswordResetLink rpc.
 *
 * @generated from message api.v1alpha1.org.GetUserPasswordResetLinkResponse
 */
export declare class GetUserPasswordResetLinkResponse extends Message<GetUserPasswordResetLinkResponse> {
  /**
   * The generated password reset link URL.
   *
   * @generated from field: string url = 1;
   */
  url: string;

  constructor(data?: PartialMessage<GetUserPasswordResetLinkResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetUserPasswordResetLinkResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserPasswordResetLinkResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserPasswordResetLinkResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserPasswordResetLinkResponse;

  static equals(a: GetUserPasswordResetLinkResponse | PlainMessage<GetUserPasswordResetLinkResponse> | undefined, b: GetUserPasswordResetLinkResponse | PlainMessage<GetUserPasswordResetLinkResponse> | undefined): boolean;
}

/**
 * Request message for the GetUserPasswordResetLinkByOrgId rpc.
 *
 * @generated from message api.v1alpha1.org.GetUserPasswordResetLinkByOrgIdRequest
 */
export declare class GetUserPasswordResetLinkByOrgIdRequest extends Message<GetUserPasswordResetLinkByOrgIdRequest> {
  /**
   * The ID of the user whose password will be updated.
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * The organization ID of the user
   *
   * @generated from field: string org_id = 2;
   */
  orgId: string;

  /**
   * The time to live (in seconds) of the generated link, defaults to 180 if unset.
   *
   * @generated from field: int64 ttl = 3;
   */
  ttl: bigint;

  constructor(data?: PartialMessage<GetUserPasswordResetLinkByOrgIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetUserPasswordResetLinkByOrgIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserPasswordResetLinkByOrgIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserPasswordResetLinkByOrgIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserPasswordResetLinkByOrgIdRequest;

  static equals(a: GetUserPasswordResetLinkByOrgIdRequest | PlainMessage<GetUserPasswordResetLinkByOrgIdRequest> | undefined, b: GetUserPasswordResetLinkByOrgIdRequest | PlainMessage<GetUserPasswordResetLinkByOrgIdRequest> | undefined): boolean;
}

/**
 * Response message for the GetUserPasswordResetLinkByOrgId rpc.
 *
 * @generated from message api.v1alpha1.org.GetUserPasswordResetLinkByOrgIdResponse
 */
export declare class GetUserPasswordResetLinkByOrgIdResponse extends Message<GetUserPasswordResetLinkByOrgIdResponse> {
  /**
   * The generated password reset link URL.
   *
   * @generated from field: string url = 1;
   */
  url: string;

  constructor(data?: PartialMessage<GetUserPasswordResetLinkByOrgIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetUserPasswordResetLinkByOrgIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserPasswordResetLinkByOrgIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserPasswordResetLinkByOrgIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserPasswordResetLinkByOrgIdResponse;

  static equals(a: GetUserPasswordResetLinkByOrgIdResponse | PlainMessage<GetUserPasswordResetLinkByOrgIdResponse> | undefined, b: GetUserPasswordResetLinkByOrgIdResponse | PlainMessage<GetUserPasswordResetLinkByOrgIdResponse> | undefined): boolean;
}

/**
 * Request message for the CreatePasswordResetLink rpc.
 *
 * @generated from message api.v1alpha1.org.CreatePasswordResetLinkRequest
 */
export declare class CreatePasswordResetLinkRequest extends Message<CreatePasswordResetLinkRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * DEPRECATED: no longer used.
   *
   * @generated from field: google.protobuf.Timestamp expiration = 2;
   */
  expiration?: Timestamp;

  constructor(data?: PartialMessage<CreatePasswordResetLinkRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.CreatePasswordResetLinkRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreatePasswordResetLinkRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreatePasswordResetLinkRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreatePasswordResetLinkRequest;

  static equals(a: CreatePasswordResetLinkRequest | PlainMessage<CreatePasswordResetLinkRequest> | undefined, b: CreatePasswordResetLinkRequest | PlainMessage<CreatePasswordResetLinkRequest> | undefined): boolean;
}

/**
 * Response message for the CreatePasswordResetLink rpc.
 *
 * @generated from message api.v1alpha1.org.CreatePasswordResetLinkResponse
 */
export declare class CreatePasswordResetLinkResponse extends Message<CreatePasswordResetLinkResponse> {
  /**
   * @generated from field: string url = 1;
   */
  url: string;

  constructor(data?: PartialMessage<CreatePasswordResetLinkResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.CreatePasswordResetLinkResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreatePasswordResetLinkResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreatePasswordResetLinkResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreatePasswordResetLinkResponse;

  static equals(a: CreatePasswordResetLinkResponse | PlainMessage<CreatePasswordResetLinkResponse> | undefined, b: CreatePasswordResetLinkResponse | PlainMessage<CreatePasswordResetLinkResponse> | undefined): boolean;
}

/**
 * Request message for the CreatePasswordResetLinkByOrgId rpc.
 *
 * @generated from message api.v1alpha1.org.CreatePasswordResetLinkByOrgIdRequest
 */
export declare class CreatePasswordResetLinkByOrgIdRequest extends Message<CreatePasswordResetLinkByOrgIdRequest> {
  /**
   * The ID of the user.
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * The organization ID of the user
   *
   * @generated from field: string org_id = 2;
   */
  orgId: string;

  constructor(data?: PartialMessage<CreatePasswordResetLinkByOrgIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.CreatePasswordResetLinkByOrgIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreatePasswordResetLinkByOrgIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreatePasswordResetLinkByOrgIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreatePasswordResetLinkByOrgIdRequest;

  static equals(a: CreatePasswordResetLinkByOrgIdRequest | PlainMessage<CreatePasswordResetLinkByOrgIdRequest> | undefined, b: CreatePasswordResetLinkByOrgIdRequest | PlainMessage<CreatePasswordResetLinkByOrgIdRequest> | undefined): boolean;
}

/**
 * Response message for the CreatePasswordResetLinkByOrgId rpc.
 *
 * @generated from message api.v1alpha1.org.CreatePasswordResetLinkByOrgIdResponse
 */
export declare class CreatePasswordResetLinkByOrgIdResponse extends Message<CreatePasswordResetLinkByOrgIdResponse> {
  /**
   * @generated from field: string url = 1;
   */
  url: string;

  constructor(data?: PartialMessage<CreatePasswordResetLinkByOrgIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.CreatePasswordResetLinkByOrgIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreatePasswordResetLinkByOrgIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreatePasswordResetLinkByOrgIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreatePasswordResetLinkByOrgIdResponse;

  static equals(a: CreatePasswordResetLinkByOrgIdResponse | PlainMessage<CreatePasswordResetLinkByOrgIdResponse> | undefined, b: CreatePasswordResetLinkByOrgIdResponse | PlainMessage<CreatePasswordResetLinkByOrgIdResponse> | undefined): boolean;
}

/**
 * This rpc used to be called GetUserBlocked
 * Request message for the GetUserLoginInfo rpc.
 *
 * @generated from message api.v1alpha1.org.GetUserLoginInfoRequest
 */
export declare class GetUserLoginInfoRequest extends Message<GetUserLoginInfoRequest> {
  /**
   * The ID of the user.
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * The organization ID of the user
   *
   * @generated from field: string org_id = 2;
   */
  orgId: string;

  constructor(data?: PartialMessage<GetUserLoginInfoRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetUserLoginInfoRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserLoginInfoRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserLoginInfoRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserLoginInfoRequest;

  static equals(a: GetUserLoginInfoRequest | PlainMessage<GetUserLoginInfoRequest> | undefined, b: GetUserLoginInfoRequest | PlainMessage<GetUserLoginInfoRequest> | undefined): boolean;
}

/**
 * Response message for the GetUserLoginInfo rpc.
 *
 * @generated from message api.v1alpha1.org.GetUserLoginInfoResponse
 */
export declare class GetUserLoginInfoResponse extends Message<GetUserLoginInfoResponse> {
  /**
   * Whether the user is manually blocked in auth0
   *
   * @generated from field: bool blocked = 1;
   */
  blocked: boolean;

  /**
   * The last IP the user used to login
   *
   * @generated from field: string last_ip = 2;
   */
  lastIp: string;

  /**
   * The time of the user's latest login
   *
   * @generated from field: google.protobuf.Timestamp last_login = 3;
   */
  lastLogin?: Timestamp;

  /**
   * The time of the user's latest password reset
   *
   * @generated from field: google.protobuf.Timestamp last_password_reset = 4;
   */
  lastPasswordReset?: Timestamp;

  /**
   * The number of times the user has logged in
   *
   * @generated from field: int64 logins_count = 5;
   */
  loginsCount: bigint;

  /**
   * The time the user was created in auth0
   *
   * @generated from field: google.protobuf.Timestamp created_at = 6;
   */
  createdAt?: Timestamp;

  /**
   * The last time the user was updated in auth0
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 7;
   */
  updatedAt?: Timestamp;

  /**
   * Whether the user has specific IPs which are blocked
   *
   * @generated from field: bool has_blocked_ips = 8;
   */
  hasBlockedIps: boolean;

  constructor(data?: PartialMessage<GetUserLoginInfoResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetUserLoginInfoResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserLoginInfoResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserLoginInfoResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserLoginInfoResponse;

  static equals(a: GetUserLoginInfoResponse | PlainMessage<GetUserLoginInfoResponse> | undefined, b: GetUserLoginInfoResponse | PlainMessage<GetUserLoginInfoResponse> | undefined): boolean;
}

/**
 * Request message for the SendPasswordReset rpc.
 *
 * @generated from message api.v1alpha1.org.SendPasswordResetRequest
 */
export declare class SendPasswordResetRequest extends Message<SendPasswordResetRequest> {
  /**
   * The email address to send the password reset lnk to.
   *
   * @generated from field: string email = 1;
   */
  email: string;

  constructor(data?: PartialMessage<SendPasswordResetRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.SendPasswordResetRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendPasswordResetRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendPasswordResetRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendPasswordResetRequest;

  static equals(a: SendPasswordResetRequest | PlainMessage<SendPasswordResetRequest> | undefined, b: SendPasswordResetRequest | PlainMessage<SendPasswordResetRequest> | undefined): boolean;
}

/**
 * Response message for the SendPasswordReset rpc.
 *
 * @generated from message api.v1alpha1.org.SendPasswordResetResponse
 */
export declare class SendPasswordResetResponse extends Message<SendPasswordResetResponse> {
  constructor(data?: PartialMessage<SendPasswordResetResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.SendPasswordResetResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendPasswordResetResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendPasswordResetResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendPasswordResetResponse;

  static equals(a: SendPasswordResetResponse | PlainMessage<SendPasswordResetResponse> | undefined, b: SendPasswordResetResponse | PlainMessage<SendPasswordResetResponse> | undefined): boolean;
}

/**
 * Request message for the SendPasswordResetByOrgId rpc.
 *
 * @generated from message api.v1alpha1.org.SendPasswordResetByOrgIdRequest
 */
export declare class SendPasswordResetByOrgIdRequest extends Message<SendPasswordResetByOrgIdRequest> {
  /**
   * The organization ID of the user to be emailed.
   *
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * The email address to send the password reset lnk to.
   *
   * @generated from field: string email = 2;
   */
  email: string;

  constructor(data?: PartialMessage<SendPasswordResetByOrgIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.SendPasswordResetByOrgIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendPasswordResetByOrgIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendPasswordResetByOrgIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendPasswordResetByOrgIdRequest;

  static equals(a: SendPasswordResetByOrgIdRequest | PlainMessage<SendPasswordResetByOrgIdRequest> | undefined, b: SendPasswordResetByOrgIdRequest | PlainMessage<SendPasswordResetByOrgIdRequest> | undefined): boolean;
}

/**
 * Response message for the SendPasswordResetByOrgId rpc.
 *
 * @generated from message api.v1alpha1.org.SendPasswordResetByOrgIdResponse
 */
export declare class SendPasswordResetByOrgIdResponse extends Message<SendPasswordResetByOrgIdResponse> {
  constructor(data?: PartialMessage<SendPasswordResetByOrgIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.SendPasswordResetByOrgIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendPasswordResetByOrgIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendPasswordResetByOrgIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendPasswordResetByOrgIdResponse;

  static equals(a: SendPasswordResetByOrgIdResponse | PlainMessage<SendPasswordResetByOrgIdResponse> | undefined, b: SendPasswordResetByOrgIdResponse | PlainMessage<SendPasswordResetByOrgIdResponse> | undefined): boolean;
}

/**
 * Request message for the ResetMyPassword rpc.
 *
 * @generated from message api.v1alpha1.org.ResetMyPasswordRequest
 */
export declare class ResetMyPasswordRequest extends Message<ResetMyPasswordRequest> {
  /**
   * The new password to use for my user.
   *
   * @generated from field: string password = 1;
   */
  password: string;

  constructor(data?: PartialMessage<ResetMyPasswordRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.ResetMyPasswordRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetMyPasswordRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetMyPasswordRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetMyPasswordRequest;

  static equals(a: ResetMyPasswordRequest | PlainMessage<ResetMyPasswordRequest> | undefined, b: ResetMyPasswordRequest | PlainMessage<ResetMyPasswordRequest> | undefined): boolean;
}

/**
 * Response message for the ResetMyPassword rpc.
 *
 * @generated from message api.v1alpha1.org.ResetMyPasswordResponse
 */
export declare class ResetMyPasswordResponse extends Message<ResetMyPasswordResponse> {
  constructor(data?: PartialMessage<ResetMyPasswordResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.ResetMyPasswordResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetMyPasswordResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetMyPasswordResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetMyPasswordResponse;

  static equals(a: ResetMyPasswordResponse | PlainMessage<ResetMyPasswordResponse> | undefined, b: ResetMyPasswordResponse | PlainMessage<ResetMyPasswordResponse> | undefined): boolean;
}

/**
 * Request message for the ResetUserPassword rpc.
 *
 * @generated from message api.v1alpha1.org.ResetUserPasswordRequest
 */
export declare class ResetUserPasswordRequest extends Message<ResetUserPasswordRequest> {
  /**
   * The new password to use for the specified user.
   *
   * @generated from field: string password = 1;
   */
  password: string;

  /**
   * The ID of the user password to be changed.
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  constructor(data?: PartialMessage<ResetUserPasswordRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.ResetUserPasswordRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetUserPasswordRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetUserPasswordRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetUserPasswordRequest;

  static equals(a: ResetUserPasswordRequest | PlainMessage<ResetUserPasswordRequest> | undefined, b: ResetUserPasswordRequest | PlainMessage<ResetUserPasswordRequest> | undefined): boolean;
}

/**
 * Response message for the ResetUserPassword rpc.
 *
 * @generated from message api.v1alpha1.org.ResetUserPasswordResponse
 */
export declare class ResetUserPasswordResponse extends Message<ResetUserPasswordResponse> {
  constructor(data?: PartialMessage<ResetUserPasswordResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.ResetUserPasswordResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetUserPasswordResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetUserPasswordResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetUserPasswordResponse;

  static equals(a: ResetUserPasswordResponse | PlainMessage<ResetUserPasswordResponse> | undefined, b: ResetUserPasswordResponse | PlainMessage<ResetUserPasswordResponse> | undefined): boolean;
}

/**
 * Request message for the ResetUserPasswordByOrgId rpc.
 *
 * @generated from message api.v1alpha1.org.ResetUserPasswordByOrgIdRequest
 */
export declare class ResetUserPasswordByOrgIdRequest extends Message<ResetUserPasswordByOrgIdRequest> {
  /**
   * The new password to use for the specified user.
   *
   * @generated from field: string password = 1;
   */
  password: string;

  /**
   * The ID of the user password to be changed.
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * The organization ID of the user password to be changed.
   *
   * @generated from field: string org_id = 3;
   */
  orgId: string;

  constructor(data?: PartialMessage<ResetUserPasswordByOrgIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.ResetUserPasswordByOrgIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetUserPasswordByOrgIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetUserPasswordByOrgIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetUserPasswordByOrgIdRequest;

  static equals(a: ResetUserPasswordByOrgIdRequest | PlainMessage<ResetUserPasswordByOrgIdRequest> | undefined, b: ResetUserPasswordByOrgIdRequest | PlainMessage<ResetUserPasswordByOrgIdRequest> | undefined): boolean;
}

/**
 * Response message for the ResetUserPasswordByOrgId rpc.
 *
 * @generated from message api.v1alpha1.org.ResetUserPasswordByOrgIdResponse
 */
export declare class ResetUserPasswordByOrgIdResponse extends Message<ResetUserPasswordByOrgIdResponse> {
  constructor(data?: PartialMessage<ResetUserPasswordByOrgIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.ResetUserPasswordByOrgIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResetUserPasswordByOrgIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResetUserPasswordByOrgIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResetUserPasswordByOrgIdResponse;

  static equals(a: ResetUserPasswordByOrgIdResponse | PlainMessage<ResetUserPasswordByOrgIdResponse> | undefined, b: ResetUserPasswordByOrgIdResponse | PlainMessage<ResetUserPasswordByOrgIdResponse> | undefined): boolean;
}

/**
 * Request message for the GetUserEmailVerified rpc.
 *
 * @generated from message api.v1alpha1.org.GetUserEmailVerifiedRequest
 */
export declare class GetUserEmailVerifiedRequest extends Message<GetUserEmailVerifiedRequest> {
  /**
   * The ID of the user to be checked.
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  constructor(data?: PartialMessage<GetUserEmailVerifiedRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetUserEmailVerifiedRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserEmailVerifiedRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserEmailVerifiedRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserEmailVerifiedRequest;

  static equals(a: GetUserEmailVerifiedRequest | PlainMessage<GetUserEmailVerifiedRequest> | undefined, b: GetUserEmailVerifiedRequest | PlainMessage<GetUserEmailVerifiedRequest> | undefined): boolean;
}

/**
 * Response message for the GetUserEmailVerified rpc.
 *
 * @generated from message api.v1alpha1.org.GetUserEmailVerifiedResponse
 */
export declare class GetUserEmailVerifiedResponse extends Message<GetUserEmailVerifiedResponse> {
  /**
   * Whether the user's email is verified
   *
   * @generated from field: bool email_verified = 1;
   */
  emailVerified: boolean;

  constructor(data?: PartialMessage<GetUserEmailVerifiedResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetUserEmailVerifiedResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserEmailVerifiedResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserEmailVerifiedResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserEmailVerifiedResponse;

  static equals(a: GetUserEmailVerifiedResponse | PlainMessage<GetUserEmailVerifiedResponse> | undefined, b: GetUserEmailVerifiedResponse | PlainMessage<GetUserEmailVerifiedResponse> | undefined): boolean;
}

/**
 * Request message for the GetUserEmailVerifiedByOrgId rpc.
 *
 * @generated from message api.v1alpha1.org.GetUserEmailVerifiedByOrgIdRequest
 */
export declare class GetUserEmailVerifiedByOrgIdRequest extends Message<GetUserEmailVerifiedByOrgIdRequest> {
  /**
   * The ID of the user to be checked.
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * The organization ID of the user.
   *
   * @generated from field: string org_id = 2;
   */
  orgId: string;

  constructor(data?: PartialMessage<GetUserEmailVerifiedByOrgIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetUserEmailVerifiedByOrgIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserEmailVerifiedByOrgIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserEmailVerifiedByOrgIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserEmailVerifiedByOrgIdRequest;

  static equals(a: GetUserEmailVerifiedByOrgIdRequest | PlainMessage<GetUserEmailVerifiedByOrgIdRequest> | undefined, b: GetUserEmailVerifiedByOrgIdRequest | PlainMessage<GetUserEmailVerifiedByOrgIdRequest> | undefined): boolean;
}

/**
 * Response message for the GetUserEmailVerifiedByOrgId rpc.
 *
 * @generated from message api.v1alpha1.org.GetUserEmailVerifiedByOrgIdResponse
 */
export declare class GetUserEmailVerifiedByOrgIdResponse extends Message<GetUserEmailVerifiedByOrgIdResponse> {
  /**
   * Whether the user's email is verified
   *
   * @generated from field: bool email_verified = 1;
   */
  emailVerified: boolean;

  constructor(data?: PartialMessage<GetUserEmailVerifiedByOrgIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetUserEmailVerifiedByOrgIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserEmailVerifiedByOrgIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserEmailVerifiedByOrgIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserEmailVerifiedByOrgIdResponse;

  static equals(a: GetUserEmailVerifiedByOrgIdResponse | PlainMessage<GetUserEmailVerifiedByOrgIdResponse> | undefined, b: GetUserEmailVerifiedByOrgIdResponse | PlainMessage<GetUserEmailVerifiedByOrgIdResponse> | undefined): boolean;
}

/**
 * Request message for the SendUserEmailVerification rpc.
 *
 * @generated from message api.v1alpha1.org.SendUserEmailVerificationRequest
 */
export declare class SendUserEmailVerificationRequest extends Message<SendUserEmailVerificationRequest> {
  /**
   * The ID of the user to be verified.
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  constructor(data?: PartialMessage<SendUserEmailVerificationRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.SendUserEmailVerificationRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendUserEmailVerificationRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendUserEmailVerificationRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendUserEmailVerificationRequest;

  static equals(a: SendUserEmailVerificationRequest | PlainMessage<SendUserEmailVerificationRequest> | undefined, b: SendUserEmailVerificationRequest | PlainMessage<SendUserEmailVerificationRequest> | undefined): boolean;
}

/**
 * Response message for the SendUserEmailVerification rpc.
 *
 * @generated from message api.v1alpha1.org.SendUserEmailVerificationResponse
 */
export declare class SendUserEmailVerificationResponse extends Message<SendUserEmailVerificationResponse> {
  constructor(data?: PartialMessage<SendUserEmailVerificationResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.SendUserEmailVerificationResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendUserEmailVerificationResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendUserEmailVerificationResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendUserEmailVerificationResponse;

  static equals(a: SendUserEmailVerificationResponse | PlainMessage<SendUserEmailVerificationResponse> | undefined, b: SendUserEmailVerificationResponse | PlainMessage<SendUserEmailVerificationResponse> | undefined): boolean;
}

/**
 * Request message for the SendUserEmailVerificationByOrgId rpc.
 *
 * @generated from message api.v1alpha1.org.SendUserEmailVerificationByOrgIdRequest
 */
export declare class SendUserEmailVerificationByOrgIdRequest extends Message<SendUserEmailVerificationByOrgIdRequest> {
  /**
   * The ID of the user to be verified.
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * The organization ID of the user.
   *
   * @generated from field: string org_id = 2;
   */
  orgId: string;

  constructor(data?: PartialMessage<SendUserEmailVerificationByOrgIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.SendUserEmailVerificationByOrgIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendUserEmailVerificationByOrgIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendUserEmailVerificationByOrgIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendUserEmailVerificationByOrgIdRequest;

  static equals(a: SendUserEmailVerificationByOrgIdRequest | PlainMessage<SendUserEmailVerificationByOrgIdRequest> | undefined, b: SendUserEmailVerificationByOrgIdRequest | PlainMessage<SendUserEmailVerificationByOrgIdRequest> | undefined): boolean;
}

/**
 * Response message for the SendUserEmailVerificationByOrgId rpc.
 *
 * @generated from message api.v1alpha1.org.SendUserEmailVerificationByOrgIdResponse
 */
export declare class SendUserEmailVerificationByOrgIdResponse extends Message<SendUserEmailVerificationByOrgIdResponse> {
  constructor(data?: PartialMessage<SendUserEmailVerificationByOrgIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.SendUserEmailVerificationByOrgIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendUserEmailVerificationByOrgIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendUserEmailVerificationByOrgIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendUserEmailVerificationByOrgIdResponse;

  static equals(a: SendUserEmailVerificationByOrgIdResponse | PlainMessage<SendUserEmailVerificationByOrgIdResponse> | undefined, b: SendUserEmailVerificationByOrgIdResponse | PlainMessage<SendUserEmailVerificationByOrgIdResponse> | undefined): boolean;
}

/**
 * Request message for the GetUserSessionData rpc.
 *
 * @generated from message api.v1alpha1.org.GetUserSessionDataRequest
 */
export declare class GetUserSessionDataRequest extends Message<GetUserSessionDataRequest> {
  constructor(data?: PartialMessage<GetUserSessionDataRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetUserSessionDataRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserSessionDataRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserSessionDataRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserSessionDataRequest;

  static equals(a: GetUserSessionDataRequest | PlainMessage<GetUserSessionDataRequest> | undefined, b: GetUserSessionDataRequest | PlainMessage<GetUserSessionDataRequest> | undefined): boolean;
}

/**
 * Response message for the GetUserSessionData rpc.
 *
 * @generated from message api.v1alpha1.org.GetUserSessionDataResponse
 */
export declare class GetUserSessionDataResponse extends Message<GetUserSessionDataResponse> {
  /**
   * The user the data is about
   *
   * @generated from field: api.v1alpha1.org.GetUserSessionDataResponse.User user = 1;
   */
  user?: GetUserSessionDataResponse_User;

  /**
   * The user's organizations's name
   *
   * @generated from field: string org_name = 2;
   */
  orgName: string;

  /**
   * List of legacy P3 permissions.
   *
   * @generated from field: repeated api.commons.Permission p3_permissions = 3;
   */
  p3Permissions: Permission[];

  /**
   * A list of the permission groups the user belongs to
   *
   * @generated from field: repeated api.commons.org.PermissionGroup permission_groups = 4;
   */
  permissionGroups: PermissionGroup[];

  /**
   * A list of the labels associated with the user
   *
   * @generated from field: repeated api.commons.org.Label labels = 5;
   */
  labels: Label[];

  /**
   * A boolean for if the organization allows two factor authentication
   *
   * @generated from field: bool org_allowed_2fa = 6;
   */
  orgAllowed2fa: boolean;

  constructor(data?: PartialMessage<GetUserSessionDataResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetUserSessionDataResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserSessionDataResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserSessionDataResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserSessionDataResponse;

  static equals(a: GetUserSessionDataResponse | PlainMessage<GetUserSessionDataResponse> | undefined, b: GetUserSessionDataResponse | PlainMessage<GetUserSessionDataResponse> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.org.GetUserSessionDataResponse.User
 */
export declare class GetUserSessionDataResponse_User extends Message<GetUserSessionDataResponse_User> {
  /**
   * The ID of the user
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * The ID of the org the user belongs to.
   *
   * @generated from field: string org_id = 2;
   */
  orgId: string;

  /**
   * The Username of the user.
   *
   * @generated from field: string username = 3;
   */
  username: string;

  /**
   * The ID of the p3 permission group the user has.
   *
   * @generated from field: string p3_permission_group_id = 4;
   */
  p3PermissionGroupId: string;

  /**
   * The User's partner agent id.
   *
   * @generated from field: string partner_agent_id = 8;
   */
  partnerAgentId: string;

  /**
   * The user's regional sids. The key of the map is a region id.
   *
   * @generated from field: map<string, api.v1alpha1.org.GetUserSessionDataResponse.User.RegionSids> region_sid_map = 10;
   */
  regionSidMap: { [key: string]: GetUserSessionDataResponse_User_RegionSids };

  /**
   * region_id of a the user's default region
   *
   * @generated from field: string default_region = 11;
   */
  defaultRegion: string;

  /**
   * payload
   *
   * @generated from field: string api_key = 12;
   */
  apiKey: string;

  /**
   * The User's email.
   *
   * @generated from field: string email = 13;
   */
  email: string;

  /**
   * Whether or not the user is disabled.
   *
   * @generated from field: bool login_disabled = 14;
   */
  loginDisabled: boolean;

  /**
   * login preferences
   *
   * @generated from field: repeated string caller_ids = 15;
   */
  callerIds: string[];

  /**
   * @generated from field: repeated string linkback_numbers = 16;
   */
  linkbackNumbers: string[];

  /**
   * @generated from field: string auth_user_id = 17;
   */
  authUserId: string;

  /**
   * @generated from field: bool enable_mfa = 18;
   */
  enableMfa: boolean;

  /**
   * The user's first name.
   *
   * @generated from field: string first_name = 19;
   */
  firstName: string;

  /**
   * The user's last name.
   *
   * @generated from field: string last_name = 20;
   */
  lastName: string;

  /**
   * The date/time the user was created.
   *
   * @generated from field: google.protobuf.Timestamp created = 21;
   */
  created?: Timestamp;

  /**
   * The date/time the user was last updated.
   *
   * @generated from field: google.protobuf.Timestamp last_updated = 22;
   */
  lastUpdated?: Timestamp;

  /**
   * Whether or not the user must reset their password on next login.
   *
   * @generated from field: bool password_reset_required = 23;
   */
  passwordResetRequired: boolean;

  /**
   * connection id is the id of the auth connection that the
   * user is coming from if it is a delgated user. If the user
   * is not delgated this will be nil.
   *
   * @generated from field: google.protobuf.StringValue connection_id = 24;
   */
  connectionId?: string;

  /**
   * User TimeZone with wrapper for nullable timezone
   *
   * @generated from field: api.commons.TimeZoneWrapper time_zone_override = 25;
   */
  timeZoneOverride?: TimeZoneWrapper;

  /**
   * UserSettings
   * List of permission groups ids the user is a member of
   *
   * @generated from field: repeated string permission_group_ids = 26;
   */
  permissionGroupIds: string[];

  /**
   * List of trust ids the user has been assigned.
   *
   * @generated from field: repeated string trust_ids = 27;
   */
  trustIds: string[];

  /**
   * default_app for a user
   *
   * @generated from field: api.commons.OperatorApplications default_application = 28;
   */
  defaultApplication: OperatorApplications;

  /**
   * User caller id
   *
   * @generated from field: string user_caller_id = 29;
   */
  userCallerId: string;

  /**
   * users assigned agent profile group
   *
   * @generated from field: string agent_profile_group_id = 30;
   */
  agentProfileGroupId: string;

  /**
   * a bool signalling whether or not the user is also an agent
   *
   * @generated from field: bool agent = 31;
   */
  agent: boolean;

  /**
   * a bool to determine whether or not user is account owner
   *
   * @generated from field: bool account_owner = 32;
   */
  accountOwner: boolean;

  /**
   * Timestamp beyond which the user is required to have multi factor authentication set up
   *
   * @generated from field: google.protobuf.Timestamp mfa_timestamp = 33;
   */
  mfaTimestamp?: Timestamp;

  constructor(data?: PartialMessage<GetUserSessionDataResponse_User>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetUserSessionDataResponse.User";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserSessionDataResponse_User;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserSessionDataResponse_User;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserSessionDataResponse_User;

  static equals(a: GetUserSessionDataResponse_User | PlainMessage<GetUserSessionDataResponse_User> | undefined, b: GetUserSessionDataResponse_User | PlainMessage<GetUserSessionDataResponse_User> | undefined): boolean;
}

/**
 * The entity object used in the region_sid_map.
 *
 * @generated from message api.v1alpha1.org.GetUserSessionDataResponse.User.RegionSids
 */
export declare class GetUserSessionDataResponse_User_RegionSids extends Message<GetUserSessionDataResponse_User_RegionSids> {
  /**
   * The login sid for the region.
   *
   * @generated from field: int64 login_sid = 1;
   */
  loginSid: bigint;

  /**
   * THe agent sid for the region.
   *
   * @generated from field: int64 agent_sid = 2;
   */
  agentSid: bigint;

  /**
   * THe client sid for the region.
   *
   * @generated from field: int64 client_sid = 3;
   */
  clientSid: bigint;

  constructor(data?: PartialMessage<GetUserSessionDataResponse_User_RegionSids>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.GetUserSessionDataResponse.User.RegionSids";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserSessionDataResponse_User_RegionSids;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserSessionDataResponse_User_RegionSids;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserSessionDataResponse_User_RegionSids;

  static equals(a: GetUserSessionDataResponse_User_RegionSids | PlainMessage<GetUserSessionDataResponse_User_RegionSids> | undefined, b: GetUserSessionDataResponse_User_RegionSids | PlainMessage<GetUserSessionDataResponse_User_RegionSids> | undefined): boolean;
}


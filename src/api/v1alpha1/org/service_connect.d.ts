// @generated by protoc-gen-connect-es v0.10.1
// @generated from file api/v1alpha1/org/service.proto (package api.v1alpha1.org, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { ArchiveOrganizationRequest, ArchiveOrganizationResponse, ConvertOrgToManualRequest, ConvertOrgToManualResponse, CreateOrganizationRequest, CreateOrganizationResponse, GetOrganizationByIdRequest, GetOrganizationByIdResponse, GetOrganizationRequest, GetOrganizationResponse, ListAllOrganizationsGloballyRequest, ListAllOrganizationsGloballyResponse, ListArchivedOrganizationsRequest, ListArchivedOrganizationsResponse, ListOrganizationsByRegionRequest, ListOrganizationsByRegionResponse, ListOwnedOrgsRequest, ListOwnedOrgsResponse, UnArchiveOrganizationRequest, UnArchiveOrganizationResponse, UpdateOrganizationRequest, UpdateOrganizationResponse } from "./organization_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { AcceptLinkbackRecordingTermsRequest, AcceptLinkbackRecordingTermsResponse, ClearEmailUnsubscribeAcknowledgementRequest, ClearEmailUnsubscribeAcknowledgementResponse, GetAdminClientPreferencesRequest, GetAdminClientPreferencesResponse, GetAgentPreferencesRequest, GetAgentPreferencesResponse, GetAuthenticationPreferencesRequest, GetAuthenticationPreferencesResponse, GetBroadcastPreferencesRequest, GetBroadcastPreferencesResponse, GetBusinessPreferencesRequest, GetBusinessPreferencesResponse, GetCompliancePreferencesRequest, GetCompliancePreferencesResponse, GetContactPreferencesRequest, GetContactPreferencesResponse, GetDashboardGeneralPreferencesRequest, GetDashboardGeneralPreferencesResponse, GetDashboardQueuePreferencesRequest, GetDashboardQueuePreferencesResponse, GetEmailSmsPreferencesRequest, GetEmailSmsPreferencesResponse, GetEndOfDayPreferencesRequest, GetEndOfDayPreferencesResponse, GetFilterPreferencesRequest, GetFilterPreferencesResponse, GetOrganizationPreferencesRequest, GetOrganizationPreferencesResponse, GetPhonePreferencesRequest, GetPhonePreferencesResponse, GetRecordingPreferencesRequest, GetRecordingPreferencesResponse, GetSchedulePreferencesRequest, GetSchedulePreferencesResponse, GetScorecardsPreferencesRequest, GetScorecardsPreferencesResponse, GetVoiceAnalyticsPreferencesRequest, GetVoiceAnalyticsPreferencesResponse, GetWebhookPreferencesRequest, GetWebhookPreferencesResponse, LinkbackUpdateBroadcastTemplatesRequest, LinkbackUpdateBroadcastTemplatesResponse, ListVoiceAnalyticsPreferencesRequest, ListVoiceAnalyticsPreferencesResponse, RecordEmailUnsubscribeAcknowledgementRequest, RecordEmailUnsubscribeAcknowledgementResponse, UpdateAdminClientPreferencesRequest, UpdateAdminClientPreferencesResponse, UpdateAgentPreferencesRequest, UpdateAgentPreferencesResponse, UpdateAuthenticationPreferencesRequest, UpdateAuthenticationPreferencesResponse, UpdateBroadcastPreferencesRequest, UpdateBroadcastPreferencesResponse, UpdateBusinessPreferencesRequest, UpdateBusinessPreferencesResponse, UpdateCompliancePreferencesRequest, UpdateCompliancePreferencesResponse, UpdateContactPreferencesRequest, UpdateContactPreferencesResponse, UpdateDashboardGeneralPreferencesRequest, UpdateDashboardGeneralPreferencesResponse, UpdateDashboardQueuePreferencesRequest, UpdateDashboardQueuePreferencesResponse, UpdateEmailSmsPreferencesRequest, UpdateEmailSmsPreferencesResponse, UpdateEndOfDayPreferencesRequest, UpdateEndOfDayPreferencesResponse, UpdateFilterPreferencesRequest, UpdateFilterPreferencesResponse, UpdateOrganizationPreferencesRequest, UpdateOrganizationPreferencesResponse, UpdatePhonePreferencesRequest, UpdatePhonePreferencesResponse, UpdateRecordingPreferencesRequest, UpdateRecordingPreferencesResponse, UpdateSchedulePreferencesRequest, UpdateSchedulePreferencesResponse, UpdateScorecardsPreferencesRequest, UpdateScorecardsPreferencesResponse, UpdateVoiceAnalyticsPreferencesRequest, UpdateVoiceAnalyticsPreferencesResponse, UpdateWebhookPreferencesRequest, UpdateWebhookPreferencesResponse } from "./preferences_pb.js";
import { CreateDelegatedUserRequest, CreateDelegatedUserResponse, CreateUserRequest, CreateUserResponse, GetMyUserPasswordResetLinkRequest, GetMyUserPasswordResetLinkResponse, GetMyUserRequest, GetMyUserResponse, GetUserByOrgIdRequest, GetUserByOrgIdResponse, GetUserEmailVerifiedByOrgIdRequest, GetUserEmailVerifiedByOrgIdResponse, GetUserEmailVerifiedRequest, GetUserEmailVerifiedResponse, GetUserLoginInfoRequest, GetUserLoginInfoResponse, GetUserPasswordResetLinkByOrgIdRequest, GetUserPasswordResetLinkByOrgIdResponse, GetUserPasswordResetLinkRequest, GetUserPasswordResetLinkResponse, GetUserRequest, GetUserResponse, GetUserSessionDataRequest, GetUserSessionDataResponse, ListAgentsRequest, ListAgentsResponse, ListUsersByOrgIdRequest, ListUsersByOrgIdResponse, ListUsersByRegionRequest, ListUsersByRegionResponse, ListUsersRequest, ListUsersResponse, SendUserEmailVerificationByOrgIdRequest, SendUserEmailVerificationByOrgIdResponse, SendUserEmailVerificationRequest, SendUserEmailVerificationResponse, UpdateMyUserRequest, UpdateMyUserResponse, UpdateUserCallerIdRequest, UpdateUserCallerIdResponse, UpdateUserDisabledByOrgIdRequest, UpdateUserDisabledByOrgIdResponse, UpdateUserDisabledRequest, UpdateUserDisabledResponse, UpdateUserLabelsRequest, UpdateUserLabelsResponse, UpdateUserRequest, UpdateUserResponse } from "./user_pb.js";
import { AssignAgentProfileGroupsRequest, AssignAgentProfileGroupsResponse, CreateAgentProfileGroupRequest, CreateAgentProfileGroupResponse, DeleteAgentProfileGroupRequest, DeleteAgentProfileGroupResponse, GetAgentProfileGroupRequest, GetAgentProfileGroupResponse, ListAgentProfileGroupsRequest, ListAgentProfileGroupsResponse, UpdateAgentProfileGroupRequest, UpdateAgentProfileGroupResponse } from "./agent_profile_group_pb.js";
import { AddUserSubscriptionByUserIdRequest, AddUserSubscriptionByUserIdResponse, AddUserSubscriptionRequest, AddUserSubscriptionResponse, GetUserSubscriptionByUserIdRequest, GetUserSubscriptionByUserIdResponse, GetUserSubscriptionRequest, GetUserSubscriptionResponse, ListOrgSubscriptionsRequest, ListOrgSubscriptionsResponse, ListUserSubscriptionsByUserIdRequest, ListUserSubscriptionsByUserIdResponse, ListUserSubscriptionsRequest, ListUserSubscriptionsResponse, RemoveUserSubscriptionByUserIdRequest, RemoveUserSubscriptionByUserIdResponse, RemoveUserSubscriptionRequest, RemoveUserSubscriptionResponse, UpdateUserSubscriptionByUserIdRequest, UpdateUserSubscriptionByUserIdResponse, UpdateUserSubscriptionRequest, UpdateUserSubscriptionResponse } from "./notifications_pb.js";
import { CreateAgentResponseAutoRulesRequest, CreateAgentResponseAutoRulesResponse, CreateDataDipTemplateRequest, CreateDataDipTemplateResponse, DeleteAgentResponseAutoRulesRequest, DeleteAgentResponseAutoRulesResponse, GetDataDipTemplateRequest, GetDataDipTemplateResponse, GetHuntGroupSettingsRequest, GetHuntGroupSettingsResponse, ListAgentResponseAutoRulesRequest, ListAgentResponseAutoRulesResponse, ListCallerIdBucketsRequest, ListCallerIdBucketsResponse, ListDataDipTemplatesRequest, ListDataDipTemplatesResponse, UpdateAgentResponseAutoRulesRequest, UpdateAgentResponseAutoRulesResponse, UpdateHuntGroupSettingsRequest, UpdateHuntGroupSettingsResponse } from "./huntgroup_pb.js";
import { AcceptTrustRequest, AcceptTrustResponse, AssignTrustRequest, AssignTrustResponse, CreateTrustRequest, CreateTrustResponse, DeleteTrustRequest, DeleteTrustResponse, GetTrustRequest, GetTrustResponse, ListAssignableTrustsRequest, ListAssignableTrustsResponse, ListGivenTrustsRequest, ListGivenTrustsResponse, ListIncomingTrustsRequest, ListIncomingTrustsResponse, RejectTrustRequest, RejectTrustResponse, UnassignTrustRequest, UnassignTrustResponse } from "./trusts_pb.js";
import { AssignLabelRequest, AssignLabelResponse, CreateLabelRequest, CreateLabelResponse, DeleteLabelRequest, DeleteLabelResponse, GetAssignableLabelsRequest, GetAssignableLabelsResponse, GetAssignmentCountsRequest, GetAssignmentCountsResponse, GetLabelRequest, GetLabelResponse, ListLabelsRequest, ListLabelsResponse, UnassignLabelRequest, UnassignLabelResponse, UpdateLabelRequest, UpdateLabelResponse } from "./labels_pb.js";
import { AssignAccountOwnerPermissionToUserRequest, AssignAccountOwnerPermissionToUserResponse, AssignUsersPermissionGroupRequest, AssignUsersPermissionGroupResponse, CreatePermissionGroupRequest, CreatePermissionGroupResponse, DeletePermissionGroupRequest, DeletePermissionGroupResponse, GetAccountOwnerGroupRequest, GetAccountOwnerGroupResponse, GetLicensesRequest, GetLicensesResponse, GetOrgLicensesRequest, GetOrgLicensesResponse, GetPermissionsRequest, GetPermissionsResponse, GetUserPermissionsRequest, GetUserPermissionsResponse, InitDefaultPermissionGroupsRequest, InitDefaultPermissionGroupsResponse, ListPermissionGroupsByOrgIdRequest, ListPermissionGroupsByOrgIdResponse, ListPermissionGroupsRequest, ListPermissionGroupsResponse, RemovePermissionFromAllPermissionGroupsRequest, RemovePermissionFromAllPermissionGroupsResponse, RevokeAccountOwnerPermissionFromUserRequest, RevokeAccountOwnerPermissionFromUserResponse, RevokeUsersPermissionGroupRequest, RevokeUsersPermissionGroupResponse, UpdateLicensesRequest, UpdateLicensesResponse, UpdatePermissionGroupRequest, UpdatePermissionGroupResponse } from "./permissions_pb.js";
import { AssignUsersP3PermissionGroupRequest, AssignUsersP3PermissionGroupResponse, CreateP3PermissionGroupRequest, CreateP3PermissionGroupResponse, DeleteP3PermissionGroupRequest, DeleteP3PermissionGroupResponse, ListP3PermissionGroupsRequest, ListP3PermissionGroupsResponse, RevokeUsersP3PermissionGroupRequest, RevokeUsersP3PermissionGroupResponse, UpdateP3PermissionGroupByOrgIdRequest, UpdateP3PermissionGroupByOrgIdResponse, UpdateP3PermissionGroupRequest, UpdateP3PermissionGroupResponse } from "./p3_permissions_pb.js";

/**
 * ORGANIZATION
 *
 * @generated from service api.v1alpha1.org.Org
 */
export declare const Org: {
  readonly typeName: "api.v1alpha1.org.Org",
  readonly methods: {
    /**
     * CreateOrganization creates a new organization entity and enables it for the
     * region it is getting created in.
     *
     * @generated from rpc api.v1alpha1.org.Org.CreateOrganization
     */
    readonly createOrganization: {
      readonly name: "CreateOrganization",
      readonly I: typeof CreateOrganizationRequest,
      readonly O: typeof CreateOrganizationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetOrganization returns a single organization.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetOrganization
     */
    readonly getOrganization: {
      readonly name: "GetOrganization",
      readonly I: typeof GetOrganizationRequest,
      readonly O: typeof GetOrganizationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetOrganizationById returns a single organization by a given orgId.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetOrganizationById
     */
    readonly getOrganizationById: {
      readonly name: "GetOrganizationById",
      readonly I: typeof GetOrganizationByIdRequest,
      readonly O: typeof GetOrganizationByIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateOrganization updates the mutable fields on the Organization entity
     * using the provided field mask.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateOrganization
     */
    readonly updateOrganization: {
      readonly name: "UpdateOrganization",
      readonly I: typeof UpdateOrganizationRequest,
      readonly O: typeof UpdateOrganizationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Archives an organization. An archived organization effectively disappears, but isn't deleted.
     *
     * @generated from rpc api.v1alpha1.org.Org.ArchiveOrganization
     */
    readonly archiveOrganization: {
      readonly name: "ArchiveOrganization",
      readonly I: typeof ArchiveOrganizationRequest,
      readonly O: typeof ArchiveOrganizationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Unarchives an organization. An archived organization effectively disappears, but isn't deleted.
     *
     * @generated from rpc api.v1alpha1.org.Org.UnArchiveOrganization
     */
    readonly unArchiveOrganization: {
      readonly name: "UnArchiveOrganization",
      readonly I: typeof UnArchiveOrganizationRequest,
      readonly O: typeof UnArchiveOrganizationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ListAllOrganizationsGlobally lists all organizations globally (archived and unarchived).
     *
     * @generated from rpc api.v1alpha1.org.Org.ListAllOrganizationsGlobally
     */
    readonly listAllOrganizationsGlobally: {
      readonly name: "ListAllOrganizationsGlobally",
      readonly I: typeof ListAllOrganizationsGloballyRequest,
      readonly O: typeof ListAllOrganizationsGloballyResponse,
      readonly kind: MethodKind.ServerStreaming,
    },
    /**
     * ListOrganizationsByRegion lists organizations in the given region (unarchived).
     *
     * @generated from rpc api.v1alpha1.org.Org.ListOrganizationsByRegion
     */
    readonly listOrganizationsByRegion: {
      readonly name: "ListOrganizationsByRegion",
      readonly I: typeof ListOrganizationsByRegionRequest,
      readonly O: typeof ListOrganizationsByRegionResponse,
      readonly kind: MethodKind.ServerStreaming,
    },
    /**
     * ListArchivedOrganizations lists all archived organizations in the current region.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListArchivedOrganizations
     */
    readonly listArchivedOrganizations: {
      readonly name: "ListArchivedOrganizations",
      readonly I: typeof ListArchivedOrganizationsRequest,
      readonly O: typeof ListArchivedOrganizationsResponse,
      readonly kind: MethodKind.ServerStreaming,
    },
    /**
     * ConvertOrgToManual converts an organization to manual only by org id.
     *
     * @generated from rpc api.v1alpha1.org.Org.ConvertOrgToManual
     */
    readonly convertOrgToManual: {
      readonly name: "ConvertOrgToManual",
      readonly I: typeof ConvertOrgToManualRequest,
      readonly O: typeof ConvertOrgToManualResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Lists all orgs under the p3 hierarchy
     *
     * @generated from rpc api.v1alpha1.org.Org.ListOwnedOrgs
     */
    readonly listOwnedOrgs: {
      readonly name: "ListOwnedOrgs",
      readonly I: typeof ListOwnedOrgsRequest,
      readonly O: typeof ListOwnedOrgsResponse,
      readonly kind: MethodKind.ServerStreaming,
    },
    /**
     * GetOrganizationPreferences returns general preferences controlling basic
     * organization related properties.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetOrganizationPreferences
     */
    readonly getOrganizationPreferences: {
      readonly name: "GetOrganizationPreferences",
      readonly I: typeof GetOrganizationPreferencesRequest,
      readonly O: typeof GetOrganizationPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateOrganizationPreferences updates general preferences controlling basic
     * organization related properties.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateOrganizationPreferences
     */
    readonly updateOrganizationPreferences: {
      readonly name: "UpdateOrganizationPreferences",
      readonly I: typeof UpdateOrganizationPreferencesRequest,
      readonly O: typeof UpdateOrganizationPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetAgentPreferences returns preferences controlling direct agent properties.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetAgentPreferences
     */
    readonly getAgentPreferences: {
      readonly name: "GetAgentPreferences",
      readonly I: typeof GetAgentPreferencesRequest,
      readonly O: typeof GetAgentPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateAgentPreferences updates preferences controlling direct agent
     * properties.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateAgentPreferences
     */
    readonly updateAgentPreferences: {
      readonly name: "UpdateAgentPreferences",
      readonly I: typeof UpdateAgentPreferencesRequest,
      readonly O: typeof UpdateAgentPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetContactPreferences returns preferences for contact lists.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetContactPreferences
     */
    readonly getContactPreferences: {
      readonly name: "GetContactPreferences",
      readonly I: typeof GetContactPreferencesRequest,
      readonly O: typeof GetContactPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateContactPreferences updates preferences for contact lists.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateContactPreferences
     */
    readonly updateContactPreferences: {
      readonly name: "UpdateContactPreferences",
      readonly I: typeof UpdateContactPreferencesRequest,
      readonly O: typeof UpdateContactPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetAuthenticationPreferences returns preferences for controlling the
     *
     * @generated from rpc api.v1alpha1.org.Org.GetAuthenticationPreferences
     */
    readonly getAuthenticationPreferences: {
      readonly name: "GetAuthenticationPreferences",
      readonly I: typeof GetAuthenticationPreferencesRequest,
      readonly O: typeof GetAuthenticationPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateAuthenticationPreferences updates preferences for controlling the
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateAuthenticationPreferences
     */
    readonly updateAuthenticationPreferences: {
      readonly name: "UpdateAuthenticationPreferences",
      readonly I: typeof UpdateAuthenticationPreferencesRequest,
      readonly O: typeof UpdateAuthenticationPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetWebhookPreferences returns preferences for web-hook push URLs.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetWebhookPreferences
     */
    readonly getWebhookPreferences: {
      readonly name: "GetWebhookPreferences",
      readonly I: typeof GetWebhookPreferencesRequest,
      readonly O: typeof GetWebhookPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateWebhookPreferences updates preferences for web-hook push URLs.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateWebhookPreferences
     */
    readonly updateWebhookPreferences: {
      readonly name: "UpdateWebhookPreferences",
      readonly I: typeof UpdateWebhookPreferencesRequest,
      readonly O: typeof UpdateWebhookPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetDashboardGeneralPreferences returns preferences for agent dashboard
     * controls.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetDashboardGeneralPreferences
     */
    readonly getDashboardGeneralPreferences: {
      readonly name: "GetDashboardGeneralPreferences",
      readonly I: typeof GetDashboardGeneralPreferencesRequest,
      readonly O: typeof GetDashboardGeneralPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateDashboardGeneralPreferences updates preferences for agent dashboard
     * controls.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateDashboardGeneralPreferences
     */
    readonly updateDashboardGeneralPreferences: {
      readonly name: "UpdateDashboardGeneralPreferences",
      readonly I: typeof UpdateDashboardGeneralPreferencesRequest,
      readonly O: typeof UpdateDashboardGeneralPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetDashboardQueuePreferences returns preferences for controlling agent queue
     * and hold table settings.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetDashboardQueuePreferences
     */
    readonly getDashboardQueuePreferences: {
      readonly name: "GetDashboardQueuePreferences",
      readonly I: typeof GetDashboardQueuePreferencesRequest,
      readonly O: typeof GetDashboardQueuePreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateDashboardQueuePreferences updates preferences for controlling agent
     * queue and hold table settings.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateDashboardQueuePreferences
     */
    readonly updateDashboardQueuePreferences: {
      readonly name: "UpdateDashboardQueuePreferences",
      readonly I: typeof UpdateDashboardQueuePreferencesRequest,
      readonly O: typeof UpdateDashboardQueuePreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetPhonePreferences returns preferences for phone dial options, call ID,
     * and other call properties.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetPhonePreferences
     */
    readonly getPhonePreferences: {
      readonly name: "GetPhonePreferences",
      readonly I: typeof GetPhonePreferencesRequest,
      readonly O: typeof GetPhonePreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdatePhonePreferences updates preferences for phone dial options, call ID,
     * and other call properties.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdatePhonePreferences
     */
    readonly updatePhonePreferences: {
      readonly name: "UpdatePhonePreferences",
      readonly I: typeof UpdatePhonePreferencesRequest,
      readonly O: typeof UpdatePhonePreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetCompliancePreferences returns preferences for natural language compliance
     * campaign settings.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetCompliancePreferences
     */
    readonly getCompliancePreferences: {
      readonly name: "GetCompliancePreferences",
      readonly I: typeof GetCompliancePreferencesRequest,
      readonly O: typeof GetCompliancePreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateCompliancePreferences updates preferences for natural language
     * compliance campaign settings.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateCompliancePreferences
     */
    readonly updateCompliancePreferences: {
      readonly name: "UpdateCompliancePreferences",
      readonly I: typeof UpdateCompliancePreferencesRequest,
      readonly O: typeof UpdateCompliancePreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetBroadcastPreferences returns preferences for editing templates and
     * broadcast scheduling properties.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetBroadcastPreferences
     */
    readonly getBroadcastPreferences: {
      readonly name: "GetBroadcastPreferences",
      readonly I: typeof GetBroadcastPreferencesRequest,
      readonly O: typeof GetBroadcastPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateBroadcastPreferences updates preferences for editing templates and
     * broadcast scheduling properties.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateBroadcastPreferences
     */
    readonly updateBroadcastPreferences: {
      readonly name: "UpdateBroadcastPreferences",
      readonly I: typeof UpdateBroadcastPreferencesRequest,
      readonly O: typeof UpdateBroadcastPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetSchedulePreferences returns preferences for editing campaign scheduling
     * properties.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetSchedulePreferences
     */
    readonly getSchedulePreferences: {
      readonly name: "GetSchedulePreferences",
      readonly I: typeof GetSchedulePreferencesRequest,
      readonly O: typeof GetSchedulePreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateSchedulePreferences updates preferences for editing campaign
     * scheduling properties.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateSchedulePreferences
     */
    readonly updateSchedulePreferences: {
      readonly name: "UpdateSchedulePreferences",
      readonly I: typeof UpdateSchedulePreferencesRequest,
      readonly O: typeof UpdateSchedulePreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetEmailSmsPreferences returns preferences for email and SMS management.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetEmailSmsPreferences
     */
    readonly getEmailSmsPreferences: {
      readonly name: "GetEmailSmsPreferences",
      readonly I: typeof GetEmailSmsPreferencesRequest,
      readonly O: typeof GetEmailSmsPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateEmailSmsPreferences updates preferences for email and SMS management.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateEmailSmsPreferences
     */
    readonly updateEmailSmsPreferences: {
      readonly name: "UpdateEmailSmsPreferences",
      readonly I: typeof UpdateEmailSmsPreferencesRequest,
      readonly O: typeof UpdateEmailSmsPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetBusinessPreferences returns preferences for business intelligence.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetBusinessPreferences
     */
    readonly getBusinessPreferences: {
      readonly name: "GetBusinessPreferences",
      readonly I: typeof GetBusinessPreferencesRequest,
      readonly O: typeof GetBusinessPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateBusinessPreferences updates preferences for business intelligence.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateBusinessPreferences
     */
    readonly updateBusinessPreferences: {
      readonly name: "UpdateBusinessPreferences",
      readonly I: typeof UpdateBusinessPreferencesRequest,
      readonly O: typeof UpdateBusinessPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetScorecardsPreferences returns preferences for scorecards.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetScorecardsPreferences
     */
    readonly getScorecardsPreferences: {
      readonly name: "GetScorecardsPreferences",
      readonly I: typeof GetScorecardsPreferencesRequest,
      readonly O: typeof GetScorecardsPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateScorecardsPreferences updates preferences for scorecards.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateScorecardsPreferences
     */
    readonly updateScorecardsPreferences: {
      readonly name: "UpdateScorecardsPreferences",
      readonly I: typeof UpdateScorecardsPreferencesRequest,
      readonly O: typeof UpdateScorecardsPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetVoiceAnalyticsPreferences returns preferences for voice analytics.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetVoiceAnalyticsPreferences
     */
    readonly getVoiceAnalyticsPreferences: {
      readonly name: "GetVoiceAnalyticsPreferences",
      readonly I: typeof GetVoiceAnalyticsPreferencesRequest,
      readonly O: typeof GetVoiceAnalyticsPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ListVoiceAnalyticsPreferences lists preferences for voice analytics.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListVoiceAnalyticsPreferences
     */
    readonly listVoiceAnalyticsPreferences: {
      readonly name: "ListVoiceAnalyticsPreferences",
      readonly I: typeof ListVoiceAnalyticsPreferencesRequest,
      readonly O: typeof ListVoiceAnalyticsPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateVoiceAnalyticsPreferences updates preferences for voice analytics.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateVoiceAnalyticsPreferences
     */
    readonly updateVoiceAnalyticsPreferences: {
      readonly name: "UpdateVoiceAnalyticsPreferences",
      readonly I: typeof UpdateVoiceAnalyticsPreferencesRequest,
      readonly O: typeof UpdateVoiceAnalyticsPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetEndOfDayPreferences returns preferences for automated report jobs
     *
     * @generated from rpc api.v1alpha1.org.Org.GetEndOfDayPreferences
     */
    readonly getEndOfDayPreferences: {
      readonly name: "GetEndOfDayPreferences",
      readonly I: typeof GetEndOfDayPreferencesRequest,
      readonly O: typeof GetEndOfDayPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateEndOfDayPreferences updates preferences for automated report jobs
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateEndOfDayPreferences
     */
    readonly updateEndOfDayPreferences: {
      readonly name: "UpdateEndOfDayPreferences",
      readonly I: typeof UpdateEndOfDayPreferencesRequest,
      readonly O: typeof UpdateEndOfDayPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetReportFilterPreferences returns preferences for filters in reports and
     *
     * @generated from rpc api.v1alpha1.org.Org.GetReportFilterPreferences
     */
    readonly getReportFilterPreferences: {
      readonly name: "GetReportFilterPreferences",
      readonly I: typeof GetFilterPreferencesRequest,
      readonly O: typeof GetFilterPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateReportFilterPreferences updates preferences for filters in reports and
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateReportFilterPreferences
     */
    readonly updateReportFilterPreferences: {
      readonly name: "UpdateReportFilterPreferences",
      readonly I: typeof UpdateFilterPreferencesRequest,
      readonly O: typeof UpdateFilterPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetRecordingPreferences returns preferences for audio recording properties.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetRecordingPreferences
     */
    readonly getRecordingPreferences: {
      readonly name: "GetRecordingPreferences",
      readonly I: typeof GetRecordingPreferencesRequest,
      readonly O: typeof GetRecordingPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateRecordingPreferences updates preferences for audio recording
     * properties.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateRecordingPreferences
     */
    readonly updateRecordingPreferences: {
      readonly name: "UpdateRecordingPreferences",
      readonly I: typeof UpdateRecordingPreferencesRequest,
      readonly O: typeof UpdateRecordingPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetAdminClientPreferences returns preferences for essential organization
     * properties only to be used by account managers and customer support.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetAdminClientPreferences
     */
    readonly getAdminClientPreferences: {
      readonly name: "GetAdminClientPreferences",
      readonly I: typeof GetAdminClientPreferencesRequest,
      readonly O: typeof GetAdminClientPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateAdminClientPreferences updates preferences for essential organization
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateAdminClientPreferences
     */
    readonly updateAdminClientPreferences: {
      readonly name: "UpdateAdminClientPreferences",
      readonly I: typeof UpdateAdminClientPreferencesRequest,
      readonly O: typeof UpdateAdminClientPreferencesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * AcceptLinkbackRecordingTerms insert a digital signature acceptance activity
     * log upon client acknowledgement of terms and conditions usage for linkback
     * recorded calls.
     *
     * @generated from rpc api.v1alpha1.org.Org.AcceptLinkbackRecordingTerms
     */
    readonly acceptLinkbackRecordingTerms: {
      readonly name: "AcceptLinkbackRecordingTerms",
      readonly I: typeof AcceptLinkbackRecordingTermsRequest,
      readonly O: typeof AcceptLinkbackRecordingTermsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * LinkbackUpdateBroadcastTemplates updates broadcast template options action
     * parameters to reflect the linkback recording usage value.
     *
     * @generated from rpc api.v1alpha1.org.Org.LinkbackUpdateBroadcastTemplates
     */
    readonly linkbackUpdateBroadcastTemplates: {
      readonly name: "LinkbackUpdateBroadcastTemplates",
      readonly I: typeof LinkbackUpdateBroadcastTemplatesRequest,
      readonly O: typeof LinkbackUpdateBroadcastTemplatesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * RecordEmailUnsubscribeAcknowledgement insert an activity log upon client
     * acknowledgement of responsibility for their own email unsubscribe links.
     *
     * @generated from rpc api.v1alpha1.org.Org.RecordEmailUnsubscribeAcknowledgement
     */
    readonly recordEmailUnsubscribeAcknowledgement: {
      readonly name: "RecordEmailUnsubscribeAcknowledgement",
      readonly I: typeof RecordEmailUnsubscribeAcknowledgementRequest,
      readonly O: typeof RecordEmailUnsubscribeAcknowledgementResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ClearEmailUnsubscribeAcknowledgement insert an activity log upon the client
     * revoking their responsibility for email unsubscribe links.
     *
     * @generated from rpc api.v1alpha1.org.Org.ClearEmailUnsubscribeAcknowledgement
     */
    readonly clearEmailUnsubscribeAcknowledgement: {
      readonly name: "ClearEmailUnsubscribeAcknowledgement",
      readonly I: typeof ClearEmailUnsubscribeAcknowledgementRequest,
      readonly O: typeof ClearEmailUnsubscribeAcknowledgementResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * CreateUser creates a new user and enables it for the region it is getting created in.
     *
     * @generated from rpc api.v1alpha1.org.Org.CreateUser
     */
    readonly createUser: {
      readonly name: "CreateUser",
      readonly I: typeof CreateUserRequest,
      readonly O: typeof CreateUserResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * CreateDelegatedUser creates a new delegated user and enables it for the region it is getting created in.
     *
     * @generated from rpc api.v1alpha1.org.Org.CreateDelegatedUser
     */
    readonly createDelegatedUser: {
      readonly name: "CreateDelegatedUser",
      readonly I: typeof CreateDelegatedUserRequest,
      readonly O: typeof CreateDelegatedUserResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetMyUser returns a single user by UserId or by AgentSid.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetMyUser
     */
    readonly getMyUser: {
      readonly name: "GetMyUser",
      readonly I: typeof GetMyUserRequest,
      readonly O: typeof GetMyUserResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetUser returns a single user by UserId or by AgentSid.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetUser
     */
    readonly getUser: {
      readonly name: "GetUser",
      readonly I: typeof GetUserRequest,
      readonly O: typeof GetUserResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetUserByOrgId returns a single user by UserId and OrgId
     * Requires Customer Support permission and allows cross Org requests.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetUserByOrgId
     */
    readonly getUserByOrgId: {
      readonly name: "GetUserByOrgId",
      readonly I: typeof GetUserByOrgIdRequest,
      readonly O: typeof GetUserByOrgIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ListAgents returns a list of Agents.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListAgents
     */
    readonly listAgents: {
      readonly name: "ListAgents",
      readonly I: typeof ListAgentsRequest,
      readonly O: typeof ListAgentsResponse,
      readonly kind: MethodKind.ServerStreaming,
    },
    /**
     * ListUsers returns a list of users.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListUsers
     */
    readonly listUsers: {
      readonly name: "ListUsers",
      readonly I: typeof ListUsersRequest,
      readonly O: typeof ListUsersResponse,
      readonly kind: MethodKind.ServerStreaming,
    },
    /**
     * ListUsersByOrgId returns a list of users.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListUsersByOrgId
     */
    readonly listUsersByOrgId: {
      readonly name: "ListUsersByOrgId",
      readonly I: typeof ListUsersByOrgIdRequest,
      readonly O: typeof ListUsersByOrgIdResponse,
      readonly kind: MethodKind.ServerStreaming,
    },
    /**
     * ListUsersByRegion returns a list of usersByRegion.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListUsersByRegion
     */
    readonly listUsersByRegion: {
      readonly name: "ListUsersByRegion",
      readonly I: typeof ListUsersByRegionRequest,
      readonly O: typeof ListUsersByRegionResponse,
      readonly kind: MethodKind.ServerStreaming,
    },
    /**
     * UpdateMyUser updates a user.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateMyUser
     */
    readonly updateMyUser: {
      readonly name: "UpdateMyUser",
      readonly I: typeof UpdateMyUserRequest,
      readonly O: typeof UpdateMyUserResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateUser updates a user.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateUser
     */
    readonly updateUser: {
      readonly name: "UpdateUser",
      readonly I: typeof UpdateUserRequest,
      readonly O: typeof UpdateUserResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateUserLabels updates a user's labels to be the passed in set of labels.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateUserLabels
     */
    readonly updateUserLabels: {
      readonly name: "UpdateUserLabels",
      readonly I: typeof UpdateUserLabelsRequest,
      readonly O: typeof UpdateUserLabelsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateUserCallerId updates a user.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateUserCallerId
     */
    readonly updateUserCallerId: {
      readonly name: "UpdateUserCallerId",
      readonly I: typeof UpdateUserCallerIdRequest,
      readonly O: typeof UpdateUserCallerIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateUserDisabled updates whether a user is disabled.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateUserDisabled
     */
    readonly updateUserDisabled: {
      readonly name: "UpdateUserDisabled",
      readonly I: typeof UpdateUserDisabledRequest,
      readonly O: typeof UpdateUserDisabledResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateUserDisabledByOrgId updates a user is disabled.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateUserDisabledByOrgId
     */
    readonly updateUserDisabledByOrgId: {
      readonly name: "UpdateUserDisabledByOrgId",
      readonly I: typeof UpdateUserDisabledByOrgIdRequest,
      readonly O: typeof UpdateUserDisabledByOrgIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetMyUserPasswordResetLink updates a user's password.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetMyUserPasswordResetLink
     */
    readonly getMyUserPasswordResetLink: {
      readonly name: "GetMyUserPasswordResetLink",
      readonly I: typeof GetMyUserPasswordResetLinkRequest,
      readonly O: typeof GetMyUserPasswordResetLinkResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetUserPasswordResetLink gets a link to update a user's password.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetUserPasswordResetLink
     */
    readonly getUserPasswordResetLink: {
      readonly name: "GetUserPasswordResetLink",
      readonly I: typeof GetUserPasswordResetLinkRequest,
      readonly O: typeof GetUserPasswordResetLinkResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetUserPasswordResetLinkByOrgId gets a link to update a user's password.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetUserPasswordResetLinkByOrgId
     */
    readonly getUserPasswordResetLinkByOrgId: {
      readonly name: "GetUserPasswordResetLinkByOrgId",
      readonly I: typeof GetUserPasswordResetLinkByOrgIdRequest,
      readonly O: typeof GetUserPasswordResetLinkByOrgIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Used to be called GetUserBlocked
     * GetUserLoginInfo gets information about a user's login.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetUserLoginInfo
     */
    readonly getUserLoginInfo: {
      readonly name: "GetUserLoginInfo",
      readonly I: typeof GetUserLoginInfoRequest,
      readonly O: typeof GetUserLoginInfoResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetUserEmailVerified gets whether the user's email is verified.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetUserEmailVerified
     */
    readonly getUserEmailVerified: {
      readonly name: "GetUserEmailVerified",
      readonly I: typeof GetUserEmailVerifiedRequest,
      readonly O: typeof GetUserEmailVerifiedResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetUserEmailVerifiedByOrgId gets whether the user's email is verified.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetUserEmailVerifiedByOrgId
     */
    readonly getUserEmailVerifiedByOrgId: {
      readonly name: "GetUserEmailVerifiedByOrgId",
      readonly I: typeof GetUserEmailVerifiedByOrgIdRequest,
      readonly O: typeof GetUserEmailVerifiedByOrgIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * SendUserEmailVerification sends a verification email to the user.
     *
     * @generated from rpc api.v1alpha1.org.Org.SendUserEmailVerification
     */
    readonly sendUserEmailVerification: {
      readonly name: "SendUserEmailVerification",
      readonly I: typeof SendUserEmailVerificationRequest,
      readonly O: typeof SendUserEmailVerificationResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * SendUserEmailVerificationByOrgId sends a verification email to the user.
     *
     * @generated from rpc api.v1alpha1.org.Org.SendUserEmailVerificationByOrgId
     */
    readonly sendUserEmailVerificationByOrgId: {
      readonly name: "SendUserEmailVerificationByOrgId",
      readonly I: typeof SendUserEmailVerificationByOrgIdRequest,
      readonly O: typeof SendUserEmailVerificationByOrgIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetUserSessionData returns data for the front end's session state
     *
     * @generated from rpc api.v1alpha1.org.Org.GetUserSessionData
     */
    readonly getUserSessionData: {
      readonly name: "GetUserSessionData",
      readonly I: typeof GetUserSessionDataRequest,
      readonly O: typeof GetUserSessionDataResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetAgentProfileGroup returns an agent profile group by id
     *
     * @generated from rpc api.v1alpha1.org.Org.GetAgentProfileGroup
     */
    readonly getAgentProfileGroup: {
      readonly name: "GetAgentProfileGroup",
      readonly I: typeof GetAgentProfileGroupRequest,
      readonly O: typeof GetAgentProfileGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ListAgentProfileGroups returns the agent profile groups associated with the current organization
     *
     * @generated from rpc api.v1alpha1.org.Org.ListAgentProfileGroups
     */
    readonly listAgentProfileGroups: {
      readonly name: "ListAgentProfileGroups",
      readonly I: typeof ListAgentProfileGroupsRequest,
      readonly O: typeof ListAgentProfileGroupsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateAgentProfileGroup updates an AgentProfileGroup. Can only update if user is in same org as AgentProfileGroup
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateAgentProfileGroup
     */
    readonly updateAgentProfileGroup: {
      readonly name: "UpdateAgentProfileGroup",
      readonly I: typeof UpdateAgentProfileGroupRequest,
      readonly O: typeof UpdateAgentProfileGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * CreateAgentProfileGroup creates an AgentProfileGroup. Can only create if user is in same org as AgentProfileGroup
     *
     * @generated from rpc api.v1alpha1.org.Org.CreateAgentProfileGroup
     */
    readonly createAgentProfileGroup: {
      readonly name: "CreateAgentProfileGroup",
      readonly I: typeof CreateAgentProfileGroupRequest,
      readonly O: typeof CreateAgentProfileGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * DeleteAgentProfileGroup deletes an AgentProfileGroup. Can only delete if user is in same org as AgentProfileGroup
     *
     * @generated from rpc api.v1alpha1.org.Org.DeleteAgentProfileGroup
     */
    readonly deleteAgentProfileGroup: {
      readonly name: "DeleteAgentProfileGroup",
      readonly I: typeof DeleteAgentProfileGroupRequest,
      readonly O: typeof DeleteAgentProfileGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * AssignAgentProfileGroups assigns a list of users to an AgentProfileGroup. Can only use if everything is in the same organization.
     *
     * @generated from rpc api.v1alpha1.org.Org.AssignAgentProfileGroups
     */
    readonly assignAgentProfileGroups: {
      readonly name: "AssignAgentProfileGroups",
      readonly I: typeof AssignAgentProfileGroupsRequest,
      readonly O: typeof AssignAgentProfileGroupsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Creates a new user subscription.
     *
     * @generated from rpc api.v1alpha1.org.Org.AddUserSubscription
     */
    readonly addUserSubscription: {
      readonly name: "AddUserSubscription",
      readonly I: typeof AddUserSubscriptionRequest,
      readonly O: typeof AddUserSubscriptionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Creates a new user subscription for a specified user with in requested users org.
     *
     * @generated from rpc api.v1alpha1.org.Org.AddUserSubscriptionByUserId
     */
    readonly addUserSubscriptionByUserId: {
      readonly name: "AddUserSubscriptionByUserId",
      readonly I: typeof AddUserSubscriptionByUserIdRequest,
      readonly O: typeof AddUserSubscriptionByUserIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Gets a user subscription.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetUserSubscription
     */
    readonly getUserSubscription: {
      readonly name: "GetUserSubscription",
      readonly I: typeof GetUserSubscriptionRequest,
      readonly O: typeof GetUserSubscriptionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Gets a user subscription for a specified user with in requested users org.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetUserSubscriptionByUserId
     */
    readonly getUserSubscriptionByUserId: {
      readonly name: "GetUserSubscriptionByUserId",
      readonly I: typeof GetUserSubscriptionByUserIdRequest,
      readonly O: typeof GetUserSubscriptionByUserIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates a user subscription for the current user
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateUserSubscription
     */
    readonly updateUserSubscription: {
      readonly name: "UpdateUserSubscription",
      readonly I: typeof UpdateUserSubscriptionRequest,
      readonly O: typeof UpdateUserSubscriptionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates a user subscription for a given user id
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateUserSubscriptionByUserId
     */
    readonly updateUserSubscriptionByUserId: {
      readonly name: "UpdateUserSubscriptionByUserId",
      readonly I: typeof UpdateUserSubscriptionByUserIdRequest,
      readonly O: typeof UpdateUserSubscriptionByUserIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Remove a user subscription.
     *
     * @generated from rpc api.v1alpha1.org.Org.RemoveUserSubscription
     */
    readonly removeUserSubscription: {
      readonly name: "RemoveUserSubscription",
      readonly I: typeof RemoveUserSubscriptionRequest,
      readonly O: typeof RemoveUserSubscriptionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Remove a user subscription by a given user id
     *
     * @generated from rpc api.v1alpha1.org.Org.RemoveUserSubscriptionByUserId
     */
    readonly removeUserSubscriptionByUserId: {
      readonly name: "RemoveUserSubscriptionByUserId",
      readonly I: typeof RemoveUserSubscriptionByUserIdRequest,
      readonly O: typeof RemoveUserSubscriptionByUserIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Lists user subscriptions.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListUserSubscriptions
     */
    readonly listUserSubscriptions: {
      readonly name: "ListUserSubscriptions",
      readonly I: typeof ListUserSubscriptionsRequest,
      readonly O: typeof ListUserSubscriptionsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Lists user subscriptions.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListUserSubscriptionsByUserId
     */
    readonly listUserSubscriptionsByUserId: {
      readonly name: "ListUserSubscriptionsByUserId",
      readonly I: typeof ListUserSubscriptionsByUserIdRequest,
      readonly O: typeof ListUserSubscriptionsByUserIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Lists subscriptions for multiple users in an org.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListOrgSubscriptions
     */
    readonly listOrgSubscriptions: {
      readonly name: "ListOrgSubscriptions",
      readonly I: typeof ListOrgSubscriptionsRequest,
      readonly O: typeof ListOrgSubscriptionsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetHuntGroupSettings returns the field masked hunt group settings for the
     * provided hunt group.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetHuntGroupSettings
     */
    readonly getHuntGroupSettings: {
      readonly name: "GetHuntGroupSettings",
      readonly I: typeof GetHuntGroupSettingsRequest,
      readonly O: typeof GetHuntGroupSettingsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateHuntGroupSettings updates the selected/masked hunt group settings
     * for the given hunt group.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateHuntGroupSettings
     */
    readonly updateHuntGroupSettings: {
      readonly name: "UpdateHuntGroupSettings",
      readonly I: typeof UpdateHuntGroupSettingsRequest,
      readonly O: typeof UpdateHuntGroupSettingsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Lists caller id numbers with their associated region codes for the given
     * bucket.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListCallerIdBuckets
     */
    readonly listCallerIdBuckets: {
      readonly name: "ListCallerIdBuckets",
      readonly I: typeof ListCallerIdBucketsRequest,
      readonly O: typeof ListCallerIdBucketsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Gets a single data dip template.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetDataDipTemplate
     */
    readonly getDataDipTemplate: {
      readonly name: "GetDataDipTemplate",
      readonly I: typeof GetDataDipTemplateRequest,
      readonly O: typeof GetDataDipTemplateResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Lists data dip templates, optionally filtered by config type.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListDataDipTemplates
     */
    readonly listDataDipTemplates: {
      readonly name: "ListDataDipTemplates",
      readonly I: typeof ListDataDipTemplatesRequest,
      readonly O: typeof ListDataDipTemplatesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Saves a new data dip template.
     *
     * @generated from rpc api.v1alpha1.org.Org.CreateDataDipTemplate
     */
    readonly createDataDipTemplate: {
      readonly name: "CreateDataDipTemplate",
      readonly I: typeof CreateDataDipTemplateRequest,
      readonly O: typeof CreateDataDipTemplateResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Lists Agent Call Response Automatically added compliance rules for an Org.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListAgentResponseAutoRules
     */
    readonly listAgentResponseAutoRules: {
      readonly name: "ListAgentResponseAutoRules",
      readonly I: typeof ListAgentResponseAutoRulesRequest,
      readonly O: typeof ListAgentResponseAutoRulesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Creates a new Agent Call Response Automatically added compliance rule set.
     *
     * @generated from rpc api.v1alpha1.org.Org.CreateAgentResponseAutoRules
     */
    readonly createAgentResponseAutoRules: {
      readonly name: "CreateAgentResponseAutoRules",
      readonly I: typeof CreateAgentResponseAutoRulesRequest,
      readonly O: typeof CreateAgentResponseAutoRulesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates an existing Agent Call Response Automatically added compliance rule set.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateAgentResponseAutoRules
     */
    readonly updateAgentResponseAutoRules: {
      readonly name: "UpdateAgentResponseAutoRules",
      readonly I: typeof UpdateAgentResponseAutoRulesRequest,
      readonly O: typeof UpdateAgentResponseAutoRulesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Deletes an existing Agent Call Response Automatically added compliance rule set.
     *
     * @generated from rpc api.v1alpha1.org.Org.DeleteAgentResponseAutoRules
     */
    readonly deleteAgentResponseAutoRules: {
      readonly name: "DeleteAgentResponseAutoRules",
      readonly I: typeof DeleteAgentResponseAutoRulesRequest,
      readonly O: typeof DeleteAgentResponseAutoRulesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * CreateTrust creates a new trust.
     *
     * @generated from rpc api.v1alpha1.org.Org.CreateTrust
     */
    readonly createTrust: {
      readonly name: "CreateTrust",
      readonly I: typeof CreateTrustRequest,
      readonly O: typeof CreateTrustResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * AcceptTrust accepts an incoming trust.
     *
     * @generated from rpc api.v1alpha1.org.Org.AcceptTrust
     */
    readonly acceptTrust: {
      readonly name: "AcceptTrust",
      readonly I: typeof AcceptTrustRequest,
      readonly O: typeof AcceptTrustResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * RejectTrust rejects an incoming trust.
     *
     * @generated from rpc api.v1alpha1.org.Org.RejectTrust
     */
    readonly rejectTrust: {
      readonly name: "RejectTrust",
      readonly I: typeof RejectTrustRequest,
      readonly O: typeof RejectTrustResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetTrust returns a single trust by trust id.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetTrust
     */
    readonly getTrust: {
      readonly name: "GetTrust",
      readonly I: typeof GetTrustRequest,
      readonly O: typeof GetTrustResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ListIncomingTrusts returns all pending trusts that are being granted
     * to the org of the currently logged in user.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListIncomingTrusts
     */
    readonly listIncomingTrusts: {
      readonly name: "ListIncomingTrusts",
      readonly I: typeof ListIncomingTrustsRequest,
      readonly O: typeof ListIncomingTrustsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ListGivenTrusts returns all trusts that have been given out for
     * the currently logged in user's org. The returned list will contain
     * accepted, pending, and rejected trusts.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListGivenTrusts
     */
    readonly listGivenTrusts: {
      readonly name: "ListGivenTrusts",
      readonly I: typeof ListGivenTrustsRequest,
      readonly O: typeof ListGivenTrustsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ListAssignableTrusts returns all accepted trusts that are being granted
     * to the org of the currently logged in user.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListAssignableTrusts
     */
    readonly listAssignableTrusts: {
      readonly name: "ListAssignableTrusts",
      readonly I: typeof ListAssignableTrustsRequest,
      readonly O: typeof ListAssignableTrustsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * DeleteTrust deletes a trust by trust id. Only trusts where the current
     * org is the grantor can be deleted by this endpoint.
     *
     * @generated from rpc api.v1alpha1.org.Org.DeleteTrust
     */
    readonly deleteTrust: {
      readonly name: "DeleteTrust",
      readonly I: typeof DeleteTrustRequest,
      readonly O: typeof DeleteTrustResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * AssignTrust assigns a trust to the given user ids.
     *
     * @generated from rpc api.v1alpha1.org.Org.AssignTrust
     */
    readonly assignTrust: {
      readonly name: "AssignTrust",
      readonly I: typeof AssignTrustRequest,
      readonly O: typeof AssignTrustResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UnassignTrust unassigns a trust from the given user id.
     *
     * @generated from rpc api.v1alpha1.org.Org.UnassignTrust
     */
    readonly unassignTrust: {
      readonly name: "UnassignTrust",
      readonly I: typeof UnassignTrustRequest,
      readonly O: typeof UnassignTrustResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * CreateLabel creates a label with the given properties.
     *
     * @generated from rpc api.v1alpha1.org.Org.CreateLabel
     */
    readonly createLabel: {
      readonly name: "CreateLabel",
      readonly I: typeof CreateLabelRequest,
      readonly O: typeof CreateLabelResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * DeleteLabel deletes a label with the id given on the request.
     *
     * @generated from rpc api.v1alpha1.org.Org.DeleteLabel
     */
    readonly deleteLabel: {
      readonly name: "DeleteLabel",
      readonly I: typeof DeleteLabelRequest,
      readonly O: typeof DeleteLabelResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ListLabels returns all unique label names belonging to the given org id.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListLabels
     */
    readonly listLabels: {
      readonly name: "ListLabels",
      readonly I: typeof ListLabelsRequest,
      readonly O: typeof ListLabelsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetLabel returns a single label with the given ID.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetLabel
     */
    readonly getLabel: {
      readonly name: "GetLabel",
      readonly I: typeof GetLabelRequest,
      readonly O: typeof GetLabelResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateLabel updates the given label.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateLabel
     */
    readonly updateLabel: {
      readonly name: "UpdateLabel",
      readonly I: typeof UpdateLabelRequest,
      readonly O: typeof UpdateLabelResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Assignlabel creates label assignments defined by the request.
     *
     * @generated from rpc api.v1alpha1.org.Org.AssignLabel
     */
    readonly assignLabel: {
      readonly name: "AssignLabel",
      readonly I: typeof AssignLabelRequest,
      readonly O: typeof AssignLabelResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Unassignlabel removes label assignments defined by the request.
     *
     * @generated from rpc api.v1alpha1.org.Org.UnassignLabel
     */
    readonly unassignLabel: {
      readonly name: "UnassignLabel",
      readonly I: typeof UnassignLabelRequest,
      readonly O: typeof UnassignLabelResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetAssignmentCounts returns the total amount of label assignments
     * per entity type.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetAssignmentCounts
     */
    readonly getAssignmentCounts: {
      readonly name: "GetAssignmentCounts",
      readonly I: typeof GetAssignmentCountsRequest,
      readonly O: typeof GetAssignmentCountsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetAssignableLabels returns a list of labels available to the current user.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetAssignableLabels
     */
    readonly getAssignableLabels: {
      readonly name: "GetAssignableLabels",
      readonly I: typeof GetAssignableLabelsRequest,
      readonly O: typeof GetAssignableLabelsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetPermissions returns the permissions for a given user along with other user information.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetPermissions
     */
    readonly getPermissions: {
      readonly name: "GetPermissions",
      readonly I: typeof GetPermissionsRequest,
      readonly O: typeof GetPermissionsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetUserPermissions returns the permissions for a given user.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetUserPermissions
     */
    readonly getUserPermissions: {
      readonly name: "GetUserPermissions",
      readonly I: typeof GetUserPermissionsRequest,
      readonly O: typeof GetUserPermissionsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Creates a new permission group.
     *
     * @generated from rpc api.v1alpha1.org.Org.CreatePermissionGroup
     */
    readonly createPermissionGroup: {
      readonly name: "CreatePermissionGroup",
      readonly I: typeof CreatePermissionGroupRequest,
      readonly O: typeof CreatePermissionGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdatePermissionGroup updates the permission group with the given id.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdatePermissionGroup
     */
    readonly updatePermissionGroup: {
      readonly name: "UpdatePermissionGroup",
      readonly I: typeof UpdatePermissionGroupRequest,
      readonly O: typeof UpdatePermissionGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * DeletePermissionGroup deletes the permission group with the given id.
     *
     * @generated from rpc api.v1alpha1.org.Org.DeletePermissionGroup
     */
    readonly deletePermissionGroup: {
      readonly name: "DeletePermissionGroup",
      readonly I: typeof DeletePermissionGroupRequest,
      readonly O: typeof DeletePermissionGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ListPermissionGroups returns a list of permissions for an organization.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListPermissionGroups
     */
    readonly listPermissionGroups: {
      readonly name: "ListPermissionGroups",
      readonly I: typeof ListPermissionGroupsRequest,
      readonly O: typeof ListPermissionGroupsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ListPermissionGroupsByOrgId returns a list of permissions for an
     * organization.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListPermissionGroupsByOrgId
     */
    readonly listPermissionGroupsByOrgId: {
      readonly name: "ListPermissionGroupsByOrgId",
      readonly I: typeof ListPermissionGroupsByOrgIdRequest,
      readonly O: typeof ListPermissionGroupsByOrgIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * AssignUsersPermissionGroup returns a user a permission group.
     *
     * @generated from rpc api.v1alpha1.org.Org.AssignUsersPermissionGroup
     */
    readonly assignUsersPermissionGroup: {
      readonly name: "AssignUsersPermissionGroup",
      readonly I: typeof AssignUsersPermissionGroupRequest,
      readonly O: typeof AssignUsersPermissionGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * RevokeUsersPermissionGroup returns a user a permission group.
     *
     * @generated from rpc api.v1alpha1.org.Org.RevokeUsersPermissionGroup
     */
    readonly revokeUsersPermissionGroup: {
      readonly name: "RevokeUsersPermissionGroup",
      readonly I: typeof RevokeUsersPermissionGroupRequest,
      readonly O: typeof RevokeUsersPermissionGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * AssignAccountOwnerPermissionToUser returns a user a permission group.
     *
     * @generated from rpc api.v1alpha1.org.Org.AssignAccountOwnerPermissionToUser
     */
    readonly assignAccountOwnerPermissionToUser: {
      readonly name: "AssignAccountOwnerPermissionToUser",
      readonly I: typeof AssignAccountOwnerPermissionToUserRequest,
      readonly O: typeof AssignAccountOwnerPermissionToUserResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * RevokeAccountOwnerPermissionFromUser returns a user a permission group.
     *
     * @generated from rpc api.v1alpha1.org.Org.RevokeAccountOwnerPermissionFromUser
     */
    readonly revokeAccountOwnerPermissionFromUser: {
      readonly name: "RevokeAccountOwnerPermissionFromUser",
      readonly I: typeof RevokeAccountOwnerPermissionFromUserRequest,
      readonly O: typeof RevokeAccountOwnerPermissionFromUserResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Initializes the default read only permissions group for the
     * given organization.
     *
     * @generated from rpc api.v1alpha1.org.Org.InitDefaultPermissionGroups
     */
    readonly initDefaultPermissionGroups: {
      readonly name: "InitDefaultPermissionGroups",
      readonly I: typeof InitDefaultPermissionGroupsRequest,
      readonly O: typeof InitDefaultPermissionGroupsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetAccountOwnerGroup returns the account owner permission group
     * for an organization.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetAccountOwnerGroup
     */
    readonly getAccountOwnerGroup: {
      readonly name: "GetAccountOwnerGroup",
      readonly I: typeof GetAccountOwnerGroupRequest,
      readonly O: typeof GetAccountOwnerGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetLicenses returns the licenses an organitzation is assigned.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetLicenses
     */
    readonly getLicenses: {
      readonly name: "GetLicenses",
      readonly I: typeof GetLicensesRequest,
      readonly O: typeof GetLicensesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetOrgLicenses returns the licenses assigned to the organization
     * of the user who makes the request.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetOrgLicenses
     */
    readonly getOrgLicenses: {
      readonly name: "GetOrgLicenses",
      readonly I: typeof GetOrgLicensesRequest,
      readonly O: typeof GetOrgLicensesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateLicenses updates an organization's licenses.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateLicenses
     */
    readonly updateLicenses: {
      readonly name: "UpdateLicenses",
      readonly I: typeof UpdateLicensesRequest,
      readonly O: typeof UpdateLicensesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * RemovePermissionFromAllPermissionGroups removes a permission from
     * all permission groups in an organization.
     *
     * @generated from rpc api.v1alpha1.org.Org.RemovePermissionFromAllPermissionGroups
     */
    readonly removePermissionFromAllPermissionGroups: {
      readonly name: "RemovePermissionFromAllPermissionGroups",
      readonly I: typeof RemovePermissionFromAllPermissionGroupsRequest,
      readonly O: typeof RemovePermissionFromAllPermissionGroupsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ListP3PermissionGroups returns the list of p3 permission groups
     * for the user's org.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListP3PermissionGroups
     */
    readonly listP3PermissionGroups: {
      readonly name: "ListP3PermissionGroups",
      readonly I: typeof ListP3PermissionGroupsRequest,
      readonly O: typeof ListP3PermissionGroupsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ListP3PermissionGroupsByOrgId returns the list of p3 permission groups
     * for an org by id.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListP3PermissionGroupsByOrgId
     */
    readonly listP3PermissionGroupsByOrgId: {
      readonly name: "ListP3PermissionGroupsByOrgId",
      readonly I: typeof ListP3PermissionGroupsRequest,
      readonly O: typeof ListP3PermissionGroupsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * CreateP3PermissionGroup creates a new p3 permission group.
     *
     * @generated from rpc api.v1alpha1.org.Org.CreateP3PermissionGroup
     */
    readonly createP3PermissionGroup: {
      readonly name: "CreateP3PermissionGroup",
      readonly I: typeof CreateP3PermissionGroupRequest,
      readonly O: typeof CreateP3PermissionGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateP3PermissionGroup updates an existing p3 permission group.
     * Requires PERMISSION_GROUP_EDIT.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateP3PermissionGroup
     */
    readonly updateP3PermissionGroup: {
      readonly name: "UpdateP3PermissionGroup",
      readonly I: typeof UpdateP3PermissionGroupRequest,
      readonly O: typeof UpdateP3PermissionGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * UpdateP3PermissionGroup updates an existing p3 permission group.
     * CUSTOMER_SUPPORT required for passing in an org id.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateP3PermissionGroupByOrgId
     */
    readonly updateP3PermissionGroupByOrgId: {
      readonly name: "UpdateP3PermissionGroupByOrgId",
      readonly I: typeof UpdateP3PermissionGroupByOrgIdRequest,
      readonly O: typeof UpdateP3PermissionGroupByOrgIdResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * DeleteP3PermissionGroup deletes a p3 permission group.
     *
     * @generated from rpc api.v1alpha1.org.Org.DeleteP3PermissionGroup
     */
    readonly deleteP3PermissionGroup: {
      readonly name: "DeleteP3PermissionGroup",
      readonly I: typeof DeleteP3PermissionGroupRequest,
      readonly O: typeof DeleteP3PermissionGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * AssignUsersP3PermissionGroup assigns a p3 permission group
     * to a list of users.
     *
     * @generated from rpc api.v1alpha1.org.Org.AssignUsersP3PermissionGroup
     */
    readonly assignUsersP3PermissionGroup: {
      readonly name: "AssignUsersP3PermissionGroup",
      readonly I: typeof AssignUsersP3PermissionGroupRequest,
      readonly O: typeof AssignUsersP3PermissionGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * RevokeUsersP3PermissionGroup revokes a p3 permission group
     * from a list of users.
     *
     * @generated from rpc api.v1alpha1.org.Org.RevokeUsersP3PermissionGroup
     */
    readonly revokeUsersP3PermissionGroup: {
      readonly name: "RevokeUsersP3PermissionGroup",
      readonly I: typeof RevokeUsersP3PermissionGroupRequest,
      readonly O: typeof RevokeUsersP3PermissionGroupResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};


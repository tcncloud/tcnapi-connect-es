// @generated by protoc-gen-connect-es v0.13.0
// @generated from file api/v1alpha1/org/service.proto (package api.v1alpha1.org, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { ArchiveOrganizationRequest, ArchiveOrganizationResponse, ConvertOrgToManualRequest, ConvertOrgToManualResponse, CreateOrganizationRequest, CreateOrganizationResponse, GetOrganizationByIdRequest, GetOrganizationByIdResponse, GetOrganizationRequest, GetOrganizationResponse, ListAllOrganizationsGloballyRequest, ListAllOrganizationsGloballyResponse, ListArchivedOrganizationsRequest, ListArchivedOrganizationsResponse, ListOrganizationsByRegionRequest, ListOrganizationsByRegionResponse, ListOwnedOrgsRequest, ListOwnedOrgsResponse, UnArchiveOrganizationRequest, UnArchiveOrganizationResponse, UpdateOrganizationRequest, UpdateOrganizationResponse } from "./organization_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { AcceptLinkbackRecordingTermsRequest, AcceptLinkbackRecordingTermsResponse, AddIntervalToBusinessHoursRequest, AddIntervalToBusinessHoursResponse, ClearEmailUnsubscribeAcknowledgementRequest, ClearEmailUnsubscribeAcknowledgementResponse, CreateBusinessHoursRequest, CreateBusinessHoursResponse, DeleteBusinessHoursRequest, DeleteBusinessHoursResponse, EvaluateBusinessHoursRequest, EvaluateBusinessHoursResponse, GetAdminClientPreferencesRequest, GetAdminClientPreferencesResponse, GetAgentPreferencesRequest, GetAgentPreferencesResponse, GetAuthenticationPreferencesRequest, GetAuthenticationPreferencesResponse, GetBroadcastPreferencesRequest, GetBroadcastPreferencesResponse, GetBusinessHoursRequest, GetBusinessHoursResponse, GetBusinessPreferencesRequest, GetBusinessPreferencesResponse, GetCompliancePreferencesRequest, GetCompliancePreferencesResponse, GetContactPreferencesRequest, GetContactPreferencesResponse, GetDashboardGeneralPreferencesRequest, GetDashboardGeneralPreferencesResponse, GetDashboardQueuePreferencesRequest, GetDashboardQueuePreferencesResponse, GetEmailSmsPreferencesRequest, GetEmailSmsPreferencesResponse, GetEndOfDayPreferencesRequest, GetEndOfDayPreferencesResponse, GetFilterPreferencesRequest, GetFilterPreferencesResponse, GetOrganizationPreferencesRequest, GetOrganizationPreferencesResponse, GetPhonePreferencesRequest, GetPhonePreferencesResponse, GetRecordingPreferencesRequest, GetRecordingPreferencesResponse, GetSchedulePreferencesRequest, GetSchedulePreferencesResponse, GetScorecardsPreferencesRequest, GetScorecardsPreferencesResponse, GetVoiceAnalyticsPreferencesRequest, GetVoiceAnalyticsPreferencesResponse, GetWebhookPreferencesRequest, GetWebhookPreferencesResponse, LinkbackUpdateBroadcastTemplatesRequest, LinkbackUpdateBroadcastTemplatesResponse, ListBusinessHoursRequest, ListBusinessHoursResponse, ListVoiceAnalyticsPreferencesRequest, ListVoiceAnalyticsPreferencesResponse, RecordEmailUnsubscribeAcknowledgementRequest, RecordEmailUnsubscribeAcknowledgementResponse, RemoveIntervalFromBusinessHoursRequest, RemoveIntervalFromBusinessHoursResponse, SetBusinessHoursRequest, SetBusinessHoursResponse, UpdateAdminBusinessPreferencesRequest, UpdateAdminBusinessPreferencesResponse, UpdateAdminClientPreferencesRequest, UpdateAdminClientPreferencesResponse, UpdateAgentPreferencesRequest, UpdateAgentPreferencesResponse, UpdateAuthenticationPreferencesRequest, UpdateAuthenticationPreferencesResponse, UpdateBroadcastPreferencesRequest, UpdateBroadcastPreferencesResponse, UpdateBusinessHoursInfoRequest, UpdateBusinessHoursInfoResponse, UpdateBusinessHoursRequest, UpdateBusinessHoursResponse, UpdateBusinessPreferencesRequest, UpdateBusinessPreferencesResponse, UpdateCompliancePreferencesRequest, UpdateCompliancePreferencesResponse, UpdateContactPreferencesRequest, UpdateContactPreferencesResponse, UpdateDashboardGeneralPreferencesRequest, UpdateDashboardGeneralPreferencesResponse, UpdateDashboardQueuePreferencesRequest, UpdateDashboardQueuePreferencesResponse, UpdateEmailSmsPreferencesRequest, UpdateEmailSmsPreferencesResponse, UpdateEndOfDayPreferencesRequest, UpdateEndOfDayPreferencesResponse, UpdateFilterPreferencesRequest, UpdateFilterPreferencesResponse, UpdateOrganizationPreferencesRequest, UpdateOrganizationPreferencesResponse, UpdatePhonePreferencesRequest, UpdatePhonePreferencesResponse, UpdateRecordingPreferencesRequest, UpdateRecordingPreferencesResponse, UpdateSchedulePreferencesRequest, UpdateSchedulePreferencesResponse, UpdateScorecardsPreferencesRequest, UpdateScorecardsPreferencesResponse, UpdateVoiceAnalyticsPreferencesRequest, UpdateVoiceAnalyticsPreferencesResponse, UpdateWebhookPreferencesRequest, UpdateWebhookPreferencesResponse } from "./preferences_pb.js";
import { CreateDelegatedUserRequest, CreateDelegatedUserResponse, CreatePasswordResetLinkByOrgIdRequest, CreatePasswordResetLinkByOrgIdResponse, CreatePasswordResetLinkRequest, CreatePasswordResetLinkResponse, CreateUserRequest, CreateUserResponse, EnableMyUserMfaRequest, EnableMyUserMfaResponse, EnableUserMfaRequest, EnableUserMfaResponse, GetMyAllowedMfaMethodsRequest, GetMyAllowedMfaMethodsResponse, GetMyUserMfaInfoRequest, GetMyUserMfaInfoResponse, GetMyUserPasswordResetLinkRequest, GetMyUserPasswordResetLinkResponse, GetMyUserRequest, GetMyUserResponse, GetUserByOrgIdRequest, GetUserByOrgIdResponse, GetUserEmailVerifiedByOrgIdRequest, GetUserEmailVerifiedByOrgIdResponse, GetUserEmailVerifiedRequest, GetUserEmailVerifiedResponse, GetUserLoginInfoRequest, GetUserLoginInfoResponse, GetUserMfaInfoRequest, GetUserMfaInfoResponse, GetUserPasswordResetLinkByOrgIdRequest, GetUserPasswordResetLinkByOrgIdResponse, GetUserPasswordResetLinkRequest, GetUserPasswordResetLinkResponse, GetUserRequest, GetUserResponse, GetUserSessionDataRequest, GetUserSessionDataResponse, ListAgentsRequest, ListAgentsResponse, ListPublicUsersRequest, ListPublicUsersResponse, ListUsersByOrgIdRequest, ListUsersByOrgIdResponse, ListUsersByRegionRequest, ListUsersByRegionResponse, ListUsersRequest, ListUsersResponse, RefreshMfaLockoutByOrgIdRequest, RefreshMfaLockoutByOrgIdResponse, RefreshMfaLockoutRequest, RefreshMfaLockoutResponse, ResetMyPasswordRequest, ResetMyPasswordResponse, ResetUserPasswordByOrgIdRequest, ResetUserPasswordByOrgIdResponse, ResetUserPasswordRequest, ResetUserPasswordResponse, SendPasswordResetByOrgIdRequest, SendPasswordResetByOrgIdResponse, SendPasswordResetRequest, SendPasswordResetResponse, SendUserEmailVerificationByOrgIdRequest, SendUserEmailVerificationByOrgIdResponse, SendUserEmailVerificationRequest, SendUserEmailVerificationResponse, SetMfaTypeRequest, SetMfaTypeResponse, SetMyMfaTypeRequest, SetMyMfaTypeResponse, UpdateMyUserRequest, UpdateMyUserResponse, UpdateUserCallerIdRequest, UpdateUserCallerIdResponse, UpdateUserDisabledByOrgIdRequest, UpdateUserDisabledByOrgIdResponse, UpdateUserDisabledRequest, UpdateUserDisabledResponse, UpdateUserLabelsRequest, UpdateUserLabelsResponse, UpdateUserRequest, UpdateUserResponse } from "./user_pb.js";
import { AssignAgentProfileGroupsRequest, AssignAgentProfileGroupsResponse, CreateAgentProfileGroupRequest, CreateAgentProfileGroupResponse, DeleteAgentProfileGroupRequest, DeleteAgentProfileGroupResponse, GetAgentProfileGroupRequest, GetAgentProfileGroupResponse, ListAgentProfileGroupsRequest, ListAgentProfileGroupsResponse, UpdateAgentProfileGroupRequest, UpdateAgentProfileGroupResponse } from "./agent_profile_group_pb.js";
import { AddUserSubscriptionByUserIdRequest, AddUserSubscriptionByUserIdResponse, AddUserSubscriptionRequest, AddUserSubscriptionResponse, GetUserSubscriptionByUserIdRequest, GetUserSubscriptionByUserIdResponse, GetUserSubscriptionRequest, GetUserSubscriptionResponse, ListOrgSubscriptionsRequest, ListOrgSubscriptionsResponse, ListUserSubscriptionsByUserIdRequest, ListUserSubscriptionsByUserIdResponse, ListUserSubscriptionsRequest, ListUserSubscriptionsResponse, RemoveUserSubscriptionByUserIdRequest, RemoveUserSubscriptionByUserIdResponse, RemoveUserSubscriptionRequest, RemoveUserSubscriptionResponse, UpdateUserSubscriptionByUserIdRequest, UpdateUserSubscriptionByUserIdResponse, UpdateUserSubscriptionRequest, UpdateUserSubscriptionResponse } from "./notifications_pb.js";
import { CreateAuthTokenByUserIdRequest, CreateAuthTokenByUserIdResponse, CreateAuthTokenRequest, CreateAuthTokenResponse, DeleteAuthTokenByUserIdRequest, DeleteAuthTokenByUserIdResponse, DeleteAuthTokenRequest, DeleteAuthTokenResponse, ListAuthTokensByUserIdRequest, ListAuthTokensByUserIdResponse, ListAuthTokensRequest, ListAuthTokensResponse, SetAuthTokenExpirationByUserIdRequest, SetAuthTokenExpirationByUserIdResponse, SetAuthTokenExpirationRequest, SetAuthTokenExpirationResponse } from "./auth_token_pb.js";
import { CopyAgentTriggerRequest, CopyAgentTriggerResponse, CopyDataDipTemplateRequest, CopyDataDipTemplateResponse, CopyDataDipTemplateToOrganizationRequest, CopyDataDipTemplateToOrganizationResponse, CopyHuntGroupClientInfoDisplayTemplateRequest, CopyHuntGroupClientInfoDisplayTemplateResponse, CopyHuntGroupWebLinkRequest, CopyHuntGroupWebLinkResponse, CreateAgentResponseAutoRulesRequest, CreateAgentResponseAutoRulesResponse, CreateCampaignClientInfoDisplayTemplateRequest, CreateCampaignClientInfoDisplayTemplateResponse, CreateDataDipTemplateRequest, CreateDataDipTemplateResponse, CreateHuntGroupClientInfoDisplayTemplateRequest, CreateHuntGroupClientInfoDisplayTemplateResponse, CreateHuntGroupRequest, CreateHuntGroupResponse, CreateHuntGroupScriptRequest, CreateHuntGroupScriptResponse, DeleteAgentResponseAutoRulesRequest, DeleteAgentResponseAutoRulesResponse, DeleteDataDipTemplateRequest, DeleteDataDipTemplateResponse, DeleteHuntGroupClientInfoDisplayTemplateRequest, DeleteHuntGroupClientInfoDisplayTemplateResponse, DeleteHuntGroupRequest, DeleteHuntGroupResponse, DeleteHuntGroupScriptRequest, DeleteHuntGroupScriptResponse, GetDataDipTemplateRequest, GetDataDipTemplateResponse, GetHuntGroupClientInfoDisplayTemplateRequest, GetHuntGroupClientInfoDisplayTemplateResponse, GetHuntGroupDetailsRequest, GetHuntGroupDetailsResponse, GetHuntGroupScriptRequest, GetHuntGroupScriptResponse, GetHuntGroupSettingsRequest, GetHuntGroupSettingsResponse, ListAgentResponseAutoRulesRequest, ListAgentResponseAutoRulesResponse, ListAgentTriggersRequest, ListAgentTriggersResponse, ListCallerIdBucketsRequest, ListCallerIdBucketsResponse, ListDataDipTemplatesRequest, ListDataDipTemplatesResponse, ListHuntGroupIntegrationLinksRequest, ListHuntGroupIntegrationLinksResponse, ListHuntGroupsWithClientInfoTemplateDataRequest, ListHuntGroupsWithClientInfoTemplateDataResponse, ListHuntGroupWebLinksRequest, ListHuntGroupWebLinksResponse, UpdateAgentResponseAutoRulesRequest, UpdateAgentResponseAutoRulesResponse, UpdateAgentTriggersRequest, UpdateAgentTriggersResponse, UpdateDataDipTemplateRequest, UpdateDataDipTemplateResponse, UpdateHuntGroupClientInfoDisplayTemplateRequest, UpdateHuntGroupClientInfoDisplayTemplateResponse, UpdateHuntGroupGeneralDetailsRequest, UpdateHuntGroupGeneralDetailsResponse, UpdateHuntGroupScriptRequest, UpdateHuntGroupScriptResponse, UpdateHuntGroupSettingsRequest, UpdateHuntGroupSettingsResponse, UpdateHuntGroupWebLinksRequest, UpdateHuntGroupWebLinksResponse } from "./huntgroup_pb.js";
import { AcceptTrustRequest, AcceptTrustResponse, AssignTrustRequest, AssignTrustResponse, CreateTrustRequest, CreateTrustResponse, DeleteTrustRequest, DeleteTrustResponse, GetTrustRequest, GetTrustResponse, ListAssignableTrustsRequest, ListAssignableTrustsResponse, ListGivenTrustsRequest, ListGivenTrustsResponse, ListIncomingTrustsRequest, ListIncomingTrustsResponse, RejectTrustRequest, RejectTrustResponse, UnassignTrustRequest, UnassignTrustResponse } from "./trusts_pb.js";
import { AssignLabelRequest, AssignLabelResponse, CreateLabelRequest, CreateLabelResponse, DeleteLabelRequest, DeleteLabelResponse, GetAssignableLabelsRequest, GetAssignableLabelsResponse, GetAssignmentCountsRequest, GetAssignmentCountsResponse, GetLabelRequest, GetLabelResponse, ListLabelsRequest, ListLabelsResponse, UnassignLabelRequest, UnassignLabelResponse, UpdateLabelRequest, UpdateLabelResponse } from "./labels_pb.js";
import { AssignAccountOwnerPermissionToUserRequest, AssignAccountOwnerPermissionToUserResponse, AssignUsersPermissionGroupRequest, AssignUsersPermissionGroupResponse, CreatePermissionGroupRequest, CreatePermissionGroupResponse, DeletePermissionGroupRequest, DeletePermissionGroupResponse, GetAccountOwnerGroupRequest, GetAccountOwnerGroupResponse, GetLicensesRequest, GetLicensesResponse, GetOrgLicensesRequest, GetOrgLicensesResponse, GetPermissionsRequest, GetPermissionsResponse, GetUserPermissionsRequest, GetUserPermissionsResponse, InitDefaultPermissionGroupsRequest, InitDefaultPermissionGroupsResponse, ListPermissionGroupsByOrgIdRequest, ListPermissionGroupsByOrgIdResponse, ListPermissionGroupsRequest, ListPermissionGroupsResponse, RemovePermissionFromAllPermissionGroupsRequest, RemovePermissionFromAllPermissionGroupsResponse, RevokeAccountOwnerPermissionFromUserRequest, RevokeAccountOwnerPermissionFromUserResponse, RevokeUsersPermissionGroupRequest, RevokeUsersPermissionGroupResponse, UpdateLicensesRequest, UpdateLicensesResponse, UpdatePermissionGroupRequest, UpdatePermissionGroupResponse } from "./permissions_pb.js";
import { AssignUsersP3PermissionGroupRequest, AssignUsersP3PermissionGroupResponse, CreateP3PermissionGroupRequest, CreateP3PermissionGroupResponse, DeleteP3PermissionGroupRequest, DeleteP3PermissionGroupResponse, ListP3PermissionGroupsRequest, ListP3PermissionGroupsResponse, RevokeUsersP3PermissionGroupRequest, RevokeUsersP3PermissionGroupResponse, UpdateP3PermissionGroupByOrgIdRequest, UpdateP3PermissionGroupByOrgIdResponse, UpdateP3PermissionGroupRequest, UpdateP3PermissionGroupResponse } from "./p3_permissions_pb.js";

/**
 * ORGANIZATION
 *
 * @generated from service api.v1alpha1.org.Org
 */
export const Org = {
  typeName: "api.v1alpha1.org.Org",
  methods: {
    /**
     * CreateOrganization creates a new organization entity and enables it for the
     * region it is getting created in.
     *
     * @generated from rpc api.v1alpha1.org.Org.CreateOrganization
     */
    createOrganization: {
      name: "CreateOrganization",
      I: CreateOrganizationRequest,
      O: CreateOrganizationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetOrganization returns a single organization.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetOrganization
     */
    getOrganization: {
      name: "GetOrganization",
      I: GetOrganizationRequest,
      O: GetOrganizationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetOrganizationById returns a single organization by a given orgId.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetOrganizationById
     */
    getOrganizationById: {
      name: "GetOrganizationById",
      I: GetOrganizationByIdRequest,
      O: GetOrganizationByIdResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateOrganization updates the mutable fields on the Organization entity
     * using the provided field mask.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateOrganization
     */
    updateOrganization: {
      name: "UpdateOrganization",
      I: UpdateOrganizationRequest,
      O: UpdateOrganizationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Archives an organization. An archived organization effectively disappears, but isn't deleted.
     *
     * @generated from rpc api.v1alpha1.org.Org.ArchiveOrganization
     */
    archiveOrganization: {
      name: "ArchiveOrganization",
      I: ArchiveOrganizationRequest,
      O: ArchiveOrganizationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Unarchives an organization. An archived organization effectively disappears, but isn't deleted.
     *
     * @generated from rpc api.v1alpha1.org.Org.UnArchiveOrganization
     */
    unArchiveOrganization: {
      name: "UnArchiveOrganization",
      I: UnArchiveOrganizationRequest,
      O: UnArchiveOrganizationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListAllOrganizationsGlobally lists all organizations globally (archived and unarchived).
     *
     * @generated from rpc api.v1alpha1.org.Org.ListAllOrganizationsGlobally
     */
    listAllOrganizationsGlobally: {
      name: "ListAllOrganizationsGlobally",
      I: ListAllOrganizationsGloballyRequest,
      O: ListAllOrganizationsGloballyResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * ListOrganizationsByRegion lists organizations in the given region (unarchived).
     *
     * @generated from rpc api.v1alpha1.org.Org.ListOrganizationsByRegion
     */
    listOrganizationsByRegion: {
      name: "ListOrganizationsByRegion",
      I: ListOrganizationsByRegionRequest,
      O: ListOrganizationsByRegionResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * ListArchivedOrganizations lists all archived organizations in the current region.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListArchivedOrganizations
     */
    listArchivedOrganizations: {
      name: "ListArchivedOrganizations",
      I: ListArchivedOrganizationsRequest,
      O: ListArchivedOrganizationsResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * ConvertOrgToManual converts an organization to manual only by org id.
     *
     * @generated from rpc api.v1alpha1.org.Org.ConvertOrgToManual
     */
    convertOrgToManual: {
      name: "ConvertOrgToManual",
      I: ConvertOrgToManualRequest,
      O: ConvertOrgToManualResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Lists all orgs under the p3 hierarchy
     *
     * @generated from rpc api.v1alpha1.org.Org.ListOwnedOrgs
     */
    listOwnedOrgs: {
      name: "ListOwnedOrgs",
      I: ListOwnedOrgsRequest,
      O: ListOwnedOrgsResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * GetOrganizationPreferences returns general preferences controlling basic
     * organization related properties.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetOrganizationPreferences
     */
    getOrganizationPreferences: {
      name: "GetOrganizationPreferences",
      I: GetOrganizationPreferencesRequest,
      O: GetOrganizationPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateOrganizationPreferences updates general preferences controlling basic
     * organization related properties.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateOrganizationPreferences
     */
    updateOrganizationPreferences: {
      name: "UpdateOrganizationPreferences",
      I: UpdateOrganizationPreferencesRequest,
      O: UpdateOrganizationPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetAgentPreferences returns preferences controlling direct agent properties.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetAgentPreferences
     */
    getAgentPreferences: {
      name: "GetAgentPreferences",
      I: GetAgentPreferencesRequest,
      O: GetAgentPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateAgentPreferences updates preferences controlling direct agent
     * properties.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateAgentPreferences
     */
    updateAgentPreferences: {
      name: "UpdateAgentPreferences",
      I: UpdateAgentPreferencesRequest,
      O: UpdateAgentPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetContactPreferences returns preferences for contact lists.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetContactPreferences
     */
    getContactPreferences: {
      name: "GetContactPreferences",
      I: GetContactPreferencesRequest,
      O: GetContactPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateContactPreferences updates preferences for contact lists.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateContactPreferences
     */
    updateContactPreferences: {
      name: "UpdateContactPreferences",
      I: UpdateContactPreferencesRequest,
      O: UpdateContactPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetAuthenticationPreferences returns preferences for controlling the
     *
     * @generated from rpc api.v1alpha1.org.Org.GetAuthenticationPreferences
     */
    getAuthenticationPreferences: {
      name: "GetAuthenticationPreferences",
      I: GetAuthenticationPreferencesRequest,
      O: GetAuthenticationPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateAuthenticationPreferences updates preferences for controlling the
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateAuthenticationPreferences
     */
    updateAuthenticationPreferences: {
      name: "UpdateAuthenticationPreferences",
      I: UpdateAuthenticationPreferencesRequest,
      O: UpdateAuthenticationPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetWebhookPreferences returns preferences for web-hook push URLs.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetWebhookPreferences
     */
    getWebhookPreferences: {
      name: "GetWebhookPreferences",
      I: GetWebhookPreferencesRequest,
      O: GetWebhookPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateWebhookPreferences updates preferences for web-hook push URLs.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateWebhookPreferences
     */
    updateWebhookPreferences: {
      name: "UpdateWebhookPreferences",
      I: UpdateWebhookPreferencesRequest,
      O: UpdateWebhookPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetDashboardGeneralPreferences returns preferences for agent dashboard
     * controls.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetDashboardGeneralPreferences
     */
    getDashboardGeneralPreferences: {
      name: "GetDashboardGeneralPreferences",
      I: GetDashboardGeneralPreferencesRequest,
      O: GetDashboardGeneralPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateDashboardGeneralPreferences updates preferences for agent dashboard
     * controls.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateDashboardGeneralPreferences
     */
    updateDashboardGeneralPreferences: {
      name: "UpdateDashboardGeneralPreferences",
      I: UpdateDashboardGeneralPreferencesRequest,
      O: UpdateDashboardGeneralPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetDashboardQueuePreferences returns preferences for controlling agent queue
     * and hold table settings.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetDashboardQueuePreferences
     */
    getDashboardQueuePreferences: {
      name: "GetDashboardQueuePreferences",
      I: GetDashboardQueuePreferencesRequest,
      O: GetDashboardQueuePreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateDashboardQueuePreferences updates preferences for controlling agent
     * queue and hold table settings.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateDashboardQueuePreferences
     */
    updateDashboardQueuePreferences: {
      name: "UpdateDashboardQueuePreferences",
      I: UpdateDashboardQueuePreferencesRequest,
      O: UpdateDashboardQueuePreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetPhonePreferences returns preferences for phone dial options, call ID,
     * and other call properties.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetPhonePreferences
     */
    getPhonePreferences: {
      name: "GetPhonePreferences",
      I: GetPhonePreferencesRequest,
      O: GetPhonePreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdatePhonePreferences updates preferences for phone dial options, call ID,
     * and other call properties.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdatePhonePreferences
     */
    updatePhonePreferences: {
      name: "UpdatePhonePreferences",
      I: UpdatePhonePreferencesRequest,
      O: UpdatePhonePreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetCompliancePreferences returns preferences for natural language compliance
     * campaign settings.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetCompliancePreferences
     */
    getCompliancePreferences: {
      name: "GetCompliancePreferences",
      I: GetCompliancePreferencesRequest,
      O: GetCompliancePreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateCompliancePreferences updates preferences for natural language
     * compliance campaign settings.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateCompliancePreferences
     */
    updateCompliancePreferences: {
      name: "UpdateCompliancePreferences",
      I: UpdateCompliancePreferencesRequest,
      O: UpdateCompliancePreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetBroadcastPreferences returns preferences for editing templates and
     * broadcast scheduling properties.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetBroadcastPreferences
     */
    getBroadcastPreferences: {
      name: "GetBroadcastPreferences",
      I: GetBroadcastPreferencesRequest,
      O: GetBroadcastPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateBroadcastPreferences updates preferences for editing templates and
     * broadcast scheduling properties.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateBroadcastPreferences
     */
    updateBroadcastPreferences: {
      name: "UpdateBroadcastPreferences",
      I: UpdateBroadcastPreferencesRequest,
      O: UpdateBroadcastPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetSchedulePreferences returns preferences for editing campaign scheduling
     * properties.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetSchedulePreferences
     */
    getSchedulePreferences: {
      name: "GetSchedulePreferences",
      I: GetSchedulePreferencesRequest,
      O: GetSchedulePreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateSchedulePreferences updates preferences for editing campaign
     * scheduling properties.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateSchedulePreferences
     */
    updateSchedulePreferences: {
      name: "UpdateSchedulePreferences",
      I: UpdateSchedulePreferencesRequest,
      O: UpdateSchedulePreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetEmailSmsPreferences returns preferences for email and SMS management.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetEmailSmsPreferences
     */
    getEmailSmsPreferences: {
      name: "GetEmailSmsPreferences",
      I: GetEmailSmsPreferencesRequest,
      O: GetEmailSmsPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateEmailSmsPreferences updates preferences for email and SMS management.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateEmailSmsPreferences
     */
    updateEmailSmsPreferences: {
      name: "UpdateEmailSmsPreferences",
      I: UpdateEmailSmsPreferencesRequest,
      O: UpdateEmailSmsPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetBusinessPreferences returns preferences for business intelligence.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetBusinessPreferences
     */
    getBusinessPreferences: {
      name: "GetBusinessPreferences",
      I: GetBusinessPreferencesRequest,
      O: GetBusinessPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateBusinessPreferences updates preferences for business intelligence.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateBusinessPreferences
     */
    updateBusinessPreferences: {
      name: "UpdateBusinessPreferences",
      I: UpdateBusinessPreferencesRequest,
      O: UpdateBusinessPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateAdminBusinessPreferences updates preferences for business intelligence.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateAdminBusinessPreferences
     */
    updateAdminBusinessPreferences: {
      name: "UpdateAdminBusinessPreferences",
      I: UpdateAdminBusinessPreferencesRequest,
      O: UpdateAdminBusinessPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetScorecardsPreferences returns preferences for scorecards.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetScorecardsPreferences
     */
    getScorecardsPreferences: {
      name: "GetScorecardsPreferences",
      I: GetScorecardsPreferencesRequest,
      O: GetScorecardsPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateScorecardsPreferences updates preferences for scorecards.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateScorecardsPreferences
     */
    updateScorecardsPreferences: {
      name: "UpdateScorecardsPreferences",
      I: UpdateScorecardsPreferencesRequest,
      O: UpdateScorecardsPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetVoiceAnalyticsPreferences returns preferences for voice analytics.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetVoiceAnalyticsPreferences
     */
    getVoiceAnalyticsPreferences: {
      name: "GetVoiceAnalyticsPreferences",
      I: GetVoiceAnalyticsPreferencesRequest,
      O: GetVoiceAnalyticsPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListVoiceAnalyticsPreferences lists preferences for voice analytics.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListVoiceAnalyticsPreferences
     */
    listVoiceAnalyticsPreferences: {
      name: "ListVoiceAnalyticsPreferences",
      I: ListVoiceAnalyticsPreferencesRequest,
      O: ListVoiceAnalyticsPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateVoiceAnalyticsPreferences updates preferences for voice analytics.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateVoiceAnalyticsPreferences
     */
    updateVoiceAnalyticsPreferences: {
      name: "UpdateVoiceAnalyticsPreferences",
      I: UpdateVoiceAnalyticsPreferencesRequest,
      O: UpdateVoiceAnalyticsPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetEndOfDayPreferences returns preferences for automated report jobs
     *
     * @generated from rpc api.v1alpha1.org.Org.GetEndOfDayPreferences
     */
    getEndOfDayPreferences: {
      name: "GetEndOfDayPreferences",
      I: GetEndOfDayPreferencesRequest,
      O: GetEndOfDayPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateEndOfDayPreferences updates preferences for automated report jobs
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateEndOfDayPreferences
     */
    updateEndOfDayPreferences: {
      name: "UpdateEndOfDayPreferences",
      I: UpdateEndOfDayPreferencesRequest,
      O: UpdateEndOfDayPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetReportFilterPreferences returns preferences for filters in reports and
     *
     * @generated from rpc api.v1alpha1.org.Org.GetReportFilterPreferences
     */
    getReportFilterPreferences: {
      name: "GetReportFilterPreferences",
      I: GetFilterPreferencesRequest,
      O: GetFilterPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateReportFilterPreferences updates preferences for filters in reports and
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateReportFilterPreferences
     */
    updateReportFilterPreferences: {
      name: "UpdateReportFilterPreferences",
      I: UpdateFilterPreferencesRequest,
      O: UpdateFilterPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetRecordingPreferences returns preferences for audio recording properties.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetRecordingPreferences
     */
    getRecordingPreferences: {
      name: "GetRecordingPreferences",
      I: GetRecordingPreferencesRequest,
      O: GetRecordingPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateRecordingPreferences updates preferences for audio recording
     * properties.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateRecordingPreferences
     */
    updateRecordingPreferences: {
      name: "UpdateRecordingPreferences",
      I: UpdateRecordingPreferencesRequest,
      O: UpdateRecordingPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetAdminClientPreferences returns preferences for essential organization
     * properties only to be used by account managers and customer support.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetAdminClientPreferences
     */
    getAdminClientPreferences: {
      name: "GetAdminClientPreferences",
      I: GetAdminClientPreferencesRequest,
      O: GetAdminClientPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateAdminClientPreferences updates preferences for essential organization
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateAdminClientPreferences
     */
    updateAdminClientPreferences: {
      name: "UpdateAdminClientPreferences",
      I: UpdateAdminClientPreferencesRequest,
      O: UpdateAdminClientPreferencesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * AcceptLinkbackRecordingTerms insert a digital signature acceptance activity
     * log upon client acknowledgement of terms and conditions usage for linkback
     * recorded calls.
     *
     * @generated from rpc api.v1alpha1.org.Org.AcceptLinkbackRecordingTerms
     */
    acceptLinkbackRecordingTerms: {
      name: "AcceptLinkbackRecordingTerms",
      I: AcceptLinkbackRecordingTermsRequest,
      O: AcceptLinkbackRecordingTermsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * LinkbackUpdateBroadcastTemplates updates broadcast template options action
     * parameters to reflect the linkback recording usage value.
     *
     * @generated from rpc api.v1alpha1.org.Org.LinkbackUpdateBroadcastTemplates
     */
    linkbackUpdateBroadcastTemplates: {
      name: "LinkbackUpdateBroadcastTemplates",
      I: LinkbackUpdateBroadcastTemplatesRequest,
      O: LinkbackUpdateBroadcastTemplatesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * RecordEmailUnsubscribeAcknowledgement insert an activity log upon client
     * acknowledgement of responsibility for their own email unsubscribe links.
     *
     * @generated from rpc api.v1alpha1.org.Org.RecordEmailUnsubscribeAcknowledgement
     */
    recordEmailUnsubscribeAcknowledgement: {
      name: "RecordEmailUnsubscribeAcknowledgement",
      I: RecordEmailUnsubscribeAcknowledgementRequest,
      O: RecordEmailUnsubscribeAcknowledgementResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ClearEmailUnsubscribeAcknowledgement insert an activity log upon the client
     * revoking their responsibility for email unsubscribe links.
     *
     * @generated from rpc api.v1alpha1.org.Org.ClearEmailUnsubscribeAcknowledgement
     */
    clearEmailUnsubscribeAcknowledgement: {
      name: "ClearEmailUnsubscribeAcknowledgement",
      I: ClearEmailUnsubscribeAcknowledgementRequest,
      O: ClearEmailUnsubscribeAcknowledgementResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListBusinessHours returns all business hours for an Org.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListBusinessHours
     * @deprecated
     */
    listBusinessHours: {
      name: "ListBusinessHours",
      I: ListBusinessHoursRequest,
      O: ListBusinessHoursResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetBusinessHours returns the business hours for the ID.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetBusinessHours
     * @deprecated
     */
    getBusinessHours: {
      name: "GetBusinessHours",
      I: GetBusinessHoursRequest,
      O: GetBusinessHoursResponse,
      kind: MethodKind.Unary,
    },
    /**
     * SetBusinessHours initializes a business hours object
     *
     * @generated from rpc api.v1alpha1.org.Org.SetBusinessHours
     * @deprecated
     */
    setBusinessHours: {
      name: "SetBusinessHours",
      I: SetBusinessHoursRequest,
      O: SetBusinessHoursResponse,
      kind: MethodKind.Unary,
    },
    /**
     * AddIntervalToBusinessHours adds a day interval to a business hours object
     *
     * @generated from rpc api.v1alpha1.org.Org.AddIntervalToBusinessHours
     * @deprecated
     */
    addIntervalToBusinessHours: {
      name: "AddIntervalToBusinessHours",
      I: AddIntervalToBusinessHoursRequest,
      O: AddIntervalToBusinessHoursResponse,
      kind: MethodKind.Unary,
    },
    /**
     * RemoveIntervalFromBusinessHours removes a day interval from a business hours object
     *
     * @generated from rpc api.v1alpha1.org.Org.RemoveIntervalFromBusinessHours
     * @deprecated
     */
    removeIntervalFromBusinessHours: {
      name: "RemoveIntervalFromBusinessHours",
      I: RemoveIntervalFromBusinessHoursRequest,
      O: RemoveIntervalFromBusinessHoursResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateBusinessHoursInfo updates the general info of a business hours object
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateBusinessHoursInfo
     * @deprecated
     */
    updateBusinessHoursInfo: {
      name: "UpdateBusinessHoursInfo",
      I: UpdateBusinessHoursInfoRequest,
      O: UpdateBusinessHoursInfoResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteBusinessHours removes business hours.
     *
     * @generated from rpc api.v1alpha1.org.Org.DeleteBusinessHours
     * @deprecated
     */
    deleteBusinessHours: {
      name: "DeleteBusinessHours",
      I: DeleteBusinessHoursRequest,
      O: DeleteBusinessHoursResponse,
      kind: MethodKind.Unary,
    },
    /**
     * EvaluateBusinessHours determines whether or not the current time is within a business hours day interval
     *
     * @generated from rpc api.v1alpha1.org.Org.EvaluateBusinessHours
     * @deprecated
     */
    evaluateBusinessHours: {
      name: "EvaluateBusinessHours",
      I: EvaluateBusinessHoursRequest,
      O: EvaluateBusinessHoursResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CreateUser creates a new user and enables it for the region it is getting created in.
     *
     * @generated from rpc api.v1alpha1.org.Org.CreateUser
     */
    createUser: {
      name: "CreateUser",
      I: CreateUserRequest,
      O: CreateUserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CreateDelegatedUser creates a new delegated user and enables it for the region it is getting created in.
     *
     * @generated from rpc api.v1alpha1.org.Org.CreateDelegatedUser
     */
    createDelegatedUser: {
      name: "CreateDelegatedUser",
      I: CreateDelegatedUserRequest,
      O: CreateDelegatedUserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetMyUser returns a single user by UserId or by AgentSid.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetMyUser
     */
    getMyUser: {
      name: "GetMyUser",
      I: GetMyUserRequest,
      O: GetMyUserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetUser returns a single user by UserId or by AgentSid.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetUser
     */
    getUser: {
      name: "GetUser",
      I: GetUserRequest,
      O: GetUserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetUserByOrgId returns a single user by UserId and OrgId
     * Requires Customer Support permission and allows cross Org requests.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetUserByOrgId
     */
    getUserByOrgId: {
      name: "GetUserByOrgId",
      I: GetUserByOrgIdRequest,
      O: GetUserByOrgIdResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListAgents returns a list of Agents.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListAgents
     */
    listAgents: {
      name: "ListAgents",
      I: ListAgentsRequest,
      O: ListAgentsResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * ListPublicUsers returns a list of users with limited data for most applications.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListPublicUsers
     */
    listPublicUsers: {
      name: "ListPublicUsers",
      I: ListPublicUsersRequest,
      O: ListPublicUsersResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * ListUsers returns a list of users.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListUsers
     */
    listUsers: {
      name: "ListUsers",
      I: ListUsersRequest,
      O: ListUsersResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * ListUsersByOrgId returns a list of users.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListUsersByOrgId
     */
    listUsersByOrgId: {
      name: "ListUsersByOrgId",
      I: ListUsersByOrgIdRequest,
      O: ListUsersByOrgIdResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * ListUsersByRegion returns a list of usersByRegion.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListUsersByRegion
     */
    listUsersByRegion: {
      name: "ListUsersByRegion",
      I: ListUsersByRegionRequest,
      O: ListUsersByRegionResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * UpdateMyUser updates a user.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateMyUser
     */
    updateMyUser: {
      name: "UpdateMyUser",
      I: UpdateMyUserRequest,
      O: UpdateMyUserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateUser updates a user.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateUser
     */
    updateUser: {
      name: "UpdateUser",
      I: UpdateUserRequest,
      O: UpdateUserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateUserLabels updates a user's labels to be the passed in set of labels.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateUserLabels
     */
    updateUserLabels: {
      name: "UpdateUserLabels",
      I: UpdateUserLabelsRequest,
      O: UpdateUserLabelsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateUserCallerId updates a user.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateUserCallerId
     */
    updateUserCallerId: {
      name: "UpdateUserCallerId",
      I: UpdateUserCallerIdRequest,
      O: UpdateUserCallerIdResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateUserDisabled updates whether a user is disabled.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateUserDisabled
     */
    updateUserDisabled: {
      name: "UpdateUserDisabled",
      I: UpdateUserDisabledRequest,
      O: UpdateUserDisabledResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateUserDisabledByOrgId updates a user is disabled.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateUserDisabledByOrgId
     */
    updateUserDisabledByOrgId: {
      name: "UpdateUserDisabledByOrgId",
      I: UpdateUserDisabledByOrgIdRequest,
      O: UpdateUserDisabledByOrgIdResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetMyUserPasswordResetLink updates a user's password.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetMyUserPasswordResetLink
     */
    getMyUserPasswordResetLink: {
      name: "GetMyUserPasswordResetLink",
      I: GetMyUserPasswordResetLinkRequest,
      O: GetMyUserPasswordResetLinkResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetUserPasswordResetLink gets a link to update a user's password.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetUserPasswordResetLink
     */
    getUserPasswordResetLink: {
      name: "GetUserPasswordResetLink",
      I: GetUserPasswordResetLinkRequest,
      O: GetUserPasswordResetLinkResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetUserPasswordResetLinkByOrgId gets a link to update a user's password.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetUserPasswordResetLinkByOrgId
     */
    getUserPasswordResetLinkByOrgId: {
      name: "GetUserPasswordResetLinkByOrgId",
      I: GetUserPasswordResetLinkByOrgIdRequest,
      O: GetUserPasswordResetLinkByOrgIdResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CreatePasswordResetLink creates a password reset link for the given user id.
     *
     * @generated from rpc api.v1alpha1.org.Org.CreatePasswordResetLink
     */
    createPasswordResetLink: {
      name: "CreatePasswordResetLink",
      I: CreatePasswordResetLinkRequest,
      O: CreatePasswordResetLinkResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CreatePasswordResetLinkByOrgId creates a password reset link for the given user id.
     *
     * @generated from rpc api.v1alpha1.org.Org.CreatePasswordResetLinkByOrgId
     */
    createPasswordResetLinkByOrgId: {
      name: "CreatePasswordResetLinkByOrgId",
      I: CreatePasswordResetLinkByOrgIdRequest,
      O: CreatePasswordResetLinkByOrgIdResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Used to be called GetUserBlocked
     * GetUserLoginInfo gets information about a user's login.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetUserLoginInfo
     */
    getUserLoginInfo: {
      name: "GetUserLoginInfo",
      I: GetUserLoginInfoRequest,
      O: GetUserLoginInfoResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetUserEmailVerified gets whether the user's email is verified.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetUserEmailVerified
     */
    getUserEmailVerified: {
      name: "GetUserEmailVerified",
      I: GetUserEmailVerifiedRequest,
      O: GetUserEmailVerifiedResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetUserEmailVerifiedByOrgId gets whether the user's email is verified.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetUserEmailVerifiedByOrgId
     */
    getUserEmailVerifiedByOrgId: {
      name: "GetUserEmailVerifiedByOrgId",
      I: GetUserEmailVerifiedByOrgIdRequest,
      O: GetUserEmailVerifiedByOrgIdResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ResetMyPassword resets the user's password.
     *
     * @generated from rpc api.v1alpha1.org.Org.ResetMyPassword
     */
    resetMyPassword: {
      name: "ResetMyPassword",
      I: ResetMyPasswordRequest,
      O: ResetMyPasswordResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ResetUserPassword resets the user's password.
     *
     * @generated from rpc api.v1alpha1.org.Org.ResetUserPassword
     */
    resetUserPassword: {
      name: "ResetUserPassword",
      I: ResetUserPasswordRequest,
      O: ResetUserPasswordResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ResetUserPasswordByOrgId resets the user's password.
     *
     * @generated from rpc api.v1alpha1.org.Org.ResetUserPasswordByOrgId
     */
    resetUserPasswordByOrgId: {
      name: "ResetUserPasswordByOrgId",
      I: ResetUserPasswordByOrgIdRequest,
      O: ResetUserPasswordByOrgIdResponse,
      kind: MethodKind.Unary,
    },
    /**
     * SendUserEmailVerification sends a verification email to the user.
     *
     * @generated from rpc api.v1alpha1.org.Org.SendUserEmailVerification
     */
    sendUserEmailVerification: {
      name: "SendUserEmailVerification",
      I: SendUserEmailVerificationRequest,
      O: SendUserEmailVerificationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * SendUserEmailVerificationByOrgId sends a verification email to the user.
     *
     * @generated from rpc api.v1alpha1.org.Org.SendUserEmailVerificationByOrgId
     */
    sendUserEmailVerificationByOrgId: {
      name: "SendUserEmailVerificationByOrgId",
      I: SendUserEmailVerificationByOrgIdRequest,
      O: SendUserEmailVerificationByOrgIdResponse,
      kind: MethodKind.Unary,
    },
    /**
     * SendPasswordReset sends a password reset email to the user.
     *
     * @generated from rpc api.v1alpha1.org.Org.SendPasswordReset
     */
    sendPasswordReset: {
      name: "SendPasswordReset",
      I: SendPasswordResetRequest,
      O: SendPasswordResetResponse,
      kind: MethodKind.Unary,
    },
    /**
     * SendPasswordResetByOrgId sends a password reset email to the user.
     *
     * @generated from rpc api.v1alpha1.org.Org.SendPasswordResetByOrgId
     */
    sendPasswordResetByOrgId: {
      name: "SendPasswordResetByOrgId",
      I: SendPasswordResetByOrgIdRequest,
      O: SendPasswordResetByOrgIdResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetUserSessionData returns data for the front end's session state
     *
     * @generated from rpc api.v1alpha1.org.Org.GetUserSessionData
     */
    getUserSessionData: {
      name: "GetUserSessionData",
      I: GetUserSessionDataRequest,
      O: GetUserSessionDataResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetAgentProfileGroup returns an agent profile group by id
     *
     * @generated from rpc api.v1alpha1.org.Org.GetAgentProfileGroup
     */
    getAgentProfileGroup: {
      name: "GetAgentProfileGroup",
      I: GetAgentProfileGroupRequest,
      O: GetAgentProfileGroupResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListAgentProfileGroups returns the agent profile groups associated with the current organization
     *
     * @generated from rpc api.v1alpha1.org.Org.ListAgentProfileGroups
     */
    listAgentProfileGroups: {
      name: "ListAgentProfileGroups",
      I: ListAgentProfileGroupsRequest,
      O: ListAgentProfileGroupsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateAgentProfileGroup updates an AgentProfileGroup. Can only update if user is in same org as AgentProfileGroup
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateAgentProfileGroup
     */
    updateAgentProfileGroup: {
      name: "UpdateAgentProfileGroup",
      I: UpdateAgentProfileGroupRequest,
      O: UpdateAgentProfileGroupResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CreateAgentProfileGroup creates an AgentProfileGroup. Can only create if user is in same org as AgentProfileGroup
     *
     * @generated from rpc api.v1alpha1.org.Org.CreateAgentProfileGroup
     */
    createAgentProfileGroup: {
      name: "CreateAgentProfileGroup",
      I: CreateAgentProfileGroupRequest,
      O: CreateAgentProfileGroupResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteAgentProfileGroup deletes an AgentProfileGroup. Can only delete if user is in same org as AgentProfileGroup
     *
     * @generated from rpc api.v1alpha1.org.Org.DeleteAgentProfileGroup
     */
    deleteAgentProfileGroup: {
      name: "DeleteAgentProfileGroup",
      I: DeleteAgentProfileGroupRequest,
      O: DeleteAgentProfileGroupResponse,
      kind: MethodKind.Unary,
    },
    /**
     * AssignAgentProfileGroups assigns a list of users to an AgentProfileGroup. Can only use if everything is in the same organization.
     *
     * @generated from rpc api.v1alpha1.org.Org.AssignAgentProfileGroups
     */
    assignAgentProfileGroups: {
      name: "AssignAgentProfileGroups",
      I: AssignAgentProfileGroupsRequest,
      O: AssignAgentProfileGroupsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Creates a new user subscription.
     *
     * @generated from rpc api.v1alpha1.org.Org.AddUserSubscription
     */
    addUserSubscription: {
      name: "AddUserSubscription",
      I: AddUserSubscriptionRequest,
      O: AddUserSubscriptionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Creates a new user subscription for a specified user with in requested users org.
     *
     * @generated from rpc api.v1alpha1.org.Org.AddUserSubscriptionByUserId
     */
    addUserSubscriptionByUserId: {
      name: "AddUserSubscriptionByUserId",
      I: AddUserSubscriptionByUserIdRequest,
      O: AddUserSubscriptionByUserIdResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Gets a user subscription.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetUserSubscription
     */
    getUserSubscription: {
      name: "GetUserSubscription",
      I: GetUserSubscriptionRequest,
      O: GetUserSubscriptionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Gets a user subscription for a specified user with in requested users org.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetUserSubscriptionByUserId
     */
    getUserSubscriptionByUserId: {
      name: "GetUserSubscriptionByUserId",
      I: GetUserSubscriptionByUserIdRequest,
      O: GetUserSubscriptionByUserIdResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Updates a user subscription for the current user
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateUserSubscription
     */
    updateUserSubscription: {
      name: "UpdateUserSubscription",
      I: UpdateUserSubscriptionRequest,
      O: UpdateUserSubscriptionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Updates a user subscription for a given user id
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateUserSubscriptionByUserId
     */
    updateUserSubscriptionByUserId: {
      name: "UpdateUserSubscriptionByUserId",
      I: UpdateUserSubscriptionByUserIdRequest,
      O: UpdateUserSubscriptionByUserIdResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Remove a user subscription.
     *
     * @generated from rpc api.v1alpha1.org.Org.RemoveUserSubscription
     */
    removeUserSubscription: {
      name: "RemoveUserSubscription",
      I: RemoveUserSubscriptionRequest,
      O: RemoveUserSubscriptionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Remove a user subscription by a given user id
     *
     * @generated from rpc api.v1alpha1.org.Org.RemoveUserSubscriptionByUserId
     */
    removeUserSubscriptionByUserId: {
      name: "RemoveUserSubscriptionByUserId",
      I: RemoveUserSubscriptionByUserIdRequest,
      O: RemoveUserSubscriptionByUserIdResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Lists user subscriptions.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListUserSubscriptions
     */
    listUserSubscriptions: {
      name: "ListUserSubscriptions",
      I: ListUserSubscriptionsRequest,
      O: ListUserSubscriptionsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Lists user subscriptions.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListUserSubscriptionsByUserId
     */
    listUserSubscriptionsByUserId: {
      name: "ListUserSubscriptionsByUserId",
      I: ListUserSubscriptionsByUserIdRequest,
      O: ListUserSubscriptionsByUserIdResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Lists subscriptions for multiple users in an org.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListOrgSubscriptions
     */
    listOrgSubscriptions: {
      name: "ListOrgSubscriptions",
      I: ListOrgSubscriptionsRequest,
      O: ListOrgSubscriptionsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * AUTH TOKEN
     * CreateAuthToken creates an auth token for the current user.
     *
     * @generated from rpc api.v1alpha1.org.Org.CreateAuthToken
     */
    createAuthToken: {
      name: "CreateAuthToken",
      I: CreateAuthTokenRequest,
      O: CreateAuthTokenResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CreateAuthTokenByUserId creates an auth token for the given user.
     *
     * @generated from rpc api.v1alpha1.org.Org.CreateAuthTokenByUserId
     */
    createAuthTokenByUserId: {
      name: "CreateAuthTokenByUserId",
      I: CreateAuthTokenByUserIdRequest,
      O: CreateAuthTokenByUserIdResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListAuthTokens list tokens of current user.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListAuthTokens
     */
    listAuthTokens: {
      name: "ListAuthTokens",
      I: ListAuthTokensRequest,
      O: ListAuthTokensResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListAuthTokensByUserId list tokens of given user.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListAuthTokensByUserId
     */
    listAuthTokensByUserId: {
      name: "ListAuthTokensByUserId",
      I: ListAuthTokensByUserIdRequest,
      O: ListAuthTokensByUserIdResponse,
      kind: MethodKind.Unary,
    },
    /**
     * SetAuthTokenExpiration sets expiration back one year for current user.
     *
     * @generated from rpc api.v1alpha1.org.Org.SetAuthTokenExpiration
     */
    setAuthTokenExpiration: {
      name: "SetAuthTokenExpiration",
      I: SetAuthTokenExpirationRequest,
      O: SetAuthTokenExpirationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * SetAuthTokenExpirationByUserId sets expiration back one year for given user.
     *
     * @generated from rpc api.v1alpha1.org.Org.SetAuthTokenExpirationByUserId
     */
    setAuthTokenExpirationByUserId: {
      name: "SetAuthTokenExpirationByUserId",
      I: SetAuthTokenExpirationByUserIdRequest,
      O: SetAuthTokenExpirationByUserIdResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteAuthToken deletes a given auth token for the current user.
     *
     * @generated from rpc api.v1alpha1.org.Org.DeleteAuthToken
     */
    deleteAuthToken: {
      name: "DeleteAuthToken",
      I: DeleteAuthTokenRequest,
      O: DeleteAuthTokenResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteAuthTokenByUserId deletes a given auth token for the given user.
     *
     * @generated from rpc api.v1alpha1.org.Org.DeleteAuthTokenByUserId
     */
    deleteAuthTokenByUserId: {
      name: "DeleteAuthTokenByUserId",
      I: DeleteAuthTokenByUserIdRequest,
      O: DeleteAuthTokenByUserIdResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetHuntGroupSettings returns the field masked hunt group settings for the
     * provided hunt group.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetHuntGroupSettings
     */
    getHuntGroupSettings: {
      name: "GetHuntGroupSettings",
      I: GetHuntGroupSettingsRequest,
      O: GetHuntGroupSettingsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateHuntGroupSettings updates the selected/masked hunt group settings
     * for the given hunt group.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateHuntGroupSettings
     */
    updateHuntGroupSettings: {
      name: "UpdateHuntGroupSettings",
      I: UpdateHuntGroupSettingsRequest,
      O: UpdateHuntGroupSettingsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CreateHuntGroup is the RPC method for creating a hunt group.
     * It will create a hunt group with the given general details.
     *
     * @generated from rpc api.v1alpha1.org.Org.CreateHuntGroup
     */
    createHuntGroup: {
      name: "CreateHuntGroup",
      I: CreateHuntGroupRequest,
      O: CreateHuntGroupResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateHuntGroupGeneralDetails is the RPC method for updating the general details of a hunt group.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateHuntGroupGeneralDetails
     */
    updateHuntGroupGeneralDetails: {
      name: "UpdateHuntGroupGeneralDetails",
      I: UpdateHuntGroupGeneralDetailsRequest,
      O: UpdateHuntGroupGeneralDetailsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteHuntGroup is the RPC method for deleting a hunt group.
     *
     * @generated from rpc api.v1alpha1.org.Org.DeleteHuntGroup
     */
    deleteHuntGroup: {
      name: "DeleteHuntGroup",
      I: DeleteHuntGroupRequest,
      O: DeleteHuntGroupResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetHuntGroupDetails returns the hunt group details for the given hunt group.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetHuntGroupDetails
     */
    getHuntGroupDetails: {
      name: "GetHuntGroupDetails",
      I: GetHuntGroupDetailsRequest,
      O: GetHuntGroupDetailsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Lists caller id numbers with their associated region codes for the given
     * bucket.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListCallerIdBuckets
     */
    listCallerIdBuckets: {
      name: "ListCallerIdBuckets",
      I: ListCallerIdBucketsRequest,
      O: ListCallerIdBucketsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Gets a single data dip template.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetDataDipTemplate
     */
    getDataDipTemplate: {
      name: "GetDataDipTemplate",
      I: GetDataDipTemplateRequest,
      O: GetDataDipTemplateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Lists data dip templates, optionally filtered by config type.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListDataDipTemplates
     */
    listDataDipTemplates: {
      name: "ListDataDipTemplates",
      I: ListDataDipTemplatesRequest,
      O: ListDataDipTemplatesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Saves a new data dip template.
     *
     * @generated from rpc api.v1alpha1.org.Org.CreateDataDipTemplate
     */
    createDataDipTemplate: {
      name: "CreateDataDipTemplate",
      I: CreateDataDipTemplateRequest,
      O: CreateDataDipTemplateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Updates a data dip template.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateDataDipTemplate
     */
    updateDataDipTemplate: {
      name: "UpdateDataDipTemplate",
      I: UpdateDataDipTemplateRequest,
      O: UpdateDataDipTemplateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes a data dip template.
     *
     * @generated from rpc api.v1alpha1.org.Org.DeleteDataDipTemplate
     */
    deleteDataDipTemplate: {
      name: "DeleteDataDipTemplate",
      I: DeleteDataDipTemplateRequest,
      O: DeleteDataDipTemplateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Copies a data dip template.
     *
     * @generated from rpc api.v1alpha1.org.Org.CopyDataDipTemplate
     */
    copyDataDipTemplate: {
      name: "CopyDataDipTemplate",
      I: CopyDataDipTemplateRequest,
      O: CopyDataDipTemplateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Copies a data dip template to a different organization.
     *
     * @generated from rpc api.v1alpha1.org.Org.CopyDataDipTemplateToOrganization
     */
    copyDataDipTemplateToOrganization: {
      name: "CopyDataDipTemplateToOrganization",
      I: CopyDataDipTemplateToOrganizationRequest,
      O: CopyDataDipTemplateToOrganizationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Lists Agent Call Response Automatically added compliance rules for an Org.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListAgentResponseAutoRules
     */
    listAgentResponseAutoRules: {
      name: "ListAgentResponseAutoRules",
      I: ListAgentResponseAutoRulesRequest,
      O: ListAgentResponseAutoRulesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Creates a new Agent Call Response Automatically added compliance rule set.
     *
     * @generated from rpc api.v1alpha1.org.Org.CreateAgentResponseAutoRules
     */
    createAgentResponseAutoRules: {
      name: "CreateAgentResponseAutoRules",
      I: CreateAgentResponseAutoRulesRequest,
      O: CreateAgentResponseAutoRulesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Updates an existing Agent Call Response Automatically added compliance rule set.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateAgentResponseAutoRules
     */
    updateAgentResponseAutoRules: {
      name: "UpdateAgentResponseAutoRules",
      I: UpdateAgentResponseAutoRulesRequest,
      O: UpdateAgentResponseAutoRulesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes an existing Agent Call Response Automatically added compliance rule set.
     *
     * @generated from rpc api.v1alpha1.org.Org.DeleteAgentResponseAutoRules
     */
    deleteAgentResponseAutoRules: {
      name: "DeleteAgentResponseAutoRules",
      I: DeleteAgentResponseAutoRulesRequest,
      O: DeleteAgentResponseAutoRulesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Lists all web links for a given hunt group
     *
     * @generated from rpc api.v1alpha1.org.Org.ListHuntGroupWebLinks
     */
    listHuntGroupWebLinks: {
      name: "ListHuntGroupWebLinks",
      I: ListHuntGroupWebLinksRequest,
      O: ListHuntGroupWebLinksResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Copies a web link from one hunt group to another
     *
     * @generated from rpc api.v1alpha1.org.Org.CopyHuntGroupWebLink
     */
    copyHuntGroupWebLink: {
      name: "CopyHuntGroupWebLink",
      I: CopyHuntGroupWebLinkRequest,
      O: CopyHuntGroupWebLinkResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the list of web links in a hunt group to be the given list
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateHuntGroupWebLinks
     */
    updateHuntGroupWebLinks: {
      name: "UpdateHuntGroupWebLinks",
      I: UpdateHuntGroupWebLinksRequest,
      O: UpdateHuntGroupWebLinksResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListHuntGroupIntegrationLinks returns all integration links for a hunt group.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListHuntGroupIntegrationLinks
     */
    listHuntGroupIntegrationLinks: {
      name: "ListHuntGroupIntegrationLinks",
      I: ListHuntGroupIntegrationLinksRequest,
      O: ListHuntGroupIntegrationLinksResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetHuntGroupClientInfoDisplayTemplate returns the client info display template for a given hunt group.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetHuntGroupClientInfoDisplayTemplate
     */
    getHuntGroupClientInfoDisplayTemplate: {
      name: "GetHuntGroupClientInfoDisplayTemplate",
      I: GetHuntGroupClientInfoDisplayTemplateRequest,
      O: GetHuntGroupClientInfoDisplayTemplateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CreateHuntGroupClientInfoDisplayTemplate creates a new client info display template for a givne hunt group.
     *
     * @generated from rpc api.v1alpha1.org.Org.CreateHuntGroupClientInfoDisplayTemplate
     */
    createHuntGroupClientInfoDisplayTemplate: {
      name: "CreateHuntGroupClientInfoDisplayTemplate",
      I: CreateHuntGroupClientInfoDisplayTemplateRequest,
      O: CreateHuntGroupClientInfoDisplayTemplateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateHuntGroupClientInfoDisplayTemplate updates a client info display template for a given hunt group.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateHuntGroupClientInfoDisplayTemplate
     */
    updateHuntGroupClientInfoDisplayTemplate: {
      name: "UpdateHuntGroupClientInfoDisplayTemplate",
      I: UpdateHuntGroupClientInfoDisplayTemplateRequest,
      O: UpdateHuntGroupClientInfoDisplayTemplateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteHuntGroupClientInfoDisplayTemplate deletes a client info display template for a given hunt group.
     *
     * @generated from rpc api.v1alpha1.org.Org.DeleteHuntGroupClientInfoDisplayTemplate
     */
    deleteHuntGroupClientInfoDisplayTemplate: {
      name: "DeleteHuntGroupClientInfoDisplayTemplate",
      I: DeleteHuntGroupClientInfoDisplayTemplateRequest,
      O: DeleteHuntGroupClientInfoDisplayTemplateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CopyHuntGroupClientInfoDisplayTemplate copies the client info display template from one hunt group to another.
     * It will create a new template in the destination hunt group with the same settings as the source template if it doesn't already exist.
     * Otherwise, it will update the existing template with the source template settings.
     *
     * @generated from rpc api.v1alpha1.org.Org.CopyHuntGroupClientInfoDisplayTemplate
     */
    copyHuntGroupClientInfoDisplayTemplate: {
      name: "CopyHuntGroupClientInfoDisplayTemplate",
      I: CopyHuntGroupClientInfoDisplayTemplateRequest,
      O: CopyHuntGroupClientInfoDisplayTemplateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CreateCampaignClientInfoDisplayTemplate creates a new client info display template for a campaign
     * with the same settings as the source template from a hunt group.
     *
     * @generated from rpc api.v1alpha1.org.Org.CreateCampaignClientInfoDisplayTemplate
     */
    createCampaignClientInfoDisplayTemplate: {
      name: "CreateCampaignClientInfoDisplayTemplate",
      I: CreateCampaignClientInfoDisplayTemplateRequest,
      O: CreateCampaignClientInfoDisplayTemplateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListHuntGroupsWithClientInfoTemplateData lists the hunt groups in an organization
     * with their client info display template data based on the filter.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListHuntGroupsWithClientInfoTemplateData
     */
    listHuntGroupsWithClientInfoTemplateData: {
      name: "ListHuntGroupsWithClientInfoTemplateData",
      I: ListHuntGroupsWithClientInfoTemplateDataRequest,
      O: ListHuntGroupsWithClientInfoTemplateDataResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListAgentTriggers returns a list of agent triggers for the given hunt group.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListAgentTriggers
     */
    listAgentTriggers: {
      name: "ListAgentTriggers",
      I: ListAgentTriggersRequest,
      O: ListAgentTriggersResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CopyAgentTrigger copys an agent trigger to the given hunt group in the same org.
     *
     * @generated from rpc api.v1alpha1.org.Org.CopyAgentTrigger
     */
    copyAgentTrigger: {
      name: "CopyAgentTrigger",
      I: CopyAgentTriggerRequest,
      O: CopyAgentTriggerResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateAgentTriggers updates all agent triggers for the given hunt group.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateAgentTriggers
     */
    updateAgentTriggers: {
      name: "UpdateAgentTriggers",
      I: UpdateAgentTriggersRequest,
      O: UpdateAgentTriggersResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetHuntGroupScript gets the hunt group script for a given hunt group
     *
     * @generated from rpc api.v1alpha1.org.Org.GetHuntGroupScript
     */
    getHuntGroupScript: {
      name: "GetHuntGroupScript",
      I: GetHuntGroupScriptRequest,
      O: GetHuntGroupScriptResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CreateHuntGroupScript adds a hunt group script within the given hunt group
     *
     * @generated from rpc api.v1alpha1.org.Org.CreateHuntGroupScript
     */
    createHuntGroupScript: {
      name: "CreateHuntGroupScript",
      I: CreateHuntGroupScriptRequest,
      O: CreateHuntGroupScriptResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateHuntGroupScript updates a hunt group script within the given hunt group
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateHuntGroupScript
     */
    updateHuntGroupScript: {
      name: "UpdateHuntGroupScript",
      I: UpdateHuntGroupScriptRequest,
      O: UpdateHuntGroupScriptResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteHuntGroupScript removes a hunt group script within the given hunt group
     *
     * @generated from rpc api.v1alpha1.org.Org.DeleteHuntGroupScript
     */
    deleteHuntGroupScript: {
      name: "DeleteHuntGroupScript",
      I: DeleteHuntGroupScriptRequest,
      O: DeleteHuntGroupScriptResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CreateTrust creates a new trust.
     *
     * @generated from rpc api.v1alpha1.org.Org.CreateTrust
     */
    createTrust: {
      name: "CreateTrust",
      I: CreateTrustRequest,
      O: CreateTrustResponse,
      kind: MethodKind.Unary,
    },
    /**
     * AcceptTrust accepts an incoming trust.
     *
     * @generated from rpc api.v1alpha1.org.Org.AcceptTrust
     */
    acceptTrust: {
      name: "AcceptTrust",
      I: AcceptTrustRequest,
      O: AcceptTrustResponse,
      kind: MethodKind.Unary,
    },
    /**
     * RejectTrust rejects an incoming trust.
     *
     * @generated from rpc api.v1alpha1.org.Org.RejectTrust
     */
    rejectTrust: {
      name: "RejectTrust",
      I: RejectTrustRequest,
      O: RejectTrustResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetTrust returns a single trust by trust id.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetTrust
     */
    getTrust: {
      name: "GetTrust",
      I: GetTrustRequest,
      O: GetTrustResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListIncomingTrusts returns all pending trusts that are being granted
     * to the org of the currently logged in user.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListIncomingTrusts
     */
    listIncomingTrusts: {
      name: "ListIncomingTrusts",
      I: ListIncomingTrustsRequest,
      O: ListIncomingTrustsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListGivenTrusts returns all trusts that have been given out for
     * the currently logged in user's org. The returned list will contain
     * accepted, pending, and rejected trusts.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListGivenTrusts
     */
    listGivenTrusts: {
      name: "ListGivenTrusts",
      I: ListGivenTrustsRequest,
      O: ListGivenTrustsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListAssignableTrusts returns all accepted trusts that are being granted
     * to the org of the currently logged in user.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListAssignableTrusts
     */
    listAssignableTrusts: {
      name: "ListAssignableTrusts",
      I: ListAssignableTrustsRequest,
      O: ListAssignableTrustsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteTrust deletes a trust by trust id. Only trusts where the current
     * org is the grantor can be deleted by this endpoint.
     *
     * @generated from rpc api.v1alpha1.org.Org.DeleteTrust
     */
    deleteTrust: {
      name: "DeleteTrust",
      I: DeleteTrustRequest,
      O: DeleteTrustResponse,
      kind: MethodKind.Unary,
    },
    /**
     * AssignTrust assigns a trust to the given user ids.
     *
     * @generated from rpc api.v1alpha1.org.Org.AssignTrust
     */
    assignTrust: {
      name: "AssignTrust",
      I: AssignTrustRequest,
      O: AssignTrustResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UnassignTrust unassigns a trust from the given user id.
     *
     * @generated from rpc api.v1alpha1.org.Org.UnassignTrust
     */
    unassignTrust: {
      name: "UnassignTrust",
      I: UnassignTrustRequest,
      O: UnassignTrustResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CreateLabel creates a label with the given properties.
     *
     * @generated from rpc api.v1alpha1.org.Org.CreateLabel
     */
    createLabel: {
      name: "CreateLabel",
      I: CreateLabelRequest,
      O: CreateLabelResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteLabel deletes a label with the id given on the request.
     *
     * @generated from rpc api.v1alpha1.org.Org.DeleteLabel
     */
    deleteLabel: {
      name: "DeleteLabel",
      I: DeleteLabelRequest,
      O: DeleteLabelResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListLabels returns all unique label names belonging to the given org id.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListLabels
     */
    listLabels: {
      name: "ListLabels",
      I: ListLabelsRequest,
      O: ListLabelsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetLabel returns a single label with the given ID.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetLabel
     */
    getLabel: {
      name: "GetLabel",
      I: GetLabelRequest,
      O: GetLabelResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateLabel updates the given label.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateLabel
     */
    updateLabel: {
      name: "UpdateLabel",
      I: UpdateLabelRequest,
      O: UpdateLabelResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Assignlabel creates label assignments defined by the request.
     *
     * @generated from rpc api.v1alpha1.org.Org.AssignLabel
     */
    assignLabel: {
      name: "AssignLabel",
      I: AssignLabelRequest,
      O: AssignLabelResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Unassignlabel removes label assignments defined by the request.
     *
     * @generated from rpc api.v1alpha1.org.Org.UnassignLabel
     */
    unassignLabel: {
      name: "UnassignLabel",
      I: UnassignLabelRequest,
      O: UnassignLabelResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetAssignmentCounts returns the total amount of label assignments
     * per entity type.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetAssignmentCounts
     */
    getAssignmentCounts: {
      name: "GetAssignmentCounts",
      I: GetAssignmentCountsRequest,
      O: GetAssignmentCountsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetAssignableLabels returns a list of labels available to the current user.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetAssignableLabels
     */
    getAssignableLabels: {
      name: "GetAssignableLabels",
      I: GetAssignableLabelsRequest,
      O: GetAssignableLabelsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetPermissions returns the permissions for a given user along with other user information.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetPermissions
     */
    getPermissions: {
      name: "GetPermissions",
      I: GetPermissionsRequest,
      O: GetPermissionsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetUserPermissions returns the permissions for a given user.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetUserPermissions
     */
    getUserPermissions: {
      name: "GetUserPermissions",
      I: GetUserPermissionsRequest,
      O: GetUserPermissionsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Creates a new permission group.
     *
     * @generated from rpc api.v1alpha1.org.Org.CreatePermissionGroup
     */
    createPermissionGroup: {
      name: "CreatePermissionGroup",
      I: CreatePermissionGroupRequest,
      O: CreatePermissionGroupResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdatePermissionGroup updates the permission group with the given id.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdatePermissionGroup
     */
    updatePermissionGroup: {
      name: "UpdatePermissionGroup",
      I: UpdatePermissionGroupRequest,
      O: UpdatePermissionGroupResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DeletePermissionGroup deletes the permission group with the given id.
     *
     * @generated from rpc api.v1alpha1.org.Org.DeletePermissionGroup
     */
    deletePermissionGroup: {
      name: "DeletePermissionGroup",
      I: DeletePermissionGroupRequest,
      O: DeletePermissionGroupResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListPermissionGroups returns a list of permissions for an organization.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListPermissionGroups
     */
    listPermissionGroups: {
      name: "ListPermissionGroups",
      I: ListPermissionGroupsRequest,
      O: ListPermissionGroupsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListPermissionGroupsByOrgId returns a list of permissions for an
     * organization.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListPermissionGroupsByOrgId
     */
    listPermissionGroupsByOrgId: {
      name: "ListPermissionGroupsByOrgId",
      I: ListPermissionGroupsByOrgIdRequest,
      O: ListPermissionGroupsByOrgIdResponse,
      kind: MethodKind.Unary,
    },
    /**
     * AssignUsersPermissionGroup returns a user a permission group.
     *
     * @generated from rpc api.v1alpha1.org.Org.AssignUsersPermissionGroup
     */
    assignUsersPermissionGroup: {
      name: "AssignUsersPermissionGroup",
      I: AssignUsersPermissionGroupRequest,
      O: AssignUsersPermissionGroupResponse,
      kind: MethodKind.Unary,
    },
    /**
     * RevokeUsersPermissionGroup returns a user a permission group.
     *
     * @generated from rpc api.v1alpha1.org.Org.RevokeUsersPermissionGroup
     */
    revokeUsersPermissionGroup: {
      name: "RevokeUsersPermissionGroup",
      I: RevokeUsersPermissionGroupRequest,
      O: RevokeUsersPermissionGroupResponse,
      kind: MethodKind.Unary,
    },
    /**
     * AssignAccountOwnerPermissionToUser returns a user a permission group.
     *
     * @generated from rpc api.v1alpha1.org.Org.AssignAccountOwnerPermissionToUser
     */
    assignAccountOwnerPermissionToUser: {
      name: "AssignAccountOwnerPermissionToUser",
      I: AssignAccountOwnerPermissionToUserRequest,
      O: AssignAccountOwnerPermissionToUserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * RevokeAccountOwnerPermissionFromUser returns a user a permission group.
     *
     * @generated from rpc api.v1alpha1.org.Org.RevokeAccountOwnerPermissionFromUser
     */
    revokeAccountOwnerPermissionFromUser: {
      name: "RevokeAccountOwnerPermissionFromUser",
      I: RevokeAccountOwnerPermissionFromUserRequest,
      O: RevokeAccountOwnerPermissionFromUserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Initializes the default read only permissions group for the
     * given organization.
     *
     * @generated from rpc api.v1alpha1.org.Org.InitDefaultPermissionGroups
     */
    initDefaultPermissionGroups: {
      name: "InitDefaultPermissionGroups",
      I: InitDefaultPermissionGroupsRequest,
      O: InitDefaultPermissionGroupsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetAccountOwnerGroup returns the account owner permission group
     * for an organization.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetAccountOwnerGroup
     */
    getAccountOwnerGroup: {
      name: "GetAccountOwnerGroup",
      I: GetAccountOwnerGroupRequest,
      O: GetAccountOwnerGroupResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetLicenses returns the licenses an organitzation is assigned.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetLicenses
     */
    getLicenses: {
      name: "GetLicenses",
      I: GetLicensesRequest,
      O: GetLicensesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetOrgLicenses returns the licenses assigned to the organization
     * of the user who makes the request.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetOrgLicenses
     */
    getOrgLicenses: {
      name: "GetOrgLicenses",
      I: GetOrgLicensesRequest,
      O: GetOrgLicensesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateLicenses updates an organization's licenses.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateLicenses
     */
    updateLicenses: {
      name: "UpdateLicenses",
      I: UpdateLicensesRequest,
      O: UpdateLicensesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * RemovePermissionFromAllPermissionGroups removes a permission from
     * all permission groups in an organization.
     *
     * @generated from rpc api.v1alpha1.org.Org.RemovePermissionFromAllPermissionGroups
     */
    removePermissionFromAllPermissionGroups: {
      name: "RemovePermissionFromAllPermissionGroups",
      I: RemovePermissionFromAllPermissionGroupsRequest,
      O: RemovePermissionFromAllPermissionGroupsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListP3PermissionGroups returns the list of p3 permission groups
     * for the user's org.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListP3PermissionGroups
     */
    listP3PermissionGroups: {
      name: "ListP3PermissionGroups",
      I: ListP3PermissionGroupsRequest,
      O: ListP3PermissionGroupsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListP3PermissionGroupsByOrgId returns the list of p3 permission groups
     * for an org by id.
     *
     * @generated from rpc api.v1alpha1.org.Org.ListP3PermissionGroupsByOrgId
     */
    listP3PermissionGroupsByOrgId: {
      name: "ListP3PermissionGroupsByOrgId",
      I: ListP3PermissionGroupsRequest,
      O: ListP3PermissionGroupsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CreateP3PermissionGroup creates a new p3 permission group.
     *
     * @generated from rpc api.v1alpha1.org.Org.CreateP3PermissionGroup
     */
    createP3PermissionGroup: {
      name: "CreateP3PermissionGroup",
      I: CreateP3PermissionGroupRequest,
      O: CreateP3PermissionGroupResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateP3PermissionGroup updates an existing p3 permission group.
     * Requires PERMISSION_GROUP_EDIT.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateP3PermissionGroup
     */
    updateP3PermissionGroup: {
      name: "UpdateP3PermissionGroup",
      I: UpdateP3PermissionGroupRequest,
      O: UpdateP3PermissionGroupResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateP3PermissionGroup updates an existing p3 permission group.
     * CUSTOMER_SUPPORT required for passing in an org id.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateP3PermissionGroupByOrgId
     */
    updateP3PermissionGroupByOrgId: {
      name: "UpdateP3PermissionGroupByOrgId",
      I: UpdateP3PermissionGroupByOrgIdRequest,
      O: UpdateP3PermissionGroupByOrgIdResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteP3PermissionGroup deletes a p3 permission group.
     *
     * @generated from rpc api.v1alpha1.org.Org.DeleteP3PermissionGroup
     */
    deleteP3PermissionGroup: {
      name: "DeleteP3PermissionGroup",
      I: DeleteP3PermissionGroupRequest,
      O: DeleteP3PermissionGroupResponse,
      kind: MethodKind.Unary,
    },
    /**
     * AssignUsersP3PermissionGroup assigns a p3 permission group
     * to a list of users.
     *
     * @generated from rpc api.v1alpha1.org.Org.AssignUsersP3PermissionGroup
     */
    assignUsersP3PermissionGroup: {
      name: "AssignUsersP3PermissionGroup",
      I: AssignUsersP3PermissionGroupRequest,
      O: AssignUsersP3PermissionGroupResponse,
      kind: MethodKind.Unary,
    },
    /**
     * RevokeUsersP3PermissionGroup revokes a p3 permission group
     * from a list of users.
     *
     * @generated from rpc api.v1alpha1.org.Org.RevokeUsersP3PermissionGroup
     */
    revokeUsersP3PermissionGroup: {
      name: "RevokeUsersP3PermissionGroup",
      I: RevokeUsersP3PermissionGroupRequest,
      O: RevokeUsersP3PermissionGroupResponse,
      kind: MethodKind.Unary,
    },
    /**
     * RefreshMfaLockout resets the lockout timer for the given user.
     *
     * @generated from rpc api.v1alpha1.org.Org.RefreshMfaLockout
     */
    refreshMfaLockout: {
      name: "RefreshMfaLockout",
      I: RefreshMfaLockoutRequest,
      O: RefreshMfaLockoutResponse,
      kind: MethodKind.Unary,
    },
    /**
     * RefreshMfaLockoutByOrgId resets the lockout timer for the given user and org id.
     *
     * @generated from rpc api.v1alpha1.org.Org.RefreshMfaLockoutByOrgId
     */
    refreshMfaLockoutByOrgId: {
      name: "RefreshMfaLockoutByOrgId",
      I: RefreshMfaLockoutByOrgIdRequest,
      O: RefreshMfaLockoutByOrgIdResponse,
      kind: MethodKind.Unary,
    },
    /**
     * SetMfaType sets the given user's mfa type.
     *
     * @generated from rpc api.v1alpha1.org.Org.SetMfaType
     */
    setMfaType: {
      name: "SetMfaType",
      I: SetMfaTypeRequest,
      O: SetMfaTypeResponse,
      kind: MethodKind.Unary,
    },
    /**
     * SetMyMfaType sets the current user's mfa type.
     *
     * @generated from rpc api.v1alpha1.org.Org.SetMyMfaType
     */
    setMyMfaType: {
      name: "SetMyMfaType",
      I: SetMyMfaTypeRequest,
      O: SetMyMfaTypeResponse,
      kind: MethodKind.Unary,
    },
    /**
     * EnableUserMfa enables or disables mfa for the given user
     *
     * @generated from rpc api.v1alpha1.org.Org.EnableUserMfa
     */
    enableUserMfa: {
      name: "EnableUserMfa",
      I: EnableUserMfaRequest,
      O: EnableUserMfaResponse,
      kind: MethodKind.Unary,
    },
    /**
     * EnableMyUserMfa enables mfa for the current user
     *
     * @generated from rpc api.v1alpha1.org.Org.EnableMyUserMfa
     */
    enableMyUserMfa: {
      name: "EnableMyUserMfa",
      I: EnableMyUserMfaRequest,
      O: EnableMyUserMfaResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetUserMfaInfo returns the mfa info for the given user.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetUserMfaInfo
     */
    getUserMfaInfo: {
      name: "GetUserMfaInfo",
      I: GetUserMfaInfoRequest,
      O: GetUserMfaInfoResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetMyUserMfaInfo returns the mfa info for the current user.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetMyUserMfaInfo
     */
    getMyUserMfaInfo: {
      name: "GetMyUserMfaInfo",
      I: GetMyUserMfaInfoRequest,
      O: GetMyUserMfaInfoResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetMyAllowedMfaMethods returns the mfa methods allowed to the current user.
     *
     * @generated from rpc api.v1alpha1.org.Org.GetMyAllowedMfaMethods
     */
    getMyAllowedMfaMethods: {
      name: "GetMyAllowedMfaMethods",
      I: GetMyAllowedMfaMethodsRequest,
      O: GetMyAllowedMfaMethodsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CreateBusinessHours persists times businesses are available.
     *
     * @generated from rpc api.v1alpha1.org.Org.CreateBusinessHours
     * @deprecated
     */
    createBusinessHours: {
      name: "CreateBusinessHours",
      I: CreateBusinessHoursRequest,
      O: CreateBusinessHoursResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateBusinessHours persists changes to times businesses are available.
     *
     * @generated from rpc api.v1alpha1.org.Org.UpdateBusinessHours
     * @deprecated
     */
    updateBusinessHours: {
      name: "UpdateBusinessHours",
      I: UpdateBusinessHoursRequest,
      O: UpdateBusinessHoursResponse,
      kind: MethodKind.Unary,
    },
  }
};


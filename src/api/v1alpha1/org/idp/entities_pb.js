// @generated by protoc-gen-es v1.8.0 with parameter "target=js+dts"
// @generated from file api/v1alpha1/org/idp/entities.proto (package api.v1alpha1.org.idp, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { IdpClient } from "../../../commons/org/idp_pb.js";

/**
 * CreateClientRequest is a request to make a client.
 *
 * @generated from message api.v1alpha1.org.idp.CreateClientRequest
 */
export const CreateClientRequest = /*@__PURE__*/ proto3.makeMessageType(
  "api.v1alpha1.org.idp.CreateClientRequest",
  () => [
    { no: 1, name: "client", kind: "message", T: IdpClient },
  ],
);

/**
 * CreateClientResponse returns the response from creating a client.
 *
 * @generated from message api.v1alpha1.org.idp.CreateClientResponse
 */
export const CreateClientResponse = /*@__PURE__*/ proto3.makeMessageType(
  "api.v1alpha1.org.idp.CreateClientResponse",
  () => [
    { no: 1, name: "already_exists", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "client", kind: "message", T: IdpClient },
  ],
);

/**
 * DeleteClientRequest is a request to delete a client.
 *
 * @generated from message api.v1alpha1.org.idp.DeleteClientRequest
 */
export const DeleteClientRequest = /*@__PURE__*/ proto3.makeMessageType(
  "api.v1alpha1.org.idp.DeleteClientRequest",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * DeleteClientResponse determines if the client is deleted successfully.
 *
 * @generated from message api.v1alpha1.org.idp.DeleteClientResponse
 */
export const DeleteClientResponse = /*@__PURE__*/ proto3.makeMessageType(
  "api.v1alpha1.org.idp.DeleteClientResponse",
  () => [
    { no: 1, name: "not_found", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * UpdateClientRequest is a request to update an existing client.
 *
 * @generated from message api.v1alpha1.org.idp.UpdateClientRequest
 */
export const UpdateClientRequest = /*@__PURE__*/ proto3.makeMessageType(
  "api.v1alpha1.org.idp.UpdateClientRequest",
  () => [
    { no: 1, name: "client", kind: "message", T: IdpClient },
  ],
);

/**
 * UpdateClientResponse returns the response from updating a client.
 *
 * @generated from message api.v1alpha1.org.idp.UpdateClientResponse
 */
export const UpdateClientResponse = /*@__PURE__*/ proto3.makeMessageType(
  "api.v1alpha1.org.idp.UpdateClientResponse",
  () => [
    { no: 1, name: "not_found", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * ListClientsRequest is a request to list all existing clients.
 *
 * @generated from message api.v1alpha1.org.idp.ListClientsRequest
 */
export const ListClientsRequest = /*@__PURE__*/ proto3.makeMessageType(
  "api.v1alpha1.org.idp.ListClientsRequest",
  [],
);

/**
 * ListClientsResponse returns the response from listing all clients.
 *
 * @generated from message api.v1alpha1.org.idp.ListClientsResponse
 */
export const ListClientsResponse = /*@__PURE__*/ proto3.makeMessageType(
  "api.v1alpha1.org.idp.ListClientsResponse",
  () => [
    { no: 1, name: "clients", kind: "message", T: IdpClient, repeated: true },
  ],
);


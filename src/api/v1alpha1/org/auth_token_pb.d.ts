// @generated by protoc-gen-es v1.5.1 with parameter "target=js+dts"
// @generated from file api/v1alpha1/org/auth_token.proto (package api.v1alpha1.org, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { AuthToken } from "../../commons/org/auth_token_pb.js";

/**
 * Request message for the CreateAuthToken rpc.
 *
 * @generated from message api.v1alpha1.org.CreateAuthTokenRequest
 */
export declare class CreateAuthTokenRequest extends Message<CreateAuthTokenRequest> {
  constructor(data?: PartialMessage<CreateAuthTokenRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.CreateAuthTokenRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAuthTokenRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAuthTokenRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAuthTokenRequest;

  static equals(a: CreateAuthTokenRequest | PlainMessage<CreateAuthTokenRequest> | undefined, b: CreateAuthTokenRequest | PlainMessage<CreateAuthTokenRequest> | undefined): boolean;
}

/**
 * Response message for the CreateAuthToken rpc.
 *
 * @generated from message api.v1alpha1.org.CreateAuthTokenResponse
 */
export declare class CreateAuthTokenResponse extends Message<CreateAuthTokenResponse> {
  /**
   * newly generated auth token
   *
   * @generated from field: api.commons.org.AuthToken auth_token = 1;
   */
  authToken?: AuthToken;

  constructor(data?: PartialMessage<CreateAuthTokenResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.CreateAuthTokenResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAuthTokenResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAuthTokenResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAuthTokenResponse;

  static equals(a: CreateAuthTokenResponse | PlainMessage<CreateAuthTokenResponse> | undefined, b: CreateAuthTokenResponse | PlainMessage<CreateAuthTokenResponse> | undefined): boolean;
}

/**
 * Request message for the CreateAuthTokenByUserId rpc.
 *
 * @generated from message api.v1alpha1.org.CreateAuthTokenByUserIdRequest
 */
export declare class CreateAuthTokenByUserIdRequest extends Message<CreateAuthTokenByUserIdRequest> {
  /**
   * user id creating new token for
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  constructor(data?: PartialMessage<CreateAuthTokenByUserIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.CreateAuthTokenByUserIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAuthTokenByUserIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAuthTokenByUserIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAuthTokenByUserIdRequest;

  static equals(a: CreateAuthTokenByUserIdRequest | PlainMessage<CreateAuthTokenByUserIdRequest> | undefined, b: CreateAuthTokenByUserIdRequest | PlainMessage<CreateAuthTokenByUserIdRequest> | undefined): boolean;
}

/**
 * Response message for the CreateAuthTokenByUserId rpc.
 *
 * @generated from message api.v1alpha1.org.CreateAuthTokenByUserIdResponse
 */
export declare class CreateAuthTokenByUserIdResponse extends Message<CreateAuthTokenByUserIdResponse> {
  /**
   * newly generated auth token
   *
   * @generated from field: api.commons.org.AuthToken auth_token = 1;
   */
  authToken?: AuthToken;

  constructor(data?: PartialMessage<CreateAuthTokenByUserIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.CreateAuthTokenByUserIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAuthTokenByUserIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAuthTokenByUserIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAuthTokenByUserIdResponse;

  static equals(a: CreateAuthTokenByUserIdResponse | PlainMessage<CreateAuthTokenByUserIdResponse> | undefined, b: CreateAuthTokenByUserIdResponse | PlainMessage<CreateAuthTokenByUserIdResponse> | undefined): boolean;
}

/**
 * Request message for the ListAuthTokensRequest rpc.
 *
 * @generated from message api.v1alpha1.org.ListAuthTokensRequest
 */
export declare class ListAuthTokensRequest extends Message<ListAuthTokensRequest> {
  constructor(data?: PartialMessage<ListAuthTokensRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.ListAuthTokensRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAuthTokensRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAuthTokensRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAuthTokensRequest;

  static equals(a: ListAuthTokensRequest | PlainMessage<ListAuthTokensRequest> | undefined, b: ListAuthTokensRequest | PlainMessage<ListAuthTokensRequest> | undefined): boolean;
}

/**
 * Response message for the ListAuthTokensResponse rpc.
 *
 * @generated from message api.v1alpha1.org.ListAuthTokensResponse
 */
export declare class ListAuthTokensResponse extends Message<ListAuthTokensResponse> {
  /**
   * list of current users auth tokens
   *
   * @generated from field: repeated api.commons.org.AuthToken auth_tokens = 1;
   */
  authTokens: AuthToken[];

  constructor(data?: PartialMessage<ListAuthTokensResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.ListAuthTokensResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAuthTokensResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAuthTokensResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAuthTokensResponse;

  static equals(a: ListAuthTokensResponse | PlainMessage<ListAuthTokensResponse> | undefined, b: ListAuthTokensResponse | PlainMessage<ListAuthTokensResponse> | undefined): boolean;
}

/**
 * Request message for the ListAuthTokensByUserIdRequest rpc.
 *
 * @generated from message api.v1alpha1.org.ListAuthTokensByUserIdRequest
 */
export declare class ListAuthTokensByUserIdRequest extends Message<ListAuthTokensByUserIdRequest> {
  /**
   * user id to get list of auth tokens
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  constructor(data?: PartialMessage<ListAuthTokensByUserIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.ListAuthTokensByUserIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAuthTokensByUserIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAuthTokensByUserIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAuthTokensByUserIdRequest;

  static equals(a: ListAuthTokensByUserIdRequest | PlainMessage<ListAuthTokensByUserIdRequest> | undefined, b: ListAuthTokensByUserIdRequest | PlainMessage<ListAuthTokensByUserIdRequest> | undefined): boolean;
}

/**
 * Response message for the ListAuthTokensByUserIdResponse rpc.
 *
 * @generated from message api.v1alpha1.org.ListAuthTokensByUserIdResponse
 */
export declare class ListAuthTokensByUserIdResponse extends Message<ListAuthTokensByUserIdResponse> {
  /**
   * list of requested users auth tokens
   *
   * @generated from field: repeated api.commons.org.AuthToken auth_tokens = 1;
   */
  authTokens: AuthToken[];

  constructor(data?: PartialMessage<ListAuthTokensByUserIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.ListAuthTokensByUserIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAuthTokensByUserIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAuthTokensByUserIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAuthTokensByUserIdResponse;

  static equals(a: ListAuthTokensByUserIdResponse | PlainMessage<ListAuthTokensByUserIdResponse> | undefined, b: ListAuthTokensByUserIdResponse | PlainMessage<ListAuthTokensByUserIdResponse> | undefined): boolean;
}

/**
 * Request message for the SetAuthTokenExpirationRequest rpc.
 *
 * @generated from message api.v1alpha1.org.SetAuthTokenExpirationRequest
 */
export declare class SetAuthTokenExpirationRequest extends Message<SetAuthTokenExpirationRequest> {
  /**
   * token to reset expiration for that belongs to the current user
   *
   * @generated from field: string token = 1;
   */
  token: string;

  constructor(data?: PartialMessage<SetAuthTokenExpirationRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.SetAuthTokenExpirationRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetAuthTokenExpirationRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetAuthTokenExpirationRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetAuthTokenExpirationRequest;

  static equals(a: SetAuthTokenExpirationRequest | PlainMessage<SetAuthTokenExpirationRequest> | undefined, b: SetAuthTokenExpirationRequest | PlainMessage<SetAuthTokenExpirationRequest> | undefined): boolean;
}

/**
 * Response message for the SetAuthTokenExpirationResponse rpc.
 *
 * @generated from message api.v1alpha1.org.SetAuthTokenExpirationResponse
 */
export declare class SetAuthTokenExpirationResponse extends Message<SetAuthTokenExpirationResponse> {
  constructor(data?: PartialMessage<SetAuthTokenExpirationResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.SetAuthTokenExpirationResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetAuthTokenExpirationResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetAuthTokenExpirationResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetAuthTokenExpirationResponse;

  static equals(a: SetAuthTokenExpirationResponse | PlainMessage<SetAuthTokenExpirationResponse> | undefined, b: SetAuthTokenExpirationResponse | PlainMessage<SetAuthTokenExpirationResponse> | undefined): boolean;
}

/**
 * Request message for the SetAuthTokenExpirationByUserIdRequest rpc.
 *
 * @generated from message api.v1alpha1.org.SetAuthTokenExpirationByUserIdRequest
 */
export declare class SetAuthTokenExpirationByUserIdRequest extends Message<SetAuthTokenExpirationByUserIdRequest> {
  /**
   * token to reset expiration for that belongs to the given user
   *
   * @generated from field: string token = 1;
   */
  token: string;

  /**
   * user token belongs to
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  constructor(data?: PartialMessage<SetAuthTokenExpirationByUserIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.SetAuthTokenExpirationByUserIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetAuthTokenExpirationByUserIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetAuthTokenExpirationByUserIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetAuthTokenExpirationByUserIdRequest;

  static equals(a: SetAuthTokenExpirationByUserIdRequest | PlainMessage<SetAuthTokenExpirationByUserIdRequest> | undefined, b: SetAuthTokenExpirationByUserIdRequest | PlainMessage<SetAuthTokenExpirationByUserIdRequest> | undefined): boolean;
}

/**
 * Response message for the SetAuthTokenExpirationByUserIdResponse rpc.
 *
 * @generated from message api.v1alpha1.org.SetAuthTokenExpirationByUserIdResponse
 */
export declare class SetAuthTokenExpirationByUserIdResponse extends Message<SetAuthTokenExpirationByUserIdResponse> {
  constructor(data?: PartialMessage<SetAuthTokenExpirationByUserIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.SetAuthTokenExpirationByUserIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetAuthTokenExpirationByUserIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetAuthTokenExpirationByUserIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetAuthTokenExpirationByUserIdResponse;

  static equals(a: SetAuthTokenExpirationByUserIdResponse | PlainMessage<SetAuthTokenExpirationByUserIdResponse> | undefined, b: SetAuthTokenExpirationByUserIdResponse | PlainMessage<SetAuthTokenExpirationByUserIdResponse> | undefined): boolean;
}

/**
 * Request message for the DeleteAuthTokenRequest rpc.
 *
 * @generated from message api.v1alpha1.org.DeleteAuthTokenRequest
 */
export declare class DeleteAuthTokenRequest extends Message<DeleteAuthTokenRequest> {
  /**
   * token to delete for current user
   *
   * @generated from field: string token = 1;
   */
  token: string;

  constructor(data?: PartialMessage<DeleteAuthTokenRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.DeleteAuthTokenRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAuthTokenRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAuthTokenRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAuthTokenRequest;

  static equals(a: DeleteAuthTokenRequest | PlainMessage<DeleteAuthTokenRequest> | undefined, b: DeleteAuthTokenRequest | PlainMessage<DeleteAuthTokenRequest> | undefined): boolean;
}

/**
 * Response message for the DeleteAuthTokenResponse rpc.
 *
 * @generated from message api.v1alpha1.org.DeleteAuthTokenResponse
 */
export declare class DeleteAuthTokenResponse extends Message<DeleteAuthTokenResponse> {
  constructor(data?: PartialMessage<DeleteAuthTokenResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.DeleteAuthTokenResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAuthTokenResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAuthTokenResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAuthTokenResponse;

  static equals(a: DeleteAuthTokenResponse | PlainMessage<DeleteAuthTokenResponse> | undefined, b: DeleteAuthTokenResponse | PlainMessage<DeleteAuthTokenResponse> | undefined): boolean;
}

/**
 * Request message for the DeleteAuthTokenByUserIdRequest rpc.
 *
 * @generated from message api.v1alpha1.org.DeleteAuthTokenByUserIdRequest
 */
export declare class DeleteAuthTokenByUserIdRequest extends Message<DeleteAuthTokenByUserIdRequest> {
  /**
   * token to delete
   *
   * @generated from field: string token = 1;
   */
  token: string;

  /**
   * user token belongs to
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  constructor(data?: PartialMessage<DeleteAuthTokenByUserIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.DeleteAuthTokenByUserIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAuthTokenByUserIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAuthTokenByUserIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAuthTokenByUserIdRequest;

  static equals(a: DeleteAuthTokenByUserIdRequest | PlainMessage<DeleteAuthTokenByUserIdRequest> | undefined, b: DeleteAuthTokenByUserIdRequest | PlainMessage<DeleteAuthTokenByUserIdRequest> | undefined): boolean;
}

/**
 * Response message for the DeleteAuthTokenByUserIdResponse rpc.
 *
 * @generated from message api.v1alpha1.org.DeleteAuthTokenByUserIdResponse
 */
export declare class DeleteAuthTokenByUserIdResponse extends Message<DeleteAuthTokenByUserIdResponse> {
  constructor(data?: PartialMessage<DeleteAuthTokenByUserIdResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.org.DeleteAuthTokenByUserIdResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAuthTokenByUserIdResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAuthTokenByUserIdResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAuthTokenByUserIdResponse;

  static equals(a: DeleteAuthTokenByUserIdResponse | PlainMessage<DeleteAuthTokenByUserIdResponse> | undefined, b: DeleteAuthTokenByUserIdResponse | PlainMessage<DeleteAuthTokenByUserIdResponse> | undefined): boolean;
}


// Copyright (c) 2020, TCN Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.7.1 with parameter "target=js+dts"
// @generated from file api/v1alpha1/ghostnotifier/service.proto (package api.v1alpha1.ghostnotifier, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message api.v1alpha1.ghostnotifier.ListNotificationsReq
 */
export declare class ListNotificationsReq extends Message<ListNotificationsReq> {
  constructor(data?: PartialMessage<ListNotificationsReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.ghostnotifier.ListNotificationsReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListNotificationsReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListNotificationsReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListNotificationsReq;

  static equals(a: ListNotificationsReq | PlainMessage<ListNotificationsReq> | undefined, b: ListNotificationsReq | PlainMessage<ListNotificationsReq> | undefined): boolean;
}


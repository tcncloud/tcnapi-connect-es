// @generated by protoc-gen-es v1.9.0 with parameter "target=js+dts"
// @generated from file api/v1alpha1/bireportgenerator/entities.proto (package api.v1alpha1.bireportgenerator, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { DayFilter, DeliveryOptions, DeliveryTimes, FilenamePart, FormatOptions, TimePeriod } from "../../commons/bireportgenerator_pb.js";
import type { Month } from "../../commons/enums_pb.js";
import type { TimeZoneWrapper } from "../../commons/org_pb.js";
import type { CronExpression } from "../../commons/types_pb.js";

/**
 * ReportJob that can be scheduled to report dashboard data.
 *
 * @generated from message api.v1alpha1.bireportgenerator.ReportJob
 */
export declare class ReportJob extends Message<ReportJob> {
  /**
   * unique identifier for the report job
   *
   * @generated from field: string report_job_id = 1;
   */
  reportJobId: string;

  /**
   * name of the report job
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * description of the report job
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * dashboard id to report
   *
   * @generated from field: string dashboard_id = 4 [deprecated = true];
   * @deprecated
   */
  dashboardId: string;

  /**
   * time zone to use for the report schedule
   *
   * @generated from field: string time_zone = 5 [deprecated = true];
   * @deprecated
   */
  timeZone: string;

  /**
   * time period of data to report with
   *
   * @generated from field: api.commons.TimePeriod time_period = 6;
   */
  timePeriod: TimePeriod;

  /**
   * delivery times for the report
   *
   * @generated from field: api.commons.DeliveryTimes delivery_times = 7 [deprecated = true];
   * @deprecated
   */
  deliveryTimes?: DeliveryTimes;

  /**
   * days filter to report on
   *
   * @generated from field: api.commons.DayFilter day_filter = 8 [deprecated = true];
   * @deprecated
   */
  dayFilter?: DayFilter;

  /**
   * months filter to report on
   *
   * @generated from field: repeated api.commons.Month months = 9 [deprecated = true];
   * @deprecated
   */
  months: Month[];

  /**
   * format options for the report
   *
   * @generated from field: api.commons.FormatOptions format_options = 10;
   */
  formatOptions?: FormatOptions;

  /**
   * delivery options for the report
   *
   * @generated from field: api.commons.DeliveryOptions delivery_options = 11 [deprecated = true];
   * @deprecated
   */
  deliveryOptions?: DeliveryOptions;

  /**
   * whether the report job is active
   *
   * @generated from field: bool is_active = 12;
   */
  isActive: boolean;

  /**
   * whether to send an empty report if no data is available
   *
   * @generated from field: bool send_empty_report = 13;
   */
  sendEmptyReport: boolean;

  /**
   * dashboard resource id to report
   *
   * @generated from field: string dashboard_resource_id = 14;
   */
  dashboardResourceId: string;

  /**
   * time_zone_wrapper to use for the report schedule
   *
   * @generated from field: api.commons.TimeZoneWrapper time_zone_wrapper = 15;
   */
  timeZoneWrapper?: TimeZoneWrapper;

  /**
   * hide csv footer
   *
   * @generated from field: bool hide_csv_footer = 16;
   */
  hideCsvFooter: boolean;

  /**
   * transfer_config_sid to use for the report delivery
   *
   * @generated from field: int64 transfer_config_sid = 17;
   */
  transferConfigSid: bigint;

  /**
   * cron expression for the report schedule
   *
   * @generated from field: api.commons.CronExpression cron_expression = 18;
   */
  cronExpression?: CronExpression;

  /**
   * filename parts for the report
   *
   * @generated from field: repeated api.commons.FilenamePart filename_parts = 19;
   */
  filenameParts: FilenamePart[];

  constructor(data?: PartialMessage<ReportJob>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.bireportgenerator.ReportJob";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReportJob;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReportJob;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReportJob;

  static equals(a: ReportJob | PlainMessage<ReportJob> | undefined, b: ReportJob | PlainMessage<ReportJob> | undefined): boolean;
}


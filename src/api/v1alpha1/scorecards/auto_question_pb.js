// @generated by protoc-gen-es v1.4.2 with parameter "target=js+dts"
// @generated from file api/v1alpha1/scorecards/auto_question.proto (package api.v1alpha1.scorecards, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { FieldMask, proto3 } from "@bufbuild/protobuf";
import { AutoQuestion } from "../../commons/scorecards_pb.js";

/**
 * GetAutoQuestionRequest is the request to get an auto question.
 *
 * @generated from message api.v1alpha1.scorecards.GetAutoQuestionRequest
 */
export const GetAutoQuestionRequest = proto3.makeMessageType(
  "api.v1alpha1.scorecards.GetAutoQuestionRequest",
  () => [
    { no: 2, name: "auto_question_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * GetAutoQuestionResponse returns the auto question requested.
 *
 * @generated from message api.v1alpha1.scorecards.GetAutoQuestionResponse
 */
export const GetAutoQuestionResponse = proto3.makeMessageType(
  "api.v1alpha1.scorecards.GetAutoQuestionResponse",
  () => [
    { no: 1, name: "auto_question", kind: "message", T: AutoQuestion },
  ],
);

/**
 * CreateAutoQuestionRequest is the request to create a new auto question.
 *
 * @generated from message api.v1alpha1.scorecards.CreateAutoQuestionRequest
 */
export const CreateAutoQuestionRequest = proto3.makeMessageType(
  "api.v1alpha1.scorecards.CreateAutoQuestionRequest",
  () => [
    { no: 2, name: "auto_question", kind: "message", T: AutoQuestion },
  ],
);

/**
 * CreateAutoQuestionResponse returns the created auto question.
 *
 * @generated from message api.v1alpha1.scorecards.CreateAutoQuestionResponse
 */
export const CreateAutoQuestionResponse = proto3.makeMessageType(
  "api.v1alpha1.scorecards.CreateAutoQuestionResponse",
  () => [
    { no: 1, name: "auto_question", kind: "message", T: AutoQuestion },
  ],
);

/**
 * UpdateAutoQuestionRequest is the request to update an auto question.
 *
 * @generated from message api.v1alpha1.scorecards.UpdateAutoQuestionRequest
 */
export const UpdateAutoQuestionRequest = proto3.makeMessageType(
  "api.v1alpha1.scorecards.UpdateAutoQuestionRequest",
  () => [
    { no: 2, name: "auto_question", kind: "message", T: AutoQuestion },
    { no: 3, name: "update_mask", kind: "message", T: FieldMask },
  ],
);

/**
 * UpdateAutoQuestionResponse returns the updated auto question.
 *
 * @generated from message api.v1alpha1.scorecards.UpdateAutoQuestionResponse
 */
export const UpdateAutoQuestionResponse = proto3.makeMessageType(
  "api.v1alpha1.scorecards.UpdateAutoQuestionResponse",
  () => [
    { no: 1, name: "auto_question", kind: "message", T: AutoQuestion },
  ],
);

/**
 * DeleteAutoQuestionRequest is the request to delete an auto question.
 *
 * @generated from message api.v1alpha1.scorecards.DeleteAutoQuestionRequest
 */
export const DeleteAutoQuestionRequest = proto3.makeMessageType(
  "api.v1alpha1.scorecards.DeleteAutoQuestionRequest",
  () => [
    { no: 3, name: "auto_question_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * DeleteAutoQuestionResponse returns the deleted auto question.
 *
 * @generated from message api.v1alpha1.scorecards.DeleteAutoQuestionResponse
 */
export const DeleteAutoQuestionResponse = proto3.makeMessageType(
  "api.v1alpha1.scorecards.DeleteAutoQuestionResponse",
  () => [
    { no: 1, name: "auto_question", kind: "message", T: AutoQuestion },
  ],
);


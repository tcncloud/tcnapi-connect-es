// @generated by protoc-gen-es v1.3.0 with parameter "target=js+dts"
// @generated from file api/v1alpha1/agentsmith/service.proto (package api.v1alpha1.agentsmith, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * AgentState is the state of the agent
 *
 * @generated from enum api.v1alpha1.agentsmith.AgentState
 */
export const AgentState = proto3.makeEnum(
  "api.v1alpha1.agentsmith.AgentState",
  [
    {no: 0, name: "UNKNOWN"},
    {no: 1, name: "UNAVAILABLE"},
    {no: 2, name: "IDLE"},
    {no: 3, name: "READY"},
    {no: 4, name: "HUNGUP"},
    {no: 5, name: "DESTROYED"},
    {no: 6, name: "PEERED"},
    {no: 7, name: "PAUSED"},
    {no: 8, name: "WRAPUP"},
    {no: 10, name: "PREPARING_AFTER_IDLE"},
    {no: 11, name: "PREPARING_AFTER_WRAPUP"},
    {no: 12, name: "PREPARING_AFTER_PAUSE"},
    {no: 13, name: "PREPARING_AFTER_DIAL_CANCEL"},
    {no: 14, name: "PREPARING_AFTER_PBX_REJECT"},
    {no: 15, name: "PREPARING_AFTER_PBX_HANGUP"},
    {no: 16, name: "PREPARING_AFTER_PBX_WAS_TAKEN"},
    {no: 17, name: "PREPARING_AFTER_GUI_BUSY"},
    {no: 18, name: "MANUAL_DIAL_PREPARED"},
    {no: 19, name: "PREVIEW_DIAL_PREPARED"},
    {no: 20, name: "MANUAL_DIAL_STARTED"},
    {no: 21, name: "PREVIEW_DIAL_STARTED"},
    {no: 22, name: "OUTBOUND_LOCKED"},
    {no: 23, name: "WARM_AGENT_TRANSFER_STARTED_SOURCE"},
    {no: 24, name: "WARM_AGENT_TRANSFER_STARTED_DESTINATION"},
    {no: 25, name: "WARM_OUTBOUND_TRANSFER_STARTED"},
    {no: 26, name: "WARM_OUTBOUND_TRANSFER_PEER_LOST"},
    {no: 27, name: "PBX_POPUP_LOCKED"},
    {no: 28, name: "PEERED_WITH_CALL_ON_HOLD"},
    {no: 29, name: "CALLBACK_RESUMING"},
    {no: 30, name: "GUI_BUSY"},
    {no: 31, name: "INTERCOM"},
    {no: 32, name: "INTERCOM_RINGING_SOURCE"},
    {no: 33, name: "INTERCOM_RINGING_DESTINATION"},
    {no: 34, name: "WARM_OUTBOUND_TRANSFER_OUTBOUND_LOST"},
    {no: 35, name: "PREPARED_TO_PEER"},
    {no: 36, name: "WARM_SKILL_TRANSFER_SOURCE_PENDING"},
    {no: 37, name: "CALLER_TRANSFER_STARTED"},
    {no: 38, name: "CALLER_TRANSFER_LOST_PEER"},
    {no: 39, name: "CALLER_TRANSFER_LOST_MERGED_CALLER"},
    {no: 40, name: "COLD_OUTBOUND_TRANSFER_STARTED"},
    {no: 41, name: "COLD_AGENT_TRANSFER_STARTED"},
  ],
);

/**
 * FollowAgentReq is the request for the FollowAgent method.
 *
 * @generated from message api.v1alpha1.agentsmith.FollowAgentReq
 */
export const FollowAgentReq = proto3.makeMessageType(
  "api.v1alpha1.agentsmith.FollowAgentReq",
  () => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "id" },
    { no: 2, name: "asm_session_sid", kind: "scalar", T: 3 /* ScalarType.INT64 */, oneof: "id" },
  ],
);

/**
 * FollowAgentRes is the response for the FollowAgent method. Each message is an event associated with the
 * agent session and represents a change in the state of the agent session.
 *
 * @generated from message api.v1alpha1.agentsmith.FollowAgentRes
 */
export const FollowAgentRes = proto3.makeMessageType(
  "api.v1alpha1.agentsmith.FollowAgentRes",
  () => [
    { no: 1, name: "ts", kind: "message", T: Timestamp },
    { no: 10, name: "agent_state_change", kind: "message", T: AgentStateChangeEvent, oneof: "event" },
    { no: 11, name: "agent_voice_start", kind: "message", T: AgentVoiceStartEvent, oneof: "event" },
    { no: 12, name: "agent_voice_end", kind: "message", T: AgentVoiceEndEvent, oneof: "event" },
    { no: 13, name: "agent_session_end", kind: "message", T: AgentSessionEndEvent, oneof: "event" },
  ],
);

/**
 * AgentStateChangeEvent is the event that is triggered when the agent state changes in the agent interface.
 *
 * @generated from message api.v1alpha1.agentsmith.AgentStateChangeEvent
 */
export const AgentStateChangeEvent = proto3.makeMessageType(
  "api.v1alpha1.agentsmith.AgentStateChangeEvent",
  () => [
    { no: 1, name: "old_state", kind: "enum", T: proto3.getEnumType(AgentState) },
    { no: 2, name: "new_state", kind: "enum", T: proto3.getEnumType(AgentState) },
    { no: 10, name: "empty", kind: "message", T: EmptyState, oneof: "state_details" },
  ],
);

/**
 * EmptyState is a debugging state (for now)
 *
 * @generated from message api.v1alpha1.agentsmith.EmptyState
 */
export const EmptyState = proto3.makeMessageType(
  "api.v1alpha1.agentsmith.EmptyState",
  [],
);

/**
 * AgentVoiceStartEvent is the event that is triggered when the agent starts a voice session.
 *
 * @generated from message api.v1alpha1.agentsmith.AgentVoiceStartEvent
 */
export const AgentVoiceStartEvent = proto3.makeMessageType(
  "api.v1alpha1.agentsmith.AgentVoiceStartEvent",
  () => [
    { no: 1, name: "sip_dial_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * AgentVoiceEndEvent is the event that is triggered when the agent ends a voice session.
 *
 * @generated from message api.v1alpha1.agentsmith.AgentVoiceEndEvent
 */
export const AgentVoiceEndEvent = proto3.makeMessageType(
  "api.v1alpha1.agentsmith.AgentVoiceEndEvent",
  [],
);

/**
 * AgentSessionEndEvent is the event that is triggered when the agent session is closed.
 *
 * @generated from message api.v1alpha1.agentsmith.AgentSessionEndEvent
 */
export const AgentSessionEndEvent = proto3.makeMessageType(
  "api.v1alpha1.agentsmith.AgentSessionEndEvent",
  [],
);


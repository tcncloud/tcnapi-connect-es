// @generated by protoc-gen-es v1.7.2 with parameter "target=js+dts"
// @generated from file api/v1alpha1/contactmanager/contactmanager.proto (package api.v1alpha1.contactmanager, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { FieldMask, proto3 } from "@bufbuild/protobuf";
import { ContactManagerEntry, ContactManagerList } from "../../commons/contactmanager_pb.js";

/**
 * New Proto's For Get and List - Contact List and Contact Entries
 *
 * @generated from message api.v1alpha1.contactmanager.GetContactListRequest
 */
export const GetContactListRequest = proto3.makeMessageType(
  "api.v1alpha1.contactmanager.GetContactListRequest",
  () => [
    { no: 1, name: "request_mask", kind: "message", T: FieldMask },
    { no: 2, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v1alpha1.contactmanager.GetContactListResponse
 */
export const GetContactListResponse = proto3.makeMessageType(
  "api.v1alpha1.contactmanager.GetContactListResponse",
  () => [
    { no: 1, name: "contact_list", kind: "message", T: ContactManagerList, repeated: true },
  ],
);

/**
 * @generated from message api.v1alpha1.contactmanager.ListContactEntryListRequest
 */
export const ListContactEntryListRequest = proto3.makeMessageType(
  "api.v1alpha1.contactmanager.ListContactEntryListRequest",
  () => [
    { no: 1, name: "contact_manager_list_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "project_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * List all Unencrypted Data. Encrypted Data would be sent On Double Click of the Record
 * Seperate API to List All Encrypted Data
 *
 * @generated from message api.v1alpha1.contactmanager.ListContactEntryListResponse
 */
export const ListContactEntryListResponse = proto3.makeMessageType(
  "api.v1alpha1.contactmanager.ListContactEntryListResponse",
  () => [
    { no: 1, name: "contact_entry", kind: "message", T: ContactManagerEntry, repeated: true },
  ],
);

/**
 * @generated from message api.v1alpha1.contactmanager.GetEncContactEntryRequest
 */
export const GetEncContactEntryRequest = proto3.makeMessageType(
  "api.v1alpha1.contactmanager.GetEncContactEntryRequest",
  () => [
    { no: 1, name: "contact_manager_entry_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message api.v1alpha1.contactmanager.GetEncContactEntryResponse
 */
export const GetEncContactEntryResponse = proto3.makeMessageType(
  "api.v1alpha1.contactmanager.GetEncContactEntryResponse",
  () => [
    { no: 1, name: "contact_entry", kind: "message", T: ContactManagerEntry, repeated: true },
  ],
);


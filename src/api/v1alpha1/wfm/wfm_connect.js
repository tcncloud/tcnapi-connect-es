// Copyright (c) 2020, TCN Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-es v0.9.1
// @generated from file api/v1alpha1/wfm/wfm.proto (package api.v1alpha1.wfm, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { BuildAgentDiagnosticsReq, BuildAgentDiagnosticsRes, BuildCallProfileTemplateForSkillProfileReq, BuildCallProfileTemplateForSkillProfileRes, BuildDOWAndMOYProfilesReq, BuildDOWAndMOYProfilesRes, BuildDraftScheduleReq, BuildDraftScheduleRes, BuildGlobalDiagnosticsReq, BuildGlobalDiagnosticsRes, BuildNodeDiagnosticsReq, BuildNodeDiagnosticsRes, BuildProfileForecastByIntervalReq, BuildProfileForecastByIntervalWithStatsReq, BuildProfileForecastByIntervalWithStatsRes, BuildRegressionForecastByIntervalReq, BuildRegressionForecastByIntervalWithStatsReq, BuildRegressionForecastByIntervalWithStatsRes, BuildShiftTemplateDiagnosticsReq, BuildShiftTemplateDiagnosticsRes, CalculateTrainingDataAveragesForSkillProfileReq, CalculateTrainingDataAveragesForSkillProfileRes, CallDataByInterval, CopyScenarioReq, CopyScenarioRes, CreateAgentAvailabilityPatternReq, CreateAgentAvailabilityPatternRes, CreateAgentGroupReq, CreateAgentGroupRes, CreateCallProfileTemplateReq, CreateCallProfileTemplateRes, CreateClientNodeReq, CreateClientNodeRes, CreateConstraintRuleReq, CreateConstraintRuleRes, CreateDraftScheduleReq, CreateDraftScheduleRes, CreateInactiveSkillProfileMappingReq, CreateInactiveSkillProfileMappingRes, CreateLocationNodeReq, CreateLocationNodeRes, CreateNonSkillActivityReq, CreateNonSkillActivityRes, CreateOpenTimesPatternReq, CreateOpenTimesPatternRes, CreatePlacementRuleReq, CreatePlacementRuleRes, CreateProgramNodeReq, CreateProgramNodeRes, CreateRegressionTemplateReq, CreateRegressionTemplateRes, CreateScheduleScenarioWithNodesReq, CreateScheduleScenarioWithNodesRes, CreateShiftInstanceReq, CreateShiftInstanceRes, CreateShiftTemplateReq, CreateShiftTemplateRes, CreateSkillProficienciesReq, CreateSkillProficienciesRes, CreateWFMAgentMembershipsReq, CreateWFMAgentMembershipsRes, DeleteAgentAvailabilityPatternReq, DeleteAgentAvailabilityPatternRes, DeleteCallProfileTemplateReq, DeleteCallProfileTemplateRes, DeleteConstraintRuleReq, DeleteConstraintRuleRes, DeleteDraftScheduleReq, DeleteDraftScheduleRes, DeleteForecastIntervalsReq, DeleteForecastIntervalsRes, DeleteHistoricalDataDeltasReq, DeleteHistoricalDataDeltasRes, DeleteOpenTimesPatternReq, DeleteOpenTimesPatternRes, DeletePlacementRuleReq, DeletePlacementRuleRes, DeleteRegressionTemplateReq, DeleteRegressionTemplateRes, DeleteSchedulingTargetReq, DeleteSchedulingTargetRes, DeleteShiftInstancesReq, DeleteShiftInstancesRes, DeleteSkillProficiencyReq, DeleteSkillProficiencyRes, DeleteWFMAgentMembershipsReq, DeleteWFMAgentMembershipsRes, DisconnectInactiveSkillProfileMappingReq, DisconnectInactiveSkillProfileMappingRes, GetAvailabilityBitmapsReq, GetAvailabilityBitmapsRes, GetAvailableRegressionForecasterModelTypesReq, GetAvailableRegressionForecasterModelTypesRes, GetDraftScheduleReq, GetDraftScheduleRequiredCallsReq, GetDraftScheduleRequiredCallsRes, GetDraftScheduleRes, GetForecastingParametersReq, GetForecastingParametersRes, GetLastSkillProfileResyncDateReq, GetLastSkillProfileResyncDateRes, GetOpenTimesBitmapsReq, GetOpenTimesBitmapsRes, GetPerformanceMetricsReq, GetPerformanceMetricsRes, GetPublishedScheduleReq, GetPublishedScheduleRequiredCallsReq, GetPublishedScheduleRequiredCallsRes, GetPublishedScheduleRes, GetSchedulingTargetReq, GetSchedulingTargetRes, GetSkillProfileReq, GetSkillProfileRes, GetSkillProfilesCountReq, GetSkillProfilesCountRes, ListAllWFMAgentsReq, ListAllWFMAgentsRes, ListCallProfileTemplatesReq, ListCallProfileTemplatesRes, ListCandidateSchedulingActivitiesReq, ListCandidateSchedulingActivitiesRes, ListCandidateWFMAgentsReq, ListCandidateWFMAgentsRes, ListConfigEntitiesReq, ListConfigEntitiesRes, ListDraftSchedulesReq, ListDraftSchedulesRes, ListForecastIntervalsForSkillProfileReq, ListHistoricalDataForAllSkillProfilesReq, ListHistoricalDataForAllSkillProfilesRes, ListHistoricalDataReq, ListHistoricalDataRes, ListNonSkillActivityAssociationsReq, ListNonSkillActivityAssociationsRes, ListRegressionTemplatesReq, ListRegressionTemplatesRes, ListRequiredCallsIntervalsReq, ListRequiredCallsIntervalsRes, ListShiftSegmentsByShiftInstanceSidsReq, ListShiftSegmentsByShiftInstanceSidsRes, ListShiftTemplatesBySidsReq, ListShiftTemplatesBySidsRes, ListSkillProfilesReq, ListSkillProfilesRes, ListSkillsReq, ListSkillsRes, ListTopSkillProfilesReq, ListTopSkillProfilesRes, ListUngroupedWFMAgentsReq, ListUngroupedWFMAgentsRes, ListWFMAgentsAssociatedWithAgentGroupReq, ListWFMAgentsAssociatedWithAgentGroupRes, PublishDraftScheduleReq, PublishDraftScheduleRes, ResyncSkillProfilesReq, ResyncSkillProfilesRes, SetSchedulingTargetReq, SetSchedulingTargetRes, SwapShiftInstancesReq, SwapShiftInstancesRes, UpdateAgentAvailabilityPatternReq, UpdateAgentAvailabilityPatternRes, UpdateAgentGroupReq, UpdateAgentGroupRes, UpdateCallCenterNodeReq, UpdateCallCenterNodeRes, UpdateClientNodeReq, UpdateClientNodeRes, UpdateConstraintRuleReq, UpdateConstraintRuleRes, UpdateDraftScheduleReq, UpdateDraftScheduleRes, UpdateLocationNodeReq, UpdateLocationNodeRes, UpdateNonSkillActivityReq, UpdateNonSkillActivityRes, UpdateOpenTimesPatternReq, UpdateOpenTimesPatternRes, UpdatePlacementRuleReq, UpdatePlacementRuleRes, UpdateProgramNodeReq, UpdateProgramNodeRes, UpdateScheduleScenarioReq, UpdateScheduleScenarioRes, UpdateShiftInstanceReq, UpdateShiftInstanceRes, UpdateShiftTemplateReq, UpdateShiftTemplateRes, UpdateSkillProficienciesReq, UpdateSkillProficienciesRes, UpdateSkillProfileAveragesUsingHistoricalDataReq, UpdateSkillProfileAveragesUsingHistoricalDataRes, UpdateSkillProfileProficienciesReq, UpdateSkillProfileProficienciesRes, UpdateSkillProfileReq, UpdateSkillProfileRes, UpdateWFMAgentReq, UpdateWFMAgentRes, UpsertForecastDataDeltaReq, UpsertForecastDataDeltaRes, UpsertForecastDataDeltasReq, UpsertForecastDataDeltasRes, UpsertForecastingParametersReq, UpsertForecastingParametersRes, UpsertHistoricalDataDeltaReq, UpsertHistoricalDataDeltaRes, UpsertHistoricalDataDeltasReq, UpsertHistoricalDataDeltasRes, UpsertNonSkillActivityAssociationReq, UpsertNonSkillActivityAssociationRes, UpsertProfileForecastReq, UpsertProfileForecastRes, UpsertRegressionForecastReq, UpsertRegressionForecastRes } from "./wfm_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * WFM is responsible for call prediction and call volume calculations based on call skills and other parameters.
 *
 * @generated from service api.v1alpha1.wfm.WFM
 */
export const WFM = {
  typeName: "api.v1alpha1.wfm.WFM",
  methods: {
    /**
     * Retrieves all the skill profiles of the org sending the request.
     * Also it can return the skills of each of the returned profiles.
     * Required permissions:
     *   NONE
     * Errors:
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListSkillProfiles
     */
    listSkillProfiles: {
      name: "ListSkillProfiles",
      I: ListSkillProfilesReq,
      O: ListSkillProfilesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the @name, and averages of a skill profile that has the given @skill_profile_sid.
     * It also updates it to no longer be unnamed.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @skill_profile_sid, @name or averages in the request are invalid.
     *   - grpc.Internal: error occurs when updating the skill profile.
     *   - grpc.NotFound: entry to be updated doesn't exist.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateSkillProfile
     */
    updateSkillProfile: {
      name: "UpdateSkillProfile",
      I: UpdateSkillProfileReq,
      O: UpdateSkillProfileRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the @proficiencies for the given skill profile's skills that belong the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @proficiencies in the request are invalid.
     *   - grpc.Internal: error occurs when updating the skill profiles proficiencies.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateSkillProfileProficiencies
     */
    updateSkillProfileProficiencies: {
      name: "UpdateSkillProfileProficiencies",
      I: UpdateSkillProfileProficienciesReq,
      O: UpdateSkillProfileProficienciesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Get a skill profile that has the given @skill_profile_sid.
     * It also gets all the skills and the mappings associated with that profile.
     * If the @inactive_as_of_date of the skill profile is nil then the mapping is of inactive profiles to this one,
     * otherwise the mapping is of this profile to an active one.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @skill_profile_sid in the request is invalid.
     *   - grpc.Internal: error occurs when getting the skill profile.
     *   - grpc.NotFound: skill profile doesn't exist.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetSkillProfile
     */
    getSkillProfile: {
      name: "GetSkillProfile",
      I: GetSkillProfileReq,
      O: GetSkillProfileRes,
      kind: MethodKind.Unary,
    },
    /**
     * Resyncs the skill profiles of the org sending the request.
     * It will add skills and skill profiles based on that client's historical call data.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Internal: error occurs when creating the new skills and skill profiles.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ResyncSkillProfiles
     */
    resyncSkillProfiles: {
      name: "ResyncSkillProfiles",
      I: ResyncSkillProfilesReq,
      O: ResyncSkillProfilesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the last date of a skill profile resync for the org seding the request.
     * If the org has never done a skill profile resync @resync_date will not be set.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Internal: error occurs when getting the resync date.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetLastSkillProfileResyncDate
     */
    getLastSkillProfileResyncDate: {
      name: "GetLastSkillProfileResyncDate",
      I: GetLastSkillProfileResyncDateReq,
      O: GetLastSkillProfileResyncDateRes,
      kind: MethodKind.Unary,
    },
    /**
     * Tries to create an entry for the given forecasting parameters for the org sending the request.
     * If the org already has an entry for them, it will update the already existing entry.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @forecasting_parameters in the request is invalid.
     *   - grpc.Internal: error occurs when upserting the parameters.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpsertForecastingParameters
     */
    upsertForecastingParameters: {
      name: "UpsertForecastingParameters",
      I: UpsertForecastingParametersReq,
      O: UpsertForecastingParametersRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the forecasting parameters for the org sending the request.
     * If the org hasn't created any parameters, it will return the default parameters.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Internal: error occurs when getting the parameters.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetForecastingParameters
     */
    getForecastingParameters: {
      name: "GetForecastingParameters",
      I: GetForecastingParametersReq,
      O: GetForecastingParametersRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the historical data for the org sending the request and the given @skill_profile_sid.
     * It will look through the client's call history and generate the historical data by using their configured forecasting parameters (historical data period and interval width).
     * The duration of each interval will be the interval width of the org's forecasting parameters.
     * It also applies any deltas that the client has stored for the given @SkillProfileSid.
     * If the client has no historical data, only the deltas will be applied to the returned intervals, all other intervals will have nil averages.
     * If any inactive skill profiles are mapped to the given @skill_profile_sid, the call history and deltas of those skill profiles will be included for the historical data calculation.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @skill_profile_sid in the request is invalid.
     *   - grpc.NotFound: the @skill_profile_sid given is not found for the org.
     *   - grpc.Internal: error occurs when getting the historical data.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListHistoricalData
     */
    listHistoricalData: {
      name: "ListHistoricalData",
      I: ListHistoricalDataReq,
      O: ListHistoricalDataRes,
      kind: MethodKind.Unary,
    },
    /**
     * Tries to create an entry for the given @delta for the org sending the request.
     * If the org already has an entry for it, it will update the already exisiting entry.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @delta in the request is invalid.
     *   - grpc.Internal: error occurs when upserting the historical data interval.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpsertHistoricalDataDelta
     */
    upsertHistoricalDataDelta: {
      name: "UpsertHistoricalDataDelta",
      I: UpsertHistoricalDataDeltaReq,
      O: UpsertHistoricalDataDeltaRes,
      kind: MethodKind.Unary,
    },
    /**
     * Tries to create entries for the given @deltas.
     * If the given org already has an entry for any of the deltas, it will replace the already existing entries.
     * This is made into a unary due to the UI's lack of support for client streams.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @deltas in the request are invalid.
     *   - grpc.Internal: error occurs when upserting the historical data deltas.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpsertHistoricalDataDeltas
     */
    upsertHistoricalDataDeltas: {
      name: "UpsertHistoricalDataDeltas",
      I: UpsertHistoricalDataDeltasReq,
      O: UpsertHistoricalDataDeltasRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets all the skills that the org sending the request has.
     * Skills returned will be sorted by @skill_sid in ascending order.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Internal: error occurs when getting the skills.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListSkills
     */
    listSkills: {
      name: "ListSkills",
      I: ListSkillsReq,
      O: ListSkillsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Builds and returns a call profile template for the org sending the request and the given @skill_profile_sid.
     * The template will be generated using the training data for said skill profile using the @training_data_range and @averages_calculation_range_in_months
     * from the client's saved forecasting parameters.
     * The @total_calls in the returned template be summed from the (@training_data_start_datetime - @averages_calculation_range_in_months) to @training_data_end_datetime,
     * or from @training_data_start_datetime to @training_data_end_datetime if @averages_calculation_range_in_months is 0.
     * The fixed averages fields in the call profile template, will be set to the averages that the skill profile has.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @skill_profile_sid in the request is invalid.
     *   - grpc.NotFound: the @skill_profile_sid given is not found for the org.
     *   - grpc.Internal: error occurs when building the call profile template.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.BuildCallProfileTemplateForSkillProfile
     */
    buildCallProfileTemplateForSkillProfile: {
      name: "BuildCallProfileTemplateForSkillProfile",
      I: BuildCallProfileTemplateForSkillProfileReq,
      O: BuildCallProfileTemplateForSkillProfileRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates a mapping entry for the @inactive_skill_profile_sid to the @active_skill_profile_sid for the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @inactive_skill_profile_sid, or @active_skill_profile_sid in the request are invalid.
     *                   the @inactive_skill_profile_sid given is of an active skill profile.
     *                   the @active_skill_profile_sid given is of an inactive skill profile.
     *   - grpc.Internal: error occurs when creating the inactive skill profile mapping.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateInactiveSkillProfileMapping
     */
    createInactiveSkillProfileMapping: {
      name: "CreateInactiveSkillProfileMapping",
      I: CreateInactiveSkillProfileMappingReq,
      O: CreateInactiveSkillProfileMappingRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets a list of enums that represent all of the forecaster types that are currently available for use
     * Required permissions:
     *  NONE
     * Errors:
     *  -grpc.Internal: error occurs when contacting the forecaster to get the available forecaster types.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetAvailableRegressionForecasterModelTypes
     */
    getAvailableRegressionForecasterModelTypes: {
      name: "GetAvailableRegressionForecasterModelTypes",
      I: GetAvailableRegressionForecasterModelTypesReq,
      O: GetAvailableRegressionForecasterModelTypesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Changes the current mapping for the given @inactive_skill_profile_sid to be disconnected.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @inactive_skill_profile_sid in the request is invalid.
     *   - grpc.NotFound: the skill profile is not found for the org.
     *   - grpc.Internal: the current mapping for the given @inactive_skill_profile_sid is already disconnected,
     * 				            the given @inactive_skill_profile_sid is of an active skill profile.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DisconnectInactiveSkillProfileMapping
     */
    disconnectInactiveSkillProfileMapping: {
      name: "DisconnectInactiveSkillProfileMapping",
      I: DisconnectInactiveSkillProfileMappingReq,
      O: DisconnectInactiveSkillProfileMappingRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes deltas whose dates match the given @start_datetimes for the given @skill_profile_sid.
     * If no @start_datetimes are given, it will delete all the deltas that the given @skill_profile_sid has.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @skill_profile_sid, or @start_datetimes in the request are invalid.
     *   - grpc.NotFound: no matching deltas are found for deletion.
     *   - grpc.Internal: error occurs during the deletion of the historical data interval.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteHistoricalDataDeltas
     */
    deleteHistoricalDataDeltas: {
      name: "DeleteHistoricalDataDeltas",
      I: DeleteHistoricalDataDeltasReq,
      O: DeleteHistoricalDataDeltasRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the top N skill profiles with the highest calls_count for org sending the request where N is @max_number_of_profiles.
     * It will also return the number of skills found for that profile.
     * Individual skills that each profile has will not be returned.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @max_number_of_profiles in the request is invalid.
     *   - grpc.Internal: error occurs when getting the skill profiles.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListTopSkillProfiles
     */
    listTopSkillProfiles: {
      name: "ListTopSkillProfiles",
      I: ListTopSkillProfilesReq,
      O: ListTopSkillProfilesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the total number of skill profiles associated with the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Internal: error occurs when getting the skill profiles count.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetSkillProfilesCount
     */
    getSkillProfilesCount: {
      name: "GetSkillProfilesCount",
      I: GetSkillProfilesCountReq,
      O: GetSkillProfilesCountRes,
      kind: MethodKind.Unary,
    },
    /**
     * Builds a profile forecast using the provided @call_profile_template.
     * The forecaster will produce intervals from the following range using the client's saved forecasting parameters:
     * (@training_data_range_end_datetime - @forecast_test_range_in_weeks) to @forecast_range_end_datetime.
     * The @total_calls in the @call_profile_template will be scaled using the same ranges as BuildCallProfileTemplateForSkillProfile.
     * The @fixed_averages_forecast field indicates whether or not to do a fixed averages forecast.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @skill_profile_sid or @call_profile_template in the request is invalid.
     *   - grpc.Internal: error occurs during the building of the profile forecast.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.BuildProfileForecastByInterval
     */
    buildProfileForecastByInterval: {
      name: "BuildProfileForecastByInterval",
      I: BuildProfileForecastByIntervalReq,
      O: CallDataByInterval,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * Builds a profile forecast using the provided @call_profile_template.
     * The forecaster will produce intervals from the following range using the client's saved forecasting parameters:
     * (@training_data_range_end_datetime - @forecast_test_range_in_weeks) to @forecast_range_end_datetime.
     * The @total_calls in the @call_profile_template will be scaled using the same ranges as BuildCallProfileTemplateForSkillProfile.
     * The @fixed_averages_forecast field indicates whether or not to do a fixed averages forecast.
     * It also returns the statistics of the produced forecast by using the test data of the given @skill_profile_sid.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @skill_profile_sid or @call_profile_template in the request is invalid.
     *   - grpc.Internal: error occurs during the building of the profile forecast.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.BuildProfileForecastByIntervalWithStats
     */
    buildProfileForecastByIntervalWithStats: {
      name: "BuildProfileForecastByIntervalWithStats",
      I: BuildProfileForecastByIntervalWithStatsReq,
      O: BuildProfileForecastByIntervalWithStatsRes,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * Builds a profile forecast for the given @skill_profile_sid and org sending the request using the given @call_profile_template.
     * The forecaster will produce intervals from the following range using the client's saved forecasting parameters:
     * @forecast_range_start_datetime to @forecast_range_end_datetime.
     * The @total_calls in the @call_profile_template will be scaled using the same ranges as BuildCallProfileTemplateForSkillProfile.
     * The intervals produced will be saved in the database.
     * The @fixed_averages_forecast field indicates whether or not to do a fixed averages forecast.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @skill_profile_sid or @call_profile_template in the request are invalid.
     *   - grpc.NotFound: the @skill_profile_sid doesn't exist.
     *   - grpc.Internal: error occurs when upserting the profile forecast.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpsertProfileForecast
     */
    upsertProfileForecast: {
      name: "UpsertProfileForecast",
      I: UpsertProfileForecastReq,
      O: UpsertProfileForecastRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates the given @call_profile_template for the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @call_profile_template in the request is invalid.
     *   - grpc.Internal: error occurs during the creation of the call profile.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateCallProfileTemplate
     */
    createCallProfileTemplate: {
      name: "CreateCallProfileTemplate",
      I: CreateCallProfileTemplateReq,
      O: CreateCallProfileTemplateRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes a call profile template for the requesting org that has the given @call_profile_template_sid.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @call_profile_template_sid in the request is invalid.
     *   - grpc.Internal: error occurs during the deletion of the call profile.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteCallProfileTemplate
     */
    deleteCallProfileTemplate: {
      name: "DeleteCallProfileTemplate",
      I: DeleteCallProfileTemplateReq,
      O: DeleteCallProfileTemplateRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates an entry for the @regression_template for the requesting org.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @regression_template in the request is invalid.
     *   - grpc.Internal: error occurs when creating the regression template.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateRegressionTemplate
     */
    createRegressionTemplate: {
      name: "CreateRegressionTemplate",
      I: CreateRegressionTemplateReq,
      O: CreateRegressionTemplateRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes a regression template for the requesting org that has the given @regression_template_sid.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @regression_template_sid in the request is invalid.
     *   - grpc.Internal: error occurs during the deletion of the regression template.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteRegressionTemplate
     */
    deleteRegressionTemplate: {
      name: "DeleteRegressionTemplate",
      I: DeleteRegressionTemplateReq,
      O: DeleteRegressionTemplateRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets all the regression templates that the org sending the request has.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Internal: error occurs when getting the regression templates.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListRegressionTemplates
     */
    listRegressionTemplates: {
      name: "ListRegressionTemplates",
      I: ListRegressionTemplatesReq,
      O: ListRegressionTemplatesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the forecast data intervals for the given @skill_profile_sid.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @skill_profile_sid in the request is invalid.
     *   - grpc.Internal: error occurs when getting the forecast data intervals.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListForecastIntervalsForSkillProfile
     */
    listForecastIntervalsForSkillProfile: {
      name: "ListForecastIntervalsForSkillProfile",
      I: ListForecastIntervalsForSkillProfileReq,
      O: CallDataByInterval,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * Generates a regression forecast using the provided @regression_template.
     * It will generate forecast intervals for the skill profiles sids in @skill_profile_sids_to_forecast,
     * if the list is empty or has no valid skill profile sids, it will generate and save forecasts for all active skill profiles.
     * It will use the client's saved forecasting test range as the start datetime and the forecast range as the end datetime of the forecasted data.
     * It will use the client's saved interval width to divide the resulting forecast intervals.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @regression_template in the request is invalid.
     *   - grpc.Internal: error occurs during the building of the regression forecast.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.BuildRegressionForecastByInterval
     */
    buildRegressionForecastByInterval: {
      name: "BuildRegressionForecastByInterval",
      I: BuildRegressionForecastByIntervalReq,
      O: CallDataByInterval,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * Generates a regression forecast and calculates forecast statistics using the provided @regression_template.
     * It will generate forecast intervals for the skill profiles sids in @skill_profile_sids_to_forecast,
     * if the list is empty or has no valid skill profile sids, it will generate and save forecasts for all active skill profiles.
     * It will use the client's saved forecasting test range as the start datetime and the forecast range as the end datetime of the forecasted data.
     * It will use the client's saved interval width to divide the resulting forecast intervals.
     * The first message received will be the forecast statistics while all subsequent ones will be the forecast intervals.
     *
     * Errors:
     *   - grpc.Invalid: the @regression_template in the request is invalid.
     *   - grpc.Internal: error occurs either during the when building the forecast or calculating the stats.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.BuildRegressionForecastByIntervalWithStats
     */
    buildRegressionForecastByIntervalWithStats: {
      name: "BuildRegressionForecastByIntervalWithStats",
      I: BuildRegressionForecastByIntervalWithStatsReq,
      O: BuildRegressionForecastByIntervalWithStatsRes,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * Gets the call profile templates that the org sending the request has.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Internal: error occurs when getting the templates.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListCallProfileTemplates
     */
    listCallProfileTemplates: {
      name: "ListCallProfileTemplates",
      I: ListCallProfileTemplatesReq,
      O: ListCallProfileTemplatesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Builds a regression forecast for the org using the given @regression_template and saves the resulting intervals in the db.
     * It will generate forecast intervals for the skill profiles sids in @save_forecasts_for_skill_profile_sids,
     * if the list is empty or has no valid skill profile sids, it will generate and save forecasts for all active skill profiles.
     * If any intervals produced already exist in the db, they will be replaced with the ones produced.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @regression_template in the request is invalid.
     *   - grpc.Internal: error occurs when upserting the regression forecast.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpsertRegressionForecast
     */
    upsertRegressionForecast: {
      name: "UpsertRegressionForecast",
      I: UpsertRegressionForecastReq,
      O: UpsertRegressionForecastRes,
      kind: MethodKind.Unary,
    },
    /**
     * Tries to create an entry for the given @delta for the org sending the request.
     * If the org already has an entry for it, it will update the already exisiting entry.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @delta in the request is invalid.
     *   - grpc.Internal: error occurs when upserting the forecast data delta.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpsertForecastDataDelta
     */
    upsertForecastDataDelta: {
      name: "UpsertForecastDataDelta",
      I: UpsertForecastDataDeltaReq,
      O: UpsertForecastDataDeltaRes,
      kind: MethodKind.Unary,
    },
    /**
     * Tries to create entries for the given @deltas.
     * If the org already has entries for any of them, it will update the already existing entry.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @deltas in the request are invalid.
     *   - grpc.Internal: error occurs when upserting the forecast data deltas.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpsertForecastDataDeltas
     */
    upsertForecastDataDeltas: {
      name: "UpsertForecastDataDeltas",
      I: UpsertForecastDataDeltasReq,
      O: UpsertForecastDataDeltasRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes forecast data intervals/deltas based on the parameters provided.
     * If @delete_param is type skill_profile_sid, then the intervals/deltas to be deleted will be
     * associated with that id. If @delete_param is type interval_sids, then the intervals/deltas to be
     * deleted will be contained in the list @interval_sids. The @delete_type field determines which
     * table(s) in the database the intervals/deltas will be deleted from.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: one of the @delete_params is invalid
     *   - grpc.NotFound: no matching intervals/deltas are found for deletion.
     *   - grpc.Internal: error occurs during the deletion of the forecast data intervals/deltas.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteForecastIntervals
     */
    deleteForecastIntervals: {
      name: "DeleteForecastIntervals",
      I: DeleteForecastIntervalsReq,
      O: DeleteForecastIntervalsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Retrieves the history for all the skill profiles of the requesting org.
     * Each value in every interval that has the same @start_datetime of each skill profile will be summed then averaged and made into a single one.
     * When calculating the averages, each interval's values will be weighted by the number of @total_calls it has.
     * History will be sorted by @start_datetime in ascending order, and the range is determined by the client's historical range.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Internal: error occurs when retriving the history.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListHistoricalDataForAllSkillProfiles
     */
    listHistoricalDataForAllSkillProfiles: {
      name: "ListHistoricalDataForAllSkillProfiles",
      I: ListHistoricalDataForAllSkillProfilesReq,
      O: ListHistoricalDataForAllSkillProfilesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Converts the given @profile_tod and @profile_woms to a ProfileDOW and ProfileMOY.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @profile_tod or @profile_woms in the request are invalid.
     *   - grpc.Internal: error occurs when building the ProfileDOW or ProfileMOY.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.BuildDOWAndMOYProfiles
     */
    buildDOWAndMOYProfiles: {
      name: "BuildDOWAndMOYProfiles",
      I: BuildDOWAndMOYProfilesReq,
      O: BuildDOWAndMOYProfilesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Calculates and returns the averages in the training data for the given @skill_profile_sid.
     * Averages to be returned will be weighted by the number of calls that each training data interval has.
     * The start time that the training data will be averaged can be modified based on the forecasting parameter @averages_calculation_range_in_months,
     * which will subtract that many months from the training data range end datetime and set it as the start time.
     * If @averages_calculation_range_in_months is 0, it will use the training data range start datetime.
     *
     * Errors:
     *   - grpc.Invalid: the @skill_profile_sid in the request is invalid.
     *   - grpc.NotFound: the @skill_profile_sid given is not found.
     *   - grpc.Internal: error occurs when calculating the averages from the training data.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CalculateTrainingDataAveragesForSkillProfile
     */
    calculateTrainingDataAveragesForSkillProfile: {
      name: "CalculateTrainingDataAveragesForSkillProfile",
      I: CalculateTrainingDataAveragesForSkillProfileReq,
      O: CalculateTrainingDataAveragesForSkillProfileRes,
      kind: MethodKind.Unary,
    },
    /**
     * Calculates the averages for call characteristics using the historical data of the given @skill_profile_sids and org sending the request.
     * If no @skill_profile_sids are given, it will calculate the averages for all skill profiles for the given @org_id.
     * Averages will be weighted by the number of calls that each historical data interval has.
     * Once the averages are calculated, they will be updated in the db for those skill profiles.
     *
     * If a nil @datetime_range is given then the range used will be @training_data_range_end_datetime - @averages_calculation_range_in_months to the @training_data_range_end_datetime from the forecasting parameters.
     * If @averages_calculation_range_in_months is 0, it will use the @training_data_range_start_datetime as the start datetime of the range.
     *
     * If @exclude_skill_profiles_with_manual_averages is true, it will exclude skill profiles that have manual averages from the calculation
     * even if those skill profiles are in @skill_profile_sids.
     *
     * Errors:
     *   - grpc.Internal: error occurs when calculating the averages from the historical data.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateSkillProfileAveragesUsingHistoricalData
     */
    updateSkillProfileAveragesUsingHistoricalData: {
      name: "UpdateSkillProfileAveragesUsingHistoricalData",
      I: UpdateSkillProfileAveragesUsingHistoricalDataReq,
      O: UpdateSkillProfileAveragesUsingHistoricalDataRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the call center @node that has the given @call_center_node_sid.
     * All of the entity's parameters that are not desired to be updated must be filled with their current values.
     * The @schedule_scenario_sid must be the original for this call center node since it cannot be changed.
     * The @member fields will be ignored since those cannot be updated by this method and must be updated by their respective update methods.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the one or more of the fields in the request are invalid.
     *   - grpc.Internal: error occurs when updating the call center node.
     *   - grpc.NotFound: entry to be updated doesn't exist.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateCallCenterNode
     */
    updateCallCenterNode: {
      name: "UpdateCallCenterNode",
      I: UpdateCallCenterNodeReq,
      O: UpdateCallCenterNodeRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates the given client @node for the org sending the request and @parent_sid in the node.
     * The @client_node_sid of the new entity will be returned in the response.
     * The @schedule_scenario_sid must match the scenario of the parent call center node.
     * The @member fields will be ignored since those cannot be created by this method and must be created by their respective create methods.
     * The @origin_sid must be set to nil, since this method can only make an original node.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @name, @parent_sid, or @time_zone_val is invalid.
     *   - grpc.NotFound: parent call center node doesn't exist, or belongs to a different scenario than the one given.
     *   - grpc.Internal: error occurs when creating the client node.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateClientNode
     */
    createClientNode: {
      name: "CreateClientNode",
      I: CreateClientNodeReq,
      O: CreateClientNodeRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates a client node for the org sending the request that has the given @client_node_sid and @schedule_scenario_sid.
     * All of the entity's parameters that are not desired to be updated must be filled with their current values.
     * The @schedule_scenario_sid must be the original for this client node since it cannot be changed.
     * The @member fields will be ignored since those cannot be updated by this method and must be updated by their respective update methods.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the @node have invalid values.
     *   - grpc.Internal: error occurs when updating the client @node.
     *   - grpc.NotFound: entry to be updated doesn't exist, or the given @parent_sid (call_center_node_sid) belongs to a different scenario than this @node.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateClientNode
     */
    updateClientNode: {
      name: "UpdateClientNode",
      I: UpdateClientNodeReq,
      O: UpdateClientNodeRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates the given location @node for the org sending the request and parent @client_node_sid.
     * The @location_node_sid of the new entity will be returned in the response.
     * The @schedule_scenario_sid must match the scenario of the parent client node.
     * The @member fields will be ignored since those cannot be created by this method and must be created by their respective create methods.
     * The @origin_sid must be set to nil, since this method can only make an original node.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the @node have invalid values.
     *   - grpc.NotFound: parent client node doesn't exist or belongs to a different scenario than the one given.
     *   - grpc.Internal: error occurs when creating the location node.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateLocationNode
     */
    createLocationNode: {
      name: "CreateLocationNode",
      I: CreateLocationNodeReq,
      O: CreateLocationNodeRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates a location node corresponding to the given @location_node_sid and org sending the request with the provided parameters.
     * All of the entity's parameters that are not desired to be updated must be filled with their current values.
     * The @schedule_scenario_sid must be the original for this location node since it cannot be changed.
     * The @member fields will be ignored since those cannot be updated by this method and must be updated by their respective update methods.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the @location_node have invalid values.
     *   - grpc.Internal: error occurs when updating the location node.
     *   - grpc.NotFound: entry to be updated doesn't exist, or the given parent @client_node_sid belongs to a different scenario than the node to update.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateLocationNode
     */
    updateLocationNode: {
      name: "UpdateLocationNode",
      I: UpdateLocationNodeReq,
      O: UpdateLocationNodeRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates the given program @node for the org sending the request and parent @location_node_sid.
     * The @program_node_sid of the new entity will be returned in the response.
     * The @schedule_scenario_sid must match the scenario of the parent location node.
     * The @member fields will be ignored since those cannot be created by this method and must be created by their respective create methods.
     * The @origin_sid must be set to nil, since this method can only make an original node.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the @node have invalid values.
     *   - grpc.NotFound: parent location node doesn't exist or belongs to a different scenario than the one given.
     *   - grpc.Internal: error occurs when creating the program node.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateProgramNode
     */
    createProgramNode: {
      name: "CreateProgramNode",
      I: CreateProgramNodeReq,
      O: CreateProgramNodeRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates a program node for the given @program_node_sid and org sending the request with the provided parameters.
     * All of the entity's parameters that are not desired to be updated must be filled with their current values.
     * The @schedule_scenario_sid must be the original for this program node since it cannot be changed.
     * The @member fields will be ignored since those cannot be updated by this method and must be updated by their respective update methods.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the @program_node have invalid values.
     *   - grpc.Internal: error occurs when updating the program node.
     *   - grpc.NotFound: entry to be updated doesn't exist, or the given parent @location_node_sid belongs to a different scenario than the program node to update.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateProgramNode
     */
    updateProgramNode: {
      name: "UpdateProgramNode",
      I: UpdateProgramNodeReq,
      O: UpdateProgramNodeRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates the given @constraint_rule for the org sending the request.
     * The @constraint_rule_sid and @skill_proficiency_sid (if one was created) of the new entities will be returned in the response.
     * The @schedule_scenario_sid must match the scenario of the @parent_entity.
     * If @rule_type is set to MIN_SKILL_LEVEL, the @member_target_entity field must be set with a skill proficiency and the @constraint_rule.target_sid will be ignored.
     * If the @member_target_entity is for a skill proficiency, that skill proficiency will be created with the given @constraint_rule as parent.
     * If @rule_type is NOT MIN_SKILL_LEVEL then the @target_sid must be that of a scheduling activity.
     * The all other @member fields will be ignored since those cannot be created by this method and must be created by their respective create methods.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the @constraint_rule have invalid values.
     *   - grpc.NotFound: the given @target_sid for the given @rule_type, or @parent_entity don't exist.
     *   - grpc.Internal: error occurs when creating the constraint rule.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateConstraintRule
     */
    createConstraintRule: {
      name: "CreateConstraintRule",
      I: CreateConstraintRuleReq,
      O: CreateConstraintRuleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the constraint rule corresponding for given @contraint_rule_sid for the org sending the request with the provided parameters.
     * All of the entity's parameters that are not desired to be updated must be filled with their current values.
     * The @schedule_scenario_sid must be the original for this constraint rule since it cannot be changed.
     * If @rule_type is set to MIN_SKILL_LEVEL, the @member_target_entity field must be set with a skill proficiency, otherwise it should not be set and field will be ignored.
     * If the @target_sid is for a different skill proficiency than the current one the constraint rule has as a target,
     * the old one will be deleted and a new one will be created for the given @member_target_entity.
     * If @rule_type is NOT MIN_SKILL_LEVEL then the @target_sid must be that of a scheduling activity.
     * The all other @member fields will be ignored since those cannot be updated by this method and must be updated by their respective update methods.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the @constraint_rule have invalid values.
     *   - grpc.NotFound: entry to be updated doesn't exist, or the @parent_entity has a different @schedule_scenario_sid than the constraint rule.
     *                  : the given @target_sid for the given @rule_type, or @parent_entity don't exist.
     *   - grpc.Internal: error occurs when updating the constraint rule.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateConstraintRule
     */
    updateConstraintRule: {
      name: "UpdateConstraintRule",
      I: UpdateConstraintRuleReq,
      O: UpdateConstraintRuleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes a constraint rule with the coresponding @constraint_rule_sid for the org sending the request.
     * It also deletes the entity referenced by the @target_sid and @rule_type if said entity is not a member of any other entity or the on call scheduling activity.
     * Required permissions:
     *  NONE
     * Errors:
     *   - grpc.Invalid: the @constraint_rule_sid is invalid for the org making the request.
     *   - grpc.NotFound: the given @constraint_rule doesn't exist.
     *   - grpc.Internal: error occurs when removing the constraint rule.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteConstraintRule
     */
    deleteConstraintRule: {
      name: "DeleteConstraintRule",
      I: DeleteConstraintRuleReq,
      O: DeleteConstraintRuleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates the given @non_skill_activity for the org sending the request.
     * Will also create a scheduling activity wrapper for the non skill activity.
     * The @non_skill_activity_sid and @scheduling_activity_sid of the new entities will be returned in the response.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the @non_skill_activity have invalid values.
     *   - grpc.NotFound: the @schedule_scenario_sid doesn't exist.
     *   - grpc.Internal: error occurs when creating the non skill activity or scheduling activity.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateNonSkillActivity
     */
    createNonSkillActivity: {
      name: "CreateNonSkillActivity",
      I: CreateNonSkillActivityReq,
      O: CreateNonSkillActivityRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates a non skill activity that has the given @non_skill_activity_sid with the given values.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: @non_skill_activity fields have invalid values.
     *   - grpc.NotFound: non skill activity for the given @non_skill_activity_sid doesn't exist.
     *   - grpc.Internal: error occurs when updating the non skill activity.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateNonSkillActivity
     */
    updateNonSkillActivity: {
      name: "UpdateNonSkillActivity",
      I: UpdateNonSkillActivityReq,
      O: UpdateNonSkillActivityRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists the IDs of non skill activities that belong to the org sending the request which have the given @relationship_type with the @associated_entity.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @associated_entity or @relationship_type are invalid.
     *   - grpc.Internal: error occurs when listing the associations.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListNonSkillActivityAssociations
     */
    listNonSkillActivityAssociations: {
      name: "ListNonSkillActivityAssociations",
      I: ListNonSkillActivityAssociationsReq,
      O: ListNonSkillActivityAssociationsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists the candidate scheduling activities for a constraint or placement rule, inherited through given @parent_of_rule for @schedule_scenario_sid for the org making the request.
     * @parent_of_rule may be any type of node, agent group, or shift template which the rule will belong to.
     * If the rule will belong to a wfm agent, the agent group must be supplied instead to get a relevant set of candidate scheduling activities.
     * Member non skill activity of each scheduling activity will be included in the response.
     * The on call scheduling activity will always be included.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @parent_of_rule is invalid.
     *   - grpc.NotFound: @parent_of_rule doesn't exist
     *   - grpc.Internal: error occurs when applying inheritance or getting the nodes from @parent_of_rule.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListCandidateSchedulingActivities
     */
    listCandidateSchedulingActivities: {
      name: "ListCandidateSchedulingActivities",
      I: ListCandidateSchedulingActivitiesReq,
      O: ListCandidateSchedulingActivitiesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates an agent group with the provided parameters.
     * A successful response should contain the @agent_group_sid of the newly created entity.
     * The @schedule_scenario_sid must match the scenario of the @parent_entity.
     * The @member fields will be ignored since those cannot be created by this method and must be created by their respective create methods.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @name, or @parent_entity are invalid.
     *   - grpc.NotFound: @parent_entity doesn't exist
     *   - grpc.Internal: error occurs when creating the agent group.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateAgentGroup
     */
    createAgentGroup: {
      name: "CreateAgentGroup",
      I: CreateAgentGroupReq,
      O: CreateAgentGroupRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the agent group corresponding to the @agent_group_sid, @name, and @parent_entity.
     * All of the entity's parameters that are not desired to be updated must be filled with their current values.
     * The @schedule_scenario_sid must be the original for this agent group since it cannot be changed.
     * The @member fields will be ignored since those cannot be updated by this method and must be updated by their respective update methods.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @agent_group_sid, @parent_entity, or @name in the request are invalid.
     *   - grpc.Internal: error occurs when updating the agent group.
     *   - grpc.AlreadyExists: an agent group with the given @name already exists.
     *   - grpc.NotFound: entry to be updated doesn't exist, or the @parent_entity has a different @schedule_scenario_sid than the agent group.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateAgentGroup
     */
    updateAgentGroup: {
      name: "UpdateAgentGroup",
      I: UpdateAgentGroupReq,
      O: UpdateAgentGroupRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates a wfm agent for the given @wfm_agent_sid and org sending the request with the provided parameters.
     * All of the entity's parameters that are not desired to be updated must be filled with their current values.
     * The @member fields will be ignored since those cannot be updated by this method and must be updated by their respective update methods.
     * The @tcn_agent_sid cannot be updated.
     * Required permission:
     *   NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the @wfm_agent have invalid values.
     *   - grpc.NotFound: WFM agent with the given @wfm_agent_sid doesn't exist.
     *   - grpc.Internal: error occurs when updating the wfm agent.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateWFMAgent
     */
    updateWFMAgent: {
      name: "UpdateWFMAgent",
      I: UpdateWFMAgentReq,
      O: UpdateWFMAgentRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists all wfm agents for the org sending the request.
     * if @include_inactive is true then inactive agents will also be included, otherwise only active agents will be returned.
     * if @include_skill_proficiencies is true then agents returned will include their skill proficiencies.
     * if @include_agent_groups is true then the @agent_groups_by_agent response field will be set with a list of agent groups correlating to each agents index in the @wfm_agents field.
     * WFM agents with no associated agent_groups will have an empty slice in agent_groups_by_agent at their correlated index.
     * Required Permissions:
     *   NONE
     * Errors:
     *   - grpc.Internal: error occurs when getting the wfm agents.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListAllWFMAgents
     */
    listAllWFMAgents: {
      name: "ListAllWFMAgents",
      I: ListAllWFMAgentsReq,
      O: ListAllWFMAgentsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists all candidate wfm agents for the org sending the request and given @agent_group_sid.
     * A WFM agent is considered a candidate when it's active and it doesn't already belong to the given agent group.
     * Member entities will not be returned.
     * Required Permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: @agent_group_sid has an invalid value.
     *   - grpc.Internal: error occurs when getting the wfm agents.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListCandidateWFMAgents
     */
    listCandidateWFMAgents: {
      name: "ListCandidateWFMAgents",
      I: ListCandidateWFMAgentsReq,
      O: ListCandidateWFMAgentsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists all wfm agents who are not grouped with any agent group for the given org sending the request that were created at or after the given @created_after_datetime.
     * If @schedule_scenario_sid is positive, it will filter further to get only agents who are not grouped with any agent group for that scenario.
     * if @include_skill_proficiencies is true then agents returned will include their skill proficiencies.
     * Member entities will not be returned.
     * Required Permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: @created_after_datetime has an invalid value.
     *   - grpc.Internal: error occurs when getting the wfm agents.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListUngroupedWFMAgents
     */
    listUngroupedWFMAgents: {
      name: "ListUngroupedWFMAgents",
      I: ListUngroupedWFMAgentsReq,
      O: ListUngroupedWFMAgentsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists the IDs of wfm agents that belong to the org sending the request which are associated with the given @agent_group_sid.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @agent_group_sid is invalid.
     *   - grpc.Internal: error occurs when listing the wfm agents.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListWFMAgentsAssociatedWithAgentGroup
     */
    listWFMAgentsAssociatedWithAgentGroup: {
      name: "ListWFMAgentsAssociatedWithAgentGroup",
      I: ListWFMAgentsAssociatedWithAgentGroupReq,
      O: ListWFMAgentsAssociatedWithAgentGroupRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates a membership association for each of the given @wfm_agent_sids with the given @agent_group_sid.
     * The @schedule_scenario_sid must match the scenario of the agent group and wfm agents.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @wfm_agent_sids, or @agent_group_sid are invalid.
     *   - grpc.NotFound: the @wfm_agent_sids or @agent_group_sid don't exist for the org or given @schedule_scenario_sid.
     *   - grpc.Internal: error occurs when creating the association.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateWFMAgentMemberships
     */
    createWFMAgentMemberships: {
      name: "CreateWFMAgentMemberships",
      I: CreateWFMAgentMembershipsReq,
      O: CreateWFMAgentMembershipsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes a membership association for each of the given @wfm_agent_sids with the given @agent_group_sid.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @wfm_agent_sids, or @agent_group_sid are invalid.
     *   - grpc.NotFound: any of the given memberships to delete do not exist.
     *   - grpc.Internal: error occurs when deleting the association.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteWFMAgentMemberships
     */
    deleteWFMAgentMemberships: {
      name: "DeleteWFMAgentMemberships",
      I: DeleteWFMAgentMembershipsReq,
      O: DeleteWFMAgentMembershipsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Builds and returns the diagnostics for the wfm agent associated with the given @wfm_agent_sid or @agent_group_sid for the org sending the request.
     * Response will only contain:
     *    one element if build for a single @wfm_agent_sid.
     *    one element for each WFM agent if build for an @agent_group_sid.
     * Required permissions:
     *   NONE
     *   - grpc.Invalid: the @wfm_agent_sid, or @agent_group_sid is invalid.
     *   - grpc.NotFound: the given @wfm_agent_sid doesn't exist or the @agent_group_sid has no agents.
     *   - grpc.Internal: error occurs building the diagnostics.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.BuildAgentDiagnostics
     */
    buildAgentDiagnostics: {
      name: "BuildAgentDiagnostics",
      I: BuildAgentDiagnosticsReq,
      O: BuildAgentDiagnosticsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates a shift template for the org sending the request with the provided parameters
     * The @shift_template_sid of the new entity will be returned in the response.
     * The @schedule_scenario_sid must match the scenario of the parent program node.
     * The @member fields will be ignored since those cannot be created by this method and must be created by their respective create methods.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @name, or @program_node_sid are invalid.
     *   - grpc.AlreadyExists: a shift template with the given @name already exists.
     *   - grpc.NotFound: the parent program node doesn't exist or belongs to a different scenario than the one given.
     *   - grpc.Internal: error occurs when creating the shift template.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateShiftTemplate
     */
    createShiftTemplate: {
      name: "CreateShiftTemplate",
      I: CreateShiftTemplateReq,
      O: CreateShiftTemplateRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates a shift template for the given @shift_template_sid and org sending the request with the provided parameters.
     * All of the entity's parameters that are not desired to be updated must be filled with their current values.
     * The @schedule_scenario_sid must be the original for this shift template since it cannot be changed.
     * The @member fields will be ignored since those cannot be updated by this method and must be updated by their respective update methods.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @shift_template_sid, @name, @program_node_sid are invalid.
     *   - grpc.AlreadyExists: a shift template with the given @name already exists.
     *   - grpc.NotFound: the parent program node doesn't exist or belongs to a different scenario than the shift template to update.
     *   - grpc.Internal: error occurs when updating the shift template.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateShiftTemplate
     */
    updateShiftTemplate: {
      name: "UpdateShiftTemplate",
      I: UpdateShiftTemplateReq,
      O: UpdateShiftTemplateRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists the shift templates matching the specified @shift_template_sids for the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @shift_template_sids are invalid.
     *   - grpc.Internal: error occurs when getting the data.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListShiftTemplatesBySids
     */
    listShiftTemplatesBySids: {
      name: "ListShiftTemplatesBySids",
      I: ListShiftTemplatesBySidsReq,
      O: ListShiftTemplatesBySidsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Builds and returns the diagnostics for the shift template associated with the given @shift_template_sid for the org sending the request.
     * Required permissions:
     *   NONE
     *   - grpc.Invalid: the @shift_template_sid is invalid.
     *   - grpc.NotFound: the given @shift_template_sid doesn't exist for the org sending the request.
     *   - grpc.Internal: error occours building the diagnostics for the shift template.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.BuildShiftTemplateDiagnostics
     */
    buildShiftTemplateDiagnostics: {
      name: "BuildShiftTemplateDiagnostics",
      I: BuildShiftTemplateDiagnosticsReq,
      O: BuildShiftTemplateDiagnosticsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates a placement rule for org sending the request with the provided parameters.
     * The @placement_rule_sid of the new entity will be returned in the response.
     * The @schedule_scenario_sid must match the scenario of the parent shift template.
     * The @member fields will be ignored since those cannot be created by this method and must be created by their respective create methods.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the parameters in the @placement_rule are invalid.
     *   - grpc.NotFound: the parent shift template doesn't exist or belongs to a different scenario than the one given.
     *                    the scheduling activity to associate with the placement rule doesn't exist or belongs to a different scenario than the one given.
     *   - grpc.Internal: error occurs when creating the placement rule.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreatePlacementRule
     */
    createPlacementRule: {
      name: "CreatePlacementRule",
      I: CreatePlacementRuleReq,
      O: CreatePlacementRuleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates a placement rule corresponding with the given @placement_rule_sid for the org sending the request with the provided parameters.
     * All of the entity's parameters that are not desired to be updated must be filled with their current values.
     * The @schedule_scenario_sid must be the original for this placement rule since it cannot be changed.
     * The @member fields will be ignored since those cannot be updated by this method and must be updated by their respective update methods.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the one or more of the fields in the @placement_rule are invalid.
     *   - grpc.Internal: error occurs when updating the placement rule.
     *   - grpc.NotFound: entry to be updated doesn't exist.
     *                  : the parent shift template or related scheduling activity don't exist or belong to a different scenario than the placement rule to update.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdatePlacementRule
     */
    updatePlacementRule: {
      name: "UpdatePlacementRule",
      I: UpdatePlacementRuleReq,
      O: UpdatePlacementRuleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes a placement rule with the coresponding @placement_rule_sid for the org sending the request.
     * It also deletes the scheduling activity referenced by the @scheduling_activity_sid if said activity is not a member of any other entity.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @placement_rule_sid is invalid for the org making the request.
     *   - grpc.NotFound: the given @placement_rule doesn't exist.
     *   - grpc.Internal: error occurs when removing the placement rule.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeletePlacementRule
     */
    deletePlacementRule: {
      name: "DeletePlacementRule",
      I: DeletePlacementRuleReq,
      O: DeletePlacementRuleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates an open times pattern for the org sending the request with the provided parameters.
     * The @open_times_pattern_sid of the new entity will be returned in the response.
     * The @schedule_scenario_sid must match the scenario of the @parent_entity.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the parameters in the @open_times_pattern are invalid.
     *   - grpc.NotFound: the parent entity doesn't exist.
     *   - grpc.Internal: error occurs when creating the open times pattern.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateOpenTimesPattern
     */
    createOpenTimesPattern: {
      name: "CreateOpenTimesPattern",
      I: CreateOpenTimesPatternReq,
      O: CreateOpenTimesPatternRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates an open times pattern for the given @open_times_pattern_sid and org sending the request with the provided parameters.
     * All of the entity's parameters that are not desired to be updated must be filled with their current values.
     * The @schedule_scenario_sid must be the original for this open times pattern since it cannot be changed.
     * Required permission:
     *   NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the @open_times_pattern have invalid values.
     *   - grpc.NotFound: the given @open_times_pattern or it's @parent_entity doesn't exist.
     *   - grpc.Internal: error occurs when updating the open times pattern.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateOpenTimesPattern
     */
    updateOpenTimesPattern: {
      name: "UpdateOpenTimesPattern",
      I: UpdateOpenTimesPatternReq,
      O: UpdateOpenTimesPatternRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes an open times pattern with the coresponding @open_times_pattern_sid for the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @open_times_pattern_sid is invalid for the org making the request.
     *   - grpc.NotFound: the given @open_times_pattern doesn't exist.
     *   - grpc.Internal: error occurs when removing the open times pattern.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteOpenTimesPattern
     */
    deleteOpenTimesPattern: {
      name: "DeleteOpenTimesPattern",
      I: DeleteOpenTimesPatternReq,
      O: DeleteOpenTimesPatternRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the inherited, own, and resulting bitmaps for the open times patterns of @node_to_check for @schedule_scenario_sid and the org sending the request.
     * The @schedule_scenario_sid must match the scenario of the @node_to_check.
     * The bitmaps will be generated for the span of @datetime_range.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @node_to_check is invalid for @schedule_scenario_sid and the org making the request.
     *                 : the @datetime_range is invalid.
     *   - grpc.NotFound: the given @node_to_check doesn't exist.
     *   - grpc.Internal: error occurs when getting the open times pattern bitmaps.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetOpenTimesBitmaps
     */
    getOpenTimesBitmaps: {
      name: "GetOpenTimesBitmaps",
      I: GetOpenTimesBitmapsReq,
      O: GetOpenTimesBitmapsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates an agent availability pattern for the org sending the request with the provided parameters.
     * The @agent_availability_pattern_sid of the new entity will be returned in the response.
     * The @schedule_scenario_sid must match the scenario of the @parent_entity.
     * Required permissions:
     * NONE
     * Errors:
     *   - grpc.Invalid: the parameters in the @agent_availability_pattern are invalid.
     *   - grpc.NotFound: the parent entity doesn't exist.
     *   - grpc.Internal: error occurs when creating the agent availability pattern.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateAgentAvailabilityPattern
     */
    createAgentAvailabilityPattern: {
      name: "CreateAgentAvailabilityPattern",
      I: CreateAgentAvailabilityPatternReq,
      O: CreateAgentAvailabilityPatternRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates an agent availability pattern for the given @agent_availability_pattern_sid and org sending the request with the provided parameters.
     * All of the entity's parameters that are not desired to be updated must be filled with their current values.
     * The @schedule_scenario_sid must be the original for this agent availability pattern since it cannot be changed.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the @agent_availability_pattern have invalid values.
     *   - grpc.Internal: error occurs when updating the agent avilability pattern.
     *   - grpc.NotFound: entry to be updated doesn't exist, or the @parent_entity has a different @schedule_scenario_sid than the agent availability pattern.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateAgentAvailabilityPattern
     */
    updateAgentAvailabilityPattern: {
      name: "UpdateAgentAvailabilityPattern",
      I: UpdateAgentAvailabilityPatternReq,
      O: UpdateAgentAvailabilityPatternRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes an agent availability pattern with the coresponding @agent_availability_pattern_sid for the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @agent_availability_pattern_sid or @org_id have invalid values.
     *   - grpc.NotFound: the @agent_availability_pattern with the given sid doesn't exist.
     *   - grpc.Internal: error occurs when removing the agent availability pattern.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteAgentAvailabilityPattern
     */
    deleteAgentAvailabilityPattern: {
      name: "DeleteAgentAvailabilityPattern",
      I: DeleteAgentAvailabilityPatternReq,
      O: DeleteAgentAvailabilityPatternRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the inherited, own, and resulting bitmaps for the agent availability patterns of @entities_to_check for @schedule_scenario_sid and the org sending the request.
     * The @schedule_scenario_sid must match the scenario of the @entities_to_check.
     * @entities_to_check must have the entity_type field set with a wfm agent, agent group or a type of node.
     * If an availability bitmap is requested for an agent group, the bitmaps for all of it's member agents will be returned instead.
     * The bitmaps will be generated for the span of @datetime_range.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @entities_to_check is invalid for @schedule_scenario_sid and the org making the request.
     *                 : the @datetime_range is invalid.
     *   - grpc.NotFound: the given @entities_to_check don't exist.
     *   - grpc.Internal: error occurs when getting the agent availability pattern bitmaps.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetAvailabilityBitmaps
     */
    getAvailabilityBitmaps: {
      name: "GetAvailabilityBitmaps",
      I: GetAvailabilityBitmapsReq,
      O: GetAvailabilityBitmapsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Upserts an association for the given @non_skill_activity_sid to the given @node.
     * All downstream members of the entity will have their inheritance state cleared, and inherit the given association.
     * If an association already exists between the non skill activity and the @node then their @relationship_type will be updated.
     * The @schedule_scenario_sid must match the scenario of the @parent_entity.
     * If a NOT_ASSOCIATED_WITH relationship is being created, the tree will be checked for conflicting downstream effects.
     * If any member rules, are referencing the non skill activity and @relationship_type is NOT_ASSOCIATED_WITH, then the upsert will not take effect, and the list of related entities to be updated/removed first will be returned.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @non_skill_activity_sid, @node or @association_type are invalid.
     *                 : the non skill activity and @node belong to different scenarios.
     *   - grpc.NotFound: the @non_skill_activity_sid or @node don't exist.
     *   - grpc.Internal: error occurs when upserting the association.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpsertNonSkillActivityAssociation
     */
    upsertNonSkillActivityAssociation: {
      name: "UpsertNonSkillActivityAssociation",
      I: UpsertNonSkillActivityAssociationReq,
      O: UpsertNonSkillActivityAssociationRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates skill proficiencies for the org sending the request with the provided parameters.
     * The @schedule_scenario_sid must match the scenario of the @parent_entities.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the parameters in a @proficiency, or the @schedule_scenario_sid are invalid.
     *   - grpc.NotFound: for any of the given @skill_proficiencies:
     *                    the @parent_entity doesn't exist.
     *                    the @skill_sid doesn't exist.
     *                    the skill profile with @preferred_skill_profile_sid doesn't contain the given @skill_sid.
     *   - grpc.AlreadyExists: a skill proficiency with the given @skill_sid and @parent_entity already exists.
     *   - grpc.Internal: error occurs when creating the skill proficiencies.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateSkillProficiencies
     */
    createSkillProficiencies: {
      name: "CreateSkillProficiencies",
      I: CreateSkillProficienciesReq,
      O: CreateSkillProficienciesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates skill proficiencies corresponding to the given @skill_proficiency_sids and org sending the request with the provided parameters.
     * All of the entity's parameters that are not desired to be updated must be filled with their current values.
     * The @skill_sid and @parent_entity field of each proficiency will be ignored since it cannot be updated.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the @skill_proficiencies have invalid values.
     *   - grpc.Internal: error occurs when updating the skill proficiencies.
     *   - grpc.NotFound: for any of the given @skill_proficiencies:
     *                    the @skill_sid doesn't exist.
     *                    the skill profile with @preferred_skill_profile_sid doesn't contain the skill of the given skill proficiency.
     *   - grpc.AlreadyExists: a skill proficiency with the given @skill_sid and @parent_entity already exists.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateSkillProficiencies
     */
    updateSkillProficiencies: {
      name: "UpdateSkillProficiencies",
      I: UpdateSkillProficienciesReq,
      O: UpdateSkillProficienciesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes a skill proficiency with the corresponding @skill_proficiency_sid for the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   -grpc.Invalid: the @skill_proficiency_sid is invalid for the org making the request.
     *   -grpc.NotFound: the skill proficiency with the given @skill_proficiency_sid doesn't exist.
     *   -grpc.Internal: error occurs when removing the skill proficiency.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteSkillProficiency
     */
    deleteSkillProficiency: {
      name: "DeleteSkillProficiency",
      I: DeleteSkillProficiencyReq,
      O: DeleteSkillProficiencyRes,
      kind: MethodKind.Unary,
    },
    /**
     * Copies the existing scenario with the @scenario_sid_to_copy for the org sending the request using the provided parameters.
     * Scheduling targets of entities in the scenario to copy will also be copied.
     * The new @schedule_scenario_sid of the new entity will be returned in the response.
     * Required permissions:
     *   NONE
     * Errors:gg
     *   - grpc.Invalid: the parameters @scenario_sid_to_copy or any others are invalid.
     *   - grpc.NotFound: the scenario corresponding to the @scenario_sid_to_copy doesn't exist.
     *   - grpc.Internal: error occurs when creating/coping the new scenario.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CopyScenario
     */
    copyScenario: {
      name: "CopyScenario",
      I: CopyScenarioReq,
      O: CopyScenarioRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates a new schedule scenario for the org sending the request with the provided parameters.
     * The new @schedule_scenario_sid of the new entity will be returned in the response.
     * It also creates 1 of each of the following: call center, client, program, location node, and on call scheduling activity (if it doesn't exist already for the org).
     * The @node_description fields may optionally be left blank.
     * The @copied_from_scenario_sid field will be ignored, as it will be set to nil in the newly created scenario.
     * The @creation_datetime and @is_default fields will also be ignored and set as the current time and false respectively.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: parameters in the @req are invalid for the org making the request.
     *   - grpc.Internal: error occurs when creating the new scenario, or any of the node entities.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateScheduleScenarioWithNodes
     */
    createScheduleScenarioWithNodes: {
      name: "CreateScheduleScenarioWithNodes",
      I: CreateScheduleScenarioWithNodesReq,
      O: CreateScheduleScenarioWithNodesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates a schedule scenario corresponding to the given @schedule_scenario_sid and org sending the request with the provided parameters.
     * Only the @name and @description fields may be updated, and must be filled in with current value if updating the field is not desired.
     * The @schedule_scenario_sid must be the original for the schedule scenario since it cannot be updated.
     * All other fields will be ignored since they cannot be updated.
     * Required permissions:
     *   NONE
     * Errors:
     *   -grpc.Invalid: one or more fields in the @scenario have invalid values.
     *   -grpc.NotFound: the scenario with the given @schedule_scenario_sid doesn't exist.
     *   -grpc.Internal: error occurs when updating the scenario.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateScheduleScenario
     */
    updateScheduleScenario: {
      name: "UpdateScheduleScenario",
      I: UpdateScheduleScenarioReq,
      O: UpdateScheduleScenarioRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets config entities that match the org sending the request and given @entity_type and that belong to the @belongs_to_entity and @schedule_scenario_sid parameters.
     * If @include_member_lists is set to true the member lists of the entities retrieved will be included.
     * Any nodes in the returned set of entities will have inherited nonskill associations applied to the node's member_nonskill_activity fields.
     * Prior to listing the entities it will Resync TCN Agents and skill proficiencies.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @org_id, @entity_type, or @belongs_to_entity have invalid values.
     *   - grpc.Internal: error occurs when getting the config entities.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListConfigEntities
     */
    listConfigEntities: {
      name: "ListConfigEntities",
      I: ListConfigEntitiesReq,
      O: ListConfigEntitiesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes shift instances with the corresponding @shift_instance_sids for the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   -grpc.Invalid: the @shift_instance_sids are invalid for the org making the request.
     *   -grpc.NotFound: the shift instances with the given @shift_instance_sids don't exist.
     *   -grpc.Internal: error occurs when removing the shift instances.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteShiftInstances
     */
    deleteShiftInstances: {
      name: "DeleteShiftInstances",
      I: DeleteShiftInstancesReq,
      O: DeleteShiftInstancesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Builds and returns the diagnostics and @nodes_checked for the @node_to_check for @schedule_scenario_sid and the org sending the request.
     * The @schedule_scenario_sid must match the scenario of the @node_to_check.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @node_to_check is invalid for @schedule_scenario_sid and the org making the request.
     *   - grpc.NotFound: the given @node_to_check doesn't exist.
     *   - grpc.Internal: error occurs when building the diagnostics.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.BuildNodeDiagnostics
     */
    buildNodeDiagnostics: {
      name: "BuildNodeDiagnostics",
      I: BuildNodeDiagnosticsReq,
      O: BuildNodeDiagnosticsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Builds and returns the global diagnostics and @nodes_checked for the @schedule_scenario_sid and the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @schedule_scenario_sid has an invalid values.
     *   - grpc.NotFound: the given @schedule_scenario_sid doesn't exist for the org making the request.
     *   - grpc.Internal: error occurs when building the diagnostics.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.BuildGlobalDiagnostics
     */
    buildGlobalDiagnostics: {
      name: "BuildGlobalDiagnostics",
      I: BuildGlobalDiagnosticsReq,
      O: BuildGlobalDiagnosticsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the published schedule for the corresponding @datetime_range for the org sending the request.
     * Will create a published schedule if it does not exist already for the org sending the request.
     * if @include_shift_instances is true, the shift instances associated within @datetime_range for the published schedule will be returned in the published schedules shift_instances field.
     * if @node_selector is set, then only instances belonging to the origin of @node_selector and its children node will be returned, otherwise all matching shift instances will be included.
     * if @include_shift_template is true, any returned shift instances will have their orginating shift template returned in their origin_shift_template field.
     * if @include_shift_segments is true, any returned shift instances will have their shift_segments field set, otherwise the field will be left nil.
     * if @include_scheduling_activity is true, any returned shift segments will have their scheduling_activity field set, otherwise the field will be left nil.
     * if @include_activity is true, any returned scheduling activities will have their member_non_skill_activity field set, otherwise the field will be left nil.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @datetime_range, @metric_types are invalid.
     *   - grpc.NotFound: the @node_selector doesn't exist.
     *   - grpc.Internal: error occurs when getting the published schedule.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetPublishedSchedule
     */
    getPublishedSchedule: {
      name: "GetPublishedSchedule",
      I: GetPublishedScheduleReq,
      O: GetPublishedScheduleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the required calls intervals for the published schedule for the corresponding @viewing_range, for the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.NotFound: the published schedule doesn't exist.
     *   - grpc.Internal: error occurs when getting the data.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetPublishedScheduleRequiredCalls
     */
    getPublishedScheduleRequiredCalls: {
      name: "GetPublishedScheduleRequiredCalls",
      I: GetPublishedScheduleRequiredCallsReq,
      O: GetPublishedScheduleRequiredCallsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the required calls intervals for the specified draft schedule for the corresponding @viewing_range, for the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.NotFound: the draft schedule doesn't exist.
     *   - grpc.Internal: error occurs when getting the data.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetDraftScheduleRequiredCalls
     */
    getDraftScheduleRequiredCalls: {
      name: "GetDraftScheduleRequiredCalls",
      I: GetDraftScheduleRequiredCallsReq,
      O: GetDraftScheduleRequiredCallsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates a draft schedule for the org sending the request with the provided parameters.
     * The @draft_schedule_sid of the new entity will be returned in the response.
     * The @created_at and @last_updated_at fields will be set to the current time and null respectively.
     * The draft schedule will include the published schedule's shift instances and shift segments.
     * Required permissions:
     * NONE
     * Errors:
     *   - grpc.Invalid: the @name, @description or @scheduling_range are invalid.
     *   - grpc.Internal: error occurs when creating the draft schedule.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateDraftSchedule
     */
    createDraftSchedule: {
      name: "CreateDraftSchedule",
      I: CreateDraftScheduleReq,
      O: CreateDraftScheduleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the @name, @description, and @datetime_range of the given @draft_schedule_sid for the org sending the request.
     * The @name, @description, and @datetime_range fields must all be set with their desired values.
     * If @delete_shifts_not_in_range if true, then any instances outside of the @datetime_range will be permenantly deleted with no recovery option.
     * If @delete_shifts_not_in_range is false, instances outside of the new @datetime_range will be retained, for use if the datetime range is expanded to cover the instances in the future.
     * If @copy_shifts_into_new_range time is true, then new the portion of an expanded @datetime_range which has no instances will copy the instances from the published schedule. If false, no instances will be created for an expanded @scheduling_range.
     * If @get_updated_shifts is true, then the returned draft schedule will also contain the shift instances and segments in the given @datetime_range.
     * Errors:
     *   - grpc.Invalid: the @name, @description or @datetime_range are invalid.
     *   - grpc.Internal: error occurs when updating the schedule or its instances.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateDraftSchedule
     */
    updateDraftSchedule: {
      name: "UpdateDraftSchedule",
      I: UpdateDraftScheduleReq,
      O: UpdateDraftScheduleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Builds a draft schedule for the given @node_selector in @schedule_scenario_sid over @schedule_scenario_scheduling_range for @draft_schedule_sid and the org making the request.
     * The @schedule_scenario_scheduling_range field is optional. If not set, the draft schedule will be obtained with it's default range from it's start to end time.
     * @include parameters are used when retrieving the resulting draft schedule, and work in the same way as for GetDraftSchedule.
     * Will return diagnostics for the newly built schedule, or just diagnostics if the schedule cannot be built successfully due to diagnostic error.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.BuildDraftSchedule
     */
    buildDraftSchedule: {
      name: "BuildDraftSchedule",
      I: BuildDraftScheduleReq,
      O: BuildDraftScheduleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Publishes the shift instances of the given @draft_schedule_sid to the published schedule of the org sending the request.
     * Overlapping shift instances that aren't locked will be replaced with the instances from the draft schedule.
     * If @ignore_diagnostics_errors is set to true, it will publish the schedule regardless of any diagnostics errors,
     * otherwise it will return those diagnostic errors and not publish the schedule.
     * @include parameters are used when retrieving the resulting published schedule, and work in the same way as for GetDraftSchedule.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the parameters in the @req are invalid..
     *   - grpc.NotFound: @draft_schedule_sid doesn't exist.
     *   - grpc.Internal: error occurs when publishing the draft schedule.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.PublishDraftSchedule
     */
    publishDraftSchedule: {
      name: "PublishDraftSchedule",
      I: PublishDraftScheduleReq,
      O: PublishDraftScheduleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the draft schedule with @draft_schedule_sid for the corresponding @datetime_range for the org sending the request.
     * The @datetime_range field is optional. If not set, the draft schedule will be obtained with it's default range from it's start to end time.
     * if @include_shift_instances is true, the shift instances associated within @datetime_range for the draft schedule will be returned in the draft schedules shift_instances field.
     * if @node_selector is set then only instances belonging to the origin of @node_selector and its children node will be returned, otherwise all matching shift instances will be included
     * if @include_shift_template is true, any returned shift instances will have their orginating shift template returned in their origin_shift_template field.
     * if @include_shift_segments is true, any returned shift instances will have their shift_segments field set, otherwise the field will be left nil.
     * if @include_scheduling_activity is true, any returned shift segments will have their scheduling_activity field set, otherwise the field will be left nil.
     * if @include_activity is true, any returned scheduling activities will have their member_non_skill_activity field set, otherwise the field will be left nil.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @datetime_range or @draft_schedule_sid are invalid.
     *   - grpc.NotFound: the @node_selector or @draft_schedule_sid doesn't exist.
     *   - grpc.Internal: error occurs when getting the draft schedule.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetDraftSchedule
     */
    getDraftSchedule: {
      name: "GetDraftSchedule",
      I: GetDraftScheduleReq,
      O: GetDraftScheduleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists the draft schedules whose scheduling_range overlaps the given @datetime_range for the org sending the request.
     * If @datetime_range is not set, all draft schedules for the org will be returned.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @datetime_range is invalid.
     *   - grpc.Internal: error occurs when listing the draft schedules.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListDraftSchedules
     */
    listDraftSchedules: {
      name: "ListDraftSchedules",
      I: ListDraftSchedulesReq,
      O: ListDraftSchedulesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes a draft schedule with the corresponding @draft_schedule_sid for the org sending the request.
     * It also deletes all of its shift instances and segments.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @draft_schedule_sid is invalid for the org making the request.
     *   - grpc.NotFound: the draft schedule with the given @draft_schedule_sid doesn't exist.
     *   - grpc.Internal: error occurs when removing the draft schedule.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteDraftSchedule
     */
    deleteDraftSchedule: {
      name: "DeleteDraftSchedule",
      I: DeleteDraftScheduleReq,
      O: DeleteDraftScheduleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates a shift instance for the org sending the request with the provided parameters.
     * Required permissions:
     * NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the request have invalid values.
     *   - grpc.Internal: error occurs when creating the shift instance.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateShiftInstance
     */
    createShiftInstance: {
      name: "CreateShiftInstance",
      I: CreateShiftInstanceReq,
      O: CreateShiftInstanceRes,
      kind: MethodKind.Unary,
    },
    /**
     * Swaps a list of shift instances to have a different @wfm_agent_sid.
     * Required permissions:
     * NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the request have invalid values.
     *   - grpc.Internal: error occurs when swapping the shift instances.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.SwapShiftInstances
     */
    swapShiftInstances: {
      name: "SwapShiftInstances",
      I: SwapShiftInstancesReq,
      O: SwapShiftInstancesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates a shift instance for the org sending the request with the provided parameters.
     * Required permissions:
     * NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the request have invalid values.
     *   - grpc.Internal: error occurs when updating the shift instance.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateShiftInstance
     */
    updateShiftInstance: {
      name: "UpdateShiftInstance",
      I: UpdateShiftInstanceReq,
      O: UpdateShiftInstanceRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists shift segments for the specified shift instances for the org sending the request.
     * If @include_scheduling_activity is set to true then the related scheduling activity for the shift segment will be returned in the scheduling activity field.
     * If @include_activity is set to true then the related non skill activity for the scheduling activity will be returned in the scheduling activities member non skill activity field.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.NotFound: a shift instance doesn't exist.
     *   - grpc.Internal: error occurs when getting the data.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListShiftSegmentsByShiftInstanceSids
     */
    listShiftSegmentsByShiftInstanceSids: {
      name: "ListShiftSegmentsByShiftInstanceSids",
      I: ListShiftSegmentsByShiftInstanceSidsReq,
      O: ListShiftSegmentsByShiftInstanceSidsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates the given @scheduling_target for the org making the request.
     * The @scheduling_target_sid of the new entity will be returned in the response.
     * Any preexisting scheduling target for @node_entity will be removed upon creation of the new @scheduling_target.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @scheduling_target is invalid.
     *   - grpc.NotFound: @node_entity doesn't exist for @schedule_scenario_sid and the org making the request.
     *   - grpc.Internal: error occours when setting the scheduling target.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.SetSchedulingTarget
     */
    setSchedulingTarget: {
      name: "SetSchedulingTarget",
      I: SetSchedulingTargetReq,
      O: SetSchedulingTargetRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the @own_scheduling_target, @inherited_scheduling_target, and @resulting_scheduling_target for the given @node_selector and the org making the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @node_selector is invalid.
     *   - grpc.NotFound: the given @node_selector doesn't exist for the org making the request.
     *   - grpc.Internal: error occours when getting the scheduling target.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetSchedulingTarget
     */
    getSchedulingTarget: {
      name: "GetSchedulingTarget",
      I: GetSchedulingTargetReq,
      O: GetSchedulingTargetRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes the scheduling target of the corresponding @node_selector for the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   -grpc.Invalid: the @node_selector is invalid.
     *   -grpc.NotFound: the scheduling target for the given @node_selector doesn't exist for the org making the request.
     *   -grpc.Internal: error occurs when removing the scheduling target.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteSchedulingTarget
     */
    deleteSchedulingTarget: {
      name: "DeleteSchedulingTarget",
      I: DeleteSchedulingTargetReq,
      O: DeleteSchedulingTargetRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the performance metrics across @datetime_range for shift instances in @schedule_selector associated with @node_selector for the org making the request.
     * Performance metrics will be generated for each of the given @metric_params.
     * The @interval_width_in_minutes must be a multiple of 5.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.NotFound: the @node_selector, @schedule_selector, or their shift instances doesn't exist.
     *   - grpc.Internal: error occurs when getting the data.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetPerformanceMetrics
     */
    getPerformanceMetrics: {
      name: "GetPerformanceMetrics",
      I: GetPerformanceMetricsReq,
      O: GetPerformanceMetricsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists the required calls intervals for the given @node_selector over the given @datetime_range for the org making the request.
     * The @interval_width_in_minutes must be a multiple of 5.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.Internal: error occurs when getting the data.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListRequiredCallsIntervals
     */
    listRequiredCallsIntervals: {
      name: "ListRequiredCallsIntervals",
      I: ListRequiredCallsIntervalsReq,
      O: ListRequiredCallsIntervalsRes,
      kind: MethodKind.Unary,
    },
  }
};


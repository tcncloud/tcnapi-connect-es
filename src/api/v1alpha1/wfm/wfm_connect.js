// Copyright (c) 2020, TCN Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-es v0.13.0
// @generated from file api/v1alpha1/wfm/wfm.proto (package api.v1alpha1.wfm, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { BuildAgentDiagnosticsReq, BuildAgentDiagnosticsRes, BuildCallProfileTemplateForSkillProfileReq, BuildCallProfileTemplateForSkillProfileRes, BuildCallProfileTemplateReq, BuildCallProfileTemplateRes, BuildDOWAndMOYProfilesReq, BuildDOWAndMOYProfilesRes, BuildDraftScheduleReq, BuildDraftScheduleRes, BuildGlobalDiagnosticsReq, BuildGlobalDiagnosticsRes, BuildNodeDiagnosticsReq, BuildNodeDiagnosticsRes, BuildProfileForecastByIntervalReq, BuildProfileForecastByIntervalWithStatsReq, BuildProfileForecastByIntervalWithStatsRes, BuildRegressionForecastByIntervalReq, BuildRegressionForecastByIntervalWithStatsReq, BuildRegressionForecastByIntervalWithStatsRes, BuildShiftTemplateDiagnosticsReq, BuildShiftTemplateDiagnosticsRes, CalculateTrainingDataAveragesForSkillProfileReq, CalculateTrainingDataAveragesForSkillProfileRes, CallDataByInterval, ClearScheduleReq, ClearScheduleRes, CopyScenarioReq, CopyScenarioRes, CopyScheduleToScheduleReq, CopyScheduleToScheduleRes, CopyShiftInstancesToScheduleReq, CopyShiftInstancesToScheduleRes, CreateAgentAvailabilityPatternReq, CreateAgentAvailabilityPatternRes, CreateAgentGroupReq, CreateAgentGroupRes, CreateCallProfileTemplateReq, CreateCallProfileTemplateRes, CreateClientNodeReq, CreateClientNodeRes, CreateConstraintRuleReq, CreateConstraintRuleRes, CreateDraftScheduleReq, CreateDraftScheduleRes, CreateInactiveSkillProfileMappingReq, CreateInactiveSkillProfileMappingRes, CreateLocationNodeReq, CreateLocationNodeRes, CreateNonSkillActivityReq, CreateNonSkillActivityRes, CreateOpenTimesPatternReq, CreateOpenTimesPatternRes, CreatePlacementRuleReq, CreatePlacementRuleRes, CreateProgramNodeReq, CreateProgramNodeRes, CreateRegressionTemplateReq, CreateRegressionTemplateRes, CreateScheduleScenarioWithNodesReq, CreateScheduleScenarioWithNodesRes, CreateShiftInstanceReq, CreateShiftInstanceRes, CreateShiftInstanceV2Req, CreateShiftInstanceV2Res, CreateShiftInstanceWithSegmentsRequest, CreateShiftInstanceWithSegmentsResponse, CreateShiftTemplateReq, CreateShiftTemplateRes, CreateSkillProficienciesReq, CreateSkillProficienciesRes, CreateSkillProfileGroupReq, CreateSkillProfileGroupRes, CreateTourAgentCollectionReq, CreateTourAgentCollectionRes, CreateTourAgentCollectionWFMAgentsReq, CreateTourAgentCollectionWFMAgentsRes, CreateTourPatternReq, CreateTourPatternRes, CreateTourShiftInstanceConfigReq, CreateTourShiftInstanceConfigRes, CreateTourShiftSegmentConfigReq, CreateTourShiftSegmentConfigRes, CreateTourWeekPatternReq, CreateTourWeekPatternRes, CreateUnassignedWFMAgentRequest, CreateUnassignedWFMAgentResponse, CreateWFMAgentMembershipsReq, CreateWFMAgentMembershipsRes, DeleteAgentAvailabilityPatternReq, DeleteAgentAvailabilityPatternRes, DeleteCallProfileTemplateReq, DeleteCallProfileTemplateRes, DeleteConstraintRuleReq, DeleteConstraintRuleRes, DeleteDraftScheduleReq, DeleteDraftScheduleRes, DeleteForecastIntervalsReq, DeleteForecastIntervalsRes, DeleteHistoricalDataDeltasReq, DeleteHistoricalDataDeltasRes, DeleteOpenTimesPatternReq, DeleteOpenTimesPatternRes, DeletePlacementRuleReq, DeletePlacementRuleRes, DeleteRegressionTemplateReq, DeleteRegressionTemplateRes, DeleteSchedulingTargetReq, DeleteSchedulingTargetRes, DeleteShiftInstancesReq, DeleteShiftInstancesRes, DeleteSkillProficiencyReq, DeleteSkillProficiencyRes, DeleteTourAgentCollectionsReq, DeleteTourAgentCollectionsRes, DeleteTourAgentCollectionWFMAgentsReq, DeleteTourAgentCollectionWFMAgentsRes, DeleteTourPatternReq, DeleteTourPatternRes, DeleteTourShiftInstanceConfigsReq, DeleteTourShiftInstanceConfigsRes, DeleteTourShiftSegmentConfigsReq, DeleteTourShiftSegmentConfigsRes, DeleteTourWeekPatternsReq, DeleteTourWeekPatternsRes, DeleteWFMAgentMembershipsReq, DeleteWFMAgentMembershipsRes, DeleteWFMAgentsMembershipsReq, DeleteWFMAgentsMembershipsRes, DisconnectInactiveSkillProfileMappingReq, DisconnectInactiveSkillProfileMappingRes, GenerateTourWeekPatternsReq, GenerateTourWeekPatternsRes, GetAvailabilityBitmapsReq, GetAvailabilityBitmapsRes, GetAvailableRegressionForecasterModelTypesReq, GetAvailableRegressionForecasterModelTypesRes, GetClientHistoryCacheInfoReq, GetClientHistoryCacheInfoRes, GetDefaultSchedulingTargetReq, GetDefaultSchedulingTargetRes, GetDraftScheduleReq, GetDraftScheduleRequiredCallsReq, GetDraftScheduleRequiredCallsRes, GetDraftScheduleRes, GetForecastingParametersReq, GetForecastingParametersRes, GetLastSkillProfileResyncDateReq, GetLastSkillProfileResyncDateRes, GetOpenTimesBitmapsReq, GetOpenTimesBitmapsRes, GetPerformanceMetricsReq, GetPerformanceMetricsRes, GetPublishedScheduleReq, GetPublishedScheduleRequiredCallsReq, GetPublishedScheduleRequiredCallsRes, GetPublishedScheduleRes, GetSchedulingTargetReq, GetSchedulingTargetRes, GetSkillProfileReq, GetSkillProfileRes, GetSkillProfilesCountReq, GetSkillProfilesCountRes, GetTourPatternDiagnosticsReq, GetTourPatternDiagnosticsRes, GetTourPatternReq, GetTourPatternRes, GetTourPatternWithMembersReq, GetTourPatternWithMembersRes, HelloWorldWFMAdherenceRequest, HelloWorldWFMAdherenceResponse, ListAgentScheduleGroupsRequest, ListAgentScheduleGroupsResponse, ListAllWFMAgentsReq, ListAllWFMAgentsRes, ListCallProfileTemplatesReq, ListCallProfileTemplatesRes, ListCandidateSchedulingActivitiesReq, ListCandidateSchedulingActivitiesRes, ListCandidateWFMAgentsReq, ListCandidateWFMAgentsRes, ListConfigEntitiesReq, ListConfigEntitiesRes, ListDraftSchedulesReq, ListDraftSchedulesRes, ListForecastIntervalsForSkillProfileReq, ListForecastIntervalsReq, ListHistoricalDataForAllSkillProfilesReq, ListHistoricalDataForAllSkillProfilesRes, ListHistoricalDataReq, ListHistoricalDataRes, ListNonSkillActivitiesReq, ListNonSkillActivitiesRes, ListNonSkillActivityAssociationsReq, ListNonSkillActivityAssociationsRes, ListProgramNodesBySidReq, ListProgramNodesBySidRes, ListRegressionTemplatesReq, ListRegressionTemplatesRes, ListRequiredCallsIntervalsReq, ListRequiredCallsIntervalsRes, ListShiftInstancesBySidReq, ListShiftInstancesBySidRes, ListShiftInstanceSidsForAgentReq, ListShiftInstanceSidsForAgentRes, ListShiftSegmentsByShiftInstanceSidsReq, ListShiftSegmentsByShiftInstanceSidsRes, ListShiftTemplatesBySidsReq, ListShiftTemplatesBySidsRes, ListSkillProfileGroupsReq, ListSkillProfileGroupsRes, ListSkillProfilesReq, ListSkillProfilesRes, ListSkillsReq, ListSkillsRes, ListTopSkillProfilesReq, ListTopSkillProfilesRes, ListTourAgentCollectionsReq, ListTourAgentCollectionsRes, ListTourAgentCollectionWFMAgentsReq, ListTourAgentCollectionWFMAgentsRes, ListTourShiftInstanceConfigsReq, ListTourShiftInstanceConfigsRes, ListTourShiftSegmentConfigsReq, ListTourShiftSegmentConfigsRes, ListTourWeekPatternsReq, ListTourWeekPatternsRes, ListUnassignedWFMAgentsRequest, ListUnassignedWFMAgentsResponse, ListUngroupedWFMAgentsReq, ListUngroupedWFMAgentsRes, ListValidAgentsForReplacementReq, ListValidAgentsForReplacementRes, ListWFMAgentsAssociatedWithAgentGroupReq, ListWFMAgentsAssociatedWithAgentGroupRes, ListWFMAgentSidsReq, ListWFMAgentSidsRes, PerformInitialClientSetupRequest, PerformInitialClientSetupResponse, PublishDraftScheduleReq, PublishDraftScheduleRes, RemoveAgentFromOrgRequest, RemoveAgentFromOrgResponse, RemoveAgentFromScheduleRequest, RemoveAgentFromScheduleResponse, ReplaceAgentOnScheduleReq, ReplaceAgentOnScheduleRes, ResetDraftScheduleReq, ResetDraftScheduleRes, ResyncSkillProfilesReq, ResyncSkillProfilesRes, SetDefaultSchedulingTargetReq, SetDefaultSchedulingTargetRes, SetSchedulingTargetReq, SetSchedulingTargetRes, SplitShiftInstanceReq, SplitShiftInstanceRes, SwapShiftInstancesReq, SwapShiftInstancesRes, UpdateAgentAvailabilityPatternReq, UpdateAgentAvailabilityPatternRes, UpdateAgentGroupReq, UpdateAgentGroupRes, UpdateCallCenterNodeReq, UpdateCallCenterNodeRes, UpdateClientNodeReq, UpdateClientNodeRes, UpdateConstraintRuleReq, UpdateConstraintRuleRes, UpdateDraftScheduleReq, UpdateDraftScheduleRes, UpdateLocationNodeReq, UpdateLocationNodeRes, UpdateNonSkillActivityReq, UpdateNonSkillActivityRes, UpdateOpenTimesPatternReq, UpdateOpenTimesPatternRes, UpdatePlacementRuleReq, UpdatePlacementRuleRes, UpdateProgramNodeReq, UpdateProgramNodeRes, UpdateScheduleScenarioReq, UpdateScheduleScenarioRes, UpdateShiftInstanceReq, UpdateShiftInstanceRes, UpdateShiftInstanceV2Req, UpdateShiftInstanceV2Res, UpdateShiftInstanceWithSegmentsRequest, UpdateShiftInstanceWithSegmentsResponse, UpdateShiftTemplateReq, UpdateShiftTemplateRes, UpdateSkillProficienciesReq, UpdateSkillProficienciesRes, UpdateSkillProfileAveragesUsingHistoricalDataReq, UpdateSkillProfileAveragesUsingHistoricalDataRes, UpdateSkillProfileGroupAssociationsReq, UpdateSkillProfileGroupAssociationsRes, UpdateSkillProfileGroupReq, UpdateSkillProfileGroupRes, UpdateSkillProfileProficienciesReq, UpdateSkillProfileProficienciesRes, UpdateSkillProfileReq, UpdateSkillProfileRes, UpdateTourAgentCollectionReq, UpdateTourAgentCollectionRes, UpdateTourShiftInstanceConfigReq, UpdateTourShiftInstanceConfigRes, UpdateTourShiftSegmentConfigReq, UpdateTourShiftSegmentConfigRes, UpdateWFMAgentReq, UpdateWFMAgentRes, UpsertForecastDataDeltaReq, UpsertForecastDataDeltaRes, UpsertForecastDataDeltasReq, UpsertForecastDataDeltasRes, UpsertForecastingParametersReq, UpsertForecastingParametersRes, UpsertHistoricalDataDeltaReq, UpsertHistoricalDataDeltaRes, UpsertHistoricalDataDeltasReq, UpsertHistoricalDataDeltasRes, UpsertNonSkillActivityAssociationReq, UpsertNonSkillActivityAssociationRes, UpsertProfileForecastReq, UpsertProfileForecastRes, UpsertRegressionForecastReq, UpsertRegressionForecastRes, UpsertTourPatternWithMembersReq, UpsertTourPatternWithMembersRes } from "./wfm_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * WFM is responsible for call prediction and call volume calculations based on call skills and other parameters.
 *
 * @generated from service api.v1alpha1.wfm.WFM
 */
export const WFM = {
  typeName: "api.v1alpha1.wfm.WFM",
  methods: {
    /**
     * Starts the tasks to perform the initial setup on wfm services for the org sending the request.
     * It will then report the state of their setup task.
     * A new setup task will only be started if the client hasn't done one before, or their setup failed previously.
     * Required permissions:
     *  NONE
     * Errors:
     *  - grpc.Internal: error occurs when performing the initial setup.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.PerformInitialClientSetup
     */
    performInitialClientSetup: {
      name: "PerformInitialClientSetup",
      I: PerformInitialClientSetupRequest,
      O: PerformInitialClientSetupResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Retrieves all the skill profiles of the org sending the request.
     * Also it can return the skills of each of the returned profiles.
     * Required permissions:
     *   NONE
     * Errors:
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListSkillProfiles
     */
    listSkillProfiles: {
      name: "ListSkillProfiles",
      I: ListSkillProfilesReq,
      O: ListSkillProfilesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the @name, and averages of a skill profile that has the given @skill_profile_sid.
     * It also updates it to no longer be unnamed.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @skill_profile_sid, @name or averages in the request are invalid.
     *   - grpc.Internal: error occurs when updating the skill profile.
     *   - grpc.NotFound: entry to be updated doesn't exist.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateSkillProfile
     */
    updateSkillProfile: {
      name: "UpdateSkillProfile",
      I: UpdateSkillProfileReq,
      O: UpdateSkillProfileRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the @proficiencies for the given skill profile's skills that belong the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @proficiencies in the request are invalid.
     *   - grpc.Internal: error occurs when updating the skill profiles proficiencies.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateSkillProfileProficiencies
     */
    updateSkillProfileProficiencies: {
      name: "UpdateSkillProfileProficiencies",
      I: UpdateSkillProfileProficienciesReq,
      O: UpdateSkillProfileProficienciesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Get a skill profile that has the given @skill_profile_sid.
     * It also gets all the skills and the mappings associated with that profile.
     * If the @inactive_as_of_date of the skill profile is nil then the mapping is of inactive profiles to this one,
     * otherwise the mapping is of this profile to an active one.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @skill_profile_sid in the request is invalid.
     *   - grpc.Internal: error occurs when getting the skill profile.
     *   - grpc.NotFound: skill profile doesn't exist.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetSkillProfile
     */
    getSkillProfile: {
      name: "GetSkillProfile",
      I: GetSkillProfileReq,
      O: GetSkillProfileRes,
      kind: MethodKind.Unary,
    },
    /**
     * Resyncs the skill profiles of the org sending the request.
     * It will add skills and skill profiles based on that client's historical call data.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Internal: error occurs when creating the new skills and skill profiles.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ResyncSkillProfiles
     */
    resyncSkillProfiles: {
      name: "ResyncSkillProfiles",
      I: ResyncSkillProfilesReq,
      O: ResyncSkillProfilesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the last date of a skill profile resync for the org seding the request.
     * If the org has never done a skill profile resync @resync_date will not be set.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Internal: error occurs when getting the resync date.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetLastSkillProfileResyncDate
     */
    getLastSkillProfileResyncDate: {
      name: "GetLastSkillProfileResyncDate",
      I: GetLastSkillProfileResyncDateReq,
      O: GetLastSkillProfileResyncDateRes,
      kind: MethodKind.Unary,
    },
    /**
     * Tries to create an entry for the given forecasting parameters for the org sending the request.
     * If the org already has an entry for them, it will update the already existing entry.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @forecasting_parameters in the request is invalid.
     *   - grpc.Internal: error occurs when upserting the parameters.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpsertForecastingParameters
     */
    upsertForecastingParameters: {
      name: "UpsertForecastingParameters",
      I: UpsertForecastingParametersReq,
      O: UpsertForecastingParametersRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the forecasting parameters for the org sending the request.
     * If the org hasn't created any parameters, it will return the default parameters.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Internal: error occurs when getting the parameters.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetForecastingParameters
     */
    getForecastingParameters: {
      name: "GetForecastingParameters",
      I: GetForecastingParametersReq,
      O: GetForecastingParametersRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the state of the cache for the given @org_id, and if the cache's state is not_loaded, or loading_failed,
     * it will start the loading task before returning the current state.
     * DEPRECATED as of Dec/13/2023 - Use PerformInitialClientSetup instead.
     * Required permissions:
     *  NONE
     * Errors:
     *  -grpc.Internal: error occurs when getting the cache info.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetClientHistoryCacheInfo
     * @deprecated
     */
    getClientHistoryCacheInfo: {
      name: "GetClientHistoryCacheInfo",
      I: GetClientHistoryCacheInfoReq,
      O: GetClientHistoryCacheInfoRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the historical data for the org sending the request and the given @skill_profile_category.
     * It will look through the client's call history and generate the historical data by using their configured forecasting parameters (historical data period and interval width).
     * The duration of each interval will be the interval width of the org's forecasting parameters.
     * It also applies any deltas that the client has stored for the given @skill_profile_category, if the category is a group it will use the deltas of the skill profiles part of that group.
     * If the client has no historical data, only the deltas will be applied to the returned intervals, all other intervals will have nil averages.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @skill_profile_category in the request is invalid.
     *   - grpc.NotFound: the @skill_profile_category given is not found for the org.
     *   - grpc.Internal: error occurs when getting the historical data.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListHistoricalData
     */
    listHistoricalData: {
      name: "ListHistoricalData",
      I: ListHistoricalDataReq,
      O: ListHistoricalDataRes,
      kind: MethodKind.Unary,
    },
    /**
     * Tries to create an entry for the given @delta for the org sending the request.
     * If the org already has an entry for it, it will update the already exisiting entry.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @delta in the request is invalid.
     *   - grpc.Internal: error occurs when upserting the historical data interval.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpsertHistoricalDataDelta
     */
    upsertHistoricalDataDelta: {
      name: "UpsertHistoricalDataDelta",
      I: UpsertHistoricalDataDeltaReq,
      O: UpsertHistoricalDataDeltaRes,
      kind: MethodKind.Unary,
    },
    /**
     * Tries to create entries for the given @deltas.
     * If the given org already has an entry for any of the deltas, it will replace the already existing entries.
     * This is made into a unary due to the UI's lack of support for client streams.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @deltas in the request are invalid.
     *   - grpc.Internal: error occurs when upserting the historical data deltas.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpsertHistoricalDataDeltas
     */
    upsertHistoricalDataDeltas: {
      name: "UpsertHistoricalDataDeltas",
      I: UpsertHistoricalDataDeltasReq,
      O: UpsertHistoricalDataDeltasRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets all the skills that the org sending the request has.
     * Skills returned will be sorted by @skill_sid in ascending order.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Internal: error occurs when getting the skills.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListSkills
     */
    listSkills: {
      name: "ListSkills",
      I: ListSkillsReq,
      O: ListSkillsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Builds and returns a call profile template for the org sending the request and the given @skill_profile_sid.
     * The template will be generated using the training data for said skill profile using the @training_data_range and @averages_calculation_range_in_months
     * from the client's saved forecasting parameters.
     * The @total_calls in the returned template be summed from the (@training_data_start_datetime - @averages_calculation_range_in_months) to @training_data_end_datetime,
     * or from @training_data_start_datetime to @training_data_end_datetime if @averages_calculation_range_in_months is 0.
     * The fixed averages fields in the call profile template, will be set to the averages that the skill profile has.
     * DEPRECATED as of Sep/7/2023 - Use BuildCallProfileTemplate instead.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @skill_profile_sid in the request is invalid.
     *   - grpc.NotFound: the @skill_profile_sid given is not found for the org.
     *   - grpc.Internal: error occurs when building the call profile template.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.BuildCallProfileTemplateForSkillProfile
     * @deprecated
     */
    buildCallProfileTemplateForSkillProfile: {
      name: "BuildCallProfileTemplateForSkillProfile",
      I: BuildCallProfileTemplateForSkillProfileReq,
      O: BuildCallProfileTemplateForSkillProfileRes,
      kind: MethodKind.Unary,
    },
    /**
     * Builds and returns a call profile template for the org sending the request and the given @skill_profile_category.
     * The template will be generated using the training data for said skill profile category using the @training_data_range and @averages_calculation_range_in_months
     * from the client's saved forecasting parameters.
     * The @total_calls in the returned template be summed from the (@training_data_start_datetime - @averages_calculation_range_in_months) to @training_data_end_datetime,
     * or from @training_data_start_datetime to @training_data_end_datetime if @averages_calculation_range_in_months is 0.
     * The fixed averages fields in the call profile template, will be set to the averages that the skill profile category has.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @skill_profile_category in the request is invalid.
     *   - grpc.NotFound: the @skill_profile_category given is not found for the org.
     *   - grpc.Internal: error occurs when building the call profile template.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.BuildCallProfileTemplate
     */
    buildCallProfileTemplate: {
      name: "BuildCallProfileTemplate",
      I: BuildCallProfileTemplateReq,
      O: BuildCallProfileTemplateRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates a mapping entry for the @inactive_skill_profile_sid to the @active_skill_profile_sid for the org sending the request.
     * DEPRECATED as of Sep/27/2023 - Use skill profile groups instead.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @inactive_skill_profile_sid, or @active_skill_profile_sid in the request are invalid.
     *                   the @inactive_skill_profile_sid given is of an active skill profile.
     *                   the @active_skill_profile_sid given is of an inactive skill profile.
     *   - grpc.Internal: error occurs when creating the inactive skill profile mapping.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateInactiveSkillProfileMapping
     * @deprecated
     */
    createInactiveSkillProfileMapping: {
      name: "CreateInactiveSkillProfileMapping",
      I: CreateInactiveSkillProfileMappingReq,
      O: CreateInactiveSkillProfileMappingRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets a list of enums that represent all of the forecaster types that are currently available for use
     * Required permissions:
     *  NONE
     * Errors:
     *  -grpc.Internal: error occurs when contacting the forecaster to get the available forecaster types.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetAvailableRegressionForecasterModelTypes
     */
    getAvailableRegressionForecasterModelTypes: {
      name: "GetAvailableRegressionForecasterModelTypes",
      I: GetAvailableRegressionForecasterModelTypesReq,
      O: GetAvailableRegressionForecasterModelTypesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Changes the current mapping for the given @inactive_skill_profile_sid to be disconnected.
     * DEPRECATED as of Sep/27/2023 - Use skill profile groups instead.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @inactive_skill_profile_sid in the request is invalid.
     *   - grpc.NotFound: the skill profile is not found for the org.
     *   - grpc.Internal: the current mapping for the given @inactive_skill_profile_sid is already disconnected,
     * 				            the given @inactive_skill_profile_sid is of an active skill profile.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DisconnectInactiveSkillProfileMapping
     * @deprecated
     */
    disconnectInactiveSkillProfileMapping: {
      name: "DisconnectInactiveSkillProfileMapping",
      I: DisconnectInactiveSkillProfileMappingReq,
      O: DisconnectInactiveSkillProfileMappingRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates the given @skill_profile_group.
     * @skill_profile_group_sids will be ignored since associations cannot be created by this method.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @skill_profile_group in the request is invalid.
     *   - grpc.Internal: error occurs creating the skill profile group.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateSkillProfileGroup
     */
    createSkillProfileGroup: {
      name: "CreateSkillProfileGroup",
      I: CreateSkillProfileGroupReq,
      O: CreateSkillProfileGroupRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the given @skill_profile_group that has the @skill_profile_group_sid for the org sending the request.
     * @skill_profile_group_sids will be ignored since associations cannot be updated by this method.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @skill_profile_group in the request is invalid.
     *   - grpc.NotFound: the skill profile group to update doesn't exist.
     *   - grpc.Internal: error occurs updating the skill profile group.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateSkillProfileGroup
     */
    updateSkillProfileGroup: {
      name: "UpdateSkillProfileGroup",
      I: UpdateSkillProfileGroupReq,
      O: UpdateSkillProfileGroupRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the skill profile groups that have the @skill_profile_group_sids for the org sending the request.
     * if @include_inactive is true then inactive groups will also be included, otherwise only active groups will be returned.
     * If @skill_profile_group_sids is empty it will get all the skill profile groups for the org.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @skill_profile_group_sids in the request is invalid.
     *   - grpc.Internal: error occurs getting the skill profile groups.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListSkillProfileGroups
     */
    listSkillProfileGroups: {
      name: "ListSkillProfileGroups",
      I: ListSkillProfileGroupsReq,
      O: ListSkillProfileGroupsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates associations of the given @skill_profile_group_sid for the org sending the request.
     * It will create the associations with the @skill_profile_sids_to_associate, and remove the associations with the @skill_profile_sids_to_disassociate.
     * Only one of the skill_profile_sids fields needs to be set, but both can be set on the same request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the values in the request are invalid.
     *   - grpc.Internal: error occurs updating the skill profile group associations.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateSkillProfileGroupAssociations
     */
    updateSkillProfileGroupAssociations: {
      name: "UpdateSkillProfileGroupAssociations",
      I: UpdateSkillProfileGroupAssociationsReq,
      O: UpdateSkillProfileGroupAssociationsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes deltas whose dates match the given @start_datetimes for the given @skill_profile_sid.
     * If no @start_datetimes are given, it will delete all the deltas that the given @skill_profile_sid has.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @skill_profile_sid, or @start_datetimes in the request are invalid.
     *   - grpc.NotFound: no matching deltas are found for deletion.
     *   - grpc.Internal: error occurs during the deletion of the historical data interval.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteHistoricalDataDeltas
     */
    deleteHistoricalDataDeltas: {
      name: "DeleteHistoricalDataDeltas",
      I: DeleteHistoricalDataDeltasReq,
      O: DeleteHistoricalDataDeltasRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the top N skill profiles with the highest calls_count for org sending the request where N is @max_number_of_profiles.
     * It will also return the number of skills found for that profile.
     * Individual skills that each profile has will not be returned.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @max_number_of_profiles in the request is invalid.
     *   - grpc.Internal: error occurs when getting the skill profiles.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListTopSkillProfiles
     */
    listTopSkillProfiles: {
      name: "ListTopSkillProfiles",
      I: ListTopSkillProfilesReq,
      O: ListTopSkillProfilesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the total number of skill profiles associated with the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Internal: error occurs when getting the skill profiles count.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetSkillProfilesCount
     */
    getSkillProfilesCount: {
      name: "GetSkillProfilesCount",
      I: GetSkillProfilesCountReq,
      O: GetSkillProfilesCountRes,
      kind: MethodKind.Unary,
    },
    /**
     * Builds a profile forecast using the provided @call_profile_template.
     * The forecaster will produce intervals from the following range using the client's saved forecasting parameters:
     * (@training_data_range_end_datetime - @forecast_test_range_in_weeks) to @forecast_range_end_datetime.
     * The @total_calls in the @call_profile_template will be scaled using the same ranges as BuildCallProfileTemplate.
     * The @fixed_averages_forecast field indicates whether or not to do a fixed averages forecast.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @skill_profile_category or @call_profile_template in the request is invalid.
     *   - grpc.Internal: error occurs during the building of the profile forecast.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.BuildProfileForecastByInterval
     */
    buildProfileForecastByInterval: {
      name: "BuildProfileForecastByInterval",
      I: BuildProfileForecastByIntervalReq,
      O: CallDataByInterval,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * Builds a profile forecast using the provided @call_profile_template.
     * The forecaster will produce intervals from the following range using the client's saved forecasting parameters:
     * (@training_data_range_end_datetime - @forecast_test_range_in_weeks) to @forecast_range_end_datetime.
     * The @total_calls in the @call_profile_template will be scaled using the same ranges as BuildCallProfileTemplate.
     * The @fixed_averages_forecast field indicates whether or not to do a fixed averages forecast.
     * It also returns the statistics of the produced forecast by using the test data of the given @skill_profile_category.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @skill_profile_category or @call_profile_template in the request is invalid.
     *   - grpc.Internal: error occurs during the building of the profile forecast.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.BuildProfileForecastByIntervalWithStats
     */
    buildProfileForecastByIntervalWithStats: {
      name: "BuildProfileForecastByIntervalWithStats",
      I: BuildProfileForecastByIntervalWithStatsReq,
      O: BuildProfileForecastByIntervalWithStatsRes,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * Builds a profile forecast for the given @skill_profile_sid and org sending the request using the given @call_profile_template.
     * The forecaster will produce intervals from the following range using the client's saved forecasting parameters:
     * @forecast_range_start_datetime to @forecast_range_end_datetime.
     * The @total_calls in the @call_profile_template will be scaled using the same ranges as BuildCallProfileTemplateForSkillProfile.
     * The intervals produced will be saved in the database.
     * The @fixed_averages_forecast field indicates whether or not to do a fixed averages forecast.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @skill_profile_sid or @call_profile_template in the request are invalid.
     *   - grpc.NotFound: the @skill_profile_sid doesn't exist.
     *   - grpc.Internal: error occurs when upserting the profile forecast.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpsertProfileForecast
     */
    upsertProfileForecast: {
      name: "UpsertProfileForecast",
      I: UpsertProfileForecastReq,
      O: UpsertProfileForecastRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates the given @call_profile_template for the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @call_profile_template in the request is invalid.
     *   - grpc.Internal: error occurs during the creation of the call profile.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateCallProfileTemplate
     */
    createCallProfileTemplate: {
      name: "CreateCallProfileTemplate",
      I: CreateCallProfileTemplateReq,
      O: CreateCallProfileTemplateRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes a call profile template for the requesting org that has the given @call_profile_template_sid.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @call_profile_template_sid in the request is invalid.
     *   - grpc.Internal: error occurs during the deletion of the call profile.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteCallProfileTemplate
     */
    deleteCallProfileTemplate: {
      name: "DeleteCallProfileTemplate",
      I: DeleteCallProfileTemplateReq,
      O: DeleteCallProfileTemplateRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates an entry for the @regression_template for the requesting org.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @regression_template in the request is invalid.
     *   - grpc.Internal: error occurs when creating the regression template.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateRegressionTemplate
     */
    createRegressionTemplate: {
      name: "CreateRegressionTemplate",
      I: CreateRegressionTemplateReq,
      O: CreateRegressionTemplateRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes a regression template for the requesting org that has the given @regression_template_sid.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @regression_template_sid in the request is invalid.
     *   - grpc.Internal: error occurs during the deletion of the regression template.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteRegressionTemplate
     */
    deleteRegressionTemplate: {
      name: "DeleteRegressionTemplate",
      I: DeleteRegressionTemplateReq,
      O: DeleteRegressionTemplateRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets all the regression templates that the org sending the request has.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Internal: error occurs when getting the regression templates.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListRegressionTemplates
     */
    listRegressionTemplates: {
      name: "ListRegressionTemplates",
      I: ListRegressionTemplatesReq,
      O: ListRegressionTemplatesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the forecast data intervals for the given @skill_profile_sid.
     * DEPRECATED as of Sep/13/2023 - Use ListForecastIntervals instead.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @skill_profile_sid in the request is invalid.
     *   - grpc.Internal: error occurs when getting the forecast data intervals.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListForecastIntervalsForSkillProfile
     * @deprecated
     */
    listForecastIntervalsForSkillProfile: {
      name: "ListForecastIntervalsForSkillProfile",
      I: ListForecastIntervalsForSkillProfileReq,
      O: CallDataByInterval,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * Gets the forecast data intervals for the given @skill_profile_category.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @skill_profile_category in the request is invalid.
     *   - grpc.Internal: error occurs when getting the forecast data intervals.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListForecastIntervals
     */
    listForecastIntervals: {
      name: "ListForecastIntervals",
      I: ListForecastIntervalsReq,
      O: CallDataByInterval,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * Generates a regression forecast using the provided @regression_template.
     * It will generate forecast intervals for the skill profiles sids in @skill_profile_sids_to_forecast.
     * It will use the client's saved forecasting test range as the start datetime and the forecast range as the end datetime of the forecasted data.
     * It will use the client's saved interval width to divide the resulting forecast intervals.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: no @skill_profile_sids_to_forecast are given or the @regression_template in the request is invalid.
     *   - grpc.Internal: error occurs during the building of the regression forecast.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.BuildRegressionForecastByInterval
     */
    buildRegressionForecastByInterval: {
      name: "BuildRegressionForecastByInterval",
      I: BuildRegressionForecastByIntervalReq,
      O: CallDataByInterval,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * Generates a regression forecast and calculates forecast statistics using the provided @regression_template.
     * It will generate forecast intervals for the skill profiles sids in @skill_profile_sids_to_forecast.
     * It will use the client's saved forecasting test range as the start datetime and the forecast range as the end datetime of the forecasted data.
     * It will use the client's saved interval width to divide the resulting forecast intervals.
     * The first message received will be the forecast statistics while all subsequent ones will be the forecast intervals.
     *
     * Errors:
     *   - grpc.Invalid: no @skill_profile_sids_to_forecast are given or the @regression_template in the request is invalid.
     *   - grpc.Internal: error occurs either during the when building the forecast or calculating the stats.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.BuildRegressionForecastByIntervalWithStats
     */
    buildRegressionForecastByIntervalWithStats: {
      name: "BuildRegressionForecastByIntervalWithStats",
      I: BuildRegressionForecastByIntervalWithStatsReq,
      O: BuildRegressionForecastByIntervalWithStatsRes,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * Gets the call profile templates that the org sending the request has.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Internal: error occurs when getting the templates.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListCallProfileTemplates
     */
    listCallProfileTemplates: {
      name: "ListCallProfileTemplates",
      I: ListCallProfileTemplatesReq,
      O: ListCallProfileTemplatesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Builds a regression forecast for the org using the given @regression_template and saves the resulting intervals in the db.
     * It will generate forecast intervals for the skill profiles sids in @save_forecasts_for_skill_profile_sids,
     * if the list is empty or has no valid skill profile sids, it will generate and save forecasts for all active skill profiles.
     * If any intervals produced already exist in the db, they will be replaced with the ones produced.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @regression_template in the request is invalid.
     *   - grpc.Internal: error occurs when upserting the regression forecast.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpsertRegressionForecast
     */
    upsertRegressionForecast: {
      name: "UpsertRegressionForecast",
      I: UpsertRegressionForecastReq,
      O: UpsertRegressionForecastRes,
      kind: MethodKind.Unary,
    },
    /**
     * Tries to create an entry for the given @delta for the org sending the request.
     * If the org already has an entry for it, it will update the already exisiting entry.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @delta in the request is invalid.
     *   - grpc.Internal: error occurs when upserting the forecast data delta.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpsertForecastDataDelta
     */
    upsertForecastDataDelta: {
      name: "UpsertForecastDataDelta",
      I: UpsertForecastDataDeltaReq,
      O: UpsertForecastDataDeltaRes,
      kind: MethodKind.Unary,
    },
    /**
     * Tries to create entries for the given @deltas.
     * If the org already has entries for any of them, it will update the already existing entry.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @deltas in the request are invalid.
     *   - grpc.Internal: error occurs when upserting the forecast data deltas.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpsertForecastDataDeltas
     */
    upsertForecastDataDeltas: {
      name: "UpsertForecastDataDeltas",
      I: UpsertForecastDataDeltasReq,
      O: UpsertForecastDataDeltasRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes forecast data intervals/deltas based on the parameters provided.
     * If @delete_param is type skill_profile_category, then the intervals/deltas to be deleted will be
     * associated with that id. If @delete_param is type interval_sids, then the intervals/deltas to be
     * deleted will be contained in the list @interval_sids. The @delete_type field determines which
     * table(s) in the database the intervals/deltas will be deleted from.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: one of the @delete_params is invalid
     *   - grpc.NotFound: no matching intervals/deltas are found for deletion.
     *   - grpc.Internal: error occurs during the deletion of the forecast data intervals/deltas.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteForecastIntervals
     */
    deleteForecastIntervals: {
      name: "DeleteForecastIntervals",
      I: DeleteForecastIntervalsReq,
      O: DeleteForecastIntervalsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Retrieves the history for all the skill profiles of the requesting org.
     * Each value in every interval that has the same @start_datetime of each skill profile will be summed then averaged and made into a single one.
     * When calculating the averages, each interval's values will be weighted by the number of @total_calls it has.
     * History will be sorted by @start_datetime in ascending order, and the range is determined by the client's historical range.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Internal: error occurs when retriving the history.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListHistoricalDataForAllSkillProfiles
     */
    listHistoricalDataForAllSkillProfiles: {
      name: "ListHistoricalDataForAllSkillProfiles",
      I: ListHistoricalDataForAllSkillProfilesReq,
      O: ListHistoricalDataForAllSkillProfilesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Converts the given @profile_tod and @profile_woms to a ProfileDOW and ProfileMOY.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @profile_tod or @profile_woms in the request are invalid.
     *   - grpc.Internal: error occurs when building the ProfileDOW or ProfileMOY.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.BuildDOWAndMOYProfiles
     */
    buildDOWAndMOYProfiles: {
      name: "BuildDOWAndMOYProfiles",
      I: BuildDOWAndMOYProfilesReq,
      O: BuildDOWAndMOYProfilesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Calculates and returns the averages in the training data for the given @skill_profile_sid.
     * Averages to be returned will be weighted by the number of calls that each training data interval has.
     * The start time that the training data will be averaged can be modified based on the forecasting parameter @averages_calculation_range_in_months,
     * which will subtract that many months from the training data range end datetime and set it as the start time.
     * If @averages_calculation_range_in_months is 0, it will use the training data range start datetime.
     *
     * Errors:
     *   - grpc.Invalid: the @skill_profile_sid in the request is invalid.
     *   - grpc.NotFound: the @skill_profile_sid given is not found.
     *   - grpc.Internal: error occurs when calculating the averages from the training data.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CalculateTrainingDataAveragesForSkillProfile
     */
    calculateTrainingDataAveragesForSkillProfile: {
      name: "CalculateTrainingDataAveragesForSkillProfile",
      I: CalculateTrainingDataAveragesForSkillProfileReq,
      O: CalculateTrainingDataAveragesForSkillProfileRes,
      kind: MethodKind.Unary,
    },
    /**
     * Calculates the averages for call characteristics using the historical data of the given @skill_profile_sids, @skill_profile_group_sids and org sending the request.
     * If no @skill_profile_sids are given, it will calculate the averages for all skill profiles for the org sending the request.
     * If no @skill_profile_group_sids are given, it will calculate the averages for all skill profile groups for the org sending the request.
     * Averages will be weighted by the number of calls that each historical data interval has.
     * Once the averages are calculated, they will be updated in the db for those skill profiles.
     *
     * If a nil @datetime_range is given then the range used will be @training_data_range_end_datetime - @averages_calculation_range_in_months to the @training_data_range_end_datetime from the forecasting parameters.
     * If @averages_calculation_range_in_months is 0, it will use the @training_data_range_start_datetime as the start datetime of the range.
     *
     * If @exclude_skill_profiles_with_manual_averages is true, it will exclude skill profiles and groups that have manual averages from the calculation
     * even if those skill profiles and groups are in @skill_profile_sids or @skill_profile_group_sids respectively.
     *
     * Errors:
     *   - grpc.Internal: error occurs when calculating the averages from the historical data.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateSkillProfileAveragesUsingHistoricalData
     */
    updateSkillProfileAveragesUsingHistoricalData: {
      name: "UpdateSkillProfileAveragesUsingHistoricalData",
      I: UpdateSkillProfileAveragesUsingHistoricalDataReq,
      O: UpdateSkillProfileAveragesUsingHistoricalDataRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the call center @node that has the given @call_center_node_sid.
     * All of the entity's parameters that are not desired to be updated must be filled with their current values.
     * The @schedule_scenario_sid must be the original for this call center node since it cannot be changed.
     * The @member fields will be ignored since those cannot be updated by this method and must be updated by their respective update methods.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the one or more of the fields in the request are invalid.
     *   - grpc.Internal: error occurs when updating the call center node.
     *   - grpc.NotFound: entry to be updated doesn't exist.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateCallCenterNode
     */
    updateCallCenterNode: {
      name: "UpdateCallCenterNode",
      I: UpdateCallCenterNodeReq,
      O: UpdateCallCenterNodeRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates the given client @node for the org sending the request and @parent_sid in the node.
     * The @client_node_sid of the new entity will be returned in the response.
     * The @schedule_scenario_sid must match the scenario of the parent call center node.
     * The @member fields will be ignored since those cannot be created by this method and must be created by their respective create methods.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @name, @parent_sid, or @time_zone_val is invalid.
     *   - grpc.NotFound: parent call center node doesn't exist, or belongs to a different scenario than the one given.
     *   - grpc.Internal: error occurs when creating the client node.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateClientNode
     */
    createClientNode: {
      name: "CreateClientNode",
      I: CreateClientNodeReq,
      O: CreateClientNodeRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates a client node for the org sending the request that has the given @client_node_sid and @schedule_scenario_sid.
     * All of the entity's parameters that are not desired to be updated must be filled with their current values.
     * The @schedule_scenario_sid must be the original for this client node since it cannot be changed.
     * The @member fields will be ignored since those cannot be updated by this method and must be updated by their respective update methods.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the @node have invalid values.
     *   - grpc.Internal: error occurs when updating the client @node.
     *   - grpc.NotFound: entry to be updated doesn't exist, or the given @parent_sid (call_center_node_sid) belongs to a different scenario than this @node.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateClientNode
     */
    updateClientNode: {
      name: "UpdateClientNode",
      I: UpdateClientNodeReq,
      O: UpdateClientNodeRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates the given location @node for the org sending the request and parent @client_node_sid.
     * The @location_node_sid of the new entity will be returned in the response.
     * The @schedule_scenario_sid must match the scenario of the parent client node.
     * The @member fields will be ignored since those cannot be created by this method and must be created by their respective create methods.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the @node have invalid values.
     *   - grpc.NotFound: parent client node doesn't exist or belongs to a different scenario than the one given.
     *   - grpc.Internal: error occurs when creating the location node.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateLocationNode
     */
    createLocationNode: {
      name: "CreateLocationNode",
      I: CreateLocationNodeReq,
      O: CreateLocationNodeRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates a location node corresponding to the given @location_node_sid and org sending the request with the provided parameters.
     * All of the entity's parameters that are not desired to be updated must be filled with their current values.
     * The @schedule_scenario_sid must be the original for this location node since it cannot be changed.
     * The @member fields will be ignored since those cannot be updated by this method and must be updated by their respective update methods.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the @location_node have invalid values.
     *   - grpc.Internal: error occurs when updating the location node.
     *   - grpc.NotFound: entry to be updated doesn't exist, or the given parent @client_node_sid belongs to a different scenario than the node to update.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateLocationNode
     */
    updateLocationNode: {
      name: "UpdateLocationNode",
      I: UpdateLocationNodeReq,
      O: UpdateLocationNodeRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates the given program @node for the org sending the request and parent @location_node_sid.
     * The @program_node_sid of the new entity will be returned in the response.
     * The @schedule_scenario_sid must match the scenario of the parent location node.
     * The @member fields will be ignored since those cannot be created by this method and must be created by their respective create methods.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the @node have invalid values.
     *   - grpc.NotFound: parent location node doesn't exist or belongs to a different scenario than the one given.
     *                    the @skill_profile_category does not exist.
     *   - grpc.Internal: error occurs when creating the program node.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateProgramNode
     */
    createProgramNode: {
      name: "CreateProgramNode",
      I: CreateProgramNodeReq,
      O: CreateProgramNodeRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates a program node for the given @program_node_sid and org sending the request with the provided parameters.
     * All of the entity's parameters that are not desired to be updated must be filled with their current values.
     * The @schedule_scenario_sid must be the original for this program node since it cannot be changed.
     * The @member fields will be ignored since those cannot be updated by this method and must be updated by their respective update methods.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the @program_node have invalid values.
     *   - grpc.Internal: error occurs when updating the program node.
     *   - grpc.NotFound: entry to be updated doesn't exist, or the given parent @location_node_sid belongs to a different scenario than the program node to update.
     *                    the @skill_profile_category does not exist.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateProgramNode
     */
    updateProgramNode: {
      name: "UpdateProgramNode",
      I: UpdateProgramNodeReq,
      O: UpdateProgramNodeRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists the program nodes with the given @program_node_sids for the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the given @program_node_sids are invalid.
     *   - grpc.Internal: error occurs when listing the program nodes.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListProgramNodesBySid
     */
    listProgramNodesBySid: {
      name: "ListProgramNodesBySid",
      I: ListProgramNodesBySidReq,
      O: ListProgramNodesBySidRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates the given @constraint_rule for the org sending the request.
     * The @constraint_rule_sid and @skill_proficiency_sid (if one was created) of the new entities will be returned in the response.
     * The @schedule_scenario_sid must match the scenario of the @parent_entity.
     * If @rule_type is set to MIN_SKILL_LEVEL, the @member_target_entity field must be set with a skill proficiency and the @constraint_rule.target_sid will be ignored.
     * If the @member_target_entity is for a skill proficiency, that skill proficiency will be created with the given @constraint_rule as parent.
     * If @rule_type is NOT MIN_SKILL_LEVEL then the @target_sid must be that of a scheduling activity.
     * The all other @member fields will be ignored since those cannot be created by this method and must be created by their respective create methods.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the @constraint_rule have invalid values.
     *   - grpc.NotFound: the given @target_sid for the given @rule_type, or @parent_entity don't exist.
     *   - grpc.Internal: error occurs when creating the constraint rule.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateConstraintRule
     */
    createConstraintRule: {
      name: "CreateConstraintRule",
      I: CreateConstraintRuleReq,
      O: CreateConstraintRuleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the constraint rule corresponding for given @contraint_rule_sid for the org sending the request with the provided parameters.
     * All of the entity's parameters that are not desired to be updated must be filled with their current values.
     * The @schedule_scenario_sid must be the original for this constraint rule since it cannot be changed.
     * If @rule_type is set to MIN_SKILL_LEVEL, the @member_target_entity field must be set with a skill proficiency, otherwise it should not be set and field will be ignored.
     * If the @target_sid is for a different skill proficiency than the current one the constraint rule has as a target,
     * the old one will be deleted and a new one will be created for the given @member_target_entity.
     * If @rule_type is NOT MIN_SKILL_LEVEL then the @target_sid must be that of a scheduling activity.
     * The all other @member fields will be ignored since those cannot be updated by this method and must be updated by their respective update methods.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the @constraint_rule have invalid values.
     *   - grpc.NotFound: entry to be updated doesn't exist, or the @parent_entity has a different @schedule_scenario_sid than the constraint rule.
     *                  : the given @target_sid for the given @rule_type, or @parent_entity don't exist.
     *   - grpc.Internal: error occurs when updating the constraint rule.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateConstraintRule
     */
    updateConstraintRule: {
      name: "UpdateConstraintRule",
      I: UpdateConstraintRuleReq,
      O: UpdateConstraintRuleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes a constraint rule with the coresponding @constraint_rule_sid for the org sending the request.
     * It also deletes the entity referenced by the @target_sid and @rule_type if said entity is not a member of any other entity or the on call scheduling activity.
     * Required permissions:
     *  NONE
     * Errors:
     *   - grpc.Invalid: the @constraint_rule_sid is invalid for the org making the request.
     *   - grpc.NotFound: the given @constraint_rule doesn't exist.
     *   - grpc.Internal: error occurs when removing the constraint rule.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteConstraintRule
     */
    deleteConstraintRule: {
      name: "DeleteConstraintRule",
      I: DeleteConstraintRuleReq,
      O: DeleteConstraintRuleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates the given @non_skill_activity for the org sending the request.
     * Will also create a scheduling activity wrapper for the non skill activity.
     * The @non_skill_activity_sid and @scheduling_activity_sid of the new entities will be returned in the response.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the @non_skill_activity have invalid values.
     *   - grpc.NotFound: the @schedule_scenario_sid doesn't exist.
     *   - grpc.Internal: error occurs when creating the non skill activity or scheduling activity.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateNonSkillActivity
     */
    createNonSkillActivity: {
      name: "CreateNonSkillActivity",
      I: CreateNonSkillActivityReq,
      O: CreateNonSkillActivityRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates a non skill activity that has the given @non_skill_activity_sid with the given values.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: @non_skill_activity fields have invalid values.
     *   - grpc.NotFound: non skill activity for the given @non_skill_activity_sid doesn't exist.
     *   - grpc.Internal: error occurs when updating the non skill activity.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateNonSkillActivity
     */
    updateNonSkillActivity: {
      name: "UpdateNonSkillActivity",
      I: UpdateNonSkillActivityReq,
      O: UpdateNonSkillActivityRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists the non skill activities that belong to the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:.
     *   - grpc.Internal: error occurs when listing the activites.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListNonSkillActivities
     */
    listNonSkillActivities: {
      name: "ListNonSkillActivities",
      I: ListNonSkillActivitiesReq,
      O: ListNonSkillActivitiesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists the IDs of non skill activities that belong to the org sending the request which have the given @relationship_type with the @associated_entity.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @associated_entity or @relationship_type are invalid.
     *   - grpc.Internal: error occurs when listing the associations.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListNonSkillActivityAssociations
     */
    listNonSkillActivityAssociations: {
      name: "ListNonSkillActivityAssociations",
      I: ListNonSkillActivityAssociationsReq,
      O: ListNonSkillActivityAssociationsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists the candidate scheduling activities for a constraint or placement rule, inherited through given @parent_of_rule for @schedule_scenario_sid for the org making the request.
     * @parent_of_rule may be any type of node, agent group, or shift template which the rule will belong to.
     * If the rule will belong to a wfm agent, the agent group must be supplied instead to get a relevant set of candidate scheduling activities.
     * Member non skill activity of each scheduling activity will be included in the response.
     * The on call scheduling activity will always be included.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @parent_of_rule is invalid.
     *   - grpc.NotFound: @parent_of_rule doesn't exist
     *   - grpc.Internal: error occurs when applying inheritance or getting the nodes from @parent_of_rule.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListCandidateSchedulingActivities
     */
    listCandidateSchedulingActivities: {
      name: "ListCandidateSchedulingActivities",
      I: ListCandidateSchedulingActivitiesReq,
      O: ListCandidateSchedulingActivitiesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates an agent group with the provided parameters.
     * A successful response should contain the @agent_group_sid of the newly created entity.
     * The @schedule_scenario_sid must match the scenario of the @parent_entity.
     * The @member fields will be ignored since those cannot be created by this method and must be created by their respective create methods.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @name, or @parent_entity are invalid.
     *   - grpc.NotFound: @parent_entity doesn't exist
     *   - grpc.Internal: error occurs when creating the agent group.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateAgentGroup
     */
    createAgentGroup: {
      name: "CreateAgentGroup",
      I: CreateAgentGroupReq,
      O: CreateAgentGroupRes,
      kind: MethodKind.Unary,
    },
    /**
     * ListAgentScheduleGroups lists all schedulable agent groups for the given @entity and @org_id, filled with @member_wfm_agents.
     * The given @entity must be either a Node or a ShiftTemplate.
     *
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.Internal: error occurs when getting the agent groups.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListAgentScheduleGroups
     */
    listAgentScheduleGroups: {
      name: "ListAgentScheduleGroups",
      I: ListAgentScheduleGroupsRequest,
      O: ListAgentScheduleGroupsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the agent group corresponding to the @agent_group_sid, @name, and @parent_entity.
     * All of the entity's parameters that are not desired to be updated must be filled with their current values.
     * The @schedule_scenario_sid must be the original for this agent group since it cannot be changed.
     * The @member fields will be ignored since those cannot be updated by this method and must be updated by their respective update methods.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @agent_group_sid, @parent_entity, or @name in the request are invalid.
     *   - grpc.Internal: error occurs when updating the agent group.
     *   - grpc.AlreadyExists: an agent group with the given @name already exists.
     *   - grpc.NotFound: entry to be updated doesn't exist, or the @parent_entity has a different @schedule_scenario_sid than the agent group.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateAgentGroup
     */
    updateAgentGroup: {
      name: "UpdateAgentGroup",
      I: UpdateAgentGroupReq,
      O: UpdateAgentGroupRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates an agent that is not assigned a tcn agent for the org sending the request.
     * If @wfm_agent_sid_to_copy_agent_group_associations is set, it will also copy that agent's agent group associations to the new agent.
     * Otherwise only the new agent will be created.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @name, or @wfm_agent_sid_to_copy_agent_group_associations in the request are invalid.
     *   - grpc.Internal: error occurs creating the agent or the memberships.
     *   - grpc.NotFound: the given @wfm_agent_sid_to_copy_agent_group_associations doesn't exist for the org.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateUnassignedWFMAgent
     */
    createUnassignedWFMAgent: {
      name: "CreateUnassignedWFMAgent",
      I: CreateUnassignedWFMAgentRequest,
      O: CreateUnassignedWFMAgentResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Updates a wfm agent for the given @wfm_agent_sid and org sending the request with the provided parameters.
     * All of the entity's parameters that are not desired to be updated must be filled with their current values.
     * The @member fields will be ignored since those cannot be updated by this method and must be updated by their respective update methods.
     * The @tcn_agent_sid cannot be updated.
     * Required permission:
     *   NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the @wfm_agent have invalid values.
     *   - grpc.NotFound: WFM agent with the given @wfm_agent_sid doesn't exist.
     *   - grpc.Internal: error occurs when updating the wfm agent.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateWFMAgent
     */
    updateWFMAgent: {
      name: "UpdateWFMAgent",
      I: UpdateWFMAgentReq,
      O: UpdateWFMAgentRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists all wfm agents for the org sending the request.
     * if @include_inactive is true then inactive agents will also be included, otherwise only active agents will be returned.
     * if @include_skill_proficiencies is true then agents returned will include their skill proficiencies.
     * if @include_agent_groups is true then the @agent_groups_by_agent response field will be set with a list of agent groups correlating to each agents index in the @wfm_agents field.
     * if @include_agent_groups is set to true, the @agent_group_schedule_scenario_sid field must be set, so that the agent groups for the correct scenario are returned.
     * if @include_agent_groups is set to true, and @agent_group_schedule_scenario_sid is not set, the agent groups will not be filtered by schedule scenario.
     * if @include_agent_groups is set to false, the @agent_group_schedule_scenario_sid will be ignored.
     * @agent_group_schedule_scenario_sid does not effect which @wfm_agents are returned.
     * WFM agents with no associated agent_groups will have an empty slice in agent_groups_by_agent at their correlated index.
     * Required Permissions:
     *   NONE
     * Errors:
     *   - grpc.Internal: error occurs when getting the wfm agents.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListAllWFMAgents
     */
    listAllWFMAgents: {
      name: "ListAllWFMAgents",
      I: ListAllWFMAgentsReq,
      O: ListAllWFMAgentsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists all candidate wfm agents for the org sending the request and given @agent_group_sid.
     * A WFM agent is considered a candidate when it's active and it doesn't already belong to the given agent group.
     * Member entities will not be returned.
     * Required Permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: @agent_group_sid has an invalid value.
     *   - grpc.Internal: error occurs when getting the wfm agents.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListCandidateWFMAgents
     */
    listCandidateWFMAgents: {
      name: "ListCandidateWFMAgents",
      I: ListCandidateWFMAgentsReq,
      O: ListCandidateWFMAgentsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists all wfm agents who are not grouped with any agent group for the given org sending the request that were created at or after the given @created_after_datetime.
     * If @schedule_scenario_sid is positive, it will filter further to get only agents who are not grouped with any agent group for that scenario.
     * if @include_skill_proficiencies is true then agents returned will include their skill proficiencies.
     * Member entities will not be returned.
     * Required Permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: @created_after_datetime has an invalid value.
     *   - grpc.Internal: error occurs when getting the wfm agents.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListUngroupedWFMAgents
     */
    listUngroupedWFMAgents: {
      name: "ListUngroupedWFMAgents",
      I: ListUngroupedWFMAgentsReq,
      O: ListUngroupedWFMAgentsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the wfm_agent_sids with the given @tcn_agent_sids for the org sending the request.
     * Returns a map where Key: tcn_agent_sid - Value: wfm_agent_sid.
     * If the wfm_agent_sid is not found for any @tcn_agent_sids, they will not have an entry in the returned @sids.
     * Required permissions:
     *   NONE
     * Errors:
     *  - grpc.Invalid: the @tcn_agent_sids are invalid.
     *  - grpc.Internal: error occours while listing the wfm_agent_sids.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListWFMAgentSids
     */
    listWFMAgentSids: {
      name: "ListWFMAgentSids",
      I: ListWFMAgentSidsReq,
      O: ListWFMAgentSidsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists all wfm agents that don't have a TCN agent assigned to them for the given @orgId.
     * Member entities will not be returned.
     * Required Permissions:
     *   NONE
     * Errors:
     *   - grpc.Internal: error occurs when getting the wfm agents.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListUnassignedWFMAgents
     */
    listUnassignedWFMAgents: {
      name: "ListUnassignedWFMAgents",
      I: ListUnassignedWFMAgentsRequest,
      O: ListUnassignedWFMAgentsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Removes the the @wfm_agent_sid_to_remove from all future shifts for the org.
     * If @replace_with_new_unassigned_agent is set to true, a new unassigned agent will be created and it will be assigned to the shifts and agent groups from @wfm_agent_sid_to_remove.
     * If @replace_with_new_unassigned_agent is set to false, the future shifts will just be deleted.
     * Required Permissions:
     *   NONE
     * Errors:
     *   - grpc.Internal: error occurs when deleting the shifts, creating the new unassigned agent, or reassigning the shifts to that agent.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.RemoveAgentFromOrg
     */
    removeAgentFromOrg: {
      name: "RemoveAgentFromOrg",
      I: RemoveAgentFromOrgRequest,
      O: RemoveAgentFromOrgResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Lists the IDs of wfm agents that belong to the org sending the request which are associated with the given @agent_group_sid.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @agent_group_sid is invalid.
     *   - grpc.Internal: error occurs when listing the wfm agents.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListWFMAgentsAssociatedWithAgentGroup
     */
    listWFMAgentsAssociatedWithAgentGroup: {
      name: "ListWFMAgentsAssociatedWithAgentGroup",
      I: ListWFMAgentsAssociatedWithAgentGroupReq,
      O: ListWFMAgentsAssociatedWithAgentGroupRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates a membership association for each of the given @wfm_agent_sids with the given @agent_group_sid.
     * The @schedule_scenario_sid must match the scenario of the agent group and wfm agents.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @wfm_agent_sids, or @agent_group_sid are invalid.
     *   - grpc.NotFound: the @wfm_agent_sids or @agent_group_sid don't exist for the org or given @schedule_scenario_sid.
     *   - grpc.Internal: error occurs when creating the association.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateWFMAgentMemberships
     */
    createWFMAgentMemberships: {
      name: "CreateWFMAgentMemberships",
      I: CreateWFMAgentMembershipsReq,
      O: CreateWFMAgentMembershipsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes a membership association for each of the given @wfm_agent_sids with the given @agent_group_sid for the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @wfm_agent_sids, or @agent_group_sid are invalid.
     *   - grpc.NotFound: any of the given memberships to delete do not exist.
     *   - grpc.Internal: error occurs when deleting the association.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteWFMAgentMemberships
     */
    deleteWFMAgentMemberships: {
      name: "DeleteWFMAgentMemberships",
      I: DeleteWFMAgentMembershipsReq,
      O: DeleteWFMAgentMembershipsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes all membership associations for the given @wfm_agent_sids with the given @agent_group_sids.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @wfm_agent_sids, or @agent_group_sids are invalid.
     *   - grpc.Internal: error occurs when deleting the associations.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteWFMAgentsMemberships
     */
    deleteWFMAgentsMemberships: {
      name: "DeleteWFMAgentsMemberships",
      I: DeleteWFMAgentsMembershipsReq,
      O: DeleteWFMAgentsMembershipsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Builds and returns the diagnostics for the wfm agent associated with the given @wfm_agent_sid or @agent_group_sid for the org sending the request.
     * Response will only contain:
     *    one element if build for a single @wfm_agent_sid.
     *    one element for each WFM agent if build for an @agent_group_sid.
     * Required permissions:
     *   NONE
     *   - grpc.Invalid: the @wfm_agent_sid, or @agent_group_sid is invalid.
     *   - grpc.NotFound: the given @wfm_agent_sid doesn't exist or the @agent_group_sid has no agents.
     *   - grpc.Internal: error occurs building the diagnostics.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.BuildAgentDiagnostics
     */
    buildAgentDiagnostics: {
      name: "BuildAgentDiagnostics",
      I: BuildAgentDiagnosticsReq,
      O: BuildAgentDiagnosticsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates a shift template for the org sending the request with the provided parameters
     * The @shift_template_sid of the new entity will be returned in the response.
     * The @schedule_scenario_sid must match the scenario of the parent program node.
     * The @member fields will be ignored since those cannot be created by this method and must be created by their respective create methods.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @name, or @program_node_sid are invalid.
     *   - grpc.AlreadyExists: a shift template with the given @name already exists.
     *   - grpc.NotFound: the parent program node doesn't exist or belongs to a different scenario than the one given.
     *   - grpc.Internal: error occurs when creating the shift template.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateShiftTemplate
     */
    createShiftTemplate: {
      name: "CreateShiftTemplate",
      I: CreateShiftTemplateReq,
      O: CreateShiftTemplateRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates a shift template for the given @shift_template_sid and org sending the request with the provided parameters.
     * All of the entity's parameters that are not desired to be updated must be filled with their current values.
     * The @schedule_scenario_sid must be the original for this shift template since it cannot be changed.
     * The @member fields will be ignored since those cannot be updated by this method and must be updated by their respective update methods.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @shift_template_sid, @name, @program_node_sid are invalid.
     *   - grpc.AlreadyExists: a shift template with the given @name already exists.
     *   - grpc.NotFound: the parent program node doesn't exist or belongs to a different scenario than the shift template to update.
     *   - grpc.Internal: error occurs when updating the shift template.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateShiftTemplate
     */
    updateShiftTemplate: {
      name: "UpdateShiftTemplate",
      I: UpdateShiftTemplateReq,
      O: UpdateShiftTemplateRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists the shift templates matching the specified @shift_template_sids for the org sending the request.
     * If @include_placement_rules is set to true, the @shift_templates will be returned with their member placement rules.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @shift_template_sids are invalid.
     *   - grpc.Internal: error occurs when getting the data.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListShiftTemplatesBySids
     */
    listShiftTemplatesBySids: {
      name: "ListShiftTemplatesBySids",
      I: ListShiftTemplatesBySidsReq,
      O: ListShiftTemplatesBySidsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Builds and returns the diagnostics for the shift template associated with the given @shift_template_sid for the org sending the request.
     * Required permissions:
     *   NONE
     *   - grpc.Invalid: the @shift_template_sid is invalid.
     *   - grpc.NotFound: the given @shift_template_sid doesn't exist for the org sending the request.
     *   - grpc.Internal: error occours building the diagnostics for the shift template.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.BuildShiftTemplateDiagnostics
     */
    buildShiftTemplateDiagnostics: {
      name: "BuildShiftTemplateDiagnostics",
      I: BuildShiftTemplateDiagnosticsReq,
      O: BuildShiftTemplateDiagnosticsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates a placement rule for org sending the request with the provided parameters.
     * The @placement_rule_sid of the new entity will be returned in the response.
     * The @schedule_scenario_sid must match the scenario of the parent shift template.
     * The @member fields will be ignored since those cannot be created by this method and must be created by their respective create methods.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the parameters in the @placement_rule are invalid.
     *   - grpc.NotFound: the parent shift template doesn't exist or belongs to a different scenario than the one given.
     *                    the scheduling activity to associate with the placement rule doesn't exist or belongs to a different scenario than the one given.
     *   - grpc.Internal: error occurs when creating the placement rule.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreatePlacementRule
     */
    createPlacementRule: {
      name: "CreatePlacementRule",
      I: CreatePlacementRuleReq,
      O: CreatePlacementRuleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates a placement rule corresponding with the given @placement_rule_sid for the org sending the request with the provided parameters.
     * All of the entity's parameters that are not desired to be updated must be filled with their current values.
     * The @schedule_scenario_sid must be the original for this placement rule since it cannot be changed.
     * The @member fields will be ignored since those cannot be updated by this method and must be updated by their respective update methods.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the one or more of the fields in the @placement_rule are invalid.
     *   - grpc.Internal: error occurs when updating the placement rule.
     *   - grpc.NotFound: entry to be updated doesn't exist.
     *                  : the parent shift template or related scheduling activity don't exist or belong to a different scenario than the placement rule to update.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdatePlacementRule
     */
    updatePlacementRule: {
      name: "UpdatePlacementRule",
      I: UpdatePlacementRuleReq,
      O: UpdatePlacementRuleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes a placement rule with the coresponding @placement_rule_sid for the org sending the request.
     * It also deletes the scheduling activity referenced by the @scheduling_activity_sid if said activity is not a member of any other entity.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @placement_rule_sid is invalid for the org making the request.
     *   - grpc.NotFound: the given @placement_rule doesn't exist.
     *   - grpc.Internal: error occurs when removing the placement rule.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeletePlacementRule
     */
    deletePlacementRule: {
      name: "DeletePlacementRule",
      I: DeletePlacementRuleReq,
      O: DeletePlacementRuleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates an open times pattern for the org sending the request with the provided parameters.
     * The @open_times_pattern_sid of the new entity will be returned in the response.
     * The @schedule_scenario_sid must match the scenario of the @parent_entity.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the parameters in the @open_times_pattern are invalid.
     *   - grpc.NotFound: the parent entity doesn't exist.
     *   - grpc.Internal: error occurs when creating the open times pattern.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateOpenTimesPattern
     */
    createOpenTimesPattern: {
      name: "CreateOpenTimesPattern",
      I: CreateOpenTimesPatternReq,
      O: CreateOpenTimesPatternRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates an open times pattern for the given @open_times_pattern_sid and org sending the request with the provided parameters.
     * All of the entity's parameters that are not desired to be updated must be filled with their current values.
     * The @schedule_scenario_sid must be the original for this open times pattern since it cannot be changed.
     * Required permission:
     *   NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the @open_times_pattern have invalid values.
     *   - grpc.NotFound: the given @open_times_pattern or it's @parent_entity doesn't exist.
     *   - grpc.Internal: error occurs when updating the open times pattern.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateOpenTimesPattern
     */
    updateOpenTimesPattern: {
      name: "UpdateOpenTimesPattern",
      I: UpdateOpenTimesPatternReq,
      O: UpdateOpenTimesPatternRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes an open times pattern with the coresponding @open_times_pattern_sid for the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @open_times_pattern_sid is invalid for the org making the request.
     *   - grpc.NotFound: the given @open_times_pattern doesn't exist.
     *   - grpc.Internal: error occurs when removing the open times pattern.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteOpenTimesPattern
     */
    deleteOpenTimesPattern: {
      name: "DeleteOpenTimesPattern",
      I: DeleteOpenTimesPatternReq,
      O: DeleteOpenTimesPatternRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the inherited, own, and resulting bitmaps for the open times patterns of @node_to_check for @schedule_scenario_sid and the org sending the request.
     * The @schedule_scenario_sid must match the scenario of the @node_to_check.
     * If @bitmap_type is COMPLETE, the bitmaps will be generated using all relevant pattern data.
     * If @bitmap_type is ONLY_WEEKMAPS, the bitmaps will be generated using only the weekmap data from the open times patterns.
     * If @bitmap_type is ONLY_CALENDAR_ITEMS, the bitmaps will be generated using only the calendar item data from the open times patterns.
     * The bitmaps will be generated for the span of @datetime_range.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @node_to_check is invalid for @schedule_scenario_sid and the org making the request.
     *                 : the @datetime_range is invalid.
     *   - grpc.NotFound: the given @node_to_check doesn't exist.
     *   - grpc.Internal: error occurs when getting the open times pattern bitmaps.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetOpenTimesBitmaps
     */
    getOpenTimesBitmaps: {
      name: "GetOpenTimesBitmaps",
      I: GetOpenTimesBitmapsReq,
      O: GetOpenTimesBitmapsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates an agent availability pattern for the org sending the request with the provided parameters.
     * The @agent_availability_pattern_sid of the new entity will be returned in the response.
     * The @schedule_scenario_sid must match the scenario of the @parent_entity.
     * Required permissions:
     * NONE
     * Errors:
     *   - grpc.Invalid: the parameters in the @agent_availability_pattern are invalid.
     *   - grpc.NotFound: the parent entity doesn't exist.
     *   - grpc.Internal: error occurs when creating the agent availability pattern.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateAgentAvailabilityPattern
     */
    createAgentAvailabilityPattern: {
      name: "CreateAgentAvailabilityPattern",
      I: CreateAgentAvailabilityPatternReq,
      O: CreateAgentAvailabilityPatternRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates an agent availability pattern for the given @agent_availability_pattern_sid and org sending the request with the provided parameters.
     * All of the entity's parameters that are not desired to be updated must be filled with their current values.
     * The @schedule_scenario_sid must be the original for this agent availability pattern since it cannot be changed.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the @agent_availability_pattern have invalid values.
     *   - grpc.Internal: error occurs when updating the agent avilability pattern.
     *   - grpc.NotFound: entry to be updated doesn't exist, or the @parent_entity has a different @schedule_scenario_sid than the agent availability pattern.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateAgentAvailabilityPattern
     */
    updateAgentAvailabilityPattern: {
      name: "UpdateAgentAvailabilityPattern",
      I: UpdateAgentAvailabilityPatternReq,
      O: UpdateAgentAvailabilityPatternRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes an agent availability pattern with the coresponding @agent_availability_pattern_sid for the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @agent_availability_pattern_sid has an invalid value.
     *   - grpc.NotFound: the @agent_availability_pattern with the given sid doesn't exist.
     *   - grpc.Internal: error occurs when removing the agent availability pattern.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteAgentAvailabilityPattern
     */
    deleteAgentAvailabilityPattern: {
      name: "DeleteAgentAvailabilityPattern",
      I: DeleteAgentAvailabilityPatternReq,
      O: DeleteAgentAvailabilityPatternRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the inherited, own, and resulting bitmaps for the agent availability patterns of @entities_to_check for @schedule_scenario_sid and the org sending the request.
     * The @schedule_scenario_sid must match the scenario of the @entities_to_check.
     * @entities_to_check must have the entity_type field set with a wfm agent, agent group or a type of node.
     * If an availability bitmap is requested for an agent group, the bitmaps for all of it's member agents will be returned instead.
     * The bitmaps will be generated for the span of @datetime_range.
     * If @bitmap_type is COMPLETE, the bitmaps will be generated using all relevant pattern data.
     * If @bitmap_type is ONLY_WEEKMAPS, the bitmaps will be generated using only the weekmap data from the availability patterns.
     * If @bitmap_type is ONLY_CALENDAR_ITEMS, the bitmaps will be generated using only the calendar item data from the availability patterns.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @entities_to_check is invalid for @schedule_scenario_sid and the org making the request.
     *                 : the @datetime_range is invalid.
     *   - grpc.NotFound: the given @entities_to_check don't exist.
     *   - grpc.Internal: error occurs when getting the agent availability pattern bitmaps.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetAvailabilityBitmaps
     */
    getAvailabilityBitmaps: {
      name: "GetAvailabilityBitmaps",
      I: GetAvailabilityBitmapsReq,
      O: GetAvailabilityBitmapsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Upserts an association for the given @non_skill_activity_sid to the given @node.
     * All downstream members of the entity will have their inheritance state cleared, and inherit the given association.
     * If an association already exists between the non skill activity and the @node then their @relationship_type will be updated.
     * The @schedule_scenario_sid must match the scenario of the @parent_entity.
     * If a NOT_ASSOCIATED_WITH relationship is being created, the tree will be checked for conflicting downstream effects.
     * If any member rules, are referencing the non skill activity and @relationship_type is NOT_ASSOCIATED_WITH, then the upsert will not take effect, and the list of related entities to be updated/removed first will be returned.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @non_skill_activity_sid, @node or @association_type are invalid.
     *                 : the non skill activity and @node belong to different scenarios.
     *   - grpc.NotFound: the @non_skill_activity_sid or @node don't exist.
     *   - grpc.Internal: error occurs when upserting the association.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpsertNonSkillActivityAssociation
     */
    upsertNonSkillActivityAssociation: {
      name: "UpsertNonSkillActivityAssociation",
      I: UpsertNonSkillActivityAssociationReq,
      O: UpsertNonSkillActivityAssociationRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates skill proficiencies for the org sending the request with the provided parameters.
     * The @schedule_scenario_sid must match the scenario of the @parent_entities.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the parameters in a @proficiency, or the @schedule_scenario_sid are invalid.
     *   - grpc.NotFound: for any of the given @skill_proficiencies:
     *                    the @parent_entity doesn't exist.
     *                    the @skill_sid doesn't exist.
     *                    the skill profile with @preferred_skill_profile_sid doesn't contain the given @skill_sid.
     *   - grpc.AlreadyExists: a skill proficiency with the given @skill_sid and @parent_entity already exists.
     *   - grpc.Internal: error occurs when creating the skill proficiencies.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateSkillProficiencies
     */
    createSkillProficiencies: {
      name: "CreateSkillProficiencies",
      I: CreateSkillProficienciesReq,
      O: CreateSkillProficienciesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates skill proficiencies corresponding to the given @skill_proficiency_sids and org sending the request with the provided parameters.
     * All of the entity's parameters that are not desired to be updated must be filled with their current values.
     * The @skill_sid and @parent_entity field of each proficiency will be ignored since it cannot be updated.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the @skill_proficiencies have invalid values.
     *   - grpc.Internal: error occurs when updating the skill proficiencies.
     *   - grpc.NotFound: for any of the given @skill_proficiencies:
     *                    the @skill_sid doesn't exist.
     *                    the skill profile with @preferred_skill_profile_sid doesn't contain the skill of the given skill proficiency.
     *   - grpc.AlreadyExists: a skill proficiency with the given @skill_sid and @parent_entity already exists.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateSkillProficiencies
     */
    updateSkillProficiencies: {
      name: "UpdateSkillProficiencies",
      I: UpdateSkillProficienciesReq,
      O: UpdateSkillProficienciesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes a skill proficiency with the corresponding @skill_proficiency_sid for the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   -grpc.Invalid: the @skill_proficiency_sid is invalid for the org making the request.
     *   -grpc.NotFound: the skill proficiency with the given @skill_proficiency_sid doesn't exist.
     *   -grpc.Internal: error occurs when removing the skill proficiency.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteSkillProficiency
     */
    deleteSkillProficiency: {
      name: "DeleteSkillProficiency",
      I: DeleteSkillProficiencyReq,
      O: DeleteSkillProficiencyRes,
      kind: MethodKind.Unary,
    },
    /**
     * Copies the existing scenario with the @scenario_sid_to_copy for the org sending the request using the provided parameters.
     * Scheduling targets of entities in the scenario to copy will also be copied.
     * The new @schedule_scenario_sid of the new entity will be returned in the response.
     * Required permissions:
     *   NONE
     * Errors:gg
     *   - grpc.Invalid: the parameters @scenario_sid_to_copy or any others are invalid.
     *   - grpc.NotFound: the scenario corresponding to the @scenario_sid_to_copy doesn't exist.
     *   - grpc.Internal: error occurs when creating/coping the new scenario.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CopyScenario
     */
    copyScenario: {
      name: "CopyScenario",
      I: CopyScenarioReq,
      O: CopyScenarioRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates a new schedule scenario for the org sending the request with the provided parameters.
     * The new @schedule_scenario_sid of the new entity will be returned in the response.
     * It also creates 1 of each of the following: call center, client, program, location node, and on call scheduling activity (if it doesn't exist already for the org).
     * The @node_description fields may optionally be left blank.
     * The @copied_from_scenario_sid field will be ignored, as it will be set to nil in the newly created scenario.
     * The @creation_datetime and @is_default fields will also be ignored and set as the current time and false respectively.
     * The @skill_profile_category will be associated with the created program node.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: parameters in the @req are invalid for the org making the request.
     *   - grpc.NotFound: the @skill_profile_category does not exist.
     *   - grpc.Internal: error occurs when creating the new scenario, or any of the node entities.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateScheduleScenarioWithNodes
     */
    createScheduleScenarioWithNodes: {
      name: "CreateScheduleScenarioWithNodes",
      I: CreateScheduleScenarioWithNodesReq,
      O: CreateScheduleScenarioWithNodesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates a schedule scenario corresponding to the given @schedule_scenario_sid and org sending the request with the provided parameters.
     * Only the @name, @description and @datetime_set_to_inactive fields may be updated, and must be filled in with current value if updating the field is not desired.
     * The @schedule_scenario_sid must be the original for the schedule scenario since it cannot be updated.
     * All other fields will be ignored since they cannot be updated.
     * Required permissions:
     *   NONE
     * Errors:
     *   -grpc.Invalid: one or more fields in the @scenario have invalid values.
     *   -grpc.NotFound: the scenario with the given @schedule_scenario_sid doesn't exist.
     *   -grpc.Internal: error occurs when updating the scenario.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateScheduleScenario
     */
    updateScheduleScenario: {
      name: "UpdateScheduleScenario",
      I: UpdateScheduleScenarioReq,
      O: UpdateScheduleScenarioRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets config entities that match the org sending the request and given @entity_type and that belong to the @belongs_to_entity and @schedule_scenario_sid parameters.
     * If @include_member_lists is set to true the member lists of the entities retrieved will be included.
     * Any nodes in the returned set of entities will have inherited nonskill associations applied to the node's member_nonskill_activity fields.
     * Prior to listing the entities it will Resync TCN Agents and skill proficiencies.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @entity_type, or @belongs_to_entity have invalid values.
     *   - grpc.Internal: error occurs when getting the config entities.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListConfigEntities
     */
    listConfigEntities: {
      name: "ListConfigEntities",
      I: ListConfigEntitiesReq,
      O: ListConfigEntitiesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes shift instances with the corresponding @shift_instance_sids for the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   -grpc.Invalid: the @shift_instance_sids are invalid for the org making the request.
     *   -grpc.NotFound: the shift instances with the given @shift_instance_sids don't exist.
     *   -grpc.Internal: error occurs when removing the shift instances.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteShiftInstances
     */
    deleteShiftInstances: {
      name: "DeleteShiftInstances",
      I: DeleteShiftInstancesReq,
      O: DeleteShiftInstancesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Builds and returns the diagnostics and @nodes_checked for the @node_to_check for @schedule_scenario_sid and the org sending the request.
     * The @schedule_scenario_sid must match the scenario of the @node_to_check.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @node_to_check is invalid for @schedule_scenario_sid and the org making the request.
     *   - grpc.NotFound: the given @node_to_check doesn't exist.
     *   - grpc.Internal: error occurs when building the diagnostics.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.BuildNodeDiagnostics
     */
    buildNodeDiagnostics: {
      name: "BuildNodeDiagnostics",
      I: BuildNodeDiagnosticsReq,
      O: BuildNodeDiagnosticsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Builds and returns the global diagnostics and @nodes_checked for the @schedule_scenario_sid and the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @schedule_scenario_sid has an invalid values.
     *   - grpc.NotFound: the given @schedule_scenario_sid doesn't exist for the org making the request.
     *   - grpc.Internal: error occurs when building the diagnostics.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.BuildGlobalDiagnostics
     */
    buildGlobalDiagnostics: {
      name: "BuildGlobalDiagnostics",
      I: BuildGlobalDiagnosticsReq,
      O: BuildGlobalDiagnosticsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the published schedule for the corresponding @datetime_range for the org sending the request.
     * Will create a published schedule if it does not exist already for the org sending the request.
     * if @include_shift_instances is true, the shift instances associated within @datetime_range for the published schedule will be returned in the published schedules shift_instances field.
     * if @include_shift_template is true, any returned shift instances will have their orginating shift template returned in their origin_shift_template field.
     * if @include_shift_segments is true, any returned shift instances will have their shift_segments field set, otherwise the field will be left nil.
     * if @include_scheduling_activity is true, any returned shift segments will have their scheduling_activity field set, otherwise the field will be left nil.
     * if @include_activity is true, any returned scheduling activities will have their member_non_skill_activity field set, otherwise the field will be left nil.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @datetime_range, @metric_types are invalid.
     *   - grpc.NotFound: the @node_selector doesn't exist.
     *   - grpc.Internal: error occurs when getting the published schedule.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetPublishedSchedule
     */
    getPublishedSchedule: {
      name: "GetPublishedSchedule",
      I: GetPublishedScheduleReq,
      O: GetPublishedScheduleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the required calls intervals for the published schedule for the corresponding @viewing_range, for the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.NotFound: the published schedule doesn't exist.
     *   - grpc.Internal: error occurs when getting the data.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetPublishedScheduleRequiredCalls
     */
    getPublishedScheduleRequiredCalls: {
      name: "GetPublishedScheduleRequiredCalls",
      I: GetPublishedScheduleRequiredCallsReq,
      O: GetPublishedScheduleRequiredCallsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the required calls intervals for the specified draft schedule for the corresponding @viewing_range, for the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.NotFound: the draft schedule doesn't exist.
     *   - grpc.Internal: error occurs when getting the data.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetDraftScheduleRequiredCalls
     */
    getDraftScheduleRequiredCalls: {
      name: "GetDraftScheduleRequiredCalls",
      I: GetDraftScheduleRequiredCallsReq,
      O: GetDraftScheduleRequiredCallsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates a draft schedule for the org sending the request with the provided parameters.
     * The @draft_schedule_sid of the new entity will be returned in the response.
     * The @created_at and @last_updated_at fields will be set to the current time and null respectively.
     * The draft schedule will include the published schedule's shift instances and shift segments.
     * Required permissions:
     * NONE
     * Errors:
     *   - grpc.Invalid: the @name, @description or @scheduling_range are invalid.
     *   - grpc.Internal: error occurs when creating the draft schedule.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateDraftSchedule
     */
    createDraftSchedule: {
      name: "CreateDraftSchedule",
      I: CreateDraftScheduleReq,
      O: CreateDraftScheduleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the @name, @description, and @datetime_range of the given @draft_schedule_sid for the org sending the request.
     * The @name, @description, and @datetime_range fields must all be set with their desired values.
     * If @delete_shifts_not_in_range if true, then any instances outside of the @datetime_range will be permenantly deleted with no recovery option.
     * If @delete_shifts_not_in_range is false, instances outside of the new @datetime_range will be retained, for use if the datetime range is expanded to cover the instances in the future.
     * If @copy_shifts_into_new_range time is true, then new the portion of an expanded @datetime_range which has no instances will copy the instances from the published schedule. If false, no instances will be created for an expanded @scheduling_range.
     * If @get_updated_shifts is true, then the returned draft schedule will also contain the shift instances and segments in the given @datetime_range.
     * Errors:
     *   - grpc.Invalid: the @name, @description or @datetime_range are invalid.
     *   - grpc.Internal: error occurs when updating the schedule or its instances.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateDraftSchedule
     */
    updateDraftSchedule: {
      name: "UpdateDraftSchedule",
      I: UpdateDraftScheduleReq,
      O: UpdateDraftScheduleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Builds a draft schedule for the given @node_selector in @schedule_scenario_sid over @schedule_scenario_scheduling_range for @draft_schedule_sid and the org making the request.
     * The @schedule_scenario_scheduling_range field is optional. If not set, the draft schedule will be obtained with it's default range from it's start to end time.
     * @include parameters are used when retrieving the resulting draft schedule, and work in the same way as for GetDraftSchedule.
     * Will return diagnostics for the newly built schedule, or just diagnostics if the schedule cannot be built successfully due to diagnostic error.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.BuildDraftSchedule
     */
    buildDraftSchedule: {
      name: "BuildDraftSchedule",
      I: BuildDraftScheduleReq,
      O: BuildDraftScheduleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Publishes the shift instances of the given @draft_schedule_sid to the published schedule of the org sending the request.
     * Overlapping shift instances that aren't locked will be replaced with the instances from the draft schedule.
     * If @ignore_diagnostics_errors is set to true, it will publish the schedule regardless of any diagnostics errors,
     * otherwise it will return those diagnostic errors and not publish the schedule.
     * @include parameters are used when retrieving the resulting published schedule, and work in the same way as for GetDraftSchedule.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the parameters in the @req are invalid..
     *   - grpc.NotFound: @draft_schedule_sid doesn't exist.
     *   - grpc.Internal: error occurs when publishing the draft schedule.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.PublishDraftSchedule
     */
    publishDraftSchedule: {
      name: "PublishDraftSchedule",
      I: PublishDraftScheduleReq,
      O: PublishDraftScheduleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Resets the shifts on the @draft_schedule_sid for the org sending the request.
     * Shifts overlapping the @datetime_range will be deleted, then that @datetime_range will be populated with shifts from the published schedule.
     * If no @datetime_range is provided, all shifts will be removed from the @draft_schedule_sid, and published shifts will be copied across the draft's datetime range.
     * If @unlocked_only is set to true, only unlocked shifts will be deleted, and the locked shift instances will remain.
     *   The published schedule will still be copied, so any newly overlapping shifts will result in an overlap warning.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @datetime_range or @draft_schedule_sid are invalid for the org sending the request.
     *   - grpc.NotFound: the @draft_schedule_sid doesn't exist.
     *   - grpc.Internal: error occurs when resetting the schedule.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ResetDraftSchedule
     */
    resetDraftSchedule: {
      name: "ResetDraftSchedule",
      I: ResetDraftScheduleReq,
      O: ResetDraftScheduleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the draft schedule with @draft_schedule_sid for the corresponding @datetime_range for the org sending the request.
     * The @datetime_range field is optional. If not set, the draft schedule will be obtained with it's default range from it's start to end time.
     * if @include_shift_instances is true, the shift instances associated within @datetime_range for the draft schedule will be returned in the draft schedules shift_instances field.
     * @node_selector must be for a node that belongs to the same schedule scenario as @draft_schedule_sid.
     * if @include_shift_template is true, any returned shift instances will have their orginating shift template returned in their origin_shift_template field.
     * if @include_shift_segments is true, any returned shift instances will have their shift_segments field set, otherwise the field will be left nil.
     * if @include_scheduling_activity is true, any returned shift segments will have their scheduling_activity field set, otherwise the field will be left nil.
     * if @include_activity is true, any returned scheduling activities will have their member_non_skill_activity field set, otherwise the field will be left nil.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @datetime_range or @draft_schedule_sid are invalid.
     *   - grpc.NotFound: the @node_selector or @draft_schedule_sid doesn't exist.
     *   - grpc.Internal: error occurs when getting the draft schedule.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetDraftSchedule
     */
    getDraftSchedule: {
      name: "GetDraftSchedule",
      I: GetDraftScheduleReq,
      O: GetDraftScheduleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists the draft schedules whose scheduling_range overlaps the given @datetime_range for the org sending the request.
     * If @datetime_range is not set, all draft schedules for the org will be returned.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @datetime_range is invalid.
     *   - grpc.Internal: error occurs when listing the draft schedules.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListDraftSchedules
     */
    listDraftSchedules: {
      name: "ListDraftSchedules",
      I: ListDraftSchedulesReq,
      O: ListDraftSchedulesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Clears shift instances from the @schedule_selector for the org sending the request.
     * If @node_selector is set, only shifts related to the given @node_selector will be cleared.
     * If @node_selector is not set, all shifts on the @schedule_selector may be cleared, regardless of the shift template they are associated with.
     * If @datetime_range is set, only the shifts overlapping the @datetime_range will be cleared.
     * If @datetime_range is not set, all shifts on the schedule will be considered in range to be deleted and @invert_datetime_range and @start_datetimes_only must be set to false.
     * If @invert_datetime_range is set to true, the shifts overlapping the range before and after the provided @datetime_range will be deleted.
     * If @invert_datetime_range is set to false, the provided @datetime_range will be used.
     * If @start_datetimes_only is set to true, deletes the shifts that start within the @datetime range, or start before or after @datetime_range if @invert_datetime_range is true.
     * If @start_datetimes_only is set to false, deletes the shifts that overlap with the @datetime range, or overlap the range before or after @datetime_range if @invert_datetime_range is true.
     * If @delete_locked is set to true, both locked and unlocked shifts will be cleared.
     * If @delete_locked is set to false, only shifts with @is_locked set to false may be cleared.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @node_selector, @schedule_selector, or @datetime_range in the request are invalid.
     *   - grpc.NotFound: the draft schedule with the given @schedule_selector doesn't exist.
     *   - grpc.Internal: error occurs when removing the shifts from the schedule.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ClearSchedule
     */
    clearSchedule: {
      name: "ClearSchedule",
      I: ClearScheduleReq,
      O: ClearScheduleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes a draft schedule with the corresponding @draft_schedule_sid for the org sending the request.
     * It also deletes all of its shift instances and segments.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @draft_schedule_sid is invalid for the org making the request.
     *   - grpc.NotFound: the draft schedule with the given @draft_schedule_sid doesn't exist.
     *   - grpc.Internal: error occurs when removing the draft schedule.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteDraftSchedule
     */
    deleteDraftSchedule: {
      name: "DeleteDraftSchedule",
      I: DeleteDraftScheduleReq,
      O: DeleteDraftScheduleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists the shift instances with the corresponding @shift_instance_sids for the org sending the request.
     * If @include_shift_template is set to true then the related shift template for the shift instances will be returned in the shift template field.
     * If @include_shift_segments is set to true then the related shift segments for the shift instances will be returned in the shift segments field.
     * If @include_scheduling_activity is set to true then the related scheduling activity for the shift segment will be returned in the scheduling activity field.
     * @include_shift_segments must be true to take effect.
     * If @include_activity is set to true then the related non skill activity for the scheduling activity will be returned in the scheduling
     * activities member non skill activity field. @include_scheduling_activity must be true to take effect.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: @shift_instance_sids in the request are invalid.
     *   - grpc.Internal: error occurs when listing the shift instances or their shift segments.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListShiftInstancesBySid
     */
    listShiftInstancesBySid: {
      name: "ListShiftInstancesBySid",
      I: ListShiftInstancesBySidReq,
      O: ListShiftInstancesBySidRes,
      kind: MethodKind.Unary,
    },
    /**
     * Copies the shifts from @source_schedule_selector to @destination_schedule_selector, constrained by the given parameters for the org sending the request.
     * If @datetime_range is set, all shifts within the datetime range will be copied.
     * If @datetime_range is not set, all shifts in the @source_schedule_selector within the schedule range of the @destination_schedule_selector will be copied. However if one of them is a published schedule, it will use the schedule range of the draft schedule.
     * If @start_datetimes_only is set to false, then shifts are considered to be within the @datetime range if any portion of them is within the range.
     * If @start_datetimes_only is set to true, then only shifts with start times within the @datetime range will be copied.
     * If @overlap_as_warning is set to false, any overlapping shifts for a given agent will return a diagnostic error, and prevent any shifts from being copied.
     * If @overlap_as_warning is set to true, the shifts will be copied regardless of overlap conflicts, and any conflicts will cause a diagnostic warning to be returned after.
     * Required permissions:
     *   NONE
     * Errors:
     *   -grpc.Invalid: one or more fields in the request have invalid values.
     *   -grpc.NotFound: the @source_schedule_selector or @destination_schedule_selector don't exist for the org sending the request.
     *   -grpc.Internal: error occurs when creating the copied shift instances.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CopyScheduleToSchedule
     */
    copyScheduleToSchedule: {
      name: "CopyScheduleToSchedule",
      I: CopyScheduleToScheduleReq,
      O: CopyScheduleToScheduleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates a shift instance for the org sending the request with the provided parameters.
     * This method is not implemented. Do not use.
     * Required permissions:
     * NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the request have invalid values.
     *   - grpc.Internal: error occurs when creating the shift instance.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateShiftInstance
     */
    createShiftInstance: {
      name: "CreateShiftInstance",
      I: CreateShiftInstanceReq,
      O: CreateShiftInstanceRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates a shift instance for the org sending the request with the provided parameters.
     * If @wfm_agent_sids is empty, then the shift instance will be created for a newly created unassigned agent.
     * A shift instance will be created for each wfm agent sid provided.
     * Required permissions:
     * NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the request have invalid values.
     *   - grpc.Internal: error occurs when creating the shift instance.
     *   - grpc.NotFound: the @draft_schedule_sid, @shift_template_sid, or @wfm_agent_sids do not exist for the org sending the request.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateShiftInstanceV2
     */
    createShiftInstanceV2: {
      name: "CreateShiftInstanceV2",
      I: CreateShiftInstanceV2Req,
      O: CreateShiftInstanceV2Res,
      kind: MethodKind.Unary,
    },
    /**
     * Creates the @shift_instance with any member shift segments and shift segment call stats for the org sending the request.
     * If @ignore_diagnostics_errors any diagnostics encountered will be returned as warnings, and the shift will still be created.
     *   Otherwise, any diagnostics triggered by the given @shift_instance will be returned and the shift will not be created.
     * Required permissions:
     *   NONE
     * Errors:
     *   -grpc.Invalid: one or more fields in the request have invalid values.
     *   -grpc.NotFound: the fields referenced in @shift_instance or its member shift segments don't exist for the org.
     *   -grpc.Internal: error occurs when creating the shift instance or its members.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateShiftInstanceWithSegments
     */
    createShiftInstanceWithSegments: {
      name: "CreateShiftInstanceWithSegments",
      I: CreateShiftInstanceWithSegmentsRequest,
      O: CreateShiftInstanceWithSegmentsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Splits the @shift_instance_sid into two, at the given @time_to_split, returning the updated and new @shift_instances.
     * Any shift segments will be split between the two shift instances at @time_to_split.
     * If the @time_to_split creates instances shorter then the minimum length specified by the shift template,
     *   warning diagnostics will be returned and the instance will still be split.
     * Required permissions:
     *   NONE
     * Errors:
     *   -grpc.Invalid: one or more fields in the request have invalid values, or @time_to_split is not at least 5 minutes from the start or end of @shift_instance_sid.
     *   -grpc.NotFound: the @shift_instance_sid does't exist for the org sending the request.
     *   -grpc.Internal: error occurs when creating or updating the shift instances.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.SplitShiftInstance
     */
    splitShiftInstance: {
      name: "SplitShiftInstance",
      I: SplitShiftInstanceReq,
      O: SplitShiftInstanceRes,
      kind: MethodKind.Unary,
    },
    /**
     * Swaps shift instances with the given @shift_instance_sids that belong to @wfm_agent_sid1 to belong to @wfm_agent_sid2 (and viceversa).
     * Returns the swapped @shift_instances after they are succesfully updated.
     * If there are other shifts for the given @wfm_agent_sids with an overlap conflict, diagnostics will be returned instead.
     * All @shift_instance_sids must belong to the same schedule, and be from a draft schedule.
     * Required permissions:
     * NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the request have invalid values.
     *   - grpc.NotFound: wfm_agent_sid_1, wfm_agent_sid_2, or shift_instance_sids do not exist for the org sending the request.
     *   - grpc.Internal: error occurs when swapping the shift instances.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.SwapShiftInstances
     */
    swapShiftInstances: {
      name: "SwapShiftInstances",
      I: SwapShiftInstancesReq,
      O: SwapShiftInstancesRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates a shift instance for the org sending the request with the provided parameters.
     * This method is not implemented. Do not use.
     * Required permissions:
     * NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the request have invalid values.
     *   - grpc.Internal: error occurs when updating the shift instance.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateShiftInstance
     */
    updateShiftInstance: {
      name: "UpdateShiftInstance",
      I: UpdateShiftInstanceReq,
      O: UpdateShiftInstanceRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates a shift instance for the org sending the request with the provided parameters.
     * Required permissions:
     * NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the request have invalid values.
     *   - grpc.Internal: error occurs when updating the shift instance.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateShiftInstanceV2
     */
    updateShiftInstanceV2: {
      name: "UpdateShiftInstanceV2",
      I: UpdateShiftInstanceV2Req,
      O: UpdateShiftInstanceV2Res,
      kind: MethodKind.Unary,
    },
    /**
     * Runs diagnostics on the given @shift_instance for the org sending the request.
     * If @ignore_diagnostics_errors is True, the shift will be updated regardless of diagnostic errors and any diagnostics will be returned as warnings.
     * Otherwise, the shift will only be updated if there are no diagnostic errors.
     * Only the @start_datetime, @is_locked, @width_in_minutes and @wfm_agent_sid fields of the shift will be updated.
     *
     * Any existing shift segments belonging to @shift_instance will be deleted and replaced with the ones in the given @shift_instance.
     * If no segments are provided, the existing segments will still be deleted and the instances will be left without any.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.Internal: error occurs when updating the @shift_instance or replacing their member shift segments.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateShiftInstanceWithSegments
     */
    updateShiftInstanceWithSegments: {
      name: "UpdateShiftInstanceWithSegments",
      I: UpdateShiftInstanceWithSegmentsRequest,
      O: UpdateShiftInstanceWithSegmentsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Copies the given @shift_instance_sids to @destination_schedule for the org sending the request.
     * If there are any overlap conflicts on @destination_schedule and @overlap_as_warning is set to false,
     *  then @shift_instance_sids will not be copied, and a list of diagnostics detailing the overlaps will be returned.
     * If @overlap_as_warning is set to true, overlap conflicts will not prevent the shifts from being copied, and the overlap diagnostics will be returned after as warning messages instead.
     * Required permissions:
     * NONE
     * Errors:
     *   - grpc.Invalid: one or more fields in the request have invalid values.
     *   - grpc.NotFound: the @shift_instance_sids or @destination_schedule does not exist for the org sending the request.
     *   - grpc.Internal: error occurs when copying the shift instances.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CopyShiftInstancesToSchedule
     */
    copyShiftInstancesToSchedule: {
      name: "CopyShiftInstancesToSchedule",
      I: CopyShiftInstancesToScheduleReq,
      O: CopyShiftInstancesToScheduleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists the shift_instance_sids for the Shift Instances associated with @wfm_agent_sid over the given @datetime_range and @schedule_selector.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.Internal: error occurs when getting the data.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListShiftInstanceSidsForAgent
     */
    listShiftInstanceSidsForAgent: {
      name: "ListShiftInstanceSidsForAgent",
      I: ListShiftInstanceSidsForAgentReq,
      O: ListShiftInstanceSidsForAgentRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists shift segments for the specified shift instances for the org sending the request.
     * If @include_scheduling_activity is set to true then the related scheduling activity for the shift segment will be returned in the scheduling activity field.
     * If @include_activity is set to true then the related non skill activity for the scheduling activity will be returned in the scheduling activities member non skill activity field.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.NotFound: a shift instance doesn't exist.
     *   - grpc.Internal: error occurs when getting the data.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListShiftSegmentsByShiftInstanceSids
     */
    listShiftSegmentsByShiftInstanceSids: {
      name: "ListShiftSegmentsByShiftInstanceSids",
      I: ListShiftSegmentsByShiftInstanceSidsReq,
      O: ListShiftSegmentsByShiftInstanceSidsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates the given @scheduling_target for the org making the request.
     * The @scheduling_target_sid of the new entity will be returned in the response.
     * Any preexisting scheduling target for @node_entity will be removed upon creation of the new @scheduling_target.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @scheduling_target is invalid.
     *   - grpc.NotFound: @node_entity doesn't exist for @schedule_scenario_sid and the org making the request.
     *   - grpc.Internal: error occours when setting the scheduling target.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.SetSchedulingTarget
     */
    setSchedulingTarget: {
      name: "SetSchedulingTarget",
      I: SetSchedulingTargetReq,
      O: SetSchedulingTargetRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the @own_scheduling_target, @inherited_scheduling_target, and @resulting_scheduling_target for the given @node_selector and the org making the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the @node_selector is invalid.
     *   - grpc.NotFound: the given @node_selector doesn't exist for the org making the request.
     *   - grpc.Internal: error occours when getting the scheduling target.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetSchedulingTarget
     */
    getSchedulingTarget: {
      name: "GetSchedulingTarget",
      I: GetSchedulingTargetReq,
      O: GetSchedulingTargetRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes the scheduling target of the corresponding @node_selector for the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   -grpc.Invalid: the @node_selector is invalid.
     *   -grpc.NotFound: the scheduling target for the given @node_selector doesn't exist for the org making the request.
     *   -grpc.Internal: error occurs when removing the scheduling target.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteSchedulingTarget
     */
    deleteSchedulingTarget: {
      name: "DeleteSchedulingTarget",
      I: DeleteSchedulingTargetReq,
      O: DeleteSchedulingTargetRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the scheduling-target values for the org making the request.
     * Errors:
     *   - grpc.Internal: error occours when getting the scheduling-target values.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetDefaultSchedulingTarget
     */
    getDefaultSchedulingTarget: {
      name: "GetDefaultSchedulingTarget",
      I: GetDefaultSchedulingTargetReq,
      O: GetDefaultSchedulingTargetRes,
      kind: MethodKind.Unary,
    },
    /**
     * Sets the scheduling-target values for the org making the request.
     * Errors:
     *   - grpc.Invalid: any of the given values are invalid.
     *   - grpc.Internal: error occours when setting the scheduling-target values.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.SetDefaultSchedulingTarget
     */
    setDefaultSchedulingTarget: {
      name: "SetDefaultSchedulingTarget",
      I: SetDefaultSchedulingTargetReq,
      O: SetDefaultSchedulingTargetRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the performance metrics across @datetime_range for shift instances in @schedule_selector associated with @node_selector for the org making the request.
     * Performance metrics will be generated for each of the given @metric_params.
     * The @interval_width_in_minutes must be a multiple of 5.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.NotFound: the @node_selector, @schedule_selector, or their shift instances doesn't exist.
     *   - grpc.Internal: error occurs when getting the data.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetPerformanceMetrics
     */
    getPerformanceMetrics: {
      name: "GetPerformanceMetrics",
      I: GetPerformanceMetricsReq,
      O: GetPerformanceMetricsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists the required calls intervals for the given @node_selector over the given @datetime_range for the org making the request.
     * The @interval_width_in_minutes must be a multiple of 5.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.Internal: error occurs when getting the data.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListRequiredCallsIntervals
     */
    listRequiredCallsIntervals: {
      name: "ListRequiredCallsIntervals",
      I: ListRequiredCallsIntervalsReq,
      O: ListRequiredCallsIntervalsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates a Tour Pattern for @shift_template_sid and the org sending the request, returning @tour_pattern_sid.
     * If there is already a Tour Pattern for @shift_template_sid then the method call will fail to create a new Tour Pattern.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.AlreadyExists: A Tour Pattern already exists for @shift_template_sid.
     *   - grpc.Internal: error occurs when creating the Tour Pattern.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateTourPattern
     */
    createTourPattern: {
      name: "CreateTourPattern",
      I: CreateTourPatternReq,
      O: CreateTourPatternRes,
      kind: MethodKind.Unary,
    },
    /**
     * Returns a list of diagnostics describing any issues with the given @tour_pattern.
     * Checks the internal consistency between the pattern and all members, as well as making sure required fields are set with valid values.
     * Ignores sid fields, except for @shift_template_sid and @scheduling_activity_sid.
     * Does not query the database to check that foreign keys exist.
     * Returns a single diagnostic with an OK code if the given @tour_pattern has no issues.
     * The @member_tour_week_patterns and @member_tour_agent_collections fields must be set on @tour_pattern.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Internal: error occurs when validating the tour pattern or members.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetTourPatternDiagnostics
     */
    getTourPatternDiagnostics: {
      name: "GetTourPatternDiagnostics",
      I: GetTourPatternDiagnosticsReq,
      O: GetTourPatternDiagnosticsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Replaces the existing Tour Pattern and members with @tour_pattern for the @tour_pattern.shift_template_sid and the org sending the request.
     * Returns the newly created Tour Pattern and members with their updated SIDs and Week Pattern Numbers.
     * Any existing Tour Week Patterns, Tour Shift Instance and Segment Configs, Tour Agent Collections and their WFM Agent SIDs
     *   belonging to @tour_pattern.shift_template_sid will be replaced with the members on the provided @tour_pattern.
     * At least one Tour Agent Collection and one Tour Week Pattern must be provided in the member fields.
     * If the tour pattern data or members have issues that prevent them from being persisted, a list of diagnostics will be returned describing the issues that must be resolved.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.NotFound: the @tour_pattern.shift_template_sid does not exist.
     *   - grpc.Internal: error occurs when upserting the tour pattern or members.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpsertTourPatternWithMembers
     */
    upsertTourPatternWithMembers: {
      name: "UpsertTourPatternWithMembers",
      I: UpsertTourPatternWithMembersReq,
      O: UpsertTourPatternWithMembersRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the Tour Pattern belonging to @shift_template_sid and the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.NotFound: the requested Tour Pattern does not exist.
     *   - grpc.Internal: error occurs when getting the data.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetTourPattern
     */
    getTourPattern: {
      name: "GetTourPattern",
      I: GetTourPatternReq,
      O: GetTourPatternRes,
      kind: MethodKind.Unary,
    },
    /**
     * Gets the Tour Pattern belonging to @shift_template_sid and the org sending the request.
     * The @tour_pattern will be returned with all member entities.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.NotFound: the requested Tour Pattern does not exist.
     *   - grpc.Internal: error occurs when getting the data.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GetTourPatternWithMembers
     */
    getTourPatternWithMembers: {
      name: "GetTourPatternWithMembers",
      I: GetTourPatternWithMembersReq,
      O: GetTourPatternWithMembersRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes the Tour Pattern belonging to @tour_pattern_sid and the org sending the request.
     * Any member Tour Week Patterns or Agent Collections will be deleted as well.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.Internal: error occurs when deleting the data or it's children.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteTourPattern
     */
    deleteTourPattern: {
      name: "DeleteTourPattern",
      I: DeleteTourPatternReq,
      O: DeleteTourPatternRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates a Tour Week Pattern for @tour_pattern_sid for the org sending the request, returning @tour_week_pattern_sid.
     * The newly created Tour Week Pattern will be placed at the end of the existing sequence of tour week patterns for @tour_pattern_sid.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.NotFound: the given @tour_pattern_sid does not exist for the org sending the request.
     *   - grpc.Internal: error occurs when creating the Tour Week Pattern.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateTourWeekPattern
     */
    createTourWeekPattern: {
      name: "CreateTourWeekPattern",
      I: CreateTourWeekPatternReq,
      O: CreateTourWeekPatternRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists the Tour Week Patterns with @tour_pattern_sid for the org sending the request
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.Internal: error occurs when getting the Tour Week Patterns.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListTourWeekPatterns
     */
    listTourWeekPatterns: {
      name: "ListTourWeekPatterns",
      I: ListTourWeekPatternsReq,
      O: ListTourWeekPatternsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes the Tour Week Patterns with the given @tour_week_pattern_sids for the org sending the request.
     * Any Tour Week Instance or Segment Configs using @tour_week_pattern_sids will be deleted.
     * Request will error if any @tour_week_pattern_sids are in use by a Tour Agent Collection, as those must be removed first.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.FailedPrecondition: a @tour_week_pattern_sid is in use by a Tour Agent Collection.
     *   - grpc.Internal: error occurs when deleting the tour week patterns or configs.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteTourWeekPatterns
     */
    deleteTourWeekPatterns: {
      name: "DeleteTourWeekPatterns",
      I: DeleteTourWeekPatternsReq,
      O: DeleteTourWeekPatternsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates the @tour_shift_instance_config for the org sending the request, returning @tour_shift_instance_config_sid.
     * The given @tour_shift_instance_config will not be created if it will overlap another tour shift instance config belonging to @tour_week_pattern_sid.
     * The @member_tour_shift_segment_configs field will be ignored, and will not be created if passed through this endpoint.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid or a preexisting tour shift instance config would overlap @tour_shift_instance_config.
     *   - grpc.Internal: error occurs when creating the data.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateTourShiftInstanceConfig
     */
    createTourShiftInstanceConfig: {
      name: "CreateTourShiftInstanceConfig",
      I: CreateTourShiftInstanceConfigReq,
      O: CreateTourShiftInstanceConfigRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the @tour_shift_instance_config for the org sending the request, returning @tour_shift_instance_config_sid.
     * The given @tour_shift_instance_config will not be created if it will overlap another tour shift instance config belonging to @tour_week_pattern_sid.
     * The @member_tour_shift_segment_configs field will be ignored, and will not be updated if passed through this endpoint.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid or a preexisting Tour Shift Instance Config would overlap @tour_shift_instance_config.
     *   - grpc.Internal: error occurs when updating the data.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateTourShiftInstanceConfig
     */
    updateTourShiftInstanceConfig: {
      name: "UpdateTourShiftInstanceConfig",
      I: UpdateTourShiftInstanceConfigReq,
      O: UpdateTourShiftInstanceConfigRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists the Tour Shift Instance Configs belonging to @tour_week_pattern_sids for the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.Internal: error occurs when getting the Tour Shift Instance Configs.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListTourShiftInstanceConfigs
     */
    listTourShiftInstanceConfigs: {
      name: "ListTourShiftInstanceConfigs",
      I: ListTourShiftInstanceConfigsReq,
      O: ListTourShiftInstanceConfigsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes the Tour Shift Instance Configs matching @tour_shift_instance_config_sids for the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.Internal: error occurs when getting the Tour Shift Instance Configs.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteTourShiftInstanceConfigs
     */
    deleteTourShiftInstanceConfigs: {
      name: "DeleteTourShiftInstanceConfigs",
      I: DeleteTourShiftInstanceConfigsReq,
      O: DeleteTourShiftInstanceConfigsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates the given @tour_shift_segment_config for the org sending the request, returning @tour_shift_segment_config_sid.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.NotFound: the @tour_shift_instance_config_sid does not exist for the org sending the request.
     *   - grpc.Internal: error occurs when creating the entity.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateTourShiftSegmentConfig
     */
    createTourShiftSegmentConfig: {
      name: "CreateTourShiftSegmentConfig",
      I: CreateTourShiftSegmentConfigReq,
      O: CreateTourShiftSegmentConfigRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the given @tour_shift_segment_config matching @tour_shift_segment_config_sid for the org sending the request.
     * If the updated Tour Shift Segment Config overlaps another segment or does not fit within the parent Tour Shift Instance Config the update will fail.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid or the resulting update would result in a conflict.
     *   - grpc.NotFound: the @tour_shift_instance_config_sid does not exist for the org sending the request.
     *   - grpc.Internal: error occurs when updating the entity.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateTourShiftSegmentConfig
     */
    updateTourShiftSegmentConfig: {
      name: "UpdateTourShiftSegmentConfig",
      I: UpdateTourShiftSegmentConfigReq,
      O: UpdateTourShiftSegmentConfigRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists the Tour Shift Segment Configs belonging to @tour_shift_instance_config_sids for the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.Internal: error occurs when getting the Tour Shift Segment Configs.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListTourShiftSegmentConfigs
     */
    listTourShiftSegmentConfigs: {
      name: "ListTourShiftSegmentConfigs",
      I: ListTourShiftSegmentConfigsReq,
      O: ListTourShiftSegmentConfigsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes the Tour Shift Segment Configs associated with the given @tour_shift_segment_config_sids for the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.Internal: error occurs when deleting the Tour Shift Segment Configs.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteTourShiftSegmentConfigs
     */
    deleteTourShiftSegmentConfigs: {
      name: "DeleteTourShiftSegmentConfigs",
      I: DeleteTourShiftSegmentConfigsReq,
      O: DeleteTourShiftSegmentConfigsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates the given @tour_agent_collection for the org sending the request and return the @tour_agent_collection_sid.
     * The @wfm_agent_sids will be ignored and will not be created through this endpoint.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.AlreadyExists: the first_week_pattern_number for @tour_pattern_sid is already in use by another tour agent collection.
     *   - grpc.NotFound: the given @tour_pattern_sid does not exist for the org sending the request.
     *   - grpc.Internal: error occurs when creating the entity.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateTourAgentCollection
     */
    createTourAgentCollection: {
      name: "CreateTourAgentCollection",
      I: CreateTourAgentCollectionReq,
      O: CreateTourAgentCollectionRes,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the given @tour_agent_collection matching the @tour_agent_collection_sid for the org sending the request.
     * The @wfm_agent_sids will be ignored and will not be updated through this endpoint.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.AlreadyExists: the first_week_pattern_number for @tour_pattern_sid is already in use by another tour agent collection.
     *   - grpc.NotFound: the given @tour_pattern_sid does not exist for the org sending the request.
     *   - grpc.Internal: error occurs when updating the entity.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.UpdateTourAgentCollection
     */
    updateTourAgentCollection: {
      name: "UpdateTourAgentCollection",
      I: UpdateTourAgentCollectionReq,
      O: UpdateTourAgentCollectionRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists the Tour Agent Collections belonging to @tour_pattern_sid for the org sending the request.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.Internal: error occurs when getting the tour agent collections.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListTourAgentCollections
     */
    listTourAgentCollections: {
      name: "ListTourAgentCollections",
      I: ListTourAgentCollectionsReq,
      O: ListTourAgentCollectionsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes the Tour Agent collections matching @tour_agent_collection_sids for the org sending the request.
     * Any existing associations with WFM Agent Sids will be deleted as well.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.Internal: error occurs when deleting the tour agent collections.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteTourAgentCollections
     */
    deleteTourAgentCollections: {
      name: "DeleteTourAgentCollections",
      I: DeleteTourAgentCollectionsReq,
      O: DeleteTourAgentCollectionsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Creates an assocation between the @tour_agent_collection_sid and the @wfm_agent_sids for the org sending the request.
     * If there is already an association between any of the @wfm_agent_sids and the Tour Pattern that @tour_agent_collection_sid belongs to, the method will fail and no associations will be created.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid
     *   - grpc.AlreadyExists: an association already exists for at least one SID in @wfm_agent_sids.
     *   - grpc.Internal: error occurs when creating the association.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.CreateTourAgentCollectionWFMAgents
     */
    createTourAgentCollectionWFMAgents: {
      name: "CreateTourAgentCollectionWFMAgents",
      I: CreateTourAgentCollectionWFMAgentsReq,
      O: CreateTourAgentCollectionWFMAgentsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Lists the WFM Agent SIDs belonging to @tour_agent_collection_sids for the org sending the request.
     * The resulting sids will be returned in @wfm_agent_pairings each containing an @agent_collection_sid and @wfm_agent_sids.
     * If no agents are found for a sid in the given @tour_agent_collection_sids, that @agent_collection_sid will have an empty slice in @wfm_agent_sids.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.Internal: error occurs when getting the tour agent collections.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListTourAgentCollectionWFMAgents
     */
    listTourAgentCollectionWFMAgents: {
      name: "ListTourAgentCollectionWFMAgents",
      I: ListTourAgentCollectionWFMAgentsReq,
      O: ListTourAgentCollectionWFMAgentsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes association between the @wfm_agent_sids and @tour_agent_collection_sid for the org sending the request.
     * If no @wfm_agent_sids are provided, all existing @wfm_agent_sids for the given @tour_agent_collection_sid will be deleted.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.NotFound: there are no WFM Agent associations to delete for @tour_agent_collection_sid.
     *   - grpc.Internal: error occurs when getting the tour agent collections.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.DeleteTourAgentCollectionWFMAgents
     */
    deleteTourAgentCollectionWFMAgents: {
      name: "DeleteTourAgentCollectionWFMAgents",
      I: DeleteTourAgentCollectionWFMAgentsReq,
      O: DeleteTourAgentCollectionWFMAgentsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Generates a list of tour week patterns for @target_shift_template_sid and the org sending the request.
     * Sets the member_tour_week_patterns with a tour week pattern for each of the @num_weeks_in_tour.
     * Each of the tour week patterns will be set with tour shift instances and segment configs based on
     *   the forecasted call data over the next @num_weeks_in_tour, starting on the next Monday.
     * The returned data will not be persisted. This method will not effect any existing tour week patterns in the database.
     * The @tour_week_patterns returned by this method are intended to replace, not append, all currenly existing tour week patterns for @target_shift_template_sid, once persisted.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.NotFound: there is no call center node or @shift_template_sid associated with @schedule_scenario_sid.
     *   - grpc.Internal: error occurs when generating the tour week patterns.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.GenerateTourWeekPatterns
     */
    generateTourWeekPatterns: {
      name: "GenerateTourWeekPatterns",
      I: GenerateTourWeekPatternsReq,
      O: GenerateTourWeekPatternsRes,
      kind: MethodKind.Unary,
    },
    /**
     * Returns a list of @wfm_agent_sids that are suitable for replacing @wfm_agent_sid_to_replace for the given parameters and the org sending the request.
     * Only enforces that skill proficiencies are covered by the individual wfm agents, does not enforce constraint rules.
     * If @skip_skill_proficiency_sort is False, the agents will be returned in order of cumulative skill proficiency towards the required skills.
     * If @include_skill_mismatches is True, the agents will be included even if they do not include all of the required skills for the shifts being replaced.
     * If @skip_force_same_agent_groups is False, the agents will only be returned if they belong to every agent group that @wfm_agent_sid_to_replace is a member of. Otherwise, this check will be skipped.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.Internal: error occurs when determinining which agents are valid.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ListValidAgentsForReplacement
     */
    listValidAgentsForReplacement: {
      name: "ListValidAgentsForReplacement",
      I: ListValidAgentsForReplacementReq,
      O: ListValidAgentsForReplacementRes,
      kind: MethodKind.Unary,
    },
    /**
     * Replaces @wfm_agent_sid_to_remove with @wfm_agent_sid_to_add for the given parameters and the org sending the request.
     * If @skip_overlapping_shifts, shifts with an overlap conflict will be skipped, otherwise overlap conflicts will cause a diagnostic to be returned.
     * Does not enforce skill proficiencies. To check skill proficiencies for shift replacement use ListValidAgentsForReplacement.
     * DEPRECATED as of Jan/22/2024 - Use ReplaceAgentOnScheduleV1 instead.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.Internal: error occurs when replacing the @wfm_agent_sid_to_remove.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ReplaceAgentOnSchedule
     * @deprecated
     */
    replaceAgentOnSchedule: {
      name: "ReplaceAgentOnSchedule",
      I: ReplaceAgentOnScheduleRes,
      O: ReplaceAgentOnScheduleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Replaces @wfm_agent_sid_to_remove with @wfm_agent_sid_to_add for the given parameters and the org sending the request.
     * If @skip_overlapping_shifts, shifts with an overlap conflict will be skipped, otherwise overlap conflicts will cause a diagnostic to be returned.
     * Does not enforce skill proficiencies. To check skill proficiencies for shift replacement use ListValidAgentsForReplacement.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.Internal: error occurs when replacing the @wfm_agent_sid_to_remove.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.ReplaceAgentOnScheduleV1
     */
    replaceAgentOnScheduleV1: {
      name: "ReplaceAgentOnScheduleV1",
      I: ReplaceAgentOnScheduleReq,
      O: ReplaceAgentOnScheduleRes,
      kind: MethodKind.Unary,
    },
    /**
     * Removes the @wfm_agent_sid from @schedule_selector over @datetime_range for the org sending the request.
     * Creates a new unassigned agent with the same active agent group associations as @wfm_agent_sid for @schedule_scenario_sid.
     * The unassigned agent will be assigned to shifts belonging to @wfm_agent_sid, returning newly created unassigned agent's SID and the updated shifts.
     * Required permissions:
     *   NONE
     * Errors:
     *   - grpc.Invalid: the request data is invalid.
     *   - grpc.Internal: error occurs when creating the unassigned agent or updating the shifts.
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.RemoveAgentFromSchedule
     */
    removeAgentFromSchedule: {
      name: "RemoveAgentFromSchedule",
      I: RemoveAgentFromScheduleRequest,
      O: RemoveAgentFromScheduleResponse,
      kind: MethodKind.Unary,
    },
    /**
     * A hello world endpoint to test the WFM Adherence App.
     * Returns a string with a hello world message.
     * Required permissions:
     *   PERMISSION_WFM_ADHERENCE_ADMIN, PERMISSION_WFM_ADHERENCE_MANAGER, or PERMISSION_WFM_ADHERENCE_MONITOR
     *
     * @generated from rpc api.v1alpha1.wfm.WFM.HelloWorldWFMAdherence
     */
    helloWorldWFMAdherence: {
      name: "HelloWorldWFMAdherence",
      I: HelloWorldWFMAdherenceRequest,
      O: HelloWorldWFMAdherenceResponse,
      kind: MethodKind.Unary,
    },
  }
};


// @generated by protoc-gen-es v1.4.2 with parameter "target=js+dts"
// @generated from file api/v1alpha1/srec/service.proto (package api.v1alpha1.srec, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * ListScreenRecordingsRequest is a request for listing screen recordings.
 *
 * @generated from message api.v1alpha1.srec.ListScreenRecordingsRequest
 */
export declare class ListScreenRecordingsRequest extends Message<ListScreenRecordingsRequest> {
  /**
   * Optional. The number of screen recordings to include in a single response. When not
   * provided this defaults to 100.
   *
   * @generated from field: uint32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. The next_page_token returned from a previous List request, if any.
   * When provided all other request fields are ignored.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  constructor(data?: PartialMessage<ListScreenRecordingsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.srec.ListScreenRecordingsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListScreenRecordingsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListScreenRecordingsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListScreenRecordingsRequest;

  static equals(a: ListScreenRecordingsRequest | PlainMessage<ListScreenRecordingsRequest> | undefined, b: ListScreenRecordingsRequest | PlainMessage<ListScreenRecordingsRequest> | undefined): boolean;
}

/**
 * ListScreenRecordingsResponse is a response for listing screen recordings.
 *
 * @generated from message api.v1alpha1.srec.ListScreenRecordingsResponse
 */
export declare class ListScreenRecordingsResponse extends Message<ListScreenRecordingsResponse> {
  /**
   * Token to retrieve the next page of screen recordings, or empty if there are no
   * more screen recordings in the list.
   *
   * @generated from field: string next_page_token = 1;
   */
  nextPageToken: string;

  /**
   * List of screen recordings which contains at most one request page_size.
   *
   * @generated from field: repeated api.v1alpha1.srec.ScreenRecording recordings = 2;
   */
  recordings: ScreenRecording[];

  constructor(data?: PartialMessage<ListScreenRecordingsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.srec.ListScreenRecordingsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListScreenRecordingsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListScreenRecordingsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListScreenRecordingsResponse;

  static equals(a: ListScreenRecordingsResponse | PlainMessage<ListScreenRecordingsResponse> | undefined, b: ListScreenRecordingsResponse | PlainMessage<ListScreenRecordingsResponse> | undefined): boolean;
}

/**
 * ScreenRecording is a resource in the SREC API.
 *
 * @generated from message api.v1alpha1.srec.ScreenRecording
 */
export declare class ScreenRecording extends Message<ScreenRecording> {
  /**
   * Output only. The unique id of this screen recording.
   *
   * @generated from field: int64 session_id = 2;
   */
  sessionId: bigint;

  /**
   * Required. The agent first name.
   *
   * @generated from field: string agent_first_name = 3;
   */
  agentFirstName: string;

  /**
   * Required. The agent last name.
   *
   * @generated from field: string agent_last_name = 4;
   */
  agentLastName: string;

  /**
   * Required. Start time is the start time of the screen recording.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 5;
   */
  startTime?: Timestamp;

  /**
   * Required. Audio time in milliseconds.
   *
   * @generated from field: uint32 audio_time = 6;
   */
  audioTime: number;

  /**
   * Required. Audio bytes of the screen recording.
   *
   * @generated from field: int64 audio_bytes = 7;
   */
  audioBytes: bigint;

  constructor(data?: PartialMessage<ScreenRecording>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.srec.ScreenRecording";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScreenRecording;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScreenRecording;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScreenRecording;

  static equals(a: ScreenRecording | PlainMessage<ScreenRecording> | undefined, b: ScreenRecording | PlainMessage<ScreenRecording> | undefined): boolean;
}

/**
 * GetScreenRecordingURLRequest is a request for getting a screen recording url.
 *
 * @generated from message api.v1alpha1.srec.GetScreenRecordingURLRequest
 */
export declare class GetScreenRecordingURLRequest extends Message<GetScreenRecordingURLRequest> {
  /**
   * Required. The session id of this screen recording. Must be non empty.
   *
   * @generated from field: int64 session_id = 2;
   */
  sessionId: bigint;

  constructor(data?: PartialMessage<GetScreenRecordingURLRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.srec.GetScreenRecordingURLRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetScreenRecordingURLRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetScreenRecordingURLRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetScreenRecordingURLRequest;

  static equals(a: GetScreenRecordingURLRequest | PlainMessage<GetScreenRecordingURLRequest> | undefined, b: GetScreenRecordingURLRequest | PlainMessage<GetScreenRecordingURLRequest> | undefined): boolean;
}

/**
 * GetScreenRecordingURLResponse is a response for getting a screen recording url.
 *
 * @generated from message api.v1alpha1.srec.GetScreenRecordingURLResponse
 */
export declare class GetScreenRecordingURLResponse extends Message<GetScreenRecordingURLResponse> {
  /**
   * The url for the screen recording.
   *
   * @generated from field: string url = 1;
   */
  url: string;

  constructor(data?: PartialMessage<GetScreenRecordingURLResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.srec.GetScreenRecordingURLResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetScreenRecordingURLResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetScreenRecordingURLResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetScreenRecordingURLResponse;

  static equals(a: GetScreenRecordingURLResponse | PlainMessage<GetScreenRecordingURLResponse> | undefined, b: GetScreenRecordingURLResponse | PlainMessage<GetScreenRecordingURLResponse> | undefined): boolean;
}

/**
 * DeleteScreenRecordingRequest is a request for deleting a screen recording.
 *
 * @generated from message api.v1alpha1.srec.DeleteScreenRecordingRequest
 */
export declare class DeleteScreenRecordingRequest extends Message<DeleteScreenRecordingRequest> {
  /**
   * Required. The unique id of the screen recording to be deleted.
   *
   * @generated from field: int64 session_id = 1;
   */
  sessionId: bigint;

  constructor(data?: PartialMessage<DeleteScreenRecordingRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.srec.DeleteScreenRecordingRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteScreenRecordingRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteScreenRecordingRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteScreenRecordingRequest;

  static equals(a: DeleteScreenRecordingRequest | PlainMessage<DeleteScreenRecordingRequest> | undefined, b: DeleteScreenRecordingRequest | PlainMessage<DeleteScreenRecordingRequest> | undefined): boolean;
}

/**
 * DeleteScreenRecordingResponse is a response for deleting a screen recording.
 *
 * @generated from message api.v1alpha1.srec.DeleteScreenRecordingResponse
 */
export declare class DeleteScreenRecordingResponse extends Message<DeleteScreenRecordingResponse> {
  constructor(data?: PartialMessage<DeleteScreenRecordingResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.srec.DeleteScreenRecordingResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteScreenRecordingResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteScreenRecordingResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteScreenRecordingResponse;

  static equals(a: DeleteScreenRecordingResponse | PlainMessage<DeleteScreenRecordingResponse> | undefined, b: DeleteScreenRecordingResponse | PlainMessage<DeleteScreenRecordingResponse> | undefined): boolean;
}


// @generated by protoc-gen-es v1.3.0 with parameter "target=js+dts"
// @generated from file api/v1alpha1/pbx/service.proto (package api.v1alpha1.pbx, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * -------------------------
 * Enums
 * -------------------------
 *
 * @generated from enum api.v1alpha1.pbx.RingStrategy
 */
export const RingStrategy = proto3.makeEnum(
  "api.v1alpha1.pbx.RingStrategy",
  [
    {no: 0, name: "RING_STRATEGY_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "RING_STRATEGY_RING_ALL", localName: "RING_ALL"},
    {no: 2, name: "RING_STRATEGY_ROUND_ROBIN", localName: "ROUND_ROBIN"},
    {no: 3, name: "RING_STRATEGY_RANDOM", localName: "RANDOM"},
  ],
);

/**
 * -------------------------
 * Entity Definitions
 * -------------------------
 *
 * @generated from message api.v1alpha1.pbx.HuntGroup
 */
export const HuntGroup = proto3.makeMessageType(
  "api.v1alpha1.pbx.HuntGroup",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v1alpha1.pbx.PBXUser
 */
export const PBXUser = proto3.makeMessageType(
  "api.v1alpha1.pbx.PBXUser",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "extension", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "ring_groups", kind: "message", T: RingGroupDesc, repeated: true },
    { no: 6, name: "user_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "hunt_group", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "skills", kind: "message", T: Skill, repeated: true },
    { no: 9, name: "permission_groups", kind: "message", T: PermissionGroup, repeated: true },
  ],
);

/**
 * @generated from message api.v1alpha1.pbx.PermissionGroup
 */
export const PermissionGroup = proto3.makeMessageType(
  "api.v1alpha1.pbx.PermissionGroup",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v1alpha1.pbx.RingGroup
 */
export const RingGroup = proto3.makeMessageType(
  "api.v1alpha1.pbx.RingGroup",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "extension", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "ring_strategy", kind: "enum", T: proto3.getEnumType(RingStrategy) },
    { no: 6, name: "members", kind: "message", T: PBXUser, repeated: true },
  ],
);

/**
 * @generated from message api.v1alpha1.pbx.RingGroupDesc
 */
export const RingGroupDesc = proto3.makeMessageType(
  "api.v1alpha1.pbx.RingGroupDesc",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v1alpha1.pbx.Skill
 */
export const Skill = proto3.makeMessageType(
  "api.v1alpha1.pbx.Skill",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * -------------------------
 *  RPC Messages
 * -------------------------
 *
 * @generated from message api.v1alpha1.pbx.ActivatePbxUserRequest
 */
export const ActivatePbxUserRequest = proto3.makeMessageType(
  "api.v1alpha1.pbx.ActivatePbxUserRequest",
  () => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v1alpha1.pbx.ActivatePbxUserResponse
 */
export const ActivatePbxUserResponse = proto3.makeMessageType(
  "api.v1alpha1.pbx.ActivatePbxUserResponse",
  [],
);

/**
 * @generated from message api.v1alpha1.pbx.AddUsersToRingGroupRequest
 */
export const AddUsersToRingGroupRequest = proto3.makeMessageType(
  "api.v1alpha1.pbx.AddUsersToRingGroupRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * @generated from message api.v1alpha1.pbx.AddUsersToRingGroupResponse
 */
export const AddUsersToRingGroupResponse = proto3.makeMessageType(
  "api.v1alpha1.pbx.AddUsersToRingGroupResponse",
  [],
);

/**
 * @generated from message api.v1alpha1.pbx.AssignRandomGroupExtensionRequest
 */
export const AssignRandomGroupExtensionRequest = proto3.makeMessageType(
  "api.v1alpha1.pbx.AssignRandomGroupExtensionRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v1alpha1.pbx.AssignRandomGroupExtensionResponse
 */
export const AssignRandomGroupExtensionResponse = proto3.makeMessageType(
  "api.v1alpha1.pbx.AssignRandomGroupExtensionResponse",
  () => [
    { no: 1, name: "extension", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * @generated from message api.v1alpha1.pbx.AssignRandomUserExtensionRequest
 */
export const AssignRandomUserExtensionRequest = proto3.makeMessageType(
  "api.v1alpha1.pbx.AssignRandomUserExtensionRequest",
  () => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v1alpha1.pbx.AssignRandomUserExtensionResponse
 */
export const AssignRandomUserExtensionResponse = proto3.makeMessageType(
  "api.v1alpha1.pbx.AssignRandomUserExtensionResponse",
  () => [
    { no: 1, name: "extension", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * @generated from message api.v1alpha1.pbx.CreateRingGroupRequest
 */
export const CreateRingGroupRequest = proto3.makeMessageType(
  "api.v1alpha1.pbx.CreateRingGroupRequest",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "extension", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "ring_strategy", kind: "enum", T: proto3.getEnumType(RingStrategy) },
    { no: 5, name: "member_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * @generated from message api.v1alpha1.pbx.CreateRingGroupResponse
 */
export const CreateRingGroupResponse = proto3.makeMessageType(
  "api.v1alpha1.pbx.CreateRingGroupResponse",
  () => [
    { no: 1, name: "group", kind: "message", T: RingGroup },
  ],
);

/**
 * @generated from message api.v1alpha1.pbx.DeactivatePbxUserRequest
 */
export const DeactivatePbxUserRequest = proto3.makeMessageType(
  "api.v1alpha1.pbx.DeactivatePbxUserRequest",
  () => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v1alpha1.pbx.DeactivatePbxUserResponse
 */
export const DeactivatePbxUserResponse = proto3.makeMessageType(
  "api.v1alpha1.pbx.DeactivatePbxUserResponse",
  [],
);

/**
 * @generated from message api.v1alpha1.pbx.DeleteRingGroupRequest
 */
export const DeleteRingGroupRequest = proto3.makeMessageType(
  "api.v1alpha1.pbx.DeleteRingGroupRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message api.v1alpha1.pbx.DeleteRingGroupResponse
 */
export const DeleteRingGroupResponse = proto3.makeMessageType(
  "api.v1alpha1.pbx.DeleteRingGroupResponse",
  [],
);

/**
 * @generated from message api.v1alpha1.pbx.ListPbxUsersRequest
 */
export const ListPbxUsersRequest = proto3.makeMessageType(
  "api.v1alpha1.pbx.ListPbxUsersRequest",
  [],
);

/**
 * @generated from message api.v1alpha1.pbx.ListPbxUsersResponse
 */
export const ListPbxUsersResponse = proto3.makeMessageType(
  "api.v1alpha1.pbx.ListPbxUsersResponse",
  () => [
    { no: 1, name: "users", kind: "message", T: PBXUser, repeated: true },
  ],
);

/**
 * @generated from message api.v1alpha1.pbx.ListRingGroupsRequest
 */
export const ListRingGroupsRequest = proto3.makeMessageType(
  "api.v1alpha1.pbx.ListRingGroupsRequest",
  [],
);

/**
 * @generated from message api.v1alpha1.pbx.ListRingGroupsResponse
 */
export const ListRingGroupsResponse = proto3.makeMessageType(
  "api.v1alpha1.pbx.ListRingGroupsResponse",
  () => [
    { no: 1, name: "groups", kind: "message", T: RingGroup, repeated: true },
  ],
);

/**
 * @generated from message api.v1alpha1.pbx.RemoveUsersFromRingGroupRequest
 */
export const RemoveUsersFromRingGroupRequest = proto3.makeMessageType(
  "api.v1alpha1.pbx.RemoveUsersFromRingGroupRequest",
  () => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * @generated from message api.v1alpha1.pbx.RemoveUsersFromRingGroupResponse
 */
export const RemoveUsersFromRingGroupResponse = proto3.makeMessageType(
  "api.v1alpha1.pbx.RemoveUsersFromRingGroupResponse",
  [],
);

/**
 * @generated from message api.v1alpha1.pbx.UpdateRingGroupRequest
 */
export const UpdateRingGroupRequest = proto3.makeMessageType(
  "api.v1alpha1.pbx.UpdateRingGroupRequest",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "extension", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "ring_strategy", kind: "enum", T: proto3.getEnumType(RingStrategy) },
  ],
);

/**
 * @generated from message api.v1alpha1.pbx.UpdateRingGroupResponse
 */
export const UpdateRingGroupResponse = proto3.makeMessageType(
  "api.v1alpha1.pbx.UpdateRingGroupResponse",
  () => [
    { no: 1, name: "group", kind: "message", T: RingGroup },
  ],
);

/**
 * @generated from message api.v1alpha1.pbx.UpdateUserExtensionRequest
 */
export const UpdateUserExtensionRequest = proto3.makeMessageType(
  "api.v1alpha1.pbx.UpdateUserExtensionRequest",
  () => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "extension", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * @generated from message api.v1alpha1.pbx.UpdateUserExtensionResponse
 */
export const UpdateUserExtensionResponse = proto3.makeMessageType(
  "api.v1alpha1.pbx.UpdateUserExtensionResponse",
  [],
);


// Copyright (c) 2020, TCN Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-es v0.13.0
// @generated from file api/v1alpha1/workflows/service.proto (package api.v1alpha1.workflows, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateFlowDefinitionRequest, CreateFlowDefinitionResponse, GetFlowDefinitionRequest, GetFlowDefinitionResponse, ListFlowDefinitionsRequest, ListFlowDefinitionsResponse, UpdateFlowDefinitionRequest, UpdateFlowDefinitionResponse, ValidateFlowDefinitionRequest, ValidateFlowDefinitionResponse } from "./service_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * FlowDefinitionPersistService is the service that provides CRUD operations for FlowDefinitions.
 * PERMISSION_WORKFLOWS is required for all operations
 *
 * @generated from service api.v1alpha1.workflows.FlowDefinitionPersistService
 */
export const FlowDefinitionPersistService = {
  typeName: "api.v1alpha1.workflows.FlowDefinitionPersistService",
  methods: {
    /**
     * CreateFlowDefinition creates a new flow definition in the database
     *
     * @generated from rpc api.v1alpha1.workflows.FlowDefinitionPersistService.CreateFlowDefinition
     */
    createFlowDefinition: {
      name: "CreateFlowDefinition",
      I: CreateFlowDefinitionRequest,
      O: CreateFlowDefinitionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetFlowDefinition retrieves a flow definition from the database
     *
     * @generated from rpc api.v1alpha1.workflows.FlowDefinitionPersistService.GetFlowDefinition
     */
    getFlowDefinition: {
      name: "GetFlowDefinition",
      I: GetFlowDefinitionRequest,
      O: GetFlowDefinitionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListFlowDefinitions retrieves a list of flow definitions from the database optionally filtered by the owning application
     * if application is not specified, all flow definitions for the org are returned
     *
     * @generated from rpc api.v1alpha1.workflows.FlowDefinitionPersistService.ListFlowDefinitions
     */
    listFlowDefinitions: {
      name: "ListFlowDefinitions",
      I: ListFlowDefinitionsRequest,
      O: ListFlowDefinitionsResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * UpdateFlowDefinition updates a flow definition in the database. Only the name, description and definition graph itself are updated
     *
     * @generated from rpc api.v1alpha1.workflows.FlowDefinitionPersistService.UpdateFlowDefinition
     */
    updateFlowDefinition: {
      name: "UpdateFlowDefinition",
      I: UpdateFlowDefinitionRequest,
      O: UpdateFlowDefinitionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ValidateFlowDefinition validates a flow definition in the database. Only the name, description and definition graph itself are updated
     *
     * @generated from rpc api.v1alpha1.workflows.FlowDefinitionPersistService.ValidateFlowDefinition
     */
    validateFlowDefinition: {
      name: "ValidateFlowDefinition",
      I: ValidateFlowDefinitionRequest,
      O: ValidateFlowDefinitionResponse,
      kind: MethodKind.Unary,
    },
  }
};


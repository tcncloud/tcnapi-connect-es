// Copyright (c) 2020, TCN Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-es v0.13.0
// @generated from file api/v1alpha1/workflows/service.proto (package api.v1alpha1.workflows, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateWorkflowDefinitionRequest, CreateWorkflowDefinitionResponse, DeleteWorkflowDefinitionRequest, DeleteWorkflowDefinitionResponse, GetWorkflowDefinitionRequest, GetWorkflowDefinitionResponse, ListWorkflowDefinitionsRequest, ListWorkflowDefinitionsResponse, UpdateWorkflowDefinitionRequest, UpdateWorkflowDefinitionResponse, ValidateWorkflowDefinitionRequest, ValidateWorkflowDefinitionResponse } from "./service_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * WorkflowDefinitionPersistService is the service that provides CRUD operations for workflow definitions.
 * PERMISSION_WORKFLOWS is required for all operations
 *
 * @generated from service api.v1alpha1.workflows.WorkflowDefinitionPersistService
 */
export declare const WorkflowDefinitionPersistService: {
  readonly typeName: "api.v1alpha1.workflows.WorkflowDefinitionPersistService",
  readonly methods: {
    /**
     * CreateWorkflowDefinition creates a new flow definition in the database
     *
     * @generated from rpc api.v1alpha1.workflows.WorkflowDefinitionPersistService.CreateWorkflowDefinition
     */
    readonly createWorkflowDefinition: {
      readonly name: "CreateWorkflowDefinition",
      readonly I: typeof CreateWorkflowDefinitionRequest,
      readonly O: typeof CreateWorkflowDefinitionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * GetWorkflowDefinition retrieves a flow definition from the database
     *
     * @generated from rpc api.v1alpha1.workflows.WorkflowDefinitionPersistService.GetWorkflowDefinition
     */
    readonly getWorkflowDefinition: {
      readonly name: "GetWorkflowDefinition",
      readonly I: typeof GetWorkflowDefinitionRequest,
      readonly O: typeof GetWorkflowDefinitionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ListWorkflowDefinitions retrieves a list of flow definitions from the database optionally filtered by the owning application
     * if application is not specified, all flow definitions for the org are returned
     *
     * @generated from rpc api.v1alpha1.workflows.WorkflowDefinitionPersistService.ListWorkflowDefinitions
     */
    readonly listWorkflowDefinitions: {
      readonly name: "ListWorkflowDefinitions",
      readonly I: typeof ListWorkflowDefinitionsRequest,
      readonly O: typeof ListWorkflowDefinitionsResponse,
      readonly kind: MethodKind.ServerStreaming,
    },
    /**
     * UpdateWorkflowDefinition updates a flow definition in the database. Only the name, description and definition graph itself are updated
     *
     * @generated from rpc api.v1alpha1.workflows.WorkflowDefinitionPersistService.UpdateWorkflowDefinition
     */
    readonly updateWorkflowDefinition: {
      readonly name: "UpdateWorkflowDefinition",
      readonly I: typeof UpdateWorkflowDefinitionRequest,
      readonly O: typeof UpdateWorkflowDefinitionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * DeleteWorkflowDefinition deletes a flow definition from the database
     *
     * @generated from rpc api.v1alpha1.workflows.WorkflowDefinitionPersistService.DeleteWorkflowDefinition
     */
    readonly deleteWorkflowDefinition: {
      readonly name: "DeleteWorkflowDefinition",
      readonly I: typeof DeleteWorkflowDefinitionRequest,
      readonly O: typeof DeleteWorkflowDefinitionResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ValidateWorkflowDefinition validates a flow definition in the database. Only the name, description and definition graph itself are updated
     *
     * @generated from rpc api.v1alpha1.workflows.WorkflowDefinitionPersistService.ValidateWorkflowDefinition
     */
    readonly validateWorkflowDefinition: {
      readonly name: "ValidateWorkflowDefinition",
      readonly I: typeof ValidateWorkflowDefinitionRequest,
      readonly O: typeof ValidateWorkflowDefinitionResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};


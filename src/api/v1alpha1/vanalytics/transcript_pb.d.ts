// @generated by protoc-gen-es v1.3.0 with parameter "target=js+dts"
// @generated from file api/v1alpha1/vanalytics/transcript.proto (package api.v1alpha1.vanalytics, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, Duration, FieldList, FieldMask, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { TimestampExpr, Uint32Expr, Uint32Range } from "./expr_pb.js";
import type { AgentCallLogCallEnded, CallType_Enum } from "../../commons/acd_pb.js";
import type { AgentCallLog } from "./aclpb/aclpb_pb.js";

/**
 * TranscriptReviewStatus is an enumeration of a flagged transcripts review
 * statuses. Todo means there are flags that need review and have not been
 * reviewed. Done means every flag that needs review has been reviewed. None
 * means zero flags require review.
 *
 * @generated from enum api.v1alpha1.vanalytics.TranscriptReviewStatus
 */
export declare enum TranscriptReviewStatus {
  /**
   * @generated from enum value: TRANSCRIPT_REVIEW_STATUS_TODO = 0;
   */
  TODO = 0,

  /**
   * @generated from enum value: TRANSCRIPT_REVIEW_STATUS_DONE = 1;
   */
  DONE = 1,

  /**
   * @generated from enum value: TRANSCRIPT_REVIEW_STATUS_NONE = 2;
   */
  NONE = 2,
}

/**
 * BulkDeleteTranscriptsRequest defines the bulk delete transcripts request.
 *
 * @generated from message api.v1alpha1.vanalytics.BulkDeleteTranscriptsRequest
 */
export declare class BulkDeleteTranscriptsRequest extends Message<BulkDeleteTranscriptsRequest> {
  /**
   * Required. A query which determines which transcripts to delete.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchRequest query = 1;
   */
  query?: SearchRequest;

  constructor(data?: PartialMessage<BulkDeleteTranscriptsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.BulkDeleteTranscriptsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkDeleteTranscriptsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkDeleteTranscriptsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkDeleteTranscriptsRequest;

  static equals(a: BulkDeleteTranscriptsRequest | PlainMessage<BulkDeleteTranscriptsRequest> | undefined, b: BulkDeleteTranscriptsRequest | PlainMessage<BulkDeleteTranscriptsRequest> | undefined): boolean;
}

/**
 * BulkDeleteTranscriptsResponse defines the bulk delete transcripts response.
 *
 * @generated from message api.v1alpha1.vanalytics.BulkDeleteTranscriptsResponse
 */
export declare class BulkDeleteTranscriptsResponse extends Message<BulkDeleteTranscriptsResponse> {
  /**
   * The number of transcripts deleted.
   *
   * @generated from field: uint32 total = 1;
   */
  total: number;

  constructor(data?: PartialMessage<BulkDeleteTranscriptsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.BulkDeleteTranscriptsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkDeleteTranscriptsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkDeleteTranscriptsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkDeleteTranscriptsResponse;

  static equals(a: BulkDeleteTranscriptsResponse | PlainMessage<BulkDeleteTranscriptsResponse> | undefined, b: BulkDeleteTranscriptsResponse | PlainMessage<BulkDeleteTranscriptsResponse> | undefined): boolean;
}

/**
 * BulkRestoreTranscriptsRequest defines the bulk restore transcripts request.
 *
 * @generated from message api.v1alpha1.vanalytics.BulkRestoreTranscriptsRequest
 */
export declare class BulkRestoreTranscriptsRequest extends Message<BulkRestoreTranscriptsRequest> {
  /**
   * Required. A query which determines which transcripts to restore.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchRequest query = 1;
   */
  query?: SearchRequest;

  constructor(data?: PartialMessage<BulkRestoreTranscriptsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.BulkRestoreTranscriptsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkRestoreTranscriptsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkRestoreTranscriptsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkRestoreTranscriptsRequest;

  static equals(a: BulkRestoreTranscriptsRequest | PlainMessage<BulkRestoreTranscriptsRequest> | undefined, b: BulkRestoreTranscriptsRequest | PlainMessage<BulkRestoreTranscriptsRequest> | undefined): boolean;
}

/**
 * BulkRestoreTranscriptsResponse defines the bulk restore transcripts response.
 *
 * @generated from message api.v1alpha1.vanalytics.BulkRestoreTranscriptsResponse
 */
export declare class BulkRestoreTranscriptsResponse extends Message<BulkRestoreTranscriptsResponse> {
  /**
   * The number of transcripts restored.
   *
   * @generated from field: uint32 total = 1;
   */
  total: number;

  constructor(data?: PartialMessage<BulkRestoreTranscriptsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.BulkRestoreTranscriptsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BulkRestoreTranscriptsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BulkRestoreTranscriptsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BulkRestoreTranscriptsResponse;

  static equals(a: BulkRestoreTranscriptsResponse | PlainMessage<BulkRestoreTranscriptsResponse> | undefined, b: BulkRestoreTranscriptsResponse | PlainMessage<BulkRestoreTranscriptsResponse> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.SearchRequest
 */
export declare class SearchRequest extends Message<SearchRequest> {
  /**
   * @generated from field: api.v1alpha1.vanalytics.SearchRequest.Silence silence = 2;
   */
  silence?: SearchRequest_Silence;

  /**
   * talk time in milliseconds
   *
   * @generated from field: api.v1alpha1.vanalytics.Uint32Expr talk_time = 3;
   */
  talkTime?: Uint32Expr;

  /**
   * agent defines query constraints on agent specific fields
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchRequest.Agent agent = 4;
   */
  agent?: SearchRequest_Agent;

  /**
   * number of hits included in response
   *
   * @generated from field: uint32 page_size = 5;
   */
  pageSize: number;

  /**
   * @generated from field: api.v1alpha1.vanalytics.Sort sort = 6;
   */
  sort?: Sort;

  /**
   * @generated from field: api.v1alpha1.vanalytics.TimestampExpr create_time = 7;
   */
  createTime?: TimestampExpr;

  /**
   * @generated from field: api.v1alpha1.vanalytics.SearchRequest.TalkOver talk_over = 8;
   */
  talkOver?: SearchRequest_TalkOver;

  /**
   * @generated from field: api.v1alpha1.vanalytics.SearchRequest.Terms terms = 9;
   */
  terms?: SearchRequest_Terms;

  /**
   * channel when set requires search terms to be matched on a specific channel
   *
   * @generated from field: uint32 channel = 10;
   */
  channel: number;

  /**
   * phrase is words to search for that are close together
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchRequest.Phrase phrase = 11;
   */
  phrase?: SearchRequest_Phrase;

  /**
   * Optional. transcript_mask contains a list of transcript fields to be returned.
   * If no transcript_mask is provided it defaults to returning all fields.
   *
   * @generated from field: google.protobuf.FieldMask transcript_mask = 12;
   */
  transcriptMask?: FieldMask;

  /**
   * Optional. When not zero filter on transcript_sid.
   *
   * @generated from field: int64 transcript_sid = 13;
   */
  transcriptSid: bigint;

  /**
   * Optional. Phone number to search for.
   *
   * @generated from field: string phone_number = 14;
   */
  phoneNumber: string;

  /**
   * Optional. Caller id to search for.
   *
   * @generated from field: string caller_id = 15;
   */
  callerId: string;

  /**
   * Optional. When not empty filter on transcript_sids.
   *
   * @generated from field: repeated int64 transcript_sids = 16;
   */
  transcriptSids: bigint[];

  /**
   * Optional. Call start time to filter on.
   *
   * @generated from field: api.v1alpha1.vanalytics.TimestampExpr call_start_time = 17;
   */
  callStartTime?: TimestampExpr;

  /**
   * Optional. Call types to filter on. Possible call types are INBOUND, OUTBOUND,
   * PREVIEW, and MANUAL.
   *
   * @generated from field: repeated api.commons.CallType.Enum call_types = 18;
   */
  callTypes: CallType_Enum[];

  /**
   * Optional. Call sids to filter on.
   *
   * @generated from field: repeated int64 call_sids = 19;
   */
  callSids: bigint[];

  /**
   * Optional. Hunt group sids to filter on.
   *
   * @generated from field: repeated int64 hunt_group_sids = 20;
   */
  huntGroupSids: bigint[];

  /**
   * Optional. Group names to filter on.
   *
   * @generated from field: repeated string group_names = 21;
   */
  groupNames: string[];

  /**
   * Optional. Agent call log to filter on.
   *
   * @generated from field: api.v1alpha1.vanalytics.AgentCallLogQuery agent_call_log = 22;
   */
  agentCallLog?: AgentCallLogQuery;

  /**
   * Optional. Query on transcript fields.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery where = 23;
   */
  where?: SearchQuery;

  /**
   * Optional. Time frame to filter on in milliseconds. For example, this can be used to
   * filter for a term or phrase that is within the first 500 milliseconds of a transcript.
   *
   * @generated from field: api.v1alpha1.vanalytics.Uint32Range time_frame = 24;
   */
  timeFrame?: Uint32Range;

  constructor(data?: PartialMessage<SearchRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchRequest;

  static equals(a: SearchRequest | PlainMessage<SearchRequest> | undefined, b: SearchRequest | PlainMessage<SearchRequest> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.SearchRequest.Phrase
 */
export declare class SearchRequest_Phrase extends Message<SearchRequest_Phrase> {
  /**
   * words that will be searched for
   *
   * @generated from field: repeated api.v1alpha1.vanalytics.SearchRequest.Phrase.Word words = 1;
   */
  words: SearchRequest_Phrase_Word[];

  /**
   * slop is the number of extra terms that can be in the query that
   * are not being searched for. For example: slop of 2 when searching for
   * "This is my dog" would allow "This is my quick brown dog".
   *
   * @generated from field: uint32 slop = 2;
   */
  slop: number;

  /**
   * when in_order is true then the terms must be found in the order given.
   *
   * @generated from field: bool in_order = 3;
   */
  inOrder: boolean;

  /**
   * highlight contains settings for highlighting the words in the response
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchRequest.Phrase.Highlight highlight = 4;
   */
  highlight?: SearchRequest_Phrase_Highlight;

  /**
   * When true the phrase must not be matched.
   *
   * @generated from field: bool not = 5;
   */
  not: boolean;

  /**
   * When set, phrase must be spoken during agent session.
   * Use with channel to target (a) speaker(s).
   *   - e.g. caller spoke phrase to this specific agent
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchRequest.Agent agent = 6;
   */
  agent?: SearchRequest_Agent;

  /**
   * When set, targets side of call (caller or agent).
   * Use 1 for caller, 2 for agent.
   * Use with agent to target (a) speaker(s).
   *   - e.g. caller spoke phrase to this specific agent
   *
   * @generated from field: uint32 channel = 7;
   */
  channel: number;

  /**
   * PositionOffset defines where a phrase will be searched for
   * in a transcript. For example:
   * [  0,   0] match anywhere
   * [ 30,  60] match between (start + 30) and (start + 60)
   * [  0,  30] match between  (start + 0) and (start + 30)
   * [  0, -30] match between  (start + 0) and (stop - 30)
   * [-60, -30] match between  (stop - 60) and (stop - 30)
   * [-30,   0] match between  (stop - 30) and (stop - 0)
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchRequest.PositionOffset position_offset = 8;
   */
  positionOffset?: SearchRequest_PositionOffset;

  constructor(data?: PartialMessage<SearchRequest_Phrase>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchRequest.Phrase";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchRequest_Phrase;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchRequest_Phrase;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchRequest_Phrase;

  static equals(a: SearchRequest_Phrase | PlainMessage<SearchRequest_Phrase> | undefined, b: SearchRequest_Phrase | PlainMessage<SearchRequest_Phrase> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.SearchRequest.Phrase.Word
 */
export declare class SearchRequest_Phrase_Word extends Message<SearchRequest_Phrase_Word> {
  /**
   * value is a word to search for
   *
   * @generated from field: string value = 1;
   */
  value: string;

  /**
   * fuzziness allows the term to be spelled slightly incorrect and still
   * match. Fuzziness can have the values 0, 1, 2, or "AUTO"; 0 would require
   * that the term matches exactly, 2 would allow 2 letter differences, and
   * AUTO would automatically pick a number based on the word length.
   *
   * @generated from field: string fuzziness = 2;
   */
  fuzziness: string;

  constructor(data?: PartialMessage<SearchRequest_Phrase_Word>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchRequest.Phrase.Word";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchRequest_Phrase_Word;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchRequest_Phrase_Word;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchRequest_Phrase_Word;

  static equals(a: SearchRequest_Phrase_Word | PlainMessage<SearchRequest_Phrase_Word> | undefined, b: SearchRequest_Phrase_Word | PlainMessage<SearchRequest_Phrase_Word> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.SearchRequest.Phrase.Highlight
 */
export declare class SearchRequest_Phrase_Highlight extends Message<SearchRequest_Phrase_Highlight> {
  /**
   * pre_tags are tags that will come before any highlighted word
   * to show it is highlighted. Defaults to ["<em>"]
   *
   * @generated from field: repeated string pre_tags = 1;
   */
  preTags: string[];

  /**
   * post_tags are tags that will come after any highlighted word
   * to show it is highlighted. Defaults to ["</em>"]
   *
   * @generated from field: repeated string post_tags = 2;
   */
  postTags: string[];

  constructor(data?: PartialMessage<SearchRequest_Phrase_Highlight>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchRequest.Phrase.Highlight";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchRequest_Phrase_Highlight;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchRequest_Phrase_Highlight;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchRequest_Phrase_Highlight;

  static equals(a: SearchRequest_Phrase_Highlight | PlainMessage<SearchRequest_Phrase_Highlight> | undefined, b: SearchRequest_Phrase_Highlight | PlainMessage<SearchRequest_Phrase_Highlight> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.SearchRequest.PositionOffset
 */
export declare class SearchRequest_PositionOffset extends Message<SearchRequest_PositionOffset> {
  /**
   * @generated from field: google.protobuf.Duration start = 1;
   */
  start?: Duration;

  /**
   * @generated from field: google.protobuf.Duration stop = 2;
   */
  stop?: Duration;

  constructor(data?: PartialMessage<SearchRequest_PositionOffset>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchRequest.PositionOffset";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchRequest_PositionOffset;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchRequest_PositionOffset;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchRequest_PositionOffset;

  static equals(a: SearchRequest_PositionOffset | PlainMessage<SearchRequest_PositionOffset> | undefined, b: SearchRequest_PositionOffset | PlainMessage<SearchRequest_PositionOffset> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.SearchRequest.Silence
 */
export declare class SearchRequest_Silence extends Message<SearchRequest_Silence> {
  /**
   * duration_total is the total silence duration within a transcript in milliseconds
   *
   * @generated from field: api.v1alpha1.vanalytics.Uint32Expr duration_total = 1;
   */
  durationTotal?: Uint32Expr;

  /**
   * duration_max is the max individual duration of silence within a transcript in milliseconds
   *
   * @generated from field: api.v1alpha1.vanalytics.Uint32Expr duration_max = 2;
   */
  durationMax?: Uint32Expr;

  /**
   * @generated from field: api.v1alpha1.vanalytics.Uint32Expr occurrence_total = 3;
   */
  occurrenceTotal?: Uint32Expr;

  /**
   * duration_percentage is a number from 0-100 representing the percent
   * of the transcript that is silence
   *
   * @generated from field: api.v1alpha1.vanalytics.Uint32Expr duration_percentage = 4;
   */
  durationPercentage?: Uint32Expr;

  constructor(data?: PartialMessage<SearchRequest_Silence>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchRequest.Silence";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchRequest_Silence;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchRequest_Silence;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchRequest_Silence;

  static equals(a: SearchRequest_Silence | PlainMessage<SearchRequest_Silence> | undefined, b: SearchRequest_Silence | PlainMessage<SearchRequest_Silence> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.SearchRequest.TalkOver
 */
export declare class SearchRequest_TalkOver extends Message<SearchRequest_TalkOver> {
  /**
   * duration_total is the total talkover duration within a transcript in milliseconds
   *
   * @generated from field: api.v1alpha1.vanalytics.Uint32Expr duration_total = 1;
   */
  durationTotal?: Uint32Expr;

  /**
   * duration_max is the max individual duration of talkover within a transcript in milliseconds
   *
   * @generated from field: api.v1alpha1.vanalytics.Uint32Expr duration_max = 2;
   */
  durationMax?: Uint32Expr;

  /**
   * @generated from field: api.v1alpha1.vanalytics.Uint32Expr occurrence_total = 3;
   */
  occurrenceTotal?: Uint32Expr;

  /**
   * duration_percentage is a number from 0-100 representing the percent
   * of the transcript that is talkover
   *
   * @generated from field: api.v1alpha1.vanalytics.Uint32Expr duration_percentage = 4;
   */
  durationPercentage?: Uint32Expr;

  constructor(data?: PartialMessage<SearchRequest_TalkOver>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchRequest.TalkOver";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchRequest_TalkOver;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchRequest_TalkOver;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchRequest_TalkOver;

  static equals(a: SearchRequest_TalkOver | PlainMessage<SearchRequest_TalkOver> | undefined, b: SearchRequest_TalkOver | PlainMessage<SearchRequest_TalkOver> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.SearchRequest.Terms
 */
export declare class SearchRequest_Terms extends Message<SearchRequest_Terms> {
  /**
   * any is a set of terms which the transcript must contain at least one of
   *
   * @generated from field: repeated string any = 1;
   */
  any: string[];

  /**
   * all is a set of terms which the transcript must contain
   *
   * @generated from field: repeated string all = 2;
   */
  all: string[];

  /**
   * When true the terms must not be matched.
   *
   * @generated from field: bool not = 3;
   */
  not: boolean;

  /**
   * When set, terms must be spoken during agent session.
   * Use with channel to target (a) speaker(s).
   *   - e.g. caller spoke terms to this specific agent
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchRequest.Agent agent = 4;
   */
  agent?: SearchRequest_Agent;

  /**
   * When set, targets side of call (caller or agent).
   * Use 1 for caller, 2 for agent.
   * Use with agent to target (a) speaker(s).
   *   - e.g. caller spoke terms to this specific agent
   *
   * @generated from field: uint32 channel = 5;
   */
  channel: number;

  /**
   * PositionOffset defines where terms will be searched for
   * in a transcript. For example:
   * [  0,   0] match anywhere
   * [ 30,  60] match between (start + 30) and (start + 60)
   * [  0,  30] match between  (start + 0) and (start + 30)
   * [  0, -30] match between  (start + 0) and (stop - 30)
   * [-60, -30] match between  (stop - 60) and (stop - 30)
   * [-30,   0] match between  (stop - 30) and (stop - 0)
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchRequest.PositionOffset position_offset = 6;
   */
  positionOffset?: SearchRequest_PositionOffset;

  constructor(data?: PartialMessage<SearchRequest_Terms>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchRequest.Terms";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchRequest_Terms;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchRequest_Terms;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchRequest_Terms;

  static equals(a: SearchRequest_Terms | PlainMessage<SearchRequest_Terms> | undefined, b: SearchRequest_Terms | PlainMessage<SearchRequest_Terms> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.SearchRequest.Agent
 */
export declare class SearchRequest_Agent extends Message<SearchRequest_Agent> {
  /**
   * @generated from field: api.v1alpha1.vanalytics.SearchRequest.Agent.UserName user_name = 1;
   */
  userName?: SearchRequest_Agent_UserName;

  constructor(data?: PartialMessage<SearchRequest_Agent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchRequest.Agent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchRequest_Agent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchRequest_Agent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchRequest_Agent;

  static equals(a: SearchRequest_Agent | PlainMessage<SearchRequest_Agent> | undefined, b: SearchRequest_Agent | PlainMessage<SearchRequest_Agent> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.SearchRequest.Agent.UserName
 */
export declare class SearchRequest_Agent_UserName extends Message<SearchRequest_Agent_UserName> {
  /**
   * any is a set of agent user names which the transcript must contain at least one of
   *
   * @generated from field: repeated string any = 1;
   */
  any: string[];

  /**
   * all is a set of agent user names which the transcript must contain
   *
   * @generated from field: repeated string all = 2;
   */
  all: string[];

  constructor(data?: PartialMessage<SearchRequest_Agent_UserName>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchRequest.Agent.UserName";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchRequest_Agent_UserName;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchRequest_Agent_UserName;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchRequest_Agent_UserName;

  static equals(a: SearchRequest_Agent_UserName | PlainMessage<SearchRequest_Agent_UserName> | undefined, b: SearchRequest_Agent_UserName | PlainMessage<SearchRequest_Agent_UserName> | undefined): boolean;
}

/**
 * SearchQuery defines a query on transcript fields.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery
 */
export declare class SearchQuery extends Message<SearchQuery> {
  /**
   * Optional. Queries transcript sid.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.TranscriptSid transcript_sid = 1;
   */
  transcriptSid?: SearchQuery_TranscriptSid;

  /**
   * Optional. Queries flag summary.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.FlagSummary flag_summary = 2;
   */
  flagSummary?: SearchQuery_FlagSummary;

  /**
   * Optional. Groups query conditions with logical or.
   *
   * @generated from field: repeated api.v1alpha1.vanalytics.SearchQuery or = 3;
   */
  or: SearchQuery[];

  /**
   * Optional. Groups query conditions with logical and.
   *
   * @generated from field: repeated api.v1alpha1.vanalytics.SearchQuery and = 4;
   */
  and: SearchQuery[];

  /**
   * Optional. Queries on audio time.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.AudioTime audio_time = 5;
   */
  audioTime?: SearchQuery_AudioTime;

  /**
   * Optional. By default all transcripts (including deleted) will be shown.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.DeleteTime delete_time = 6;
   */
  deleteTime?: SearchQuery_DeleteTime;

  /**
   * Optional. Queries for what does not match the query.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery not = 7;
   */
  not?: SearchQuery;

  /**
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.Results results = 8;
   */
  results?: SearchQuery_Results;

  /**
   * Optional. Queries on agent responses.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.AgentResponse agent_response = 9;
   */
  agentResponse?: SearchQuery_AgentResponse;

  /**
   * Optional. Queries on agent call log.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.AgentCallLog agent_call_log = 10;
   */
  agentCallLog?: SearchQuery_AgentCallLog;

  /**
   * Optional. Queries on phone.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.Phone phone = 11;
   */
  phone?: SearchQuery_Phone;

  constructor(data?: PartialMessage<SearchQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery;

  static equals(a: SearchQuery | PlainMessage<SearchQuery> | undefined, b: SearchQuery | PlainMessage<SearchQuery> | undefined): boolean;
}

/**
 * Phone defines a query on the phone.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.Phone
 */
export declare class SearchQuery_Phone extends Message<SearchQuery_Phone> {
  /**
   * Optional. Queries on phone country code.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.Cc cc = 1;
   */
  cc?: SearchQuery_Cc;

  /**
   * Optional. Queries on phone ndc (area code).
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.Ndc ndc = 2;
   */
  ndc?: SearchQuery_Ndc;

  /**
   * Optional. Queries on phone subscriber number prefix.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.Prefix prefix = 3;
   */
  prefix?: SearchQuery_Prefix;

  /**
   * Optional. Queries on phone city.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.City city = 4;
   */
  city?: SearchQuery_City;

  /**
   * Optional. Queries on phone iso2 country code.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.Iso2 iso2 = 5;
   */
  iso2?: SearchQuery_Iso2;

  /**
   * Optional. Queries on phone region code.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.RegionCode region_code = 6;
   */
  regionCode?: SearchQuery_RegionCode;

  /**
   * Optional. Queries on phone region name.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.RegionName region_name = 7;
   */
  regionName?: SearchQuery_RegionName;

  /**
   * Optional. Queries on phone time zone.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.TimeZone time_zone = 8;
   */
  timeZone?: SearchQuery_TimeZone;

  /**
   * Optional. Queries on phone number type.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.Type type = 9;
   */
  type?: SearchQuery_Type;

  /**
   * Optional. Queries on phone number utc.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.Utc utc = 10;
   */
  utc?: SearchQuery_Utc;

  /**
   * Optional. Queries on phone number location.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.Location location = 11;
   */
  location?: SearchQuery_Location;

  constructor(data?: PartialMessage<SearchQuery_Phone>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.Phone";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_Phone;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_Phone;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_Phone;

  static equals(a: SearchQuery_Phone | PlainMessage<SearchQuery_Phone> | undefined, b: SearchQuery_Phone | PlainMessage<SearchQuery_Phone> | undefined): boolean;
}

/**
 * Cc defines a query on the phone country code.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.Cc
 */
export declare class SearchQuery_Cc extends Message<SearchQuery_Cc> {
  /**
   * Optional. Queries where cc in list provided.
   *
   * @generated from field: repeated string in = 1;
   */
  in: string[];

  constructor(data?: PartialMessage<SearchQuery_Cc>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.Cc";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_Cc;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_Cc;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_Cc;

  static equals(a: SearchQuery_Cc | PlainMessage<SearchQuery_Cc> | undefined, b: SearchQuery_Cc | PlainMessage<SearchQuery_Cc> | undefined): boolean;
}

/**
 * Ndc defines a query on the phone ndc.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.Ndc
 */
export declare class SearchQuery_Ndc extends Message<SearchQuery_Ndc> {
  /**
   * Optional. Queries where ndc in list provided.
   *
   * @generated from field: repeated string in = 1;
   */
  in: string[];

  constructor(data?: PartialMessage<SearchQuery_Ndc>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.Ndc";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_Ndc;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_Ndc;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_Ndc;

  static equals(a: SearchQuery_Ndc | PlainMessage<SearchQuery_Ndc> | undefined, b: SearchQuery_Ndc | PlainMessage<SearchQuery_Ndc> | undefined): boolean;
}

/**
 * Prefix defines a query on the phone prefix.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.Prefix
 */
export declare class SearchQuery_Prefix extends Message<SearchQuery_Prefix> {
  /**
   * Optional. Queries where prefix in list provided.
   *
   * @generated from field: repeated string in = 1;
   */
  in: string[];

  constructor(data?: PartialMessage<SearchQuery_Prefix>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.Prefix";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_Prefix;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_Prefix;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_Prefix;

  static equals(a: SearchQuery_Prefix | PlainMessage<SearchQuery_Prefix> | undefined, b: SearchQuery_Prefix | PlainMessage<SearchQuery_Prefix> | undefined): boolean;
}

/**
 * City defines a query on the phone city.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.City
 */
export declare class SearchQuery_City extends Message<SearchQuery_City> {
  /**
   * Optional. Queries where city in list provided.
   *
   * @generated from field: repeated string in = 1;
   */
  in: string[];

  constructor(data?: PartialMessage<SearchQuery_City>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.City";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_City;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_City;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_City;

  static equals(a: SearchQuery_City | PlainMessage<SearchQuery_City> | undefined, b: SearchQuery_City | PlainMessage<SearchQuery_City> | undefined): boolean;
}

/**
 * Iso2 defines a query on the phone Iso2.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.Iso2
 */
export declare class SearchQuery_Iso2 extends Message<SearchQuery_Iso2> {
  /**
   * Optional. Queries where iso2 in list provided.
   *
   * @generated from field: repeated string in = 1;
   */
  in: string[];

  constructor(data?: PartialMessage<SearchQuery_Iso2>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.Iso2";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_Iso2;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_Iso2;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_Iso2;

  static equals(a: SearchQuery_Iso2 | PlainMessage<SearchQuery_Iso2> | undefined, b: SearchQuery_Iso2 | PlainMessage<SearchQuery_Iso2> | undefined): boolean;
}

/**
 * RegionCode defines a query on the phone region code.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.RegionCode
 */
export declare class SearchQuery_RegionCode extends Message<SearchQuery_RegionCode> {
  /**
   * Optional. Queries where region code in list provided.
   *
   * @generated from field: repeated string in = 1;
   */
  in: string[];

  constructor(data?: PartialMessage<SearchQuery_RegionCode>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.RegionCode";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_RegionCode;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_RegionCode;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_RegionCode;

  static equals(a: SearchQuery_RegionCode | PlainMessage<SearchQuery_RegionCode> | undefined, b: SearchQuery_RegionCode | PlainMessage<SearchQuery_RegionCode> | undefined): boolean;
}

/**
 * RegionName defines a query on the phone region name.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.RegionName
 */
export declare class SearchQuery_RegionName extends Message<SearchQuery_RegionName> {
  /**
   * Optional. Queries where region name in list provided.
   *
   * @generated from field: repeated string in = 1;
   */
  in: string[];

  constructor(data?: PartialMessage<SearchQuery_RegionName>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.RegionName";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_RegionName;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_RegionName;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_RegionName;

  static equals(a: SearchQuery_RegionName | PlainMessage<SearchQuery_RegionName> | undefined, b: SearchQuery_RegionName | PlainMessage<SearchQuery_RegionName> | undefined): boolean;
}

/**
 * TimeZone defines a query on the phone time zone.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.TimeZone
 */
export declare class SearchQuery_TimeZone extends Message<SearchQuery_TimeZone> {
  /**
   * Optional. Queries where time zone in list provided.
   *
   * @generated from field: repeated string in = 1;
   */
  in: string[];

  constructor(data?: PartialMessage<SearchQuery_TimeZone>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.TimeZone";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_TimeZone;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_TimeZone;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_TimeZone;

  static equals(a: SearchQuery_TimeZone | PlainMessage<SearchQuery_TimeZone> | undefined, b: SearchQuery_TimeZone | PlainMessage<SearchQuery_TimeZone> | undefined): boolean;
}

/**
 * Type defines a query on the phone type.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.Type
 */
export declare class SearchQuery_Type extends Message<SearchQuery_Type> {
  /**
   * Optional. Queries where type in list provided.
   *
   * @generated from field: repeated string in = 1;
   */
  in: string[];

  constructor(data?: PartialMessage<SearchQuery_Type>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.Type";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_Type;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_Type;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_Type;

  static equals(a: SearchQuery_Type | PlainMessage<SearchQuery_Type> | undefined, b: SearchQuery_Type | PlainMessage<SearchQuery_Type> | undefined): boolean;
}

/**
 * Utc defines a query on the phone utc.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.Utc
 */
export declare class SearchQuery_Utc extends Message<SearchQuery_Utc> {
  /**
   * Optional. Queries where utc in list provided.
   *
   * @generated from field: repeated float in = 1;
   */
  in: number[];

  constructor(data?: PartialMessage<SearchQuery_Utc>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.Utc";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_Utc;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_Utc;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_Utc;

  static equals(a: SearchQuery_Utc | PlainMessage<SearchQuery_Utc> | undefined, b: SearchQuery_Utc | PlainMessage<SearchQuery_Utc> | undefined): boolean;
}

/**
 * Location defines a query on the phone location.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.Location
 */
export declare class SearchQuery_Location extends Message<SearchQuery_Location> {
  /**
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.Location.ZipCodeProximity zip_code_proximity = 1;
   */
  zipCodeProximity?: SearchQuery_Location_ZipCodeProximity;

  constructor(data?: PartialMessage<SearchQuery_Location>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.Location";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_Location;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_Location;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_Location;

  static equals(a: SearchQuery_Location | PlainMessage<SearchQuery_Location> | undefined, b: SearchQuery_Location | PlainMessage<SearchQuery_Location> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.Location.ZipCodeProximity
 */
export declare class SearchQuery_Location_ZipCodeProximity extends Message<SearchQuery_Location_ZipCodeProximity> {
  /**
   * Required. Queries on phone number country code.
   *
   * @generated from field: string country_code = 1;
   */
  countryCode: string;

  /**
   * Required. Queries where phone location is within distance of zipcode.
   *
   * @generated from field: string zip_code = 2;
   */
  zipCode: string;

  /**
   * Required. Queries where phone location is within distance (km or mi) of zipcode. For example: 100km.
   *
   * @generated from field: string distance = 3;
   */
  distance: string;

  constructor(data?: PartialMessage<SearchQuery_Location_ZipCodeProximity>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.Location.ZipCodeProximity";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_Location_ZipCodeProximity;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_Location_ZipCodeProximity;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_Location_ZipCodeProximity;

  static equals(a: SearchQuery_Location_ZipCodeProximity | PlainMessage<SearchQuery_Location_ZipCodeProximity> | undefined, b: SearchQuery_Location_ZipCodeProximity | PlainMessage<SearchQuery_Location_ZipCodeProximity> | undefined): boolean;
}

/**
 * AgentCallLog is a query for the agent call log.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.AgentCallLog
 */
export declare class SearchQuery_AgentCallLog extends Message<SearchQuery_AgentCallLog> {
  /**
   * Optional. Call skills initial will query the initial call skills.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.CallSkillsInitial call_skills_initial = 1;
   */
  callSkillsInitial?: SearchQuery_CallSkillsInitial;

  /**
   * Optional. Call ended will query on the reason the call ended.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.CallEnded call_ended = 2;
   */
  callEnded?: SearchQuery_CallEnded;

  constructor(data?: PartialMessage<SearchQuery_AgentCallLog>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.AgentCallLog";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_AgentCallLog;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_AgentCallLog;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_AgentCallLog;

  static equals(a: SearchQuery_AgentCallLog | PlainMessage<SearchQuery_AgentCallLog> | undefined, b: SearchQuery_AgentCallLog | PlainMessage<SearchQuery_AgentCallLog> | undefined): boolean;
}

/**
 * CallEnded is a query for the call ended.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.CallEnded
 */
export declare class SearchQuery_CallEnded extends Message<SearchQuery_CallEnded> {
  /**
   * Required. The reasons to be filtered on.
   *
   * @generated from field: repeated api.commons.AgentCallLogCallEnded reasons = 1;
   */
  reasons: AgentCallLogCallEnded[];

  constructor(data?: PartialMessage<SearchQuery_CallEnded>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.CallEnded";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_CallEnded;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_CallEnded;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_CallEnded;

  static equals(a: SearchQuery_CallEnded | PlainMessage<SearchQuery_CallEnded> | undefined, b: SearchQuery_CallEnded | PlainMessage<SearchQuery_CallEnded> | undefined): boolean;
}

/**
 * CallSkillsInitial is a query for the initial call skills.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.CallSkillsInitial
 */
export declare class SearchQuery_CallSkillsInitial extends Message<SearchQuery_CallSkillsInitial> {
  /**
   * Optional. Needed initial call skills to filter on.
   *
   * @generated from field: repeated string need = 1;
   */
  need: string[];

  /**
   * Optional. Wanted initial call skills to filter on.
   *
   * @generated from field: repeated string want = 2;
   */
  want: string[];

  constructor(data?: PartialMessage<SearchQuery_CallSkillsInitial>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.CallSkillsInitial";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_CallSkillsInitial;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_CallSkillsInitial;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_CallSkillsInitial;

  static equals(a: SearchQuery_CallSkillsInitial | PlainMessage<SearchQuery_CallSkillsInitial> | undefined, b: SearchQuery_CallSkillsInitial | PlainMessage<SearchQuery_CallSkillsInitial> | undefined): boolean;
}

/**
 * AgentResponse defines a query on agent responses.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.AgentResponse
 */
export declare class SearchQuery_AgentResponse extends Message<SearchQuery_AgentResponse> {
  /**
   * Optional. Key to query on.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.AgentResponse.Key key = 1;
   */
  key?: SearchQuery_AgentResponse_Key;

  /**
   * Optional. Queries values for the given keys. If no keys are provided then
   * it will run the query on all values.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.AgentResponse.Values values = 2;
   */
  values?: SearchQuery_AgentResponse_Values;

  /**
   * Optional. Queries values as numbers for the given keys.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.AgentResponse.Numbers numbers = 3;
   */
  numbers?: SearchQuery_AgentResponse_Numbers;

  constructor(data?: PartialMessage<SearchQuery_AgentResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.AgentResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_AgentResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_AgentResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_AgentResponse;

  static equals(a: SearchQuery_AgentResponse | PlainMessage<SearchQuery_AgentResponse> | undefined, b: SearchQuery_AgentResponse | PlainMessage<SearchQuery_AgentResponse> | undefined): boolean;
}

/**
 * Values defines a query on values.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.AgentResponse.Values
 */
export declare class SearchQuery_AgentResponse_Values extends Message<SearchQuery_AgentResponse_Values> {
  /**
   * Optional. Queries where value in list provided.
   *
   * @generated from field: repeated string in = 1;
   */
  in: string[];

  /**
   * Optional. Queries where value for key starts with given string.
   *
   * @generated from field: string starts_with = 2;
   */
  startsWith: string;

  /**
   * Optional. Queries where value for key contains given string.
   *
   * @generated from field: string contains = 3;
   */
  contains: string;

  constructor(data?: PartialMessage<SearchQuery_AgentResponse_Values>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.AgentResponse.Values";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_AgentResponse_Values;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_AgentResponse_Values;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_AgentResponse_Values;

  static equals(a: SearchQuery_AgentResponse_Values | PlainMessage<SearchQuery_AgentResponse_Values> | undefined, b: SearchQuery_AgentResponse_Values | PlainMessage<SearchQuery_AgentResponse_Values> | undefined): boolean;
}

/**
 * Numbers defines a query on values as numbers.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.AgentResponse.Numbers
 */
export declare class SearchQuery_AgentResponse_Numbers extends Message<SearchQuery_AgentResponse_Numbers> {
  /**
   * Optional. Queries where value in list provided.
   *
   * @generated from field: repeated double in = 1;
   */
  in: number[];

  /**
   * Optional. Queries where greater than or equal.
   *
   * @generated from field: google.protobuf.DoubleValue gte = 2;
   */
  gte?: number;

  /**
   * Optional. Queries where less than or equal.
   *
   * @generated from field: google.protobuf.DoubleValue lte = 3;
   */
  lte?: number;

  /**
   * Optional. Queries where greater than.
   *
   * @generated from field: google.protobuf.DoubleValue gt = 4;
   */
  gt?: number;

  /**
   * Optional. Queries where less than.
   *
   * @generated from field: google.protobuf.DoubleValue lt = 5;
   */
  lt?: number;

  /**
   * Optional. Queries where equal to.
   *
   * @generated from field: google.protobuf.DoubleValue eq = 6;
   */
  eq?: number;

  constructor(data?: PartialMessage<SearchQuery_AgentResponse_Numbers>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.AgentResponse.Numbers";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_AgentResponse_Numbers;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_AgentResponse_Numbers;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_AgentResponse_Numbers;

  static equals(a: SearchQuery_AgentResponse_Numbers | PlainMessage<SearchQuery_AgentResponse_Numbers> | undefined, b: SearchQuery_AgentResponse_Numbers | PlainMessage<SearchQuery_AgentResponse_Numbers> | undefined): boolean;
}

/**
 * Key defines a query on keys.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.AgentResponse.Key
 */
export declare class SearchQuery_AgentResponse_Key extends Message<SearchQuery_AgentResponse_Key> {
  /**
   * Optional. Queries where key in list provided.
   *
   * @generated from field: repeated string in = 1;
   */
  in: string[];

  /**
   * Optional. Queries where key starts with given string.
   *
   * @generated from field: string starts_with = 2;
   */
  startsWith: string;

  /**
   * Optional. Queries where key contains given string.
   *
   * @generated from field: string contains = 3;
   */
  contains: string;

  constructor(data?: PartialMessage<SearchQuery_AgentResponse_Key>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.AgentResponse.Key";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_AgentResponse_Key;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_AgentResponse_Key;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_AgentResponse_Key;

  static equals(a: SearchQuery_AgentResponse_Key | PlainMessage<SearchQuery_AgentResponse_Key> | undefined, b: SearchQuery_AgentResponse_Key | PlainMessage<SearchQuery_AgentResponse_Key> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.Results
 */
export declare class SearchQuery_Results extends Message<SearchQuery_Results> {
  /**
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.Results.Channel channel = 1;
   */
  channel?: SearchQuery_Results_Channel;

  /**
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.Results.AgentUserName agent_user_name = 2;
   */
  agentUserName?: SearchQuery_Results_AgentUserName;

  /**
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.Results.Segments segments = 3;
   */
  segments?: SearchQuery_Results_Segments;

  constructor(data?: PartialMessage<SearchQuery_Results>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.Results";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_Results;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_Results;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_Results;

  static equals(a: SearchQuery_Results | PlainMessage<SearchQuery_Results> | undefined, b: SearchQuery_Results | PlainMessage<SearchQuery_Results> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.Results.Channel
 */
export declare class SearchQuery_Results_Channel extends Message<SearchQuery_Results_Channel> {
  /**
   * @generated from field: uint32 eq = 1;
   */
  eq: number;

  constructor(data?: PartialMessage<SearchQuery_Results_Channel>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.Results.Channel";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_Results_Channel;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_Results_Channel;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_Results_Channel;

  static equals(a: SearchQuery_Results_Channel | PlainMessage<SearchQuery_Results_Channel> | undefined, b: SearchQuery_Results_Channel | PlainMessage<SearchQuery_Results_Channel> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.Results.AgentUserName
 */
export declare class SearchQuery_Results_AgentUserName extends Message<SearchQuery_Results_AgentUserName> {
  /**
   * @generated from field: repeated string any = 1;
   */
  any: string[];

  /**
   * @generated from field: repeated string all = 2;
   */
  all: string[];

  constructor(data?: PartialMessage<SearchQuery_Results_AgentUserName>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.Results.AgentUserName";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_Results_AgentUserName;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_Results_AgentUserName;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_Results_AgentUserName;

  static equals(a: SearchQuery_Results_AgentUserName | PlainMessage<SearchQuery_Results_AgentUserName> | undefined, b: SearchQuery_Results_AgentUserName | PlainMessage<SearchQuery_Results_AgentUserName> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.Results.Segments
 */
export declare class SearchQuery_Results_Segments extends Message<SearchQuery_Results_Segments> {
  /**
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.Results.Segments.Text text = 1;
   */
  text?: SearchQuery_Results_Segments_Text;

  constructor(data?: PartialMessage<SearchQuery_Results_Segments>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.Results.Segments";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_Results_Segments;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_Results_Segments;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_Results_Segments;

  static equals(a: SearchQuery_Results_Segments | PlainMessage<SearchQuery_Results_Segments> | undefined, b: SearchQuery_Results_Segments | PlainMessage<SearchQuery_Results_Segments> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.Results.Segments.Text
 */
export declare class SearchQuery_Results_Segments_Text extends Message<SearchQuery_Results_Segments_Text> {
  /**
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.Results.Segments.Text.Phrase phrase = 1;
   */
  phrase?: SearchQuery_Results_Segments_Text_Phrase;

  constructor(data?: PartialMessage<SearchQuery_Results_Segments_Text>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.Results.Segments.Text";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_Results_Segments_Text;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_Results_Segments_Text;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_Results_Segments_Text;

  static equals(a: SearchQuery_Results_Segments_Text | PlainMessage<SearchQuery_Results_Segments_Text> | undefined, b: SearchQuery_Results_Segments_Text | PlainMessage<SearchQuery_Results_Segments_Text> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.Results.Segments.Text.Phrase
 */
export declare class SearchQuery_Results_Segments_Text_Phrase extends Message<SearchQuery_Results_Segments_Text_Phrase> {
  /**
   * @generated from field: repeated api.v1alpha1.vanalytics.SearchQuery.Results.Segments.Text.Phrase.Word words = 1;
   */
  words: SearchQuery_Results_Segments_Text_Phrase_Word[];

  /**
   * @generated from field: uint32 slop = 2;
   */
  slop: number;

  /**
   * @generated from field: bool in_order = 3;
   */
  inOrder: boolean;

  constructor(data?: PartialMessage<SearchQuery_Results_Segments_Text_Phrase>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.Results.Segments.Text.Phrase";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_Results_Segments_Text_Phrase;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_Results_Segments_Text_Phrase;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_Results_Segments_Text_Phrase;

  static equals(a: SearchQuery_Results_Segments_Text_Phrase | PlainMessage<SearchQuery_Results_Segments_Text_Phrase> | undefined, b: SearchQuery_Results_Segments_Text_Phrase | PlainMessage<SearchQuery_Results_Segments_Text_Phrase> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.Results.Segments.Text.Phrase.Word
 */
export declare class SearchQuery_Results_Segments_Text_Phrase_Word extends Message<SearchQuery_Results_Segments_Text_Phrase_Word> {
  /**
   * @generated from field: string value = 1;
   */
  value: string;

  /**
   * @generated from field: string fuzziness = 2;
   */
  fuzziness: string;

  constructor(data?: PartialMessage<SearchQuery_Results_Segments_Text_Phrase_Word>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.Results.Segments.Text.Phrase.Word";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_Results_Segments_Text_Phrase_Word;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_Results_Segments_Text_Phrase_Word;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_Results_Segments_Text_Phrase_Word;

  static equals(a: SearchQuery_Results_Segments_Text_Phrase_Word | PlainMessage<SearchQuery_Results_Segments_Text_Phrase_Word> | undefined, b: SearchQuery_Results_Segments_Text_Phrase_Word | PlainMessage<SearchQuery_Results_Segments_Text_Phrase_Word> | undefined): boolean;
}

/**
 * DeleteTime defines a query on delete time.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.DeleteTime
 */
export declare class SearchQuery_DeleteTime extends Message<SearchQuery_DeleteTime> {
  /**
   * Optional. Queries on if delete time field exists.
   * If value is true then only deleted transcripts are returned.
   * If value is false then only non-deleted transcripted are returned.
   *
   * @generated from field: google.protobuf.BoolValue exists = 1;
   */
  exists?: boolean;

  constructor(data?: PartialMessage<SearchQuery_DeleteTime>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.DeleteTime";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_DeleteTime;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_DeleteTime;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_DeleteTime;

  static equals(a: SearchQuery_DeleteTime | PlainMessage<SearchQuery_DeleteTime> | undefined, b: SearchQuery_DeleteTime | PlainMessage<SearchQuery_DeleteTime> | undefined): boolean;
}

/**
 * TranscriptSid defines a query on transcript sid.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.TranscriptSid
 */
export declare class SearchQuery_TranscriptSid extends Message<SearchQuery_TranscriptSid> {
  /**
   * Optional. Must have any provided transcript sid.
   *
   * @generated from field: repeated int64 any = 1;
   */
  any: bigint[];

  /**
   * Optional. Queries where greater than or equal.
   *
   * @generated from field: google.protobuf.Int64Value gte = 2;
   */
  gte?: bigint;

  constructor(data?: PartialMessage<SearchQuery_TranscriptSid>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.TranscriptSid";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_TranscriptSid;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_TranscriptSid;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_TranscriptSid;

  static equals(a: SearchQuery_TranscriptSid | PlainMessage<SearchQuery_TranscriptSid> | undefined, b: SearchQuery_TranscriptSid | PlainMessage<SearchQuery_TranscriptSid> | undefined): boolean;
}

/**
 * AudioTime defines a query on audio_time.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.AudioTime
 */
export declare class SearchQuery_AudioTime extends Message<SearchQuery_AudioTime> {
  /**
   * Optional. Queries where greater than or equal.
   *
   * @generated from field: google.protobuf.Int32Value gte = 1;
   */
  gte?: number;

  /**
   * Optional. Queries where less than or equal.
   *
   * @generated from field: google.protobuf.Int32Value lte = 2;
   */
  lte?: number;

  /**
   * Optional. Queries where greater than.
   *
   * @generated from field: google.protobuf.Int32Value gt = 3;
   */
  gt?: number;

  /**
   * Optional. Queries where less than.
   *
   * @generated from field: google.protobuf.Int32Value lt = 4;
   */
  lt?: number;

  constructor(data?: PartialMessage<SearchQuery_AudioTime>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.AudioTime";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_AudioTime;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_AudioTime;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_AudioTime;

  static equals(a: SearchQuery_AudioTime | PlainMessage<SearchQuery_AudioTime> | undefined, b: SearchQuery_AudioTime | PlainMessage<SearchQuery_AudioTime> | undefined): boolean;
}

/**
 * FlagSummary defines a query on flag summary fields.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.FlagSummary
 */
export declare class SearchQuery_FlagSummary extends Message<SearchQuery_FlagSummary> {
  /**
   * Optional. Queries need review.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.FlagSummary.NeedReview need_review = 1;
   */
  needReview?: SearchQuery_FlagSummary_NeedReview;

  /**
   * Optional. Queries review status.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.FlagSummary.ReviewStatus review_status = 2;
   */
  reviewStatus?: SearchQuery_FlagSummary_ReviewStatus;

  /**
   * Optional. Queries flags.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.FlagSummary.Flags flags = 3;
   */
  flags?: SearchQuery_FlagSummary_Flags;

  /**
   * Optional. Queries count.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.FlagSummary.Count count = 4;
   */
  count?: SearchQuery_FlagSummary_Count;

  constructor(data?: PartialMessage<SearchQuery_FlagSummary>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.FlagSummary";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_FlagSummary;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_FlagSummary;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_FlagSummary;

  static equals(a: SearchQuery_FlagSummary | PlainMessage<SearchQuery_FlagSummary> | undefined, b: SearchQuery_FlagSummary | PlainMessage<SearchQuery_FlagSummary> | undefined): boolean;
}

/**
 * NeedReview defines a query on need review fields.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.FlagSummary.NeedReview
 */
export declare class SearchQuery_FlagSummary_NeedReview extends Message<SearchQuery_FlagSummary_NeedReview> {
  /**
   * Optional. Queries flag sids. If no flag sids are given then
   * it will filer on need review count > 0.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.FlagSummary.NeedReview.FlagSids flag_sids = 1;
   */
  flagSids?: SearchQuery_FlagSummary_NeedReview_FlagSids;

  constructor(data?: PartialMessage<SearchQuery_FlagSummary_NeedReview>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.FlagSummary.NeedReview";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_FlagSummary_NeedReview;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_FlagSummary_NeedReview;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_FlagSummary_NeedReview;

  static equals(a: SearchQuery_FlagSummary_NeedReview | PlainMessage<SearchQuery_FlagSummary_NeedReview> | undefined, b: SearchQuery_FlagSummary_NeedReview | PlainMessage<SearchQuery_FlagSummary_NeedReview> | undefined): boolean;
}

/**
 * FlagSids defines a query on flag sids.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.FlagSummary.NeedReview.FlagSids
 */
export declare class SearchQuery_FlagSummary_NeedReview_FlagSids extends Message<SearchQuery_FlagSummary_NeedReview_FlagSids> {
  /**
   * Optional. Must have any provided flag sids.
   *
   * @generated from field: repeated int64 any = 1;
   */
  any: bigint[];

  constructor(data?: PartialMessage<SearchQuery_FlagSummary_NeedReview_FlagSids>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.FlagSummary.NeedReview.FlagSids";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_FlagSummary_NeedReview_FlagSids;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_FlagSummary_NeedReview_FlagSids;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_FlagSummary_NeedReview_FlagSids;

  static equals(a: SearchQuery_FlagSummary_NeedReview_FlagSids | PlainMessage<SearchQuery_FlagSummary_NeedReview_FlagSids> | undefined, b: SearchQuery_FlagSummary_NeedReview_FlagSids | PlainMessage<SearchQuery_FlagSummary_NeedReview_FlagSids> | undefined): boolean;
}

/**
 * ReviewStatus defines a query on review status.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.FlagSummary.ReviewStatus
 */
export declare class SearchQuery_FlagSummary_ReviewStatus extends Message<SearchQuery_FlagSummary_ReviewStatus> {
  /**
   * Optional. Must have any provided review status.
   *
   * @generated from field: repeated api.v1alpha1.vanalytics.TranscriptReviewStatus any = 1;
   */
  any: TranscriptReviewStatus[];

  constructor(data?: PartialMessage<SearchQuery_FlagSummary_ReviewStatus>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.FlagSummary.ReviewStatus";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_FlagSummary_ReviewStatus;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_FlagSummary_ReviewStatus;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_FlagSummary_ReviewStatus;

  static equals(a: SearchQuery_FlagSummary_ReviewStatus | PlainMessage<SearchQuery_FlagSummary_ReviewStatus> | undefined, b: SearchQuery_FlagSummary_ReviewStatus | PlainMessage<SearchQuery_FlagSummary_ReviewStatus> | undefined): boolean;
}

/**
 * Flags defines a query on flags.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.FlagSummary.Flags
 */
export declare class SearchQuery_FlagSummary_Flags extends Message<SearchQuery_FlagSummary_Flags> {
  /**
   * Optional. Queries flag sid.
   *
   * @generated from field: api.v1alpha1.vanalytics.SearchQuery.FlagSummary.Flags.FlagSid flag_sid = 1;
   */
  flagSid?: SearchQuery_FlagSummary_Flags_FlagSid;

  constructor(data?: PartialMessage<SearchQuery_FlagSummary_Flags>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.FlagSummary.Flags";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_FlagSummary_Flags;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_FlagSummary_Flags;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_FlagSummary_Flags;

  static equals(a: SearchQuery_FlagSummary_Flags | PlainMessage<SearchQuery_FlagSummary_Flags> | undefined, b: SearchQuery_FlagSummary_Flags | PlainMessage<SearchQuery_FlagSummary_Flags> | undefined): boolean;
}

/**
 * FlagSid defines a query on flag sid.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.FlagSummary.Flags.FlagSid
 */
export declare class SearchQuery_FlagSummary_Flags_FlagSid extends Message<SearchQuery_FlagSummary_Flags_FlagSid> {
  /**
   * Optional. Must have any of the provided flag sids.
   *
   * @generated from field: repeated int64 any = 1;
   */
  any: bigint[];

  /**
   * Optional. Must have all of the provided flag sids.
   *
   * @generated from field: repeated int64 all = 2;
   */
  all: bigint[];

  constructor(data?: PartialMessage<SearchQuery_FlagSummary_Flags_FlagSid>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.FlagSummary.Flags.FlagSid";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_FlagSummary_Flags_FlagSid;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_FlagSummary_Flags_FlagSid;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_FlagSummary_Flags_FlagSid;

  static equals(a: SearchQuery_FlagSummary_Flags_FlagSid | PlainMessage<SearchQuery_FlagSummary_Flags_FlagSid> | undefined, b: SearchQuery_FlagSummary_Flags_FlagSid | PlainMessage<SearchQuery_FlagSummary_Flags_FlagSid> | undefined): boolean;
}

/**
 * Count defines a query on count.
 *
 * @generated from message api.v1alpha1.vanalytics.SearchQuery.FlagSummary.Count
 */
export declare class SearchQuery_FlagSummary_Count extends Message<SearchQuery_FlagSummary_Count> {
  /**
   * Optional. Queries count greater than or equal.
   *
   * @generated from field: google.protobuf.Int32Value gte = 1;
   */
  gte?: number;

  /**
   * Optional. Queries count less than or equal.
   *
   * @generated from field: google.protobuf.Int32Value lte = 2;
   */
  lte?: number;

  /**
   * Optional. Queries count greater than.
   *
   * @generated from field: google.protobuf.Int32Value gt = 3;
   */
  gt?: number;

  /**
   * Optional. Queries count less than.
   *
   * @generated from field: google.protobuf.Int32Value lt = 4;
   */
  lt?: number;

  /**
   * Optional. Queries count equal to.
   *
   * @generated from field: google.protobuf.Int32Value eq = 5;
   */
  eq?: number;

  constructor(data?: PartialMessage<SearchQuery_FlagSummary_Count>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchQuery.FlagSummary.Count";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchQuery_FlagSummary_Count;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchQuery_FlagSummary_Count;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchQuery_FlagSummary_Count;

  static equals(a: SearchQuery_FlagSummary_Count | PlainMessage<SearchQuery_FlagSummary_Count> | undefined, b: SearchQuery_FlagSummary_Count | PlainMessage<SearchQuery_FlagSummary_Count> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.SearchResponse
 */
export declare class SearchResponse extends Message<SearchResponse> {
  /**
   * total number of hits in query
   *
   * @generated from field: uint64 total = 1;
   */
  total: bigint;

  /**
   * one page of hits
   *
   * @generated from field: repeated api.v1alpha1.vanalytics.SearchResponse.Hit hits = 4;
   */
  hits: SearchResponse_Hit[];

  /**
   * Sort is the original sort but also includes after values of last search
   * hit. This is intended to be used on a subsequent search request to get the
   * next page of search hits.
   *
   * @generated from field: api.v1alpha1.vanalytics.Sort sort = 5;
   */
  sort?: Sort;

  constructor(data?: PartialMessage<SearchResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchResponse;

  static equals(a: SearchResponse | PlainMessage<SearchResponse> | undefined, b: SearchResponse | PlainMessage<SearchResponse> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.SearchResponse.Hit
 */
export declare class SearchResponse_Hit extends Message<SearchResponse_Hit> {
  /**
   * @generated from field: api.v1alpha1.vanalytics.Transcript transcript = 1;
   */
  transcript?: Transcript;

  constructor(data?: PartialMessage<SearchResponse_Hit>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.SearchResponse.Hit";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchResponse_Hit;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchResponse_Hit;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchResponse_Hit;

  static equals(a: SearchResponse_Hit | PlainMessage<SearchResponse_Hit> | undefined, b: SearchResponse_Hit | PlainMessage<SearchResponse_Hit> | undefined): boolean;
}

/**
 * AgentCallLogQuery is a query for the agent call log.
 *
 * @generated from message api.v1alpha1.vanalytics.AgentCallLogQuery
 */
export declare class AgentCallLogQuery extends Message<AgentCallLogQuery> {
  /**
   * call skills initial will query the initial call skills.
   *
   * @generated from field: api.v1alpha1.vanalytics.CallSkillsInitialQuery call_skills_initial = 1;
   */
  callSkillsInitial?: CallSkillsInitialQuery;

  constructor(data?: PartialMessage<AgentCallLogQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.AgentCallLogQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentCallLogQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentCallLogQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentCallLogQuery;

  static equals(a: AgentCallLogQuery | PlainMessage<AgentCallLogQuery> | undefined, b: AgentCallLogQuery | PlainMessage<AgentCallLogQuery> | undefined): boolean;
}

/**
 * CallSkillsInitialQuery is a query for the initial call skills.
 *
 * @generated from message api.v1alpha1.vanalytics.CallSkillsInitialQuery
 */
export declare class CallSkillsInitialQuery extends Message<CallSkillsInitialQuery> {
  /**
   * Optional. Needed initial call skills to filter on.
   *
   * @generated from field: repeated api.v1alpha1.vanalytics.VanaTermsQuery need = 1;
   */
  need: VanaTermsQuery[];

  /**
   * Optional. Wanted initial call skills to filter on.
   *
   * @generated from field: repeated api.v1alpha1.vanalytics.VanaTermsQuery want = 2;
   */
  want: VanaTermsQuery[];

  constructor(data?: PartialMessage<CallSkillsInitialQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.CallSkillsInitialQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CallSkillsInitialQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CallSkillsInitialQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CallSkillsInitialQuery;

  static equals(a: CallSkillsInitialQuery | PlainMessage<CallSkillsInitialQuery> | undefined, b: CallSkillsInitialQuery | PlainMessage<CallSkillsInitialQuery> | undefined): boolean;
}

/**
 * VanaTermsQuery is a query for none, all, or any terms.
 *
 * @generated from message api.v1alpha1.vanalytics.VanaTermsQuery
 */
export declare class VanaTermsQuery extends Message<VanaTermsQuery> {
  /**
   * Required. The terms to be filtered on.
   *
   * @generated from field: repeated string terms = 1;
   */
  terms: string[];

  /**
   * Optional. If true then filters out where terms match.
   *
   * @generated from field: bool lacks = 2;
   */
  lacks: boolean;

  /**
   * Optional. If true then all terms must match.
   *
   * @generated from field: bool all = 3;
   */
  all: boolean;

  constructor(data?: PartialMessage<VanaTermsQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.VanaTermsQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VanaTermsQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VanaTermsQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VanaTermsQuery;

  static equals(a: VanaTermsQuery | PlainMessage<VanaTermsQuery> | undefined, b: VanaTermsQuery | PlainMessage<VanaTermsQuery> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.Sort
 */
export declare class Sort extends Message<Sort> {
  /**
   * Fields to sort by with names in json notation. i.e.
   * audio_time, silence.duration.total, result.text
   *
   * @generated from field: repeated api.v1alpha1.vanalytics.Sort.Field fields = 1;
   */
  fields: Sort_Field[];

  /**
   * After values define the starting offset of response hits. i.e.
   * given sort {"fields":[{"name":"silence.duration.total"}],"after":["3200"]}
   * then the search response is sorted by ascending silence duration where
   * silence duration total is greater than 3200. The after values are used
   * to scroll through the paginated search hits.
   *
   * @generated from field: repeated string after = 2;
   */
  after: string[];

  constructor(data?: PartialMessage<Sort>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.Sort";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Sort;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Sort;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Sort;

  static equals(a: Sort | PlainMessage<Sort> | undefined, b: Sort | PlainMessage<Sort> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.Sort.Field
 */
export declare class Sort_Field extends Message<Sort_Field> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: bool desc = 2;
   */
  desc: boolean;

  constructor(data?: PartialMessage<Sort_Field>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.Sort.Field";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Sort_Field;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Sort_Field;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Sort_Field;

  static equals(a: Sort_Field | PlainMessage<Sort_Field> | undefined, b: Sort_Field | PlainMessage<Sort_Field> | undefined): boolean;
}

/**
 * ListTranscriptGroupNamesRequest is a request for listing group names.
 *
 * @generated from message api.v1alpha1.vanalytics.ListTranscriptGroupNamesRequest
 */
export declare class ListTranscriptGroupNamesRequest extends Message<ListTranscriptGroupNamesRequest> {
  constructor(data?: PartialMessage<ListTranscriptGroupNamesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.ListTranscriptGroupNamesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListTranscriptGroupNamesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListTranscriptGroupNamesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListTranscriptGroupNamesRequest;

  static equals(a: ListTranscriptGroupNamesRequest | PlainMessage<ListTranscriptGroupNamesRequest> | undefined, b: ListTranscriptGroupNamesRequest | PlainMessage<ListTranscriptGroupNamesRequest> | undefined): boolean;
}

/**
 * ListTranscriptGroupNamesResponse is a response for listing group names.
 *
 * @generated from message api.v1alpha1.vanalytics.ListTranscriptGroupNamesResponse
 */
export declare class ListTranscriptGroupNamesResponse extends Message<ListTranscriptGroupNamesResponse> {
  /**
   * Group names are the transcript group names.
   *
   * @generated from field: repeated api.v1alpha1.vanalytics.TranscriptGroupName group_names = 1;
   */
  groupNames: TranscriptGroupName[];

  constructor(data?: PartialMessage<ListTranscriptGroupNamesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.ListTranscriptGroupNamesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListTranscriptGroupNamesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListTranscriptGroupNamesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListTranscriptGroupNamesResponse;

  static equals(a: ListTranscriptGroupNamesResponse | PlainMessage<ListTranscriptGroupNamesResponse> | undefined, b: ListTranscriptGroupNamesResponse | PlainMessage<ListTranscriptGroupNamesResponse> | undefined): boolean;
}

/**
 * TranscriptGroupName is the transcript group name.
 *
 * @generated from message api.v1alpha1.vanalytics.TranscriptGroupName
 */
export declare class TranscriptGroupName extends Message<TranscriptGroupName> {
  /**
   * value is a group name value.
   *
   * @generated from field: string value = 1;
   */
  value: string;

  constructor(data?: PartialMessage<TranscriptGroupName>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.TranscriptGroupName";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TranscriptGroupName;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TranscriptGroupName;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TranscriptGroupName;

  static equals(a: TranscriptGroupName | PlainMessage<TranscriptGroupName> | undefined, b: TranscriptGroupName | PlainMessage<TranscriptGroupName> | undefined): boolean;
}

/**
 * ListAgentResponseValuesRequest is a request for listing agent reponse values.
 *
 * @generated from message api.v1alpha1.vanalytics.ListAgentResponseValuesRequest
 */
export declare class ListAgentResponseValuesRequest extends Message<ListAgentResponseValuesRequest> {
  /**
   * @generated from field: string key = 2;
   */
  key: string;

  constructor(data?: PartialMessage<ListAgentResponseValuesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.ListAgentResponseValuesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAgentResponseValuesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAgentResponseValuesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAgentResponseValuesRequest;

  static equals(a: ListAgentResponseValuesRequest | PlainMessage<ListAgentResponseValuesRequest> | undefined, b: ListAgentResponseValuesRequest | PlainMessage<ListAgentResponseValuesRequest> | undefined): boolean;
}

/**
 * ListAgentResponseValuesResponse is a response for listing agent response values.
 *
 * @generated from message api.v1alpha1.vanalytics.ListAgentResponseValuesResponse
 */
export declare class ListAgentResponseValuesResponse extends Message<ListAgentResponseValuesResponse> {
  /**
   * Values are the transcript agent response values.
   *
   * @generated from field: repeated string values = 1;
   */
  values: string[];

  constructor(data?: PartialMessage<ListAgentResponseValuesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.ListAgentResponseValuesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAgentResponseValuesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAgentResponseValuesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAgentResponseValuesResponse;

  static equals(a: ListAgentResponseValuesResponse | PlainMessage<ListAgentResponseValuesResponse> | undefined, b: ListAgentResponseValuesResponse | PlainMessage<ListAgentResponseValuesResponse> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.Transcript
 */
export declare class Transcript extends Message<Transcript> {
  /**
   * @generated from field: int64 transcript_sid = 1;
   */
  transcriptSid: bigint;

  /**
   * @generated from field: int64 call_sid = 3;
   */
  callSid: bigint;

  /**
   * @generated from field: api.commons.CallType.Enum call_type = 4;
   */
  callType: CallType_Enum;

  /**
   * @generated from field: repeated api.v1alpha1.vanalytics.Result results = 5;
   */
  results: Result[];

  /**
   * @generated from field: api.v1alpha1.vanalytics.Silence silence = 6;
   */
  silence?: Silence;

  /**
   * talk time in milliseconds
   *
   * @generated from field: uint32 talk_time = 7;
   */
  talkTime: number;

  /**
   * @generated from field: google.protobuf.Timestamp create_time = 9;
   */
  createTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp call_start_time = 10;
   */
  callStartTime?: Timestamp;

  /**
   * @generated from field: api.v1alpha1.vanalytics.TalkOver talk_over = 11;
   */
  talkOver?: TalkOver;

  /**
   * @generated from field: string caller_id = 12;
   */
  callerId: string;

  /**
   * @generated from field: string phone_number = 13;
   */
  phoneNumber: string;

  /**
   * audio time in milliseconds
   *
   * @generated from field: uint32 audio_time = 14;
   */
  audioTime: number;

  /**
   * @generated from field: int64 audio_bytes = 15;
   */
  audioBytes: bigint;

  /**
   * @generated from field: string group_name = 17;
   */
  groupName: string;

  /**
   * @generated from field: api.v1alpha1.vanalytics.aclpb.AgentCallLog agent_call_log = 18;
   */
  agentCallLog?: AgentCallLog;

  /**
   * @generated from field: api.v1alpha1.vanalytics.FlagSummary flag_summary = 19;
   */
  flagSummary?: FlagSummary;

  /**
   * delete time is the time the transcript was marked as deleted.
   *
   * @generated from field: google.protobuf.Timestamp delete_time = 20;
   */
  deleteTime?: Timestamp;

  /**
   * @generated from field: string number_format = 21;
   */
  numberFormat: string;

  /**
   * @generated from field: map<string, api.v1alpha1.vanalytics.AgentResponse> agent_response = 22;
   */
  agentResponse: { [key: string]: AgentResponse };

  /**
   * @generated from field: api.v1alpha1.vanalytics.Transcript.Phone phone = 23;
   */
  phone?: Transcript_Phone;

  constructor(data?: PartialMessage<Transcript>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.Transcript";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Transcript;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Transcript;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Transcript;

  static equals(a: Transcript | PlainMessage<Transcript> | undefined, b: Transcript | PlainMessage<Transcript> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.Transcript.Phone
 */
export declare class Transcript_Phone extends Message<Transcript_Phone> {
  /**
   * @generated from field: repeated string cc = 1;
   */
  cc: string[];

  /**
   * @generated from field: repeated string ndc = 2;
   */
  ndc: string[];

  /**
   * @generated from field: repeated string prefix = 3;
   */
  prefix: string[];

  /**
   * @generated from field: repeated string city = 4;
   */
  city: string[];

  /**
   * @generated from field: repeated string iso2 = 5;
   */
  iso2: string[];

  /**
   * @generated from field: repeated string region_code = 6;
   */
  regionCode: string[];

  /**
   * @generated from field: repeated string region_name = 7;
   */
  regionName: string[];

  /**
   * @generated from field: repeated string time_zone = 8;
   */
  timeZone: string[];

  /**
   * @generated from field: repeated string type = 9;
   */
  type: string[];

  /**
   * @generated from field: repeated float utc = 10;
   */
  utc: number[];

  /**
   * @generated from field: repeated api.v1alpha1.vanalytics.Transcript.Phone.Location location = 11;
   */
  location: Transcript_Phone_Location[];

  constructor(data?: PartialMessage<Transcript_Phone>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.Transcript.Phone";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Transcript_Phone;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Transcript_Phone;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Transcript_Phone;

  static equals(a: Transcript_Phone | PlainMessage<Transcript_Phone> | undefined, b: Transcript_Phone | PlainMessage<Transcript_Phone> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.Transcript.Phone.Location
 */
export declare class Transcript_Phone_Location extends Message<Transcript_Phone_Location> {
  /**
   * @generated from field: double lon = 1;
   */
  lon: number;

  /**
   * @generated from field: double lat = 2;
   */
  lat: number;

  constructor(data?: PartialMessage<Transcript_Phone_Location>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.Transcript.Phone.Location";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Transcript_Phone_Location;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Transcript_Phone_Location;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Transcript_Phone_Location;

  static equals(a: Transcript_Phone_Location | PlainMessage<Transcript_Phone_Location> | undefined, b: Transcript_Phone_Location | PlainMessage<Transcript_Phone_Location> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.Result
 */
export declare class Result extends Message<Result> {
  /**
   * @generated from field: int32 channel = 1;
   */
  channel: number;

  /**
   * @generated from field: repeated api.v1alpha1.vanalytics.Segment segments = 2;
   */
  segments: Segment[];

  /**
   * @generated from field: string agent_first_name = 5;
   */
  agentFirstName: string;

  /**
   * @generated from field: string agent_last_name = 6;
   */
  agentLastName: string;

  /**
   * @generated from field: string agent_user_name = 7;
   */
  agentUserName: string;

  /**
   * @generated from field: uint32 begin_time = 8;
   */
  beginTime: number;

  /**
   * @generated from field: uint32 duration = 9;
   */
  duration: number;

  /**
   * @generated from field: string text = 10;
   */
  text: string;

  /**
   * @generated from field: int64 hunt_group_sid = 11;
   */
  huntGroupSid: bigint;

  constructor(data?: PartialMessage<Result>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.Result";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Result;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Result;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Result;

  static equals(a: Result | PlainMessage<Result> | undefined, b: Result | PlainMessage<Result> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.Segment
 */
export declare class Segment extends Message<Segment> {
  /**
   * begin time in milliseconds
   *
   * @generated from field: uint32 begin_time = 1;
   */
  beginTime: number;

  /**
   * confidence from 0 to 100
   *
   * @generated from field: uint32 confidence = 2;
   */
  confidence: number;

  /**
   * duration in milliseconds
   *
   * @generated from field: uint32 duration = 3;
   */
  duration: number;

  /**
   * @generated from field: string text = 4;
   */
  text: string;

  /**
   * @generated from field: repeated api.v1alpha1.vanalytics.Word words = 5;
   */
  words: Word[];

  constructor(data?: PartialMessage<Segment>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.Segment";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Segment;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Segment;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Segment;

  static equals(a: Segment | PlainMessage<Segment> | undefined, b: Segment | PlainMessage<Segment> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.Word
 */
export declare class Word extends Message<Word> {
  /**
   * begin time in milliseconds
   *
   * @generated from field: uint32 begin_time = 1;
   */
  beginTime: number;

  /**
   * confidence from 0 to 100
   *
   * @generated from field: uint32 confidence = 2;
   */
  confidence: number;

  /**
   * duration in milliseconds
   *
   * @generated from field: uint32 duration = 3;
   */
  duration: number;

  /**
   * @generated from field: string spoken = 4;
   */
  spoken: string;

  /**
   * @generated from field: bool redacted = 5;
   */
  redacted: boolean;

  constructor(data?: PartialMessage<Word>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.Word";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Word;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Word;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Word;

  static equals(a: Word | PlainMessage<Word> | undefined, b: Word | PlainMessage<Word> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.Silence
 */
export declare class Silence extends Message<Silence> {
  /**
   * @generated from field: api.v1alpha1.vanalytics.Silence.Duration duration = 1;
   */
  duration?: Silence_Duration;

  /**
   * @generated from field: repeated api.v1alpha1.vanalytics.Silence.Segment segments = 2;
   */
  segments: Silence_Segment[];

  /**
   * @generated from field: api.v1alpha1.vanalytics.Silence.Occurrence occurrence = 3;
   */
  occurrence?: Silence_Occurrence;

  /**
   * threshold in milliseconds is the minimum duration of silence
   * to be counted as silence in a transcript
   *
   * @generated from field: uint32 threshold = 4;
   */
  threshold: number;

  constructor(data?: PartialMessage<Silence>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.Silence";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Silence;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Silence;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Silence;

  static equals(a: Silence | PlainMessage<Silence> | undefined, b: Silence | PlainMessage<Silence> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.Silence.Duration
 */
export declare class Silence_Duration extends Message<Silence_Duration> {
  /**
   * total in milliseconds
   *
   * @generated from field: uint32 total = 1;
   */
  total: number;

  /**
   * max in milliseconds
   *
   * @generated from field: uint32 max = 2;
   */
  max: number;

  /**
   * percentage of silence in transcript from 0-100
   *
   * @generated from field: uint32 percentage = 3;
   */
  percentage: number;

  constructor(data?: PartialMessage<Silence_Duration>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.Silence.Duration";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Silence_Duration;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Silence_Duration;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Silence_Duration;

  static equals(a: Silence_Duration | PlainMessage<Silence_Duration> | undefined, b: Silence_Duration | PlainMessage<Silence_Duration> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.Silence.Segment
 */
export declare class Silence_Segment extends Message<Silence_Segment> {
  /**
   * begin time in milliseconds
   *
   * @generated from field: uint32 begin_time = 1;
   */
  beginTime: number;

  /**
   * duration in milliseconds
   *
   * @generated from field: uint32 duration = 2;
   */
  duration: number;

  constructor(data?: PartialMessage<Silence_Segment>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.Silence.Segment";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Silence_Segment;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Silence_Segment;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Silence_Segment;

  static equals(a: Silence_Segment | PlainMessage<Silence_Segment> | undefined, b: Silence_Segment | PlainMessage<Silence_Segment> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.Silence.Occurrence
 */
export declare class Silence_Occurrence extends Message<Silence_Occurrence> {
  /**
   * total in milliseconds
   *
   * @generated from field: uint32 total = 1;
   */
  total: number;

  constructor(data?: PartialMessage<Silence_Occurrence>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.Silence.Occurrence";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Silence_Occurrence;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Silence_Occurrence;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Silence_Occurrence;

  static equals(a: Silence_Occurrence | PlainMessage<Silence_Occurrence> | undefined, b: Silence_Occurrence | PlainMessage<Silence_Occurrence> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.TalkOver
 */
export declare class TalkOver extends Message<TalkOver> {
  /**
   * @generated from field: api.v1alpha1.vanalytics.TalkOver.Occurrence occurrence = 1;
   */
  occurrence?: TalkOver_Occurrence;

  /**
   * @generated from field: api.v1alpha1.vanalytics.TalkOver.Duration duration = 2;
   */
  duration?: TalkOver_Duration;

  /**
   * @generated from field: repeated api.v1alpha1.vanalytics.TalkOver.Result results = 3;
   */
  results: TalkOver_Result[];

  /**
   * threshold in milliseconds is the minimum duration of talk over
   * to be counted as talk over in a transcript
   *
   * @generated from field: uint32 threshold = 4;
   */
  threshold: number;

  constructor(data?: PartialMessage<TalkOver>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.TalkOver";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TalkOver;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TalkOver;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TalkOver;

  static equals(a: TalkOver | PlainMessage<TalkOver> | undefined, b: TalkOver | PlainMessage<TalkOver> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.TalkOver.Duration
 */
export declare class TalkOver_Duration extends Message<TalkOver_Duration> {
  /**
   * total in milliseconds
   *
   * @generated from field: uint32 total = 1;
   */
  total: number;

  /**
   * max in milliseconds
   *
   * @generated from field: uint32 max = 2;
   */
  max: number;

  /**
   * percentage of talkover in transcript from 0-100
   *
   * @generated from field: uint32 percentage = 3;
   */
  percentage: number;

  constructor(data?: PartialMessage<TalkOver_Duration>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.TalkOver.Duration";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TalkOver_Duration;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TalkOver_Duration;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TalkOver_Duration;

  static equals(a: TalkOver_Duration | PlainMessage<TalkOver_Duration> | undefined, b: TalkOver_Duration | PlainMessage<TalkOver_Duration> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.TalkOver.Result
 */
export declare class TalkOver_Result extends Message<TalkOver_Result> {
  /**
   * @generated from field: int32 channel = 1;
   */
  channel: number;

  /**
   * @generated from field: api.v1alpha1.vanalytics.TalkOver.Occurrence occurrence = 2;
   */
  occurrence?: TalkOver_Occurrence;

  /**
   * @generated from field: api.v1alpha1.vanalytics.TalkOver.Duration duration = 3;
   */
  duration?: TalkOver_Duration;

  /**
   * @generated from field: repeated api.v1alpha1.vanalytics.TalkOver.Segment segments = 4;
   */
  segments: TalkOver_Segment[];

  /**
   * @generated from field: string agent_user_name = 5;
   */
  agentUserName: string;

  /**
   * @generated from field: int64 agent_session_sid = 6;
   */
  agentSessionSid: bigint;

  constructor(data?: PartialMessage<TalkOver_Result>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.TalkOver.Result";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TalkOver_Result;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TalkOver_Result;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TalkOver_Result;

  static equals(a: TalkOver_Result | PlainMessage<TalkOver_Result> | undefined, b: TalkOver_Result | PlainMessage<TalkOver_Result> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.TalkOver.Segment
 */
export declare class TalkOver_Segment extends Message<TalkOver_Segment> {
  /**
   * begin time in milliseconds
   *
   * @generated from field: uint32 begin_time = 1;
   */
  beginTime: number;

  /**
   * duration in milliseconds
   *
   * @generated from field: uint32 duration = 2;
   */
  duration: number;

  constructor(data?: PartialMessage<TalkOver_Segment>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.TalkOver.Segment";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TalkOver_Segment;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TalkOver_Segment;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TalkOver_Segment;

  static equals(a: TalkOver_Segment | PlainMessage<TalkOver_Segment> | undefined, b: TalkOver_Segment | PlainMessage<TalkOver_Segment> | undefined): boolean;
}

/**
 * @generated from message api.v1alpha1.vanalytics.TalkOver.Occurrence
 */
export declare class TalkOver_Occurrence extends Message<TalkOver_Occurrence> {
  /**
   * total in milliseconds
   *
   * @generated from field: uint32 total = 1;
   */
  total: number;

  constructor(data?: PartialMessage<TalkOver_Occurrence>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.TalkOver.Occurrence";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TalkOver_Occurrence;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TalkOver_Occurrence;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TalkOver_Occurrence;

  static equals(a: TalkOver_Occurrence | PlainMessage<TalkOver_Occurrence> | undefined, b: TalkOver_Occurrence | PlainMessage<TalkOver_Occurrence> | undefined): boolean;
}

/**
 * FlagSummary defines a summary of flags which were applied to a transcript.
 *
 * @generated from message api.v1alpha1.vanalytics.FlagSummary
 */
export declare class FlagSummary extends Message<FlagSummary> {
  /**
   * The number of flags associated with the transcript.
   *
   * @generated from field: int32 count = 1;
   */
  count: number;

  /**
   * The sum of the priorities of the flags associated with the transcript.
   *
   * @generated from field: int32 priority_sum = 2;
   */
  prioritySum: number;

  /**
   * The highest priority of the flags associated with the transcript.
   *
   * @generated from field: int32 priority_max = 3;
   */
  priorityMax: number;

  /**
   * Need Review provides info on the flags that need review.
   *
   * @generated from field: api.v1alpha1.vanalytics.FlagSummary.NeedReview need_review = 4;
   */
  needReview?: FlagSummary_NeedReview;

  /**
   * Flags contain the flags and filters that are associated with the transcript.
   *
   * @generated from field: repeated api.v1alpha1.vanalytics.FlagSummary.Flag flags = 5;
   */
  flags: FlagSummary_Flag[];

  /**
   * The review status of the flagged transcript.
   *
   * @generated from field: api.v1alpha1.vanalytics.TranscriptReviewStatus review_status = 6;
   */
  reviewStatus: TranscriptReviewStatus;

  constructor(data?: PartialMessage<FlagSummary>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.FlagSummary";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FlagSummary;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FlagSummary;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FlagSummary;

  static equals(a: FlagSummary | PlainMessage<FlagSummary> | undefined, b: FlagSummary | PlainMessage<FlagSummary> | undefined): boolean;
}

/**
 * NeedReview defines flags which need to be reviewed.
 *
 * @generated from message api.v1alpha1.vanalytics.FlagSummary.NeedReview
 */
export declare class FlagSummary_NeedReview extends Message<FlagSummary_NeedReview> {
  /**
   * The sum of the priorities of the flags that need review.
   *
   * @generated from field: int32 priority_sum = 1;
   */
  prioritySum: number;

  /**
   * The highest priority of the flags that need review.
   *
   * @generated from field: int32 priority_max = 2;
   */
  priorityMax: number;

  /**
   * The number of flags that need review.
   *
   * @generated from field: int32 count = 3;
   */
  count: number;

  /**
   * The Flag sids that need review.
   *
   * @generated from field: repeated int64 flag_sids = 4;
   */
  flagSids: bigint[];

  constructor(data?: PartialMessage<FlagSummary_NeedReview>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.FlagSummary.NeedReview";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FlagSummary_NeedReview;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FlagSummary_NeedReview;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FlagSummary_NeedReview;

  static equals(a: FlagSummary_NeedReview | PlainMessage<FlagSummary_NeedReview> | undefined, b: FlagSummary_NeedReview | PlainMessage<FlagSummary_NeedReview> | undefined): boolean;
}

/**
 * Flag defines a flag that was applied to a transcript by one or more filters
 * along with a user review when one exists.
 *
 * @generated from message api.v1alpha1.vanalytics.FlagSummary.Flag
 */
export declare class FlagSummary_Flag extends Message<FlagSummary_Flag> {
  /**
   * The unique id of this flag.
   *
   * @generated from field: int64 flag_sid = 1;
   */
  flagSid: bigint;

  /**
   * The name of this flag.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * The priority of this flag.
   *
   * @generated from field: int32 priority = 3;
   */
  priority: number;

  /**
   * The version of this flag.
   *
   * @generated from field: int64 version = 4;
   */
  version: bigint;

  /**
   * Filters which applied this flag.
   *
   * @generated from field: repeated api.v1alpha1.vanalytics.FlagSummary.Filter filters = 5;
   */
  filters: FlagSummary_Filter[];

  /**
   * Determines whether this flag must be reviewed.
   *
   * @generated from field: bool must_review = 6;
   */
  mustReview: boolean;

  /**
   * Determines whether this flag must be notified.
   *
   * @generated from field: bool must_notify = 7;
   */
  mustNotify: boolean;

  /**
   * The reviews of this flag.
   *
   * @generated from field: repeated api.v1alpha1.vanalytics.FlagSummary.Review reviews = 8;
   */
  reviews: FlagSummary_Review[];

  constructor(data?: PartialMessage<FlagSummary_Flag>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.FlagSummary.Flag";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FlagSummary_Flag;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FlagSummary_Flag;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FlagSummary_Flag;

  static equals(a: FlagSummary_Flag | PlainMessage<FlagSummary_Flag> | undefined, b: FlagSummary_Flag | PlainMessage<FlagSummary_Flag> | undefined): boolean;
}

/**
 * Filter defines a filter which applied some flag to some transcript.
 *
 * @generated from message api.v1alpha1.vanalytics.FlagSummary.Filter
 */
export declare class FlagSummary_Filter extends Message<FlagSummary_Filter> {
  /**
   * The join key in form [flag_sid:filter_sid].
   *
   * @generated from field: string join_key = 1;
   */
  joinKey: string;

  /**
   * The flag sid this filter belongs to.
   *
   * @generated from field: int64 flag_sid = 2;
   */
  flagSid: bigint;

  /**
   * The unique id of this filter.
   *
   * @generated from field: int64 filter_sid = 3;
   */
  filterSid: bigint;

  /**
   * The version of this filter.
   *
   * @generated from field: int64 version = 4;
   */
  version: bigint;

  /**
   * The name of this filter.
   *
   * @generated from field: string name = 5;
   */
  name: string;

  constructor(data?: PartialMessage<FlagSummary_Filter>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.FlagSummary.Filter";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FlagSummary_Filter;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FlagSummary_Filter;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FlagSummary_Filter;

  static equals(a: FlagSummary_Filter | PlainMessage<FlagSummary_Filter> | undefined, b: FlagSummary_Filter | PlainMessage<FlagSummary_Filter> | undefined): boolean;
}

/**
 * Review contains info on the flag review when one exists.
 *
 * @generated from message api.v1alpha1.vanalytics.FlagSummary.Review
 */
export declare class FlagSummary_Review extends Message<FlagSummary_Review> {
  /**
   * The join key in form [flag_sid:user_id].
   *
   * @generated from field: string join_key = 1;
   */
  joinKey: string;

  /**
   * The flag sid this review belongs to.
   *
   * @generated from field: int64 flag_sid = 2;
   */
  flagSid: bigint;

  /**
   * The user id of the reviewer.
   *
   * @generated from field: string user_id = 3;
   */
  userId: string;

  constructor(data?: PartialMessage<FlagSummary_Review>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.FlagSummary.Review";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FlagSummary_Review;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FlagSummary_Review;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FlagSummary_Review;

  static equals(a: FlagSummary_Review | PlainMessage<FlagSummary_Review> | undefined, b: FlagSummary_Review | PlainMessage<FlagSummary_Review> | undefined): boolean;
}

/**
 * AgentResponse contains the agent responses aka dispositions.
 *
 * @generated from message api.v1alpha1.vanalytics.AgentResponse
 */
export declare class AgentResponse extends Message<AgentResponse> {
  /**
   * @generated from field: repeated string values = 1;
   */
  values: string[];

  constructor(data?: PartialMessage<AgentResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "api.v1alpha1.vanalytics.AgentResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AgentResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AgentResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AgentResponse;

  static equals(a: AgentResponse | PlainMessage<AgentResponse> | undefined, b: AgentResponse | PlainMessage<AgentResponse> | undefined): boolean;
}


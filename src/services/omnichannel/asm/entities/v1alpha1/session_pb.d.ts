// @generated by protoc-gen-es v1.7.2 with parameter "target=js+dts"
// @generated from file services/omnichannel/asm/entities/v1alpha1/session.proto (package services.omnichannel.asm.entities.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message services.omnichannel.asm.entities.v1alpha1.AsmSession
 */
export declare class AsmSession extends Message<AsmSession> {
  /**
   * asm session sid
   *
   * @generated from field: int64 asm_session_sid = 1;
   */
  asmSessionSid: bigint;

  /**
   * time the asm session started
   *
   * @generated from field: google.protobuf.Timestamp asm_session_start = 4;
   */
  asmSessionStart?: Timestamp;

  /**
   * time the asm session ended
   *
   * @generated from field: google.protobuf.Timestamp asm_session_end = 5;
   */
  asmSessionEnd?: Timestamp;

  /**
   * voice session is there is one
   *
   * @generated from field: services.omnichannel.asm.entities.v1alpha1.VoiceSession voice_session = 6;
   */
  voiceSession?: VoiceSession;

  constructor(data?: PartialMessage<AsmSession>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "services.omnichannel.asm.entities.v1alpha1.AsmSession";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AsmSession;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AsmSession;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AsmSession;

  static equals(a: AsmSession | PlainMessage<AsmSession> | undefined, b: AsmSession | PlainMessage<AsmSession> | undefined): boolean;
}

/**
 * @generated from message services.omnichannel.asm.entities.v1alpha1.VoiceSession
 */
export declare class VoiceSession extends Message<VoiceSession> {
  /**
   * voice session sid
   *
   * @generated from field: int64 voice_session_sid = 1;
   */
  voiceSessionSid: bigint;

  /**
   * time the voice session started
   *
   * @generated from field: google.protobuf.Timestamp voice_session_start = 2;
   */
  voiceSessionStart?: Timestamp;

  /**
   * time the voice session ended
   *
   * @generated from field: google.protobuf.Timestamp voice_session_end = 3;
   */
  voiceSessionEnd?: Timestamp;

  constructor(data?: PartialMessage<VoiceSession>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "services.omnichannel.asm.entities.v1alpha1.VoiceSession";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VoiceSession;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VoiceSession;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VoiceSession;

  static equals(a: VoiceSession | PlainMessage<VoiceSession> | undefined, b: VoiceSession | PlainMessage<VoiceSession> | undefined): boolean;
}

/**
 * @generated from message services.omnichannel.asm.entities.v1alpha1.VoiceRegistration
 */
export declare class VoiceRegistration extends Message<VoiceRegistration> {
  /**
   * The pin used to log in via a connected phone
   *
   * @generated from field: string username = 2;
   */
  username: string;

  /**
   * The pass used to log in via a connected phone
   *
   * @generated from field: string password = 3;
   */
  password: string;

  /**
   * The extention appended
   *
   * @generated from field: string dial_url = 4;
   */
  dialUrl: string;

  /**
   * pstn phone number that will be used for the agent to dial in
   * if it's an empty string then the voip connection must be used
   *
   * @generated from field: string pstn_phone = 5;
   */
  pstnPhone: string;

  /**
   * default time zone -
   *
   * @generated from field: string default_time_zone = 6;
   */
  defaultTimeZone: string;

  /**
   * expiration Timestamp When the registration will expire
   *
   * @generated from field: int64 expiration_timestamp = 7;
   */
  expirationTimestamp: bigint;

  constructor(data?: PartialMessage<VoiceRegistration>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "services.omnichannel.asm.entities.v1alpha1.VoiceRegistration";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VoiceRegistration;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VoiceRegistration;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VoiceRegistration;

  static equals(a: VoiceRegistration | PlainMessage<VoiceRegistration> | undefined, b: VoiceRegistration | PlainMessage<VoiceRegistration> | undefined): boolean;
}

/**
 * @generated from message services.omnichannel.asm.entities.v1alpha1.ListAsmUserDetails
 */
export declare class ListAsmUserDetails extends Message<ListAsmUserDetails> {
  constructor(data?: PartialMessage<ListAsmUserDetails>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "services.omnichannel.asm.entities.v1alpha1.ListAsmUserDetails";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAsmUserDetails;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAsmUserDetails;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAsmUserDetails;

  static equals(a: ListAsmUserDetails | PlainMessage<ListAsmUserDetails> | undefined, b: ListAsmUserDetails | PlainMessage<ListAsmUserDetails> | undefined): boolean;
}


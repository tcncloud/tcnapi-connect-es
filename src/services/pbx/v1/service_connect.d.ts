// @generated by protoc-gen-connect-es v0.12.0
// @generated from file services/pbx/v1/service.proto (package services.pbx.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AssignRandomExtensionRequest, AssignRandomExtensionResponse, CreateRingGroupRequest, CreateRingGroupResponse, DeleteRingGroupRequest, DeleteRingGroupResponse, QueryPbxUsersRequest, QueryPbxUsersResponse, QueryRingGroupsRequest, QueryRingGroupsResponse, UpdatePbxUserRequest, UpdatePbxUserResponse, UpdateRingGroupRequest, UpdateRingGroupResponse } from "./service_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service services.pbx.v1.PBXService
 */
export declare const PBXService: {
  readonly typeName: "services.pbx.v1.PBXService",
  readonly methods: {
    /**
     * Queries details of PBX Users based on specified criteria for the authenticated callers ORG
     * Required permissions:
     *   PBX-MANAGER
     * Errors:
     *   - grpc.PermissionDenied: Caller doesn't have the required permissions.
     *   - grpc.Internal: An internal error occurred.
     *   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
     *
     * @generated from rpc services.pbx.v1.PBXService.QueryPbxUsers
     */
    readonly queryPbxUsers: {
      readonly name: "QueryPbxUsers",
      readonly I: typeof QueryPbxUsersRequest,
      readonly O: typeof QueryPbxUsersResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Queries details of Ring Groups based on specified criteria for the authenticated callers ORG
     * Required permissions:
     *   PBX-MANAGER
     * Errors:
     *   - grpc.PermissionDenied: Caller doesn't have the required permissions.
     *   - grpc.Internal: An internal error occurred.
     *   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
     *
     * @generated from rpc services.pbx.v1.PBXService.QueryRingGroups
     */
    readonly queryRingGroups: {
      readonly name: "QueryRingGroups",
      readonly I: typeof QueryRingGroupsRequest,
      readonly O: typeof QueryRingGroupsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates details of a PBX User for the authenticated callers ORG.
     * Allows for updating, activating, and deactivating a user.
     * Required permissions:
     *   PBX-MANAGER
     * Errors:
     *   - grpc.PermissionDenied: Caller doesn't have the required permissions.
     *   - grpc.Internal: An internal error occurred.
     *   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
     *
     * @generated from rpc services.pbx.v1.PBXService.UpdatePbxUser
     */
    readonly updatePbxUser: {
      readonly name: "UpdatePbxUser",
      readonly I: typeof UpdatePbxUserRequest,
      readonly O: typeof UpdatePbxUserResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates details of a Ring Group for the authenticated callers ORG. This operation acts as an "upsert".
     *   - If the groupID is in the update mask and the group exists, the group will be updated.
     *   - If the groupID is not in the update mask a group will be created.
     * Allows for creating and updating a ring group.
     * Required permissions:
     *   PBX-MANAGER
     * Errors:
     *   - grpc.InvalidArgument: The request is invalid.
     *   - grpc.PermissionDenied: Caller doesn't have the required permissions.
     *   - grpc.Internal: An internal error occurred.
     *   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
     *
     * @generated from rpc services.pbx.v1.PBXService.UpdateRingGroup
     */
    readonly updateRingGroup: {
      readonly name: "UpdateRingGroup",
      readonly I: typeof UpdateRingGroupRequest,
      readonly O: typeof UpdateRingGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Creates a ring group for the authenticated caller's ORG.
     * Required permissions:
     *   PBX-MANAGER
     * Errors:
     *   - grpc.InvalidArgument: The request is invalid.
     *   - grpc.PermissionDenied: Caller doesn't have the required permissions.
     *   - grpc.Internal: An internal error occurred.
     *   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
     *
     * @generated from rpc services.pbx.v1.PBXService.CreateRingGroup
     */
    readonly createRingGroup: {
      readonly name: "CreateRingGroup",
      readonly I: typeof CreateRingGroupRequest,
      readonly O: typeof CreateRingGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Deletes a specific Ring Group for the authenticated caller's ORG.
     * Required permissions:
     *   PBX-MANAGER
     * Errors:
     *   - grpc.InvalidArgument: The groupID is an invalid format.
     *   - grpc.NotFound: The group does not exist or is not in the caller's ORG.
     *   - grpc.PermissionDenied: Caller doesn't have the required permissions.
     *   - grpc.Internal: An internal error occurred.
     *   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
     *
     * @generated from rpc services.pbx.v1.PBXService.DeleteRingGroup
     */
    readonly deleteRingGroup: {
      readonly name: "DeleteRingGroup",
      readonly I: typeof DeleteRingGroupRequest,
      readonly O: typeof DeleteRingGroupResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Assigns a random extension either to a PBX user or a Ring Group
     * Required permissions:
     *   PBX-MANAGER
     * Errors:
     *   - grpc.PermissionDenied: Caller doesn't have the required permissions.
     *   - grpc.Internal: An internal error occurred.
     *   - grpc.Unavailable: The operation is currently unavailable. Likely a transient issue with a downstream service.
     *
     * @generated from rpc services.pbx.v1.PBXService.AssignRandomExtension
     */
    readonly assignRandomExtension: {
      readonly name: "AssignRandomExtension",
      readonly I: typeof AssignRandomExtensionRequest,
      readonly O: typeof AssignRandomExtensionResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

